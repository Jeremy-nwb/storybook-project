const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./Card.stories-PDtVTW-R.js","./index-DmOD_NYz.js","./_commonjsHelpers-C7MPfNLY.js","./index-BdOSk9or.js","./preload-helper-DChMlIcJ.js","./Accordeon.stories-CjofNCOf.js","./Button.stories-C6LuqlGn.js","./Button-CHmi8Ysk.js","./Button-Bnzz4IoU.css","./Configure-DauOSE2U.js","./blocks-C_-4_bfZ.js","./index-D2mfpbeG.js","./Header.stories-CMdiCwyO.js","./Header-DGKNzgsv.js","./Header-eRovX6kq.css","./Page.stories-DsMRUBgl.js","./Page-DYrHQXjz.css","./axe-bkyre2PD.js","./DocsRenderer-PQXLIZUC-D11oMOud.js"])))=>i.map(i=>d[i]);
var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
import { _ as __vitePreload } from "./preload-helper-DChMlIcJ.js";
(function polyfill() {
  const relList = document.createElement("link").relList;
  if (relList && relList.supports && relList.supports("modulepreload")) {
    return;
  }
  for (const link of document.querySelectorAll('link[rel="modulepreload"]')) {
    processPreload(link);
  }
  new MutationObserver((mutations) => {
    for (const mutation of mutations) {
      if (mutation.type !== "childList") {
        continue;
      }
      for (const node of mutation.addedNodes) {
        if (node.tagName === "LINK" && node.rel === "modulepreload")
          processPreload(node);
      }
    }
  }).observe(document, { childList: true, subtree: true });
  function getFetchOpts(link) {
    const fetchOpts = {};
    if (link.integrity) fetchOpts.integrity = link.integrity;
    if (link.referrerPolicy) fetchOpts.referrerPolicy = link.referrerPolicy;
    if (link.crossOrigin === "use-credentials")
      fetchOpts.credentials = "include";
    else if (link.crossOrigin === "anonymous") fetchOpts.credentials = "omit";
    else fetchOpts.credentials = "same-origin";
    return fetchOpts;
  }
  function processPreload(link) {
    if (link.ep)
      return;
    link.ep = true;
    const fetchOpts = getFetchOpts(link);
    fetch(link.href, fetchOpts);
  }
})();
var define_process_env_default = {};
var z5 = Object.create;
var xi = Object.defineProperty;
var G5 = Object.getOwnPropertyDescriptor;
var W5 = Object.getOwnPropertyNames;
var Y5 = Object.getPrototypeOf, K5 = Object.prototype.hasOwnProperty;
var o = (e, t) => xi(e, "name", { value: t, configurable: true }), wi = /* @__PURE__ */ ((e) => typeof require < "u" ? require : typeof Proxy < "u" ? new Proxy(e, {
  get: (t, r7) => (typeof require < "u" ? require : t)[r7]
}) : e)(function(e) {
  if (typeof require < "u") return require.apply(this, arguments);
  throw Error('Dynamic require of "' + e + '" is not supported');
});
var X5 = (e, t) => () => (e && (t = e(e = 0)), t);
var y = (e, t) => () => (t || e((t = { exports: {} }).exports, t), t.exports), st$1 = (e, t) => {
  for (var r7 in t)
    xi(e, r7, { get: t[r7], enumerable: true });
}, pS = (e, t, r7, n) => {
  if (t && typeof t == "object" || typeof t == "function")
    for (let i of W5(t))
      !K5.call(e, i) && i !== r7 && xi(e, i, { get: () => t[i], enumerable: !(n = G5(t, i)) || n.enumerable });
  return e;
};
var Ne = (e, t, r7) => (r7 = e != null ? z5(Y5(e)) : {}, pS(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  t || !e || !e.__esModule ? xi(r7, "default", { value: e, enumerable: true }) : r7,
  e
)), J5 = (e) => pS(xi({}, "__esModule", { value: true }), e);
var i_ = y((mg) => {
  Object.defineProperty(mg, "__esModule", { value: true }), mg.isEqual = /* @__PURE__ */ (function() {
    var e = Object.prototype.toString, t = Object.getPrototypeOf, r7 = Object.getOwnPropertySymbols ? function(n) {
      return Object.keys(n).concat(Object.getOwnPropertySymbols(n));
    } : Object.keys;
    return function(n, i) {
      return (/* @__PURE__ */ o(function s(a, l, u) {
        var c, d, p5, f = e.call(a), m = e.call(l);
        if (a === l) return true;
        if (a == null || l == null) return false;
        if (u.indexOf(a) > -1 && u.indexOf(l) > -1) return true;
        if (u.push(a, l), f != m || (c = r7(a), d = r7(l), c.length != d.length || c.some(function(h5) {
          return !s(a[h5], l[h5], u);
        }))) return false;
        switch (f.slice(8, -1)) {
          case "Symbol":
            return a.valueOf() == l.valueOf();
          case "Date":
          case "Number":
            return +a == +l || +a != +a && +l != +l;
          case "RegExp":
          case "Function":
          case "String":
          case "Boolean":
            return "" + a == "" + l;
          case "Set":
          case "Map":
            c = a.entries(), d = l.entries();
            do
              if (!s((p5 = c.next()).value, d.next().value, u)) return false;
            while (!p5.done);
            return true;
          case "ArrayBuffer":
            a = new Uint8Array(a), l = new Uint8Array(l);
          case "DataView":
            a = new Uint8Array(a.buffer), l = new Uint8Array(l.buffer);
          case "Float32Array":
          case "Float64Array":
          case "Int8Array":
          case "Int16Array":
          case "Int32Array":
          case "Uint8Array":
          case "Uint16Array":
          case "Uint32Array":
          case "Uint8ClampedArray":
          case "Arguments":
          case "Array":
            if (a.length != l.length) return false;
            for (p5 = 0; p5 < a.length; p5++) if ((p5 in a || p5 in l) && (p5 in a != p5 in l || !s(a[p5], l[p5], u))) return false;
            return true;
          case "Object":
            return s(t(a), t(l), u);
          default:
            return false;
        }
      }, "n"))(n, i, []);
    };
  })();
});
var qP = y((T_e, OP) => {
  OP.exports = (e) => {
    let t = e.match(/^[ \t]*(?=\S)/gm);
    return t ? t.reduce((r7, n) => Math.min(r7, n.length), 1 / 0) : 0;
  };
});
var MP = y((R_e, IP) => {
  var ZW = qP();
  IP.exports = (e) => {
    let t = ZW(e);
    if (t === 0)
      return e;
    let r7 = new RegExp(`^[ \\t]{${t}}`, "gm");
    return e.replace(r7, "");
  };
});
var jP = y((S_e, NP) => {
  NP.exports = (e, t = 1, r7) => {
    if (r7 = {
      indent: " ",
      includeEmptyLines: false,
      ...r7
    }, typeof e != "string")
      throw new TypeError(
        `Expected \`input\` to be a \`string\`, got \`${typeof e}\``
      );
    if (typeof t != "number")
      throw new TypeError(
        `Expected \`count\` to be a \`number\`, got \`${typeof t}\``
      );
    if (typeof r7.indent != "string")
      throw new TypeError(
        `Expected \`options.indent\` to be a \`string\`, got \`${typeof r7.indent}\``
      );
    if (t === 0)
      return e;
    let n = r7.includeEmptyLines ? /^/gm : /^(?!\s*$)/gm;
    return e.replace(n, r7.indent.repeat(t));
  };
});
var rE = y((__e, kP) => {
  var e8 = MP(), t8 = jP();
  kP.exports = (e, t = 0, r7) => t8(e8(e), t, r7);
});
var u0 = y((Ul) => {
  Object.defineProperty(Ul, "__esModule", {
    value: true
  });
  Ul.default = void 0;
  function k8() {
    var e = this, t = 0, r7 = {
      "@@iterator": /* @__PURE__ */ o(function() {
        return r7;
      }, "iterator"),
      next: /* @__PURE__ */ o(function() {
        if (t < e.length) {
          var i = e[t];
          return t = t + 1, {
            done: false,
            value: i
          };
        } else
          return {
            done: true
          };
      }, "next")
    };
    return r7;
  }
  o(k8, "iteratorProxy");
  Ul.default = k8;
});
var Oo = y((pE) => {
  Object.defineProperty(pE, "__esModule", {
    value: true
  });
  pE.default = D8;
  var L8 = F8(u0());
  function F8(e) {
    return e && e.__esModule ? e : { default: e };
  }
  o(F8, "_interopRequireDefault");
  function dE(e) {
    "@babel/helpers - typeof";
    return dE = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t) {
      return typeof t;
    } : function(t) {
      return t && typeof Symbol == "function" && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
    }, dE(e);
  }
  o(dE, "_typeof");
  function D8(e, t) {
    return typeof Symbol == "function" && dE(Symbol.iterator) === "symbol" && Object.defineProperty(e, Symbol.iterator, {
      value: L8.default.bind(t)
    }), e;
  }
  o(D8, "iterationDecorator");
});
var d0 = y((Vl) => {
  Object.defineProperty(Vl, "__esModule", {
    value: true
  });
  Vl.default = void 0;
  var $8 = B8(Oo());
  function B8(e) {
    return e && e.__esModule ? e : { default: e };
  }
  o(B8, "_interopRequireDefault");
  function fE(e, t) {
    return z8(e) || V8(e, t) || U8(e, t) || H8();
  }
  o(fE, "_slicedToArray");
  function H8() {
    throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
  }
  o(H8, "_nonIterableRest");
  function U8(e, t) {
    if (e) {
      if (typeof e == "string") return c0(e, t);
      var r7 = {}.toString.call(e).slice(8, -1);
      return r7 === "Object" && e.constructor && (r7 = e.constructor.name), r7 === "Map" || r7 === "Set" ? Array.from(e) : r7 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r7) ? c0(e, t) : void 0;
    }
  }
  o(U8, "_unsupportedIterableToArray");
  function c0(e, t) {
    (t == null || t > e.length) && (t = e.length);
    for (var r7 = 0, n = Array(t); r7 < t; r7++) n[r7] = e[r7];
    return n;
  }
  o(c0, "_arrayLikeToArray");
  function V8(e, t) {
    var r7 = e == null ? null : typeof Symbol < "u" && e[Symbol.iterator] || e["@@iterator"];
    if (r7 != null) {
      var n, i, s, a, l = [], u = true, c = false;
      try {
        if (s = (r7 = r7.call(e)).next, t === 0) {
          if (Object(r7) !== r7) return;
          u = false;
        } else for (; !(u = (n = s.call(r7)).done) && (l.push(n.value), l.length !== t); u = true) ;
      } catch (d) {
        c = true, i = d;
      } finally {
        try {
          if (!u && r7.return != null && (a = r7.return(), Object(a) !== a)) return;
        } finally {
          if (c) throw i;
        }
      }
      return l;
    }
  }
  o(V8, "_iterableToArrayLimit");
  function z8(e) {
    if (Array.isArray(e)) return e;
  }
  o(z8, "_arrayWithHoles");
  var qo = [["aria-activedescendant", {
    type: "id"
  }], ["aria-atomic", {
    type: "boolean"
  }], ["aria-autocomplete", {
    type: "token",
    values: ["inline", "list", "both", "none"]
  }], ["aria-braillelabel", {
    type: "string"
  }], ["aria-brailleroledescription", {
    type: "string"
  }], ["aria-busy", {
    type: "boolean"
  }], ["aria-checked", {
    type: "tristate"
  }], ["aria-colcount", {
    type: "integer"
  }], ["aria-colindex", {
    type: "integer"
  }], ["aria-colspan", {
    type: "integer"
  }], ["aria-controls", {
    type: "idlist"
  }], ["aria-current", {
    type: "token",
    values: ["page", "step", "location", "date", "time", true, false]
  }], ["aria-describedby", {
    type: "idlist"
  }], ["aria-description", {
    type: "string"
  }], ["aria-details", {
    type: "id"
  }], ["aria-disabled", {
    type: "boolean"
  }], ["aria-dropeffect", {
    type: "tokenlist",
    values: ["copy", "execute", "link", "move", "none", "popup"]
  }], ["aria-errormessage", {
    type: "id"
  }], ["aria-expanded", {
    type: "boolean",
    allowundefined: true
  }], ["aria-flowto", {
    type: "idlist"
  }], ["aria-grabbed", {
    type: "boolean",
    allowundefined: true
  }], ["aria-haspopup", {
    type: "token",
    values: [false, true, "menu", "listbox", "tree", "grid", "dialog"]
  }], ["aria-hidden", {
    type: "boolean",
    allowundefined: true
  }], ["aria-invalid", {
    type: "token",
    values: ["grammar", false, "spelling", true]
  }], ["aria-keyshortcuts", {
    type: "string"
  }], ["aria-label", {
    type: "string"
  }], ["aria-labelledby", {
    type: "idlist"
  }], ["aria-level", {
    type: "integer"
  }], ["aria-live", {
    type: "token",
    values: ["assertive", "off", "polite"]
  }], ["aria-modal", {
    type: "boolean"
  }], ["aria-multiline", {
    type: "boolean"
  }], ["aria-multiselectable", {
    type: "boolean"
  }], ["aria-orientation", {
    type: "token",
    values: ["vertical", "undefined", "horizontal"]
  }], ["aria-owns", {
    type: "idlist"
  }], ["aria-placeholder", {
    type: "string"
  }], ["aria-posinset", {
    type: "integer"
  }], ["aria-pressed", {
    type: "tristate"
  }], ["aria-readonly", {
    type: "boolean"
  }], ["aria-relevant", {
    type: "tokenlist",
    values: ["additions", "all", "removals", "text"]
  }], ["aria-required", {
    type: "boolean"
  }], ["aria-roledescription", {
    type: "string"
  }], ["aria-rowcount", {
    type: "integer"
  }], ["aria-rowindex", {
    type: "integer"
  }], ["aria-rowspan", {
    type: "integer"
  }], ["aria-selected", {
    type: "boolean",
    allowundefined: true
  }], ["aria-setsize", {
    type: "integer"
  }], ["aria-sort", {
    type: "token",
    values: ["ascending", "descending", "none", "other"]
  }], ["aria-valuemax", {
    type: "number"
  }], ["aria-valuemin", {
    type: "number"
  }], ["aria-valuenow", {
    type: "number"
  }], ["aria-valuetext", {
    type: "string"
  }]], mE = {
    entries: /* @__PURE__ */ o(function() {
      return qo;
    }, "entries"),
    forEach: /* @__PURE__ */ o(function(t) {
      for (var r7 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null, n = 0, i = qo; n < i.length; n++) {
        var s = fE(i[n], 2), a = s[0], l = s[1];
        t.call(r7, l, a, qo);
      }
    }, "forEach"),
    get: /* @__PURE__ */ o(function(t) {
      var r7 = qo.filter(function(n) {
        return n[0] === t;
      })[0];
      return r7 && r7[1];
    }, "get"),
    has: /* @__PURE__ */ o(function(t) {
      return !!mE.get(t);
    }, "has"),
    keys: /* @__PURE__ */ o(function() {
      return qo.map(function(t) {
        var r7 = fE(t, 1), n = r7[0];
        return n;
      });
    }, "keys"),
    values: /* @__PURE__ */ o(function() {
      return qo.map(function(t) {
        var r7 = fE(t, 2), n = r7[1];
        return n;
      });
    }, "values")
  };
  Vl.default = (0, $8.default)(mE, mE.entries());
});
var f0 = y((zl) => {
  Object.defineProperty(zl, "__esModule", {
    value: true
  });
  zl.default = void 0;
  var G8 = W8(Oo());
  function W8(e) {
    return e && e.__esModule ? e : { default: e };
  }
  o(W8, "_interopRequireDefault");
  function hE(e, t) {
    return J8(e) || X8(e, t) || K8(e, t) || Y8();
  }
  o(hE, "_slicedToArray");
  function Y8() {
    throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
  }
  o(Y8, "_nonIterableRest");
  function K8(e, t) {
    if (e) {
      if (typeof e == "string") return p0(e, t);
      var r7 = {}.toString.call(e).slice(8, -1);
      return r7 === "Object" && e.constructor && (r7 = e.constructor.name), r7 === "Map" || r7 === "Set" ? Array.from(e) : r7 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r7) ? p0(e, t) : void 0;
    }
  }
  o(K8, "_unsupportedIterableToArray");
  function p0(e, t) {
    (t == null || t > e.length) && (t = e.length);
    for (var r7 = 0, n = Array(t); r7 < t; r7++) n[r7] = e[r7];
    return n;
  }
  o(p0, "_arrayLikeToArray");
  function X8(e, t) {
    var r7 = e == null ? null : typeof Symbol < "u" && e[Symbol.iterator] || e["@@iterator"];
    if (r7 != null) {
      var n, i, s, a, l = [], u = true, c = false;
      try {
        if (s = (r7 = r7.call(e)).next, t === 0) {
          if (Object(r7) !== r7) return;
          u = false;
        } else for (; !(u = (n = s.call(r7)).done) && (l.push(n.value), l.length !== t); u = true) ;
      } catch (d) {
        c = true, i = d;
      } finally {
        try {
          if (!u && r7.return != null && (a = r7.return(), Object(a) !== a)) return;
        } finally {
          if (c) throw i;
        }
      }
      return l;
    }
  }
  o(X8, "_iterableToArrayLimit");
  function J8(e) {
    if (Array.isArray(e)) return e;
  }
  o(J8, "_arrayWithHoles");
  var Io = [["a", {
    reserved: false
  }], ["abbr", {
    reserved: false
  }], ["acronym", {
    reserved: false
  }], ["address", {
    reserved: false
  }], ["applet", {
    reserved: false
  }], ["area", {
    reserved: false
  }], ["article", {
    reserved: false
  }], ["aside", {
    reserved: false
  }], ["audio", {
    reserved: false
  }], ["b", {
    reserved: false
  }], ["base", {
    reserved: true
  }], ["bdi", {
    reserved: false
  }], ["bdo", {
    reserved: false
  }], ["big", {
    reserved: false
  }], ["blink", {
    reserved: false
  }], ["blockquote", {
    reserved: false
  }], ["body", {
    reserved: false
  }], ["br", {
    reserved: false
  }], ["button", {
    reserved: false
  }], ["canvas", {
    reserved: false
  }], ["caption", {
    reserved: false
  }], ["center", {
    reserved: false
  }], ["cite", {
    reserved: false
  }], ["code", {
    reserved: false
  }], ["col", {
    reserved: true
  }], ["colgroup", {
    reserved: true
  }], ["content", {
    reserved: false
  }], ["data", {
    reserved: false
  }], ["datalist", {
    reserved: false
  }], ["dd", {
    reserved: false
  }], ["del", {
    reserved: false
  }], ["details", {
    reserved: false
  }], ["dfn", {
    reserved: false
  }], ["dialog", {
    reserved: false
  }], ["dir", {
    reserved: false
  }], ["div", {
    reserved: false
  }], ["dl", {
    reserved: false
  }], ["dt", {
    reserved: false
  }], ["em", {
    reserved: false
  }], ["embed", {
    reserved: false
  }], ["fieldset", {
    reserved: false
  }], ["figcaption", {
    reserved: false
  }], ["figure", {
    reserved: false
  }], ["font", {
    reserved: false
  }], ["footer", {
    reserved: false
  }], ["form", {
    reserved: false
  }], ["frame", {
    reserved: false
  }], ["frameset", {
    reserved: false
  }], ["h1", {
    reserved: false
  }], ["h2", {
    reserved: false
  }], ["h3", {
    reserved: false
  }], ["h4", {
    reserved: false
  }], ["h5", {
    reserved: false
  }], ["h6", {
    reserved: false
  }], ["head", {
    reserved: true
  }], ["header", {
    reserved: false
  }], ["hgroup", {
    reserved: false
  }], ["hr", {
    reserved: false
  }], ["html", {
    reserved: true
  }], ["i", {
    reserved: false
  }], ["iframe", {
    reserved: false
  }], ["img", {
    reserved: false
  }], ["input", {
    reserved: false
  }], ["ins", {
    reserved: false
  }], ["kbd", {
    reserved: false
  }], ["keygen", {
    reserved: false
  }], ["label", {
    reserved: false
  }], ["legend", {
    reserved: false
  }], ["li", {
    reserved: false
  }], ["link", {
    reserved: true
  }], ["main", {
    reserved: false
  }], ["map", {
    reserved: false
  }], ["mark", {
    reserved: false
  }], ["marquee", {
    reserved: false
  }], ["menu", {
    reserved: false
  }], ["menuitem", {
    reserved: false
  }], ["meta", {
    reserved: true
  }], ["meter", {
    reserved: false
  }], ["nav", {
    reserved: false
  }], ["noembed", {
    reserved: true
  }], ["noscript", {
    reserved: true
  }], ["object", {
    reserved: false
  }], ["ol", {
    reserved: false
  }], ["optgroup", {
    reserved: false
  }], ["option", {
    reserved: false
  }], ["output", {
    reserved: false
  }], ["p", {
    reserved: false
  }], ["param", {
    reserved: true
  }], ["picture", {
    reserved: true
  }], ["pre", {
    reserved: false
  }], ["progress", {
    reserved: false
  }], ["q", {
    reserved: false
  }], ["rp", {
    reserved: false
  }], ["rt", {
    reserved: false
  }], ["rtc", {
    reserved: false
  }], ["ruby", {
    reserved: false
  }], ["s", {
    reserved: false
  }], ["samp", {
    reserved: false
  }], ["script", {
    reserved: true
  }], ["section", {
    reserved: false
  }], ["select", {
    reserved: false
  }], ["small", {
    reserved: false
  }], ["source", {
    reserved: true
  }], ["spacer", {
    reserved: false
  }], ["span", {
    reserved: false
  }], ["strike", {
    reserved: false
  }], ["strong", {
    reserved: false
  }], ["style", {
    reserved: true
  }], ["sub", {
    reserved: false
  }], ["summary", {
    reserved: false
  }], ["sup", {
    reserved: false
  }], ["table", {
    reserved: false
  }], ["tbody", {
    reserved: false
  }], ["td", {
    reserved: false
  }], ["textarea", {
    reserved: false
  }], ["tfoot", {
    reserved: false
  }], ["th", {
    reserved: false
  }], ["thead", {
    reserved: false
  }], ["time", {
    reserved: false
  }], ["title", {
    reserved: true
  }], ["tr", {
    reserved: false
  }], ["track", {
    reserved: true
  }], ["tt", {
    reserved: false
  }], ["u", {
    reserved: false
  }], ["ul", {
    reserved: false
  }], ["var", {
    reserved: false
  }], ["video", {
    reserved: false
  }], ["wbr", {
    reserved: false
  }], ["xmp", {
    reserved: false
  }]], yE = {
    entries: /* @__PURE__ */ o(function() {
      return Io;
    }, "entries"),
    forEach: /* @__PURE__ */ o(function(t) {
      for (var r7 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null, n = 0, i = Io; n < i.length; n++) {
        var s = hE(i[n], 2), a = s[0], l = s[1];
        t.call(r7, l, a, Io);
      }
    }, "forEach"),
    get: /* @__PURE__ */ o(function(t) {
      var r7 = Io.filter(function(n) {
        return n[0] === t;
      })[0];
      return r7 && r7[1];
    }, "get"),
    has: /* @__PURE__ */ o(function(t) {
      return !!yE.get(t);
    }, "has"),
    keys: /* @__PURE__ */ o(function() {
      return Io.map(function(t) {
        var r7 = hE(t, 1), n = r7[0];
        return n;
      });
    }, "keys"),
    values: /* @__PURE__ */ o(function() {
      return Io.map(function(t) {
        var r7 = hE(t, 2), n = r7[1];
        return n;
      });
    }, "values")
  };
  zl.default = (0, G8.default)(yE, yE.entries());
});
var m0 = y((Gl) => {
  Object.defineProperty(Gl, "__esModule", {
    value: true
  });
  Gl.default = void 0;
  var Q8 = {
    abstract: true,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "widget"]]
  };
  Gl.default = Q8;
});
var h0 = y((Wl) => {
  Object.defineProperty(Wl, "__esModule", {
    value: true
  });
  Wl.default = void 0;
  var Z8 = {
    abstract: true,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-activedescendant": null,
      "aria-disabled": null
    },
    relatedConcepts: [],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "widget"]]
  };
  Wl.default = Z8;
});
var y0 = y((Yl) => {
  Object.defineProperty(Yl, "__esModule", {
    value: true
  });
  Yl.default = void 0;
  var eY = {
    abstract: true,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null
    },
    relatedConcepts: [{
      concept: {
        name: "input"
      },
      module: "XForms"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "widget"]]
  };
  Yl.default = eY;
});
var b0 = y((Kl) => {
  Object.defineProperty(Kl, "__esModule", {
    value: true
  });
  Kl.default = void 0;
  var tY = {
    abstract: true,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  };
  Kl.default = tY;
});
var g0 = y((Xl) => {
  Object.defineProperty(Xl, "__esModule", {
    value: true
  });
  Xl.default = void 0;
  var rY = {
    abstract: true,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-valuemax": null,
      "aria-valuemin": null,
      "aria-valuenow": null
    },
    relatedConcepts: [],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure"]]
  };
  Xl.default = rY;
});
var v0 = y((Jl) => {
  Object.defineProperty(Jl, "__esModule", {
    value: true
  });
  Jl.default = void 0;
  var nY = {
    abstract: true,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: [],
    prohibitedProps: [],
    props: {
      "aria-atomic": null,
      "aria-busy": null,
      "aria-controls": null,
      "aria-current": null,
      "aria-describedby": null,
      "aria-details": null,
      "aria-dropeffect": null,
      "aria-flowto": null,
      "aria-grabbed": null,
      "aria-hidden": null,
      "aria-keyshortcuts": null,
      "aria-label": null,
      "aria-labelledby": null,
      "aria-live": null,
      "aria-owns": null,
      "aria-relevant": null,
      "aria-roledescription": null
    },
    relatedConcepts: [{
      concept: {
        name: "role"
      },
      module: "XHTML"
    }, {
      concept: {
        name: "type"
      },
      module: "Dublin Core"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: []
  };
  Jl.default = nY;
});
var E0 = y((Ql) => {
  Object.defineProperty(Ql, "__esModule", {
    value: true
  });
  Ql.default = void 0;
  var oY = {
    abstract: true,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: [],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [{
      concept: {
        name: "frontmatter"
      },
      module: "DTB"
    }, {
      concept: {
        name: "level"
      },
      module: "DTB"
    }, {
      concept: {
        name: "level"
      },
      module: "SMIL"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure"]]
  };
  Ql.default = oY;
});
var x0 = y((Zl) => {
  Object.defineProperty(Zl, "__esModule", {
    value: true
  });
  Zl.default = void 0;
  var iY = {
    abstract: true,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author", "contents"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure"]]
  };
  Zl.default = iY;
});
var w0 = y((eu) => {
  Object.defineProperty(eu, "__esModule", {
    value: true
  });
  eu.default = void 0;
  var sY = {
    abstract: true,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-orientation": null
    },
    relatedConcepts: [],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "widget", "composite"], ["roletype", "structure", "section", "group"]]
  };
  eu.default = sY;
});
var T0 = y((tu) => {
  Object.defineProperty(tu, "__esModule", {
    value: true
  });
  tu.default = void 0;
  var aY = {
    abstract: true,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: [],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype"]]
  };
  tu.default = aY;
});
var R0 = y((ru) => {
  Object.defineProperty(ru, "__esModule", {
    value: true
  });
  ru.default = void 0;
  var lY = {
    abstract: true,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: [],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype"]]
  };
  ru.default = lY;
});
var S0 = y((nu) => {
  Object.defineProperty(nu, "__esModule", {
    value: true
  });
  nu.default = void 0;
  var uY = {
    abstract: true,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-modal": null
    },
    relatedConcepts: [],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype"]]
  };
  nu.default = uY;
});
var _0 = y((ou) => {
  Object.defineProperty(ou, "__esModule", {
    value: true
  });
  ou.default = void 0;
  var cY = At2(m0()), dY = At2(h0()), pY = At2(y0()), fY = At2(b0()), mY = At2(g0()), hY = At2(v0()), yY = At2(E0()), bY = At2(x0()), gY = At2(w0()), vY = At2(T0()), EY = At2(R0()), xY = At2(S0());
  function At2(e) {
    return e && e.__esModule ? e : { default: e };
  }
  o(At2, "_interopRequireDefault");
  var wY = [["command", cY.default], ["composite", dY.default], ["input", pY.default], ["landmark", fY.default], ["range", mY.default], ["roletype", hY.default], ["section", yY.default], ["sectionhead", bY.default], ["select", gY.default], ["structure", vY.default], ["widget", EY.default], ["window", xY.default]];
  ou.default = wY;
});
var C0 = y((iu) => {
  Object.defineProperty(iu, "__esModule", {
    value: true
  });
  iu.default = void 0;
  var TY = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-atomic": "true",
      "aria-live": "assertive"
    },
    relatedConcepts: [{
      concept: {
        name: "alert"
      },
      module: "XForms"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  };
  iu.default = TY;
});
var P0 = y((su) => {
  Object.defineProperty(su, "__esModule", {
    value: true
  });
  su.default = void 0;
  var RY = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [{
      concept: {
        name: "alert"
      },
      module: "XForms"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "alert"], ["roletype", "window", "dialog"]]
  };
  su.default = RY;
});
var A0 = y((au) => {
  Object.defineProperty(au, "__esModule", {
    value: true
  });
  au.default = void 0;
  var SY = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-activedescendant": null,
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "Device Independence Delivery Unit"
      }
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure"]]
  };
  au.default = SY;
});
var O0 = y((lu) => {
  Object.defineProperty(lu, "__esModule", {
    value: true
  });
  lu.default = void 0;
  var _Y = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-posinset": null,
      "aria-setsize": null
    },
    relatedConcepts: [{
      concept: {
        name: "article"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "document"]]
  };
  lu.default = _Y;
});
var q0 = y((uu) => {
  Object.defineProperty(uu, "__esModule", {
    value: true
  });
  uu.default = void 0;
  var CY = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [{
      concept: {
        constraints: ["scoped to the body element"],
        name: "header"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "landmark"]]
  };
  uu.default = CY;
});
var I0 = y((cu) => {
  Object.defineProperty(cu, "__esModule", {
    value: true
  });
  cu.default = void 0;
  var PY = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [{
      concept: {
        name: "blockquote"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  };
  cu.default = PY;
});
var M0 = y((du) => {
  Object.defineProperty(du, "__esModule", {
    value: true
  });
  du.default = void 0;
  var AY = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: true,
    nameFrom: ["author", "contents"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-pressed": null
    },
    relatedConcepts: [{
      concept: {
        attributes: [{
          name: "type",
          value: "button"
        }],
        name: "input"
      },
      module: "HTML"
    }, {
      concept: {
        attributes: [{
          name: "type",
          value: "image"
        }],
        name: "input"
      },
      module: "HTML"
    }, {
      concept: {
        attributes: [{
          name: "type",
          value: "reset"
        }],
        name: "input"
      },
      module: "HTML"
    }, {
      concept: {
        attributes: [{
          name: "type",
          value: "submit"
        }],
        name: "input"
      },
      module: "HTML"
    }, {
      concept: {
        name: "button"
      },
      module: "HTML"
    }, {
      concept: {
        name: "trigger"
      },
      module: "XForms"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "widget", "command"]]
  };
  du.default = AY;
});
var N0 = y((pu) => {
  Object.defineProperty(pu, "__esModule", {
    value: true
  });
  pu.default = void 0;
  var OY = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["prohibited"],
    prohibitedProps: ["aria-label", "aria-labelledby"],
    props: {},
    relatedConcepts: [{
      concept: {
        name: "caption"
      },
      module: "HTML"
    }],
    requireContextRole: ["figure", "grid", "table"],
    requiredContextRole: ["figure", "grid", "table"],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  };
  pu.default = OY;
});
var j0 = y((fu) => {
  Object.defineProperty(fu, "__esModule", {
    value: true
  });
  fu.default = void 0;
  var qY = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author", "contents"],
    prohibitedProps: [],
    props: {
      "aria-colindex": null,
      "aria-colspan": null,
      "aria-rowindex": null,
      "aria-rowspan": null
    },
    relatedConcepts: [{
      concept: {
        constraints: ["ancestor table element has table role"],
        name: "td"
      },
      module: "HTML"
    }],
    requireContextRole: ["row"],
    requiredContextRole: ["row"],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  };
  fu.default = qY;
});
var k0 = y((mu) => {
  Object.defineProperty(mu, "__esModule", {
    value: true
  });
  mu.default = void 0;
  var IY = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: true,
    nameFrom: ["author", "contents"],
    prohibitedProps: [],
    props: {
      "aria-checked": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-invalid": null,
      "aria-readonly": null,
      "aria-required": null
    },
    relatedConcepts: [{
      concept: {
        attributes: [{
          name: "type",
          value: "checkbox"
        }],
        name: "input"
      },
      module: "HTML"
    }, {
      concept: {
        name: "option"
      },
      module: "ARIA"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {
      "aria-checked": null
    },
    superClass: [["roletype", "widget", "input"]]
  };
  mu.default = IY;
});
var L0 = y((hu) => {
  Object.defineProperty(hu, "__esModule", {
    value: true
  });
  hu.default = void 0;
  var MY = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["prohibited"],
    prohibitedProps: ["aria-label", "aria-labelledby"],
    props: {},
    relatedConcepts: [{
      concept: {
        name: "code"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  };
  hu.default = MY;
});
var F0 = y((yu) => {
  Object.defineProperty(yu, "__esModule", {
    value: true
  });
  yu.default = void 0;
  var NY = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author", "contents"],
    prohibitedProps: [],
    props: {
      "aria-sort": null
    },
    relatedConcepts: [{
      concept: {
        name: "th"
      },
      module: "HTML"
    }, {
      concept: {
        attributes: [{
          name: "scope",
          value: "col"
        }],
        name: "th"
      },
      module: "HTML"
    }, {
      concept: {
        attributes: [{
          name: "scope",
          value: "colgroup"
        }],
        name: "th"
      },
      module: "HTML"
    }],
    requireContextRole: ["row"],
    requiredContextRole: ["row"],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "cell"], ["roletype", "structure", "section", "cell", "gridcell"], ["roletype", "widget", "gridcell"], ["roletype", "structure", "sectionhead"]]
  };
  yu.default = NY;
});
var D0 = y((bu) => {
  Object.defineProperty(bu, "__esModule", {
    value: true
  });
  bu.default = void 0;
  var jY = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-activedescendant": null,
      "aria-autocomplete": null,
      "aria-errormessage": null,
      "aria-invalid": null,
      "aria-readonly": null,
      "aria-required": null,
      "aria-expanded": "false",
      "aria-haspopup": "listbox"
    },
    relatedConcepts: [{
      concept: {
        attributes: [{
          constraints: ["set"],
          name: "list"
        }, {
          name: "type",
          value: "email"
        }],
        name: "input"
      },
      module: "HTML"
    }, {
      concept: {
        attributes: [{
          constraints: ["set"],
          name: "list"
        }, {
          name: "type",
          value: "search"
        }],
        name: "input"
      },
      module: "HTML"
    }, {
      concept: {
        attributes: [{
          constraints: ["set"],
          name: "list"
        }, {
          name: "type",
          value: "tel"
        }],
        name: "input"
      },
      module: "HTML"
    }, {
      concept: {
        attributes: [{
          constraints: ["set"],
          name: "list"
        }, {
          name: "type",
          value: "text"
        }],
        name: "input"
      },
      module: "HTML"
    }, {
      concept: {
        attributes: [{
          constraints: ["set"],
          name: "list"
        }, {
          name: "type",
          value: "url"
        }],
        name: "input"
      },
      module: "HTML"
    }, {
      concept: {
        attributes: [{
          constraints: ["set"],
          name: "list"
        }, {
          name: "type",
          value: "url"
        }],
        name: "input"
      },
      module: "HTML"
    }, {
      concept: {
        attributes: [{
          constraints: ["undefined"],
          name: "multiple"
        }, {
          constraints: ["undefined"],
          name: "size"
        }],
        constraints: ["the multiple attribute is not set and the size attribute does not have a value greater than 1"],
        name: "select"
      },
      module: "HTML"
    }, {
      concept: {
        name: "select"
      },
      module: "XForms"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {
      "aria-controls": null,
      "aria-expanded": "false"
    },
    superClass: [["roletype", "widget", "input"]]
  };
  bu.default = jY;
});
var $0 = y((gu) => {
  Object.defineProperty(gu, "__esModule", {
    value: true
  });
  gu.default = void 0;
  var kY = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [{
      concept: {
        constraints: ["scoped to the body element", "scoped to the main element"],
        name: "aside"
      },
      module: "HTML"
    }, {
      concept: {
        attributes: [{
          constraints: ["set"],
          name: "aria-label"
        }],
        constraints: ["scoped to a sectioning content element", "scoped to a sectioning root element other than body"],
        name: "aside"
      },
      module: "HTML"
    }, {
      concept: {
        attributes: [{
          constraints: ["set"],
          name: "aria-labelledby"
        }],
        constraints: ["scoped to a sectioning content element", "scoped to a sectioning root element other than body"],
        name: "aside"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "landmark"]]
  };
  gu.default = kY;
});
var B0 = y((vu) => {
  Object.defineProperty(vu, "__esModule", {
    value: true
  });
  vu.default = void 0;
  var LY = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [{
      concept: {
        constraints: ["scoped to the body element"],
        name: "footer"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "landmark"]]
  };
  vu.default = LY;
});
var H0 = y((Eu) => {
  Object.defineProperty(Eu, "__esModule", {
    value: true
  });
  Eu.default = void 0;
  var FY = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [{
      concept: {
        name: "dd"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  };
  Eu.default = FY;
});
var U0 = y((xu) => {
  Object.defineProperty(xu, "__esModule", {
    value: true
  });
  xu.default = void 0;
  var DY = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["prohibited"],
    prohibitedProps: ["aria-label", "aria-labelledby"],
    props: {},
    relatedConcepts: [{
      concept: {
        name: "del"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  };
  xu.default = DY;
});
var V0 = y((wu) => {
  Object.defineProperty(wu, "__esModule", {
    value: true
  });
  wu.default = void 0;
  var $Y = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [{
      concept: {
        name: "dialog"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "window"]]
  };
  wu.default = $Y;
});
var z0 = y((Tu) => {
  Object.defineProperty(Tu, "__esModule", {
    value: true
  });
  Tu.default = void 0;
  var BY = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [{
      module: "DAISY Guide"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "list"]]
  };
  Tu.default = BY;
});
var G0 = y((Ru) => {
  Object.defineProperty(Ru, "__esModule", {
    value: true
  });
  Ru.default = void 0;
  var HY = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [{
      concept: {
        name: "Device Independence Delivery Unit"
      }
    }, {
      concept: {
        name: "html"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure"]]
  };
  Ru.default = HY;
});
var W0 = y((Su) => {
  Object.defineProperty(Su, "__esModule", {
    value: true
  });
  Su.default = void 0;
  var UY = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["prohibited"],
    prohibitedProps: ["aria-label", "aria-labelledby"],
    props: {},
    relatedConcepts: [{
      concept: {
        name: "em"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  };
  Su.default = UY;
});
var Y0 = y((_u) => {
  Object.defineProperty(_u, "__esModule", {
    value: true
  });
  _u.default = void 0;
  var VY = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [["article"]],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "list"]]
  };
  _u.default = VY;
});
var K0 = y((Cu) => {
  Object.defineProperty(Cu, "__esModule", {
    value: true
  });
  Cu.default = void 0;
  var zY = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [{
      concept: {
        name: "figure"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  };
  Cu.default = zY;
});
var X0 = y((Pu) => {
  Object.defineProperty(Pu, "__esModule", {
    value: true
  });
  Pu.default = void 0;
  var GY = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [{
      concept: {
        attributes: [{
          constraints: ["set"],
          name: "aria-label"
        }],
        name: "form"
      },
      module: "HTML"
    }, {
      concept: {
        attributes: [{
          constraints: ["set"],
          name: "aria-labelledby"
        }],
        name: "form"
      },
      module: "HTML"
    }, {
      concept: {
        attributes: [{
          constraints: ["set"],
          name: "name"
        }],
        name: "form"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "landmark"]]
  };
  Pu.default = GY;
});
var J0 = y((Au) => {
  Object.defineProperty(Au, "__esModule", {
    value: true
  });
  Au.default = void 0;
  var WY = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["prohibited"],
    prohibitedProps: ["aria-label", "aria-labelledby"],
    props: {},
    relatedConcepts: [{
      concept: {
        name: "a"
      },
      module: "HTML"
    }, {
      concept: {
        name: "area"
      },
      module: "HTML"
    }, {
      concept: {
        name: "aside"
      },
      module: "HTML"
    }, {
      concept: {
        name: "b"
      },
      module: "HTML"
    }, {
      concept: {
        name: "bdo"
      },
      module: "HTML"
    }, {
      concept: {
        name: "body"
      },
      module: "HTML"
    }, {
      concept: {
        name: "data"
      },
      module: "HTML"
    }, {
      concept: {
        name: "div"
      },
      module: "HTML"
    }, {
      concept: {
        constraints: ["scoped to the main element", "scoped to a sectioning content element", "scoped to a sectioning root element other than body"],
        name: "footer"
      },
      module: "HTML"
    }, {
      concept: {
        constraints: ["scoped to the main element", "scoped to a sectioning content element", "scoped to a sectioning root element other than body"],
        name: "header"
      },
      module: "HTML"
    }, {
      concept: {
        name: "hgroup"
      },
      module: "HTML"
    }, {
      concept: {
        name: "i"
      },
      module: "HTML"
    }, {
      concept: {
        name: "pre"
      },
      module: "HTML"
    }, {
      concept: {
        name: "q"
      },
      module: "HTML"
    }, {
      concept: {
        name: "samp"
      },
      module: "HTML"
    }, {
      concept: {
        name: "section"
      },
      module: "HTML"
    }, {
      concept: {
        name: "small"
      },
      module: "HTML"
    }, {
      concept: {
        name: "span"
      },
      module: "HTML"
    }, {
      concept: {
        name: "u"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure"]]
  };
  Au.default = WY;
});
var Q0 = y((Ou) => {
  Object.defineProperty(Ou, "__esModule", {
    value: true
  });
  Ou.default = void 0;
  var YY = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-multiselectable": null,
      "aria-readonly": null
    },
    relatedConcepts: [],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [["row"], ["row", "rowgroup"]],
    requiredProps: {},
    superClass: [["roletype", "widget", "composite"], ["roletype", "structure", "section", "table"]]
  };
  Ou.default = YY;
});
var Z0 = y((qu) => {
  Object.defineProperty(qu, "__esModule", {
    value: true
  });
  qu.default = void 0;
  var KY = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author", "contents"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null,
      "aria-readonly": null,
      "aria-required": null,
      "aria-selected": null
    },
    relatedConcepts: [{
      concept: {
        constraints: ["ancestor table element has grid role", "ancestor table element has treegrid role"],
        name: "td"
      },
      module: "HTML"
    }],
    requireContextRole: ["row"],
    requiredContextRole: ["row"],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "cell"], ["roletype", "widget"]]
  };
  qu.default = KY;
});
var eA = y((Iu) => {
  Object.defineProperty(Iu, "__esModule", {
    value: true
  });
  Iu.default = void 0;
  var XY = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-activedescendant": null,
      "aria-disabled": null
    },
    relatedConcepts: [{
      concept: {
        name: "details"
      },
      module: "HTML"
    }, {
      concept: {
        name: "fieldset"
      },
      module: "HTML"
    }, {
      concept: {
        name: "optgroup"
      },
      module: "HTML"
    }, {
      concept: {
        name: "address"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  };
  Iu.default = XY;
});
var tA = y((Mu) => {
  Object.defineProperty(Mu, "__esModule", {
    value: true
  });
  Mu.default = void 0;
  var JY = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author", "contents"],
    prohibitedProps: [],
    props: {
      "aria-level": "2"
    },
    relatedConcepts: [{
      concept: {
        name: "h1"
      },
      module: "HTML"
    }, {
      concept: {
        name: "h2"
      },
      module: "HTML"
    }, {
      concept: {
        name: "h3"
      },
      module: "HTML"
    }, {
      concept: {
        name: "h4"
      },
      module: "HTML"
    }, {
      concept: {
        name: "h5"
      },
      module: "HTML"
    }, {
      concept: {
        name: "h6"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {
      "aria-level": "2"
    },
    superClass: [["roletype", "structure", "sectionhead"]]
  };
  Mu.default = JY;
});
var rA = y((Nu) => {
  Object.defineProperty(Nu, "__esModule", {
    value: true
  });
  Nu.default = void 0;
  var QY = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: true,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [{
      concept: {
        attributes: [{
          constraints: ["set"],
          name: "alt"
        }],
        name: "img"
      },
      module: "HTML"
    }, {
      concept: {
        attributes: [{
          constraints: ["undefined"],
          name: "alt"
        }],
        name: "img"
      },
      module: "HTML"
    }, {
      concept: {
        name: "imggroup"
      },
      module: "DTB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  };
  Nu.default = QY;
});
var nA = y((ju) => {
  Object.defineProperty(ju, "__esModule", {
    value: true
  });
  ju.default = void 0;
  var ZY = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["prohibited"],
    prohibitedProps: ["aria-label", "aria-labelledby"],
    props: {},
    relatedConcepts: [{
      concept: {
        name: "ins"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  };
  ju.default = ZY;
});
var oA = y((ku) => {
  Object.defineProperty(ku, "__esModule", {
    value: true
  });
  ku.default = void 0;
  var e9 = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author", "contents"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-expanded": null,
      "aria-haspopup": null
    },
    relatedConcepts: [{
      concept: {
        attributes: [{
          constraints: ["set"],
          name: "href"
        }],
        name: "a"
      },
      module: "HTML"
    }, {
      concept: {
        attributes: [{
          constraints: ["set"],
          name: "href"
        }],
        name: "area"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "widget", "command"]]
  };
  ku.default = e9;
});
var iA = y((Lu) => {
  Object.defineProperty(Lu, "__esModule", {
    value: true
  });
  Lu.default = void 0;
  var t9 = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [{
      concept: {
        name: "menu"
      },
      module: "HTML"
    }, {
      concept: {
        name: "ol"
      },
      module: "HTML"
    }, {
      concept: {
        name: "ul"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [["listitem"]],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  };
  Lu.default = t9;
});
var sA = y((Fu) => {
  Object.defineProperty(Fu, "__esModule", {
    value: true
  });
  Fu.default = void 0;
  var r9 = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-invalid": null,
      "aria-multiselectable": null,
      "aria-readonly": null,
      "aria-required": null,
      "aria-orientation": "vertical"
    },
    relatedConcepts: [{
      concept: {
        attributes: [{
          constraints: [">1"],
          name: "size"
        }],
        constraints: ["the size attribute value is greater than 1"],
        name: "select"
      },
      module: "HTML"
    }, {
      concept: {
        attributes: [{
          name: "multiple"
        }],
        name: "select"
      },
      module: "HTML"
    }, {
      concept: {
        name: "datalist"
      },
      module: "HTML"
    }, {
      concept: {
        name: "list"
      },
      module: "ARIA"
    }, {
      concept: {
        name: "select"
      },
      module: "XForms"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [["option", "group"], ["option"]],
    requiredProps: {},
    superClass: [["roletype", "widget", "composite", "select"], ["roletype", "structure", "section", "group", "select"]]
  };
  Fu.default = r9;
});
var aA = y((Du) => {
  Object.defineProperty(Du, "__esModule", {
    value: true
  });
  Du.default = void 0;
  var n9 = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-level": null,
      "aria-posinset": null,
      "aria-setsize": null
    },
    relatedConcepts: [{
      concept: {
        constraints: ["direct descendant of ol", "direct descendant of ul", "direct descendant of menu"],
        name: "li"
      },
      module: "HTML"
    }, {
      concept: {
        name: "item"
      },
      module: "XForms"
    }],
    requireContextRole: ["directory", "list"],
    requiredContextRole: ["directory", "list"],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  };
  Du.default = n9;
});
var lA = y(($u) => {
  Object.defineProperty($u, "__esModule", {
    value: true
  });
  $u.default = void 0;
  var o9 = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-live": "polite"
    },
    relatedConcepts: [],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  };
  $u.default = o9;
});
var uA = y((Bu) => {
  Object.defineProperty(Bu, "__esModule", {
    value: true
  });
  Bu.default = void 0;
  var i9 = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [{
      concept: {
        name: "main"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "landmark"]]
  };
  Bu.default = i9;
});
var cA = y((Hu) => {
  Object.defineProperty(Hu, "__esModule", {
    value: true
  });
  Hu.default = void 0;
  var s9 = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["prohibited"],
    prohibitedProps: [],
    props: {
      "aria-braillelabel": null,
      "aria-brailleroledescription": null,
      "aria-description": null
    },
    relatedConcepts: [{
      concept: {
        name: "mark"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  };
  Hu.default = s9;
});
var dA = y((Uu) => {
  Object.defineProperty(Uu, "__esModule", {
    value: true
  });
  Uu.default = void 0;
  var a9 = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  };
  Uu.default = a9;
});
var pA = y((Vu) => {
  Object.defineProperty(Vu, "__esModule", {
    value: true
  });
  Vu.default = void 0;
  var l9 = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [{
      concept: {
        name: "math"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  };
  Vu.default = l9;
});
var fA = y((zu) => {
  Object.defineProperty(zu, "__esModule", {
    value: true
  });
  zu.default = void 0;
  var u9 = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-orientation": "vertical"
    },
    relatedConcepts: [{
      concept: {
        name: "MENU"
      },
      module: "JAPI"
    }, {
      concept: {
        name: "list"
      },
      module: "ARIA"
    }, {
      concept: {
        name: "select"
      },
      module: "XForms"
    }, {
      concept: {
        name: "sidebar"
      },
      module: "DTB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [["menuitem", "group"], ["menuitemradio", "group"], ["menuitemcheckbox", "group"], ["menuitem"], ["menuitemcheckbox"], ["menuitemradio"]],
    requiredProps: {},
    superClass: [["roletype", "widget", "composite", "select"], ["roletype", "structure", "section", "group", "select"]]
  };
  zu.default = u9;
});
var mA = y((Gu) => {
  Object.defineProperty(Gu, "__esModule", {
    value: true
  });
  Gu.default = void 0;
  var c9 = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-orientation": "horizontal"
    },
    relatedConcepts: [{
      concept: {
        name: "toolbar"
      },
      module: "ARIA"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [["menuitem", "group"], ["menuitemradio", "group"], ["menuitemcheckbox", "group"], ["menuitem"], ["menuitemcheckbox"], ["menuitemradio"]],
    requiredProps: {},
    superClass: [["roletype", "widget", "composite", "select", "menu"], ["roletype", "structure", "section", "group", "select", "menu"]]
  };
  Gu.default = c9;
});
var hA = y((Wu) => {
  Object.defineProperty(Wu, "__esModule", {
    value: true
  });
  Wu.default = void 0;
  var d9 = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author", "contents"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-posinset": null,
      "aria-setsize": null
    },
    relatedConcepts: [{
      concept: {
        name: "MENU_ITEM"
      },
      module: "JAPI"
    }, {
      concept: {
        name: "listitem"
      },
      module: "ARIA"
    }, {
      concept: {
        name: "option"
      },
      module: "ARIA"
    }],
    requireContextRole: ["group", "menu", "menubar"],
    requiredContextRole: ["group", "menu", "menubar"],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "widget", "command"]]
  };
  Wu.default = d9;
});
var yA = y((Yu) => {
  Object.defineProperty(Yu, "__esModule", {
    value: true
  });
  Yu.default = void 0;
  var p9 = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: true,
    nameFrom: ["author", "contents"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [{
      concept: {
        name: "menuitem"
      },
      module: "ARIA"
    }],
    requireContextRole: ["group", "menu", "menubar"],
    requiredContextRole: ["group", "menu", "menubar"],
    requiredOwnedElements: [],
    requiredProps: {
      "aria-checked": null
    },
    superClass: [["roletype", "widget", "input", "checkbox"], ["roletype", "widget", "command", "menuitem"]]
  };
  Yu.default = p9;
});
var bA = y((Ku) => {
  Object.defineProperty(Ku, "__esModule", {
    value: true
  });
  Ku.default = void 0;
  var f9 = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: true,
    nameFrom: ["author", "contents"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [{
      concept: {
        name: "menuitem"
      },
      module: "ARIA"
    }],
    requireContextRole: ["group", "menu", "menubar"],
    requiredContextRole: ["group", "menu", "menubar"],
    requiredOwnedElements: [],
    requiredProps: {
      "aria-checked": null
    },
    superClass: [["roletype", "widget", "input", "checkbox", "menuitemcheckbox"], ["roletype", "widget", "command", "menuitem", "menuitemcheckbox"], ["roletype", "widget", "input", "radio"]]
  };
  Ku.default = f9;
});
var gA = y((Xu) => {
  Object.defineProperty(Xu, "__esModule", {
    value: true
  });
  Xu.default = void 0;
  var m9 = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: true,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-valuetext": null,
      "aria-valuemax": "100",
      "aria-valuemin": "0"
    },
    relatedConcepts: [{
      concept: {
        name: "meter"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {
      "aria-valuenow": null
    },
    superClass: [["roletype", "structure", "range"]]
  };
  Xu.default = m9;
});
var vA = y((Ju) => {
  Object.defineProperty(Ju, "__esModule", {
    value: true
  });
  Ju.default = void 0;
  var h9 = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [{
      concept: {
        name: "nav"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "landmark"]]
  };
  Ju.default = h9;
});
var EA = y((Qu) => {
  Object.defineProperty(Qu, "__esModule", {
    value: true
  });
  Qu.default = void 0;
  var y9 = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: [],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: []
  };
  Qu.default = y9;
});
var xA = y((Zu) => {
  Object.defineProperty(Zu, "__esModule", {
    value: true
  });
  Zu.default = void 0;
  var b9 = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  };
  Zu.default = b9;
});
var wA = y((ec) => {
  Object.defineProperty(ec, "__esModule", {
    value: true
  });
  ec.default = void 0;
  var g9 = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: true,
    nameFrom: ["author", "contents"],
    prohibitedProps: [],
    props: {
      "aria-checked": null,
      "aria-posinset": null,
      "aria-setsize": null,
      "aria-selected": "false"
    },
    relatedConcepts: [{
      concept: {
        name: "item"
      },
      module: "XForms"
    }, {
      concept: {
        name: "listitem"
      },
      module: "ARIA"
    }, {
      concept: {
        name: "option"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {
      "aria-selected": "false"
    },
    superClass: [["roletype", "widget", "input"]]
  };
  ec.default = g9;
});
var TA = y((tc) => {
  Object.defineProperty(tc, "__esModule", {
    value: true
  });
  tc.default = void 0;
  var v9 = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["prohibited"],
    prohibitedProps: ["aria-label", "aria-labelledby"],
    props: {},
    relatedConcepts: [{
      concept: {
        name: "p"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  };
  tc.default = v9;
});
var RA = y((rc) => {
  Object.defineProperty(rc, "__esModule", {
    value: true
  });
  rc.default = void 0;
  var E9 = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["prohibited"],
    prohibitedProps: ["aria-label", "aria-labelledby"],
    props: {},
    relatedConcepts: [{
      concept: {
        attributes: [{
          name: "alt",
          value: ""
        }],
        name: "img"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure"]]
  };
  rc.default = E9;
});
var SA = y((nc) => {
  Object.defineProperty(nc, "__esModule", {
    value: true
  });
  nc.default = void 0;
  var x9 = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: true,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-valuetext": null
    },
    relatedConcepts: [{
      concept: {
        name: "progress"
      },
      module: "HTML"
    }, {
      concept: {
        name: "status"
      },
      module: "ARIA"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "range"], ["roletype", "widget"]]
  };
  nc.default = x9;
});
var _A = y((oc) => {
  Object.defineProperty(oc, "__esModule", {
    value: true
  });
  oc.default = void 0;
  var w9 = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: true,
    nameFrom: ["author", "contents"],
    prohibitedProps: [],
    props: {
      "aria-checked": null,
      "aria-posinset": null,
      "aria-setsize": null
    },
    relatedConcepts: [{
      concept: {
        attributes: [{
          name: "type",
          value: "radio"
        }],
        name: "input"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {
      "aria-checked": null
    },
    superClass: [["roletype", "widget", "input"]]
  };
  oc.default = w9;
});
var CA = y((ic) => {
  Object.defineProperty(ic, "__esModule", {
    value: true
  });
  ic.default = void 0;
  var T9 = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-errormessage": null,
      "aria-invalid": null,
      "aria-readonly": null,
      "aria-required": null
    },
    relatedConcepts: [{
      concept: {
        name: "list"
      },
      module: "ARIA"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [["radio"]],
    requiredProps: {},
    superClass: [["roletype", "widget", "composite", "select"], ["roletype", "structure", "section", "group", "select"]]
  };
  ic.default = T9;
});
var PA = y((sc) => {
  Object.defineProperty(sc, "__esModule", {
    value: true
  });
  sc.default = void 0;
  var R9 = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [{
      concept: {
        attributes: [{
          constraints: ["set"],
          name: "aria-label"
        }],
        name: "section"
      },
      module: "HTML"
    }, {
      concept: {
        attributes: [{
          constraints: ["set"],
          name: "aria-labelledby"
        }],
        name: "section"
      },
      module: "HTML"
    }, {
      concept: {
        name: "Device Independence Glossart perceivable unit"
      }
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "landmark"]]
  };
  sc.default = R9;
});
var AA = y((ac) => {
  Object.defineProperty(ac, "__esModule", {
    value: true
  });
  ac.default = void 0;
  var S9 = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author", "contents"],
    prohibitedProps: [],
    props: {
      "aria-colindex": null,
      "aria-expanded": null,
      "aria-level": null,
      "aria-posinset": null,
      "aria-rowindex": null,
      "aria-selected": null,
      "aria-setsize": null
    },
    relatedConcepts: [{
      concept: {
        name: "tr"
      },
      module: "HTML"
    }],
    requireContextRole: ["grid", "rowgroup", "table", "treegrid"],
    requiredContextRole: ["grid", "rowgroup", "table", "treegrid"],
    requiredOwnedElements: [["cell"], ["columnheader"], ["gridcell"], ["rowheader"]],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "group"], ["roletype", "widget"]]
  };
  ac.default = S9;
});
var OA = y((lc) => {
  Object.defineProperty(lc, "__esModule", {
    value: true
  });
  lc.default = void 0;
  var _9 = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author", "contents"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [{
      concept: {
        name: "tbody"
      },
      module: "HTML"
    }, {
      concept: {
        name: "tfoot"
      },
      module: "HTML"
    }, {
      concept: {
        name: "thead"
      },
      module: "HTML"
    }],
    requireContextRole: ["grid", "table", "treegrid"],
    requiredContextRole: ["grid", "table", "treegrid"],
    requiredOwnedElements: [["row"]],
    requiredProps: {},
    superClass: [["roletype", "structure"]]
  };
  lc.default = _9;
});
var qA = y((uc) => {
  Object.defineProperty(uc, "__esModule", {
    value: true
  });
  uc.default = void 0;
  var C9 = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author", "contents"],
    prohibitedProps: [],
    props: {
      "aria-sort": null
    },
    relatedConcepts: [{
      concept: {
        attributes: [{
          name: "scope",
          value: "row"
        }],
        name: "th"
      },
      module: "HTML"
    }, {
      concept: {
        attributes: [{
          name: "scope",
          value: "rowgroup"
        }],
        name: "th"
      },
      module: "HTML"
    }],
    requireContextRole: ["row", "rowgroup"],
    requiredContextRole: ["row", "rowgroup"],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "cell"], ["roletype", "structure", "section", "cell", "gridcell"], ["roletype", "widget", "gridcell"], ["roletype", "structure", "sectionhead"]]
  };
  uc.default = C9;
});
var IA = y((cc) => {
  Object.defineProperty(cc, "__esModule", {
    value: true
  });
  cc.default = void 0;
  var P9 = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: true,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-valuetext": null,
      "aria-orientation": "vertical",
      "aria-valuemax": "100",
      "aria-valuemin": "0"
    },
    relatedConcepts: [],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {
      "aria-controls": null,
      "aria-valuenow": null
    },
    superClass: [["roletype", "structure", "range"], ["roletype", "widget"]]
  };
  cc.default = P9;
});
var MA = y((dc) => {
  Object.defineProperty(dc, "__esModule", {
    value: true
  });
  dc.default = void 0;
  var A9 = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "landmark"]]
  };
  dc.default = A9;
});
var NA = y((pc) => {
  Object.defineProperty(pc, "__esModule", {
    value: true
  });
  pc.default = void 0;
  var O9 = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [{
      concept: {
        attributes: [{
          constraints: ["undefined"],
          name: "list"
        }, {
          name: "type",
          value: "search"
        }],
        constraints: ["the list attribute is not set"],
        name: "input"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "widget", "input", "textbox"]]
  };
  pc.default = O9;
});
var jA = y((fc) => {
  Object.defineProperty(fc, "__esModule", {
    value: true
  });
  fc.default = void 0;
  var q9 = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: true,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-orientation": "horizontal",
      "aria-valuemax": "100",
      "aria-valuemin": "0",
      "aria-valuenow": null,
      "aria-valuetext": null
    },
    relatedConcepts: [{
      concept: {
        name: "hr"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure"]]
  };
  fc.default = q9;
});
var kA = y((mc) => {
  Object.defineProperty(mc, "__esModule", {
    value: true
  });
  mc.default = void 0;
  var I9 = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: true,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-errormessage": null,
      "aria-haspopup": null,
      "aria-invalid": null,
      "aria-readonly": null,
      "aria-valuetext": null,
      "aria-orientation": "horizontal",
      "aria-valuemax": "100",
      "aria-valuemin": "0"
    },
    relatedConcepts: [{
      concept: {
        attributes: [{
          name: "type",
          value: "range"
        }],
        name: "input"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {
      "aria-valuenow": null
    },
    superClass: [["roletype", "widget", "input"], ["roletype", "structure", "range"]]
  };
  mc.default = I9;
});
var LA = y((hc) => {
  Object.defineProperty(hc, "__esModule", {
    value: true
  });
  hc.default = void 0;
  var M9 = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-errormessage": null,
      "aria-invalid": null,
      "aria-readonly": null,
      "aria-required": null,
      "aria-valuetext": null,
      "aria-valuenow": "0"
    },
    relatedConcepts: [{
      concept: {
        attributes: [{
          name: "type",
          value: "number"
        }],
        name: "input"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "widget", "composite"], ["roletype", "widget", "input"], ["roletype", "structure", "range"]]
  };
  hc.default = M9;
});
var FA = y((yc) => {
  Object.defineProperty(yc, "__esModule", {
    value: true
  });
  yc.default = void 0;
  var N9 = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-atomic": "true",
      "aria-live": "polite"
    },
    relatedConcepts: [{
      concept: {
        name: "output"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  };
  yc.default = N9;
});
var DA = y((bc) => {
  Object.defineProperty(bc, "__esModule", {
    value: true
  });
  bc.default = void 0;
  var j9 = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["prohibited"],
    prohibitedProps: ["aria-label", "aria-labelledby"],
    props: {},
    relatedConcepts: [{
      concept: {
        name: "strong"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  };
  bc.default = j9;
});
var $A = y((gc) => {
  Object.defineProperty(gc, "__esModule", {
    value: true
  });
  gc.default = void 0;
  var k9 = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["prohibited"],
    prohibitedProps: ["aria-label", "aria-labelledby"],
    props: {},
    relatedConcepts: [{
      concept: {
        name: "sub"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  };
  gc.default = k9;
});
var BA = y((vc) => {
  Object.defineProperty(vc, "__esModule", {
    value: true
  });
  vc.default = void 0;
  var L9 = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["prohibited"],
    prohibitedProps: ["aria-label", "aria-labelledby"],
    props: {},
    relatedConcepts: [{
      concept: {
        name: "sup"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  };
  vc.default = L9;
});
var HA = y((Ec) => {
  Object.defineProperty(Ec, "__esModule", {
    value: true
  });
  Ec.default = void 0;
  var F9 = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: true,
    nameFrom: ["author", "contents"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [{
      concept: {
        name: "button"
      },
      module: "ARIA"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {
      "aria-checked": null
    },
    superClass: [["roletype", "widget", "input", "checkbox"]]
  };
  Ec.default = F9;
});
var UA = y((xc) => {
  Object.defineProperty(xc, "__esModule", {
    value: true
  });
  xc.default = void 0;
  var D9 = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: true,
    nameFrom: ["author", "contents"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-posinset": null,
      "aria-setsize": null,
      "aria-selected": "false"
    },
    relatedConcepts: [],
    requireContextRole: ["tablist"],
    requiredContextRole: ["tablist"],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "sectionhead"], ["roletype", "widget"]]
  };
  xc.default = D9;
});
var VA = y((wc) => {
  Object.defineProperty(wc, "__esModule", {
    value: true
  });
  wc.default = void 0;
  var $9 = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-colcount": null,
      "aria-rowcount": null
    },
    relatedConcepts: [{
      concept: {
        name: "table"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [["row"], ["row", "rowgroup"]],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  };
  wc.default = $9;
});
var zA = y((Tc) => {
  Object.defineProperty(Tc, "__esModule", {
    value: true
  });
  Tc.default = void 0;
  var B9 = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-level": null,
      "aria-multiselectable": null,
      "aria-orientation": "horizontal"
    },
    relatedConcepts: [{
      module: "DAISY",
      concept: {
        name: "guide"
      }
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [["tab"]],
    requiredProps: {},
    superClass: [["roletype", "widget", "composite"]]
  };
  Tc.default = B9;
});
var GA = y((Rc) => {
  Object.defineProperty(Rc, "__esModule", {
    value: true
  });
  Rc.default = void 0;
  var H9 = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  };
  Rc.default = H9;
});
var WA = y((Sc) => {
  Object.defineProperty(Sc, "__esModule", {
    value: true
  });
  Sc.default = void 0;
  var U9 = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [{
      concept: {
        name: "dfn"
      },
      module: "HTML"
    }, {
      concept: {
        name: "dt"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  };
  Sc.default = U9;
});
var YA = y((_c) => {
  Object.defineProperty(_c, "__esModule", {
    value: true
  });
  _c.default = void 0;
  var V9 = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-activedescendant": null,
      "aria-autocomplete": null,
      "aria-errormessage": null,
      "aria-haspopup": null,
      "aria-invalid": null,
      "aria-multiline": null,
      "aria-placeholder": null,
      "aria-readonly": null,
      "aria-required": null
    },
    relatedConcepts: [{
      concept: {
        attributes: [{
          constraints: ["undefined"],
          name: "type"
        }, {
          constraints: ["undefined"],
          name: "list"
        }],
        constraints: ["the list attribute is not set"],
        name: "input"
      },
      module: "HTML"
    }, {
      concept: {
        attributes: [{
          constraints: ["undefined"],
          name: "list"
        }, {
          name: "type",
          value: "email"
        }],
        constraints: ["the list attribute is not set"],
        name: "input"
      },
      module: "HTML"
    }, {
      concept: {
        attributes: [{
          constraints: ["undefined"],
          name: "list"
        }, {
          name: "type",
          value: "tel"
        }],
        constraints: ["the list attribute is not set"],
        name: "input"
      },
      module: "HTML"
    }, {
      concept: {
        attributes: [{
          constraints: ["undefined"],
          name: "list"
        }, {
          name: "type",
          value: "text"
        }],
        constraints: ["the list attribute is not set"],
        name: "input"
      },
      module: "HTML"
    }, {
      concept: {
        attributes: [{
          constraints: ["undefined"],
          name: "list"
        }, {
          name: "type",
          value: "url"
        }],
        constraints: ["the list attribute is not set"],
        name: "input"
      },
      module: "HTML"
    }, {
      concept: {
        name: "input"
      },
      module: "XForms"
    }, {
      concept: {
        name: "textarea"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "widget", "input"]]
  };
  _c.default = V9;
});
var KA = y((Cc) => {
  Object.defineProperty(Cc, "__esModule", {
    value: true
  });
  Cc.default = void 0;
  var z9 = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [{
      concept: {
        name: "time"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  };
  Cc.default = z9;
});
var XA = y((Pc) => {
  Object.defineProperty(Pc, "__esModule", {
    value: true
  });
  Pc.default = void 0;
  var G9 = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "status"]]
  };
  Pc.default = G9;
});
var JA = y((Ac) => {
  Object.defineProperty(Ac, "__esModule", {
    value: true
  });
  Ac.default = void 0;
  var W9 = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-orientation": "horizontal"
    },
    relatedConcepts: [{
      concept: {
        name: "menubar"
      },
      module: "ARIA"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "group"]]
  };
  Ac.default = W9;
});
var QA = y((Oc) => {
  Object.defineProperty(Oc, "__esModule", {
    value: true
  });
  Oc.default = void 0;
  var Y9 = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author", "contents"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  };
  Oc.default = Y9;
});
var ZA = y((qc) => {
  Object.defineProperty(qc, "__esModule", {
    value: true
  });
  qc.default = void 0;
  var K9 = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-errormessage": null,
      "aria-invalid": null,
      "aria-multiselectable": null,
      "aria-required": null,
      "aria-orientation": "vertical"
    },
    relatedConcepts: [],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [["treeitem", "group"], ["treeitem"]],
    requiredProps: {},
    superClass: [["roletype", "widget", "composite", "select"], ["roletype", "structure", "section", "group", "select"]]
  };
  qc.default = K9;
});
var eO = y((Ic) => {
  Object.defineProperty(Ic, "__esModule", {
    value: true
  });
  Ic.default = void 0;
  var X9 = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [["row"], ["row", "rowgroup"]],
    requiredProps: {},
    superClass: [["roletype", "widget", "composite", "grid"], ["roletype", "structure", "section", "table", "grid"], ["roletype", "widget", "composite", "select", "tree"], ["roletype", "structure", "section", "group", "select", "tree"]]
  };
  Ic.default = X9;
});
var tO = y((Mc) => {
  Object.defineProperty(Mc, "__esModule", {
    value: true
  });
  Mc.default = void 0;
  var J9 = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author", "contents"],
    prohibitedProps: [],
    props: {
      "aria-expanded": null,
      "aria-haspopup": null
    },
    relatedConcepts: [],
    requireContextRole: ["group", "tree"],
    requiredContextRole: ["group", "tree"],
    requiredOwnedElements: [],
    requiredProps: {
      "aria-selected": null
    },
    superClass: [["roletype", "structure", "section", "listitem"], ["roletype", "widget", "input", "option"]]
  };
  Mc.default = J9;
});
var rO = y((Nc) => {
  Object.defineProperty(Nc, "__esModule", {
    value: true
  });
  Nc.default = void 0;
  var Q9 = $8(C0()), Z9 = $8(P0()), e7 = $8(A0()), t7 = $8(O0()), r7 = $8(q0()), n7 = $8(I0()), o7 = $8(M0()), i7 = $8(N0()), s7 = $8(j0()), a7 = $8(k0()), l7 = $8(L0()), u7 = $8(F0()), c7 = $8(D0()), d7 = $8($0()), p7 = $8(B0()), f7 = $8(H0()), m7 = $8(U0()), h7 = $8(V0()), y7 = $8(z0()), b7 = $8(G0()), g7 = $8(W0()), v7 = $8(Y0()), E7 = $8(K0()), x7 = $8(X0()), w7 = $8(J0()), T7 = $8(Q0()), R7 = $8(Z0()), S7 = $8(eA()), _7 = $8(tA()), C7 = $8(rA()), P7 = $8(nA()), A7 = $8(oA()), O7 = $8(iA()), q7 = $8(sA()), I7 = $8(aA()), M7 = $8(lA()), N7 = $8(uA()), j7 = $8(cA()), k7 = $8(dA()), L7 = $8(pA()), F7 = $8(fA()), D7 = $8(mA()), $7 = $8(hA()), B7 = $8(yA()), H7 = $8(bA()), U7 = $8(gA()), V7 = $8(vA()), z7 = $8(EA()), G7 = $8(xA()), W7 = $8(wA()), Y7 = $8(TA()), K7 = $8(RA()), X7 = $8(SA()), J7 = $8(_A()), Q7 = $8(CA()), Z7 = $8(PA()), eK = $8(AA()), tK = $8(OA()), rK = $8(qA()), nK = $8(IA()), oK = $8(MA()), iK = $8(NA()), sK = $8(jA()), aK = $8(kA()), lK = $8(LA()), uK = $8(FA()), cK = $8(DA()), dK = $8($A()), pK = $8(BA()), fK = $8(HA()), mK = $8(UA()), hK = $8(VA()), yK = $8(zA()), bK = $8(GA()), gK = $8(WA()), vK = $8(YA()), EK = $8(KA()), xK = $8(XA()), wK = $8(JA()), TK = $8(QA()), RK = $8(ZA()), SK = $8(eO()), _K = $8(tO());
  function $8(e) {
    return e && e.__esModule ? e : { default: e };
  }
  o($8, "_interopRequireDefault");
  var CK = [
    ["alert", Q9.default],
    ["alertdialog", Z9.default],
    ["application", e7.default],
    ["article", t7.default],
    ["banner", r7.default],
    ["blockquote", n7.default],
    ["button", o7.default],
    ["caption", i7.default],
    ["cell", s7.default],
    ["checkbox", a7.default],
    ["code", l7.default],
    ["columnheader", u7.default],
    ["combobox", c7.default],
    ["complementary", d7.default],
    ["contentinfo", p7.default],
    ["definition", f7.default],
    ["deletion", m7.default],
    ["dialog", h7.default],
    ["directory", y7.default],
    ["document", b7.default],
    ["emphasis", g7.default],
    ["feed", v7.default],
    ["figure", E7.default],
    ["form", x7.default],
    ["generic", w7.default],
    ["grid", T7.default],
    ["gridcell", R7.default],
    [
      "group",
      S7.default
    ],
    ["heading", _7.default],
    ["img", C7.default],
    ["insertion", P7.default],
    ["link", A7.default],
    ["list", O7.default],
    ["listbox", q7.default],
    ["listitem", I7.default],
    ["log", M7.default],
    ["main", N7.default],
    ["mark", j7.default],
    ["marquee", k7.default],
    [
      "math",
      L7.default
    ],
    ["menu", F7.default],
    ["menubar", D7.default],
    ["menuitem", $7.default],
    ["menuitemcheckbox", B7.default],
    ["menuitemradio", H7.default],
    ["meter", U7.default],
    ["navigation", V7.default],
    ["none", z7.default],
    ["note", G7.default],
    ["option", W7.default],
    ["paragraph", Y7.default],
    ["presentation", K7.default],
    ["progressbar", X7.default],
    ["radio", J7.default],
    ["radiogroup", Q7.default],
    ["region", Z7.default],
    ["row", eK.default],
    ["rowgroup", tK.default],
    ["rowheader", rK.default],
    ["scrollbar", nK.default],
    ["search", oK.default],
    ["searchbox", iK.default],
    ["separator", sK.default],
    ["slider", aK.default],
    ["spinbutton", lK.default],
    ["status", uK.default],
    ["strong", cK.default],
    ["subscript", dK.default],
    ["superscript", pK.default],
    ["switch", fK.default],
    ["tab", mK.default],
    ["table", hK.default],
    ["tablist", yK.default],
    ["tabpanel", bK.default],
    ["term", gK.default],
    ["textbox", vK.default],
    ["time", EK.default],
    ["timer", xK.default],
    [
      "toolbar",
      wK.default
    ],
    ["tooltip", TK.default],
    ["tree", RK.default],
    ["treegrid", SK.default],
    ["treeitem", _K.default]
  ];
  Nc.default = CK;
});
var nO = y((jc) => {
  Object.defineProperty(jc, "__esModule", {
    value: true
  });
  jc.default = void 0;
  var PK = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "abstract [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  };
  jc.default = PK;
});
var oO = y((kc) => {
  Object.defineProperty(kc, "__esModule", {
    value: true
  });
  kc.default = void 0;
  var AK = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "acknowledgments [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "landmark"]]
  };
  kc.default = AK;
});
var iO = y((Lc) => {
  Object.defineProperty(Lc, "__esModule", {
    value: true
  });
  Lc.default = void 0;
  var OK = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "afterword [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "landmark"]]
  };
  Lc.default = OK;
});
var sO = y((Fc) => {
  Object.defineProperty(Fc, "__esModule", {
    value: true
  });
  Fc.default = void 0;
  var qK = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "appendix [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "landmark"]]
  };
  Fc.default = qK;
});
var aO = y((Dc) => {
  Object.defineProperty(Dc, "__esModule", {
    value: true
  });
  Dc.default = void 0;
  var IK = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author", "contents"],
    prohibitedProps: [],
    props: {
      "aria-errormessage": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "referrer [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "widget", "command", "link"]]
  };
  Dc.default = IK;
});
var lO = y(($c) => {
  Object.defineProperty($c, "__esModule", {
    value: true
  });
  $c.default = void 0;
  var MK = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "EPUB biblioentry [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: ["doc-bibliography"],
    requiredContextRole: ["doc-bibliography"],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "listitem"]]
  };
  $c.default = MK;
});
var uO = y((Bc) => {
  Object.defineProperty(Bc, "__esModule", {
    value: true
  });
  Bc.default = void 0;
  var NK = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "bibliography [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [["doc-biblioentry"]],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "landmark"]]
  };
  Bc.default = NK;
});
var cO = y((Hc) => {
  Object.defineProperty(Hc, "__esModule", {
    value: true
  });
  Hc.default = void 0;
  var jK = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author", "contents"],
    prohibitedProps: [],
    props: {
      "aria-errormessage": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "biblioref [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "widget", "command", "link"]]
  };
  Hc.default = jK;
});
var dO = y((Uc) => {
  Object.defineProperty(Uc, "__esModule", {
    value: true
  });
  Uc.default = void 0;
  var kK = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "chapter [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "landmark"]]
  };
  Uc.default = kK;
});
var pO = y((Vc) => {
  Object.defineProperty(Vc, "__esModule", {
    value: true
  });
  Vc.default = void 0;
  var LK = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "colophon [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  };
  Vc.default = LK;
});
var fO = y((zc) => {
  Object.defineProperty(zc, "__esModule", {
    value: true
  });
  zc.default = void 0;
  var FK = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "conclusion [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "landmark"]]
  };
  zc.default = FK;
});
var mO = y((Gc) => {
  Object.defineProperty(Gc, "__esModule", {
    value: true
  });
  Gc.default = void 0;
  var DK = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "cover [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "img"]]
  };
  Gc.default = DK;
});
var hO = y((Wc) => {
  Object.defineProperty(Wc, "__esModule", {
    value: true
  });
  Wc.default = void 0;
  var $K = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "credit [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  };
  Wc.default = $K;
});
var yO = y((Yc) => {
  Object.defineProperty(Yc, "__esModule", {
    value: true
  });
  Yc.default = void 0;
  var BK = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "credits [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "landmark"]]
  };
  Yc.default = BK;
});
var bO = y((Kc) => {
  Object.defineProperty(Kc, "__esModule", {
    value: true
  });
  Kc.default = void 0;
  var HK = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "dedication [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  };
  Kc.default = HK;
});
var gO = y((Xc) => {
  Object.defineProperty(Xc, "__esModule", {
    value: true
  });
  Xc.default = void 0;
  var UK = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "rearnote [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: ["doc-endnotes"],
    requiredContextRole: ["doc-endnotes"],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "listitem"]]
  };
  Xc.default = UK;
});
var vO = y((Jc) => {
  Object.defineProperty(Jc, "__esModule", {
    value: true
  });
  Jc.default = void 0;
  var VK = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "rearnotes [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [["doc-endnote"]],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "landmark"]]
  };
  Jc.default = VK;
});
var EO = y((Qc) => {
  Object.defineProperty(Qc, "__esModule", {
    value: true
  });
  Qc.default = void 0;
  var zK = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "epigraph [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  };
  Qc.default = zK;
});
var xO = y((Zc) => {
  Object.defineProperty(Zc, "__esModule", {
    value: true
  });
  Zc.default = void 0;
  var GK = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "epilogue [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "landmark"]]
  };
  Zc.default = GK;
});
var wO = y((ed) => {
  Object.defineProperty(ed, "__esModule", {
    value: true
  });
  ed.default = void 0;
  var WK = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "errata [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "landmark"]]
  };
  ed.default = WK;
});
var TO = y((td) => {
  Object.defineProperty(td, "__esModule", {
    value: true
  });
  td.default = void 0;
  var YK = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  };
  td.default = YK;
});
var RO = y((rd) => {
  Object.defineProperty(rd, "__esModule", {
    value: true
  });
  rd.default = void 0;
  var KK = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "footnote [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  };
  rd.default = KK;
});
var SO = y((nd) => {
  Object.defineProperty(nd, "__esModule", {
    value: true
  });
  nd.default = void 0;
  var XK = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "foreword [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "landmark"]]
  };
  nd.default = XK;
});
var _O = y((od) => {
  Object.defineProperty(od, "__esModule", {
    value: true
  });
  od.default = void 0;
  var JK = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "glossary [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [["definition"], ["term"]],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "landmark"]]
  };
  od.default = JK;
});
var CO = y((id) => {
  Object.defineProperty(id, "__esModule", {
    value: true
  });
  id.default = void 0;
  var QK = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author", "contents"],
    prohibitedProps: [],
    props: {
      "aria-errormessage": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "glossref [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "widget", "command", "link"]]
  };
  id.default = QK;
});
var PO = y((sd) => {
  Object.defineProperty(sd, "__esModule", {
    value: true
  });
  sd.default = void 0;
  var ZK = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "index [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "landmark", "navigation"]]
  };
  sd.default = ZK;
});
var AO = y((ad) => {
  Object.defineProperty(ad, "__esModule", {
    value: true
  });
  ad.default = void 0;
  var eX = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "introduction [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "landmark"]]
  };
  ad.default = eX;
});
var OO = y((ld) => {
  Object.defineProperty(ld, "__esModule", {
    value: true
  });
  ld.default = void 0;
  var tX = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author", "contents"],
    prohibitedProps: [],
    props: {
      "aria-errormessage": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "noteref [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "widget", "command", "link"]]
  };
  ld.default = tX;
});
var qO = y((ud) => {
  Object.defineProperty(ud, "__esModule", {
    value: true
  });
  ud.default = void 0;
  var rX = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "notice [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "note"]]
  };
  ud.default = rX;
});
var IO = y((cd) => {
  Object.defineProperty(cd, "__esModule", {
    value: true
  });
  cd.default = void 0;
  var nX = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: true,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "pagebreak [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "separator"]]
  };
  cd.default = nX;
});
var MO = y((dd) => {
  Object.defineProperty(dd, "__esModule", {
    value: true
  });
  dd.default = void 0;
  var oX = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["prohibited"],
    prohibitedProps: [],
    props: {
      "aria-braillelabel": null,
      "aria-brailleroledescription": null,
      "aria-description": null,
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  };
  dd.default = oX;
});
var NO$1 = y((pd) => {
  Object.defineProperty(pd, "__esModule", {
    value: true
  });
  pd.default = void 0;
  var iX = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["prohibited"],
    prohibitedProps: [],
    props: {
      "aria-braillelabel": null,
      "aria-brailleroledescription": null,
      "aria-description": null,
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  };
  pd.default = iX;
});
var jO = y((fd) => {
  Object.defineProperty(fd, "__esModule", {
    value: true
  });
  fd.default = void 0;
  var sX = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "page-list [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "landmark", "navigation"]]
  };
  fd.default = sX;
});
var kO = y((md) => {
  Object.defineProperty(md, "__esModule", {
    value: true
  });
  md.default = void 0;
  var aX = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "part [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "landmark"]]
  };
  md.default = aX;
});
var LO = y((hd) => {
  Object.defineProperty(hd, "__esModule", {
    value: true
  });
  hd.default = void 0;
  var lX = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "preface [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "landmark"]]
  };
  hd.default = lX;
});
var FO = y((yd) => {
  Object.defineProperty(yd, "__esModule", {
    value: true
  });
  yd.default = void 0;
  var uX = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "prologue [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "landmark"]]
  };
  yd.default = uX;
});
var DO = y((bd) => {
  Object.defineProperty(bd, "__esModule", {
    value: true
  });
  bd.default = void 0;
  var cX = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [{
      concept: {
        name: "pullquote [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["none"]]
  };
  bd.default = cX;
});
var $O = y((gd) => {
  Object.defineProperty(gd, "__esModule", {
    value: true
  });
  gd.default = void 0;
  var dX = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "qna [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  };
  gd.default = dX;
});
var BO = y((vd) => {
  Object.defineProperty(vd, "__esModule", {
    value: true
  });
  vd.default = void 0;
  var pX = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "subtitle [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "sectionhead"]]
  };
  vd.default = pX;
});
var HO = y((Ed) => {
  Object.defineProperty(Ed, "__esModule", {
    value: true
  });
  Ed.default = void 0;
  var fX = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "help [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "note"]]
  };
  Ed.default = fX;
});
var UO = y((xd) => {
  Object.defineProperty(xd, "__esModule", {
    value: true
  });
  xd.default = void 0;
  var mX = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "toc [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "landmark", "navigation"]]
  };
  xd.default = mX;
});
var VO = y((wd) => {
  Object.defineProperty(wd, "__esModule", {
    value: true
  });
  wd.default = void 0;
  var hX = re(nO()), yX = re(oO()), bX = re(iO()), gX = re(sO()), vX = re(aO()), EX = re(lO()), xX = re(uO()), wX = re(cO()), TX = re(dO()), RX = re(pO()), SX = re(fO()), _X = re(mO()), CX = re(hO()), PX = re(yO()), AX = re(bO()), OX = re(gO()), qX = re(vO()), IX = re(EO()), MX = re(
    xO()
  ), NX = re(wO()), jX = re(TO()), kX = re(RO()), LX = re(SO()), FX = re(_O()), DX = re(CO()), $X = re(PO()), BX = re(AO()), HX = re(OO()), UX = re(qO()), VX = re(IO()), zX = re(MO()), GX = re(NO$1()), WX = re(jO()), YX = re(kO()), KX = re(LO()), XX = re(FO()), JX = re(DO()), QX = re(
    $O()
  ), ZX = re(BO()), eJ = re(HO()), tJ = re(UO());
  function re(e) {
    return e && e.__esModule ? e : { default: e };
  }
  o(re, "_interopRequireDefault");
  var rJ = [
    ["doc-abstract", hX.default],
    ["doc-acknowledgments", yX.default],
    ["doc-afterword", bX.default],
    ["doc-appendix", gX.default],
    [
      "doc-backlink",
      vX.default
    ],
    ["doc-biblioentry", EX.default],
    ["doc-bibliography", xX.default],
    ["doc-biblioref", wX.default],
    ["doc-chapter", TX.default],
    ["doc-colophon", RX.default],
    ["doc-conclusion", SX.default],
    ["doc-cover", _X.default],
    ["doc-credit", CX.default],
    ["doc-credits", PX.default],
    ["doc-dedication", AX.default],
    ["doc-endnote", OX.default],
    ["doc-endnotes", qX.default],
    ["doc-epigraph", IX.default],
    ["doc-epilogue", MX.default],
    ["doc-errata", NX.default],
    ["doc-example", jX.default],
    ["doc-footnote", kX.default],
    ["doc-foreword", LX.default],
    ["doc-glossary", FX.default],
    ["doc-glossref", DX.default],
    ["doc-index", $X.default],
    ["doc-introduction", BX.default],
    ["doc-noteref", HX.default],
    ["doc-notice", UX.default],
    ["doc-pagebreak", VX.default],
    ["doc-pagefooter", zX.default],
    ["doc-pageheader", GX.default],
    ["doc-pagelist", WX.default],
    ["doc-part", YX.default],
    ["doc-preface", KX.default],
    ["doc-prologue", XX.default],
    ["doc-pullquote", JX.default],
    ["doc-qna", QX.default],
    ["doc-subtitle", ZX.default],
    ["doc-tip", eJ.default],
    ["doc-toc", tJ.default]
  ];
  wd.default = rJ;
});
var zO = y((Td) => {
  Object.defineProperty(Td, "__esModule", {
    value: true
  });
  Td.default = void 0;
  var nJ = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      module: "GRAPHICS",
      concept: {
        name: "graphics-object"
      }
    }, {
      module: "ARIA",
      concept: {
        name: "img"
      }
    }, {
      module: "ARIA",
      concept: {
        name: "article"
      }
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "document"]]
  };
  Td.default = nJ;
});
var GO = y((Rd) => {
  Object.defineProperty(Rd, "__esModule", {
    value: true
  });
  Rd.default = void 0;
  var oJ = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author", "contents"],
    prohibitedProps: [],
    props: {
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      module: "GRAPHICS",
      concept: {
        name: "graphics-document"
      }
    }, {
      module: "ARIA",
      concept: {
        name: "group"
      }
    }, {
      module: "ARIA",
      concept: {
        name: "img"
      }
    }, {
      module: "GRAPHICS",
      concept: {
        name: "graphics-symbol"
      }
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "group"]]
  };
  Rd.default = oJ;
});
var WO = y((Sd) => {
  Object.defineProperty(Sd, "__esModule", {
    value: true
  });
  Sd.default = void 0;
  var iJ = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: true,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "img"]]
  };
  Sd.default = iJ;
});
var YO = y((_d) => {
  Object.defineProperty(_d, "__esModule", {
    value: true
  });
  _d.default = void 0;
  var sJ = bE(zO()), aJ = bE(GO()), lJ = bE(WO());
  function bE(e) {
    return e && e.__esModule ? e : { default: e };
  }
  o(bE, "_interopRequireDefault");
  var uJ = [["graphics-document", sJ.default], ["graphics-object", aJ.default], ["graphics-symbol", lJ.default]];
  _d.default = uJ;
});
var Pd = y((Cd) => {
  Object.defineProperty(Cd, "__esModule", {
    value: true
  });
  Cd.default = void 0;
  var cJ = ls(_0()), dJ = ls(rO()), pJ = ls(VO()), fJ = ls(YO()), mJ = ls(Oo());
  function ls(e) {
    return e && e.__esModule ? e : { default: e };
  }
  o(ls, "_interopRequireDefault");
  function gE(e, t) {
    var r7 = typeof Symbol < "u" && e[Symbol.iterator] || e["@@iterator"];
    if (!r7) {
      if (Array.isArray(e) || (r7 = XO(e)) || t && e && typeof e.length == "number") {
        r7 && (e = r7);
        var n = 0, i = /* @__PURE__ */ o(function() {
        }, "F");
        return { s: i, n: /* @__PURE__ */ o(function() {
          return n >= e.length ? { done: true } : { done: false, value: e[n++] };
        }, "n"), e: /* @__PURE__ */ o(function(c) {
          throw c;
        }, "e"), f: i };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var s, a = true, l = false;
    return { s: /* @__PURE__ */ o(function() {
      r7 = r7.call(e);
    }, "s"), n: /* @__PURE__ */ o(function() {
      var c = r7.next();
      return a = c.done, c;
    }, "n"), e: /* @__PURE__ */ o(function(c) {
      l = true, s = c;
    }, "e"), f: /* @__PURE__ */ o(function() {
      try {
        a || r7.return == null || r7.return();
      } finally {
        if (l) throw s;
      }
    }, "f") };
  }
  o(gE, "_createForOfIteratorHelper");
  function as(e, t) {
    return bJ(e) || yJ(e, t) || XO(e, t) || hJ();
  }
  o(as, "_slicedToArray");
  function hJ() {
    throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
  }
  o(hJ, "_nonIterableRest");
  function XO(e, t) {
    if (e) {
      if (typeof e == "string") return KO(e, t);
      var r7 = {}.toString.call(e).slice(8, -1);
      return r7 === "Object" && e.constructor && (r7 = e.constructor.name), r7 === "Map" || r7 === "Set" ? Array.from(e) : r7 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r7) ? KO(e, t) : void 0;
    }
  }
  o(XO, "_unsupportedIterableToArray");
  function KO(e, t) {
    (t == null || t > e.length) && (t = e.length);
    for (var r7 = 0, n = Array(t); r7 < t; r7++) n[r7] = e[r7];
    return n;
  }
  o(KO, "_arrayLikeToArray");
  function yJ(e, t) {
    var r7 = e == null ? null : typeof Symbol < "u" && e[Symbol.iterator] || e["@@iterator"];
    if (r7 != null) {
      var n, i, s, a, l = [], u = true, c = false;
      try {
        if (s = (r7 = r7.call(e)).next, t === 0) {
          if (Object(r7) !== r7) return;
          u = false;
        } else for (; !(u = (n = s.call(r7)).done) && (l.push(n.value), l.length !== t); u = true) ;
      } catch (d) {
        c = true, i = d;
      } finally {
        try {
          if (!u && r7.return != null && (a = r7.return(), Object(a) !== a)) return;
        } finally {
          if (c) throw i;
        }
      }
      return l;
    }
  }
  o(yJ, "_iterableToArrayLimit");
  function bJ(e) {
    if (Array.isArray(e)) return e;
  }
  o(bJ, "_arrayWithHoles");
  var Dr2 = [].concat(cJ.default, dJ.default, pJ.default, fJ.default);
  Dr2.forEach(function(e) {
    var t = as(e, 2), r7 = t[1], n = gE(r7.superClass), i;
    try {
      for (n.s(); !(i = n.n()).done; ) {
        var s = i.value, a = gE(s), l;
        try {
          var u = /* @__PURE__ */ o(function() {
            var d = l.value, p5 = Dr2.filter(function(v5) {
              var g = as(v5, 1), w5 = g[0];
              return w5 === d;
            })[0];
            if (p5)
              for (var f = p5[1], m = 0, h5 = Object.keys(f.props); m < h5.length; m++) {
                var b = h5[m];
                Object.prototype.hasOwnProperty.call(r7.props, b) || (r7.props[b] = f.props[b]);
              }
          }, "_loop");
          for (a.s(); !(l = a.n()).done; )
            u();
        } catch (c) {
          a.e(c);
        } finally {
          a.f();
        }
      }
    } catch (c) {
      n.e(c);
    } finally {
      n.f();
    }
  });
  var vE = {
    entries: /* @__PURE__ */ o(function() {
      return Dr2;
    }, "entries"),
    forEach: /* @__PURE__ */ o(function(t) {
      var r7 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null, n = gE(Dr2), i;
      try {
        for (n.s(); !(i = n.n()).done; ) {
          var s = as(i.value, 2), a = s[0], l = s[1];
          t.call(r7, l, a, Dr2);
        }
      } catch (u) {
        n.e(u);
      } finally {
        n.f();
      }
    }, "forEach"),
    get: /* @__PURE__ */ o(function(t) {
      var r7 = Dr2.filter(function(n) {
        return n[0] === t;
      })[0];
      return r7 && r7[1];
    }, "get"),
    has: /* @__PURE__ */ o(function(t) {
      return !!vE.get(t);
    }, "has"),
    keys: /* @__PURE__ */ o(function() {
      return Dr2.map(function(t) {
        var r7 = as(t, 1), n = r7[0];
        return n;
      });
    }, "keys"),
    values: /* @__PURE__ */ o(function() {
      return Dr2.map(function(t) {
        var r7 = as(t, 2), n = r7[1];
        return n;
      });
    }, "values")
  };
  Cd.default = (0, mJ.default)(vE, vE.entries());
});
var nq = y((Md) => {
  Object.defineProperty(Md, "__esModule", {
    value: true
  });
  Md.default = void 0;
  var gJ = tq(Oo()), eq = tq(Pd());
  function tq(e) {
    return e && e.__esModule ? e : { default: e };
  }
  o(tq, "_interopRequireDefault");
  function EE(e, t) {
    return wJ(e) || xJ(e, t) || EJ(e, t) || vJ();
  }
  o(EE, "_slicedToArray");
  function vJ() {
    throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
  }
  o(vJ, "_nonIterableRest");
  function EJ(e, t) {
    if (e) {
      if (typeof e == "string") return JO(e, t);
      var r7 = {}.toString.call(e).slice(8, -1);
      return r7 === "Object" && e.constructor && (r7 = e.constructor.name), r7 === "Map" || r7 === "Set" ? Array.from(e) : r7 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r7) ? JO(e, t) : void 0;
    }
  }
  o(EJ, "_unsupportedIterableToArray");
  function JO(e, t) {
    (t == null || t > e.length) && (t = e.length);
    for (var r7 = 0, n = Array(t); r7 < t; r7++) n[r7] = e[r7];
    return n;
  }
  o(JO, "_arrayLikeToArray");
  function xJ(e, t) {
    var r7 = e == null ? null : typeof Symbol < "u" && e[Symbol.iterator] || e["@@iterator"];
    if (r7 != null) {
      var n, i, s, a, l = [], u = true, c = false;
      try {
        if (s = (r7 = r7.call(e)).next, t === 0) {
          if (Object(r7) !== r7) return;
          u = false;
        } else for (; !(u = (n = s.call(r7)).done) && (l.push(n.value), l.length !== t); u = true) ;
      } catch (d) {
        c = true, i = d;
      } finally {
        try {
          if (!u && r7.return != null && (a = r7.return(), Object(a) !== a)) return;
        } finally {
          if (c) throw i;
        }
      }
      return l;
    }
  }
  o(xJ, "_iterableToArrayLimit");
  function wJ(e) {
    if (Array.isArray(e)) return e;
  }
  o(wJ, "_arrayWithHoles");
  var $r = [], QO = eq.default.keys();
  for (Ad = 0; Ad < QO.length; Ad++)
    if (Od = QO[Ad], qd = eq.default.get(Od), qd)
      for (xE = [].concat(qd.baseConcepts, qd.relatedConcepts), ZO = /* @__PURE__ */ o(function() {
        var t = xE[Id];
        if (t.module === "HTML") {
          var r7 = t.concept;
          if (r7) {
            var n = $r.filter(function(l) {
              return TJ(l[0], r7);
            })[0], i;
            n ? i = n[1] : i = [];
            for (var s = true, a = 0; a < i.length; a++)
              if (i[a] === Od) {
                s = false;
                break;
              }
            s && i.push(Od), n || $r.push([r7, i]);
          }
        }
      }, "_loop"), Id = 0; Id < xE.length; Id++)
        ZO();
  var Od, qd, xE, ZO, Id, Ad, wE = {
    entries: /* @__PURE__ */ o(function() {
      return $r;
    }, "entries"),
    forEach: /* @__PURE__ */ o(function(t) {
      for (var r7 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null, n = 0, i = $r; n < i.length; n++) {
        var s = EE(i[n], 2), a = s[0], l = s[1];
        t.call(r7, l, a, $r);
      }
    }, "forEach"),
    get: /* @__PURE__ */ o(function(t) {
      var r7 = $r.filter(function(n) {
        return t.name === n[0].name && rq(t.attributes, n[0].attributes);
      })[0];
      return r7 && r7[1];
    }, "get"),
    has: /* @__PURE__ */ o(function(t) {
      return !!wE.get(t);
    }, "has"),
    keys: /* @__PURE__ */ o(function() {
      return $r.map(function(t) {
        var r7 = EE(t, 1), n = r7[0];
        return n;
      });
    }, "keys"),
    values: /* @__PURE__ */ o(function() {
      return $r.map(function(t) {
        var r7 = EE(t, 2), n = r7[1];
        return n;
      });
    }, "values")
  };
  function TJ(e, t) {
    return e.name === t.name && RJ(e.constraints, t.constraints) && rq(e.attributes, t.attributes);
  }
  o(TJ, "ariaRoleRelationConceptEquals");
  function RJ(e, t) {
    if (e === void 0 && t !== void 0 || e !== void 0 && t === void 0)
      return false;
    if (e !== void 0 && t !== void 0) {
      if (e.length !== t.length)
        return false;
      for (var r7 = 0; r7 < e.length; r7++)
        if (e[r7] !== t[r7])
          return false;
    }
    return true;
  }
  o(RJ, "ariaRoleRelationConstraintsEquals");
  function rq(e, t) {
    if (e === void 0 && t !== void 0 || e !== void 0 && t === void 0)
      return false;
    if (e !== void 0 && t !== void 0) {
      if (e.length !== t.length)
        return false;
      for (var r7 = 0; r7 < e.length; r7++) {
        if (e[r7].name !== t[r7].name || e[r7].value !== t[r7].value || e[r7].constraints === void 0 && t[r7].constraints !== void 0 || e[r7].constraints !== void 0 && t[r7].constraints === void 0)
          return false;
        if (e[r7].constraints !== void 0 && t[r7].constraints !== void 0) {
          if (e[r7].constraints.length !== t[r7].constraints.length)
            return false;
          for (var n = 0; n < e[r7].constraints.length; n++)
            if (e[r7].constraints[n] !== t[r7].constraints[n])
              return false;
        }
      }
    }
    return true;
  }
  o(rq, "ariaRoleRelationConceptAttributeEquals");
  Md.default = (0, gJ.default)(wE, wE.entries());
});
var lq = y((Fd) => {
  Object.defineProperty(Fd, "__esModule", {
    value: true
  });
  Fd.default = void 0;
  var SJ = aq(Oo()), sq = aq(Pd());
  function aq(e) {
    return e && e.__esModule ? e : { default: e };
  }
  o(aq, "_interopRequireDefault");
  function TE(e, t) {
    return AJ(e) || PJ(e, t) || CJ(e, t) || _J();
  }
  o(TE, "_slicedToArray");
  function _J() {
    throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
  }
  o(_J, "_nonIterableRest");
  function CJ(e, t) {
    if (e) {
      if (typeof e == "string") return oq(e, t);
      var r7 = {}.toString.call(e).slice(8, -1);
      return r7 === "Object" && e.constructor && (r7 = e.constructor.name), r7 === "Map" || r7 === "Set" ? Array.from(e) : r7 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r7) ? oq(e, t) : void 0;
    }
  }
  o(CJ, "_unsupportedIterableToArray");
  function oq(e, t) {
    (t == null || t > e.length) && (t = e.length);
    for (var r7 = 0, n = Array(t); r7 < t; r7++) n[r7] = e[r7];
    return n;
  }
  o(oq, "_arrayLikeToArray");
  function PJ(e, t) {
    var r7 = e == null ? null : typeof Symbol < "u" && e[Symbol.iterator] || e["@@iterator"];
    if (r7 != null) {
      var n, i, s, a, l = [], u = true, c = false;
      try {
        if (s = (r7 = r7.call(e)).next, t === 0) {
          if (Object(r7) !== r7) return;
          u = false;
        } else for (; !(u = (n = s.call(r7)).done) && (l.push(n.value), l.length !== t); u = true) ;
      } catch (d) {
        c = true, i = d;
      } finally {
        try {
          if (!u && r7.return != null && (a = r7.return(), Object(a) !== a)) return;
        } finally {
          if (c) throw i;
        }
      }
      return l;
    }
  }
  o(PJ, "_iterableToArrayLimit");
  function AJ(e) {
    if (Array.isArray(e)) return e;
  }
  o(AJ, "_arrayWithHoles");
  var _n = [], iq = sq.default.keys();
  for (Nd = 0; Nd < iq.length; Nd++)
    if (RE = iq[Nd], jd = sq.default.get(RE), kd = [], jd) {
      for (SE = [].concat(jd.baseConcepts, jd.relatedConcepts), Ld = 0; Ld < SE.length; Ld++)
        _E = SE[Ld], _E.module === "HTML" && (CE = _E.concept, CE != null && kd.push(CE));
      kd.length > 0 && _n.push([RE, kd]);
    }
  var RE, jd, kd, SE, _E, CE, Ld, Nd, PE = {
    entries: /* @__PURE__ */ o(function() {
      return _n;
    }, "entries"),
    forEach: /* @__PURE__ */ o(function(t) {
      for (var r7 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null, n = 0, i = _n; n < i.length; n++) {
        var s = TE(i[n], 2), a = s[0], l = s[1];
        t.call(r7, l, a, _n);
      }
    }, "forEach"),
    get: /* @__PURE__ */ o(function(t) {
      var r7 = _n.filter(function(n) {
        return n[0] === t;
      })[0];
      return r7 && r7[1];
    }, "get"),
    has: /* @__PURE__ */ o(function(t) {
      return !!PE.get(t);
    }, "has"),
    keys: /* @__PURE__ */ o(function() {
      return _n.map(function(t) {
        var r7 = TE(t, 1), n = r7[0];
        return n;
      });
    }, "keys"),
    values: /* @__PURE__ */ o(function() {
      return _n.map(function(t) {
        var r7 = TE(t, 2), n = r7[1];
        return n;
      });
    }, "values")
  };
  Fd.default = (0, SJ.default)(PE, PE.entries());
});
var AE = y((Ot2) => {
  Object.defineProperty(Ot2, "__esModule", {
    value: true
  });
  Ot2.roles = Ot2.roleElements = Ot2.elementRoles = Ot2.dom = Ot2.aria = void 0;
  var OJ = us(d0()), qJ = us(f0()), IJ = us(Pd()), MJ = us(nq()), NJ = us(lq());
  function us(e) {
    return e && e.__esModule ? e : { default: e };
  }
  o(us, "_interopRequireDefault");
  Ot2.aria = OJ.default;
  Ot2.dom = qJ.default;
  Ot2.roles = IJ.default;
  Ot2.elementRoles = MJ.default;
  Ot2.roleElements = NJ.default;
});
var cq = y((o1e, uq) => {
  uq.exports = {
    aliceblue: [240, 248, 255],
    antiquewhite: [250, 235, 215],
    aqua: [0, 255, 255],
    aquamarine: [127, 255, 212],
    azure: [240, 255, 255],
    beige: [245, 245, 220],
    bisque: [255, 228, 196],
    black: [0, 0, 0],
    blanchedalmond: [255, 235, 205],
    blue: [0, 0, 255],
    blueviolet: [138, 43, 226],
    brown: [165, 42, 42],
    burlywood: [222, 184, 135],
    cadetblue: [95, 158, 160],
    chartreuse: [127, 255, 0],
    chocolate: [210, 105, 30],
    coral: [255, 127, 80],
    cornflowerblue: [100, 149, 237],
    cornsilk: [255, 248, 220],
    crimson: [220, 20, 60],
    cyan: [0, 255, 255],
    darkblue: [0, 0, 139],
    darkcyan: [0, 139, 139],
    darkgoldenrod: [184, 134, 11],
    darkgray: [169, 169, 169],
    darkgreen: [0, 100, 0],
    darkgrey: [169, 169, 169],
    darkkhaki: [189, 183, 107],
    darkmagenta: [139, 0, 139],
    darkolivegreen: [85, 107, 47],
    darkorange: [255, 140, 0],
    darkorchid: [153, 50, 204],
    darkred: [139, 0, 0],
    darksalmon: [233, 150, 122],
    darkseagreen: [143, 188, 143],
    darkslateblue: [72, 61, 139],
    darkslategray: [47, 79, 79],
    darkslategrey: [47, 79, 79],
    darkturquoise: [0, 206, 209],
    darkviolet: [148, 0, 211],
    deeppink: [255, 20, 147],
    deepskyblue: [0, 191, 255],
    dimgray: [105, 105, 105],
    dimgrey: [105, 105, 105],
    dodgerblue: [30, 144, 255],
    firebrick: [178, 34, 34],
    floralwhite: [255, 250, 240],
    forestgreen: [34, 139, 34],
    fuchsia: [255, 0, 255],
    gainsboro: [220, 220, 220],
    ghostwhite: [248, 248, 255],
    gold: [255, 215, 0],
    goldenrod: [218, 165, 32],
    gray: [128, 128, 128],
    green: [0, 128, 0],
    greenyellow: [173, 255, 47],
    grey: [128, 128, 128],
    honeydew: [240, 255, 240],
    hotpink: [255, 105, 180],
    indianred: [205, 92, 92],
    indigo: [75, 0, 130],
    ivory: [255, 255, 240],
    khaki: [240, 230, 140],
    lavender: [230, 230, 250],
    lavenderblush: [255, 240, 245],
    lawngreen: [124, 252, 0],
    lemonchiffon: [255, 250, 205],
    lightblue: [173, 216, 230],
    lightcoral: [240, 128, 128],
    lightcyan: [224, 255, 255],
    lightgoldenrodyellow: [250, 250, 210],
    lightgray: [211, 211, 211],
    lightgreen: [144, 238, 144],
    lightgrey: [211, 211, 211],
    lightpink: [255, 182, 193],
    lightsalmon: [255, 160, 122],
    lightseagreen: [32, 178, 170],
    lightskyblue: [135, 206, 250],
    lightslategray: [119, 136, 153],
    lightslategrey: [119, 136, 153],
    lightsteelblue: [176, 196, 222],
    lightyellow: [255, 255, 224],
    lime: [0, 255, 0],
    limegreen: [50, 205, 50],
    linen: [250, 240, 230],
    magenta: [255, 0, 255],
    maroon: [128, 0, 0],
    mediumaquamarine: [102, 205, 170],
    mediumblue: [0, 0, 205],
    mediumorchid: [186, 85, 211],
    mediumpurple: [147, 112, 219],
    mediumseagreen: [60, 179, 113],
    mediumslateblue: [123, 104, 238],
    mediumspringgreen: [0, 250, 154],
    mediumturquoise: [72, 209, 204],
    mediumvioletred: [199, 21, 133],
    midnightblue: [25, 25, 112],
    mintcream: [245, 255, 250],
    mistyrose: [255, 228, 225],
    moccasin: [255, 228, 181],
    navajowhite: [255, 222, 173],
    navy: [0, 0, 128],
    oldlace: [253, 245, 230],
    olive: [128, 128, 0],
    olivedrab: [107, 142, 35],
    orange: [255, 165, 0],
    orangered: [255, 69, 0],
    orchid: [218, 112, 214],
    palegoldenrod: [238, 232, 170],
    palegreen: [152, 251, 152],
    paleturquoise: [175, 238, 238],
    palevioletred: [219, 112, 147],
    papayawhip: [255, 239, 213],
    peachpuff: [255, 218, 185],
    peru: [205, 133, 63],
    pink: [255, 192, 203],
    plum: [221, 160, 221],
    powderblue: [176, 224, 230],
    purple: [128, 0, 128],
    rebeccapurple: [102, 51, 153],
    red: [255, 0, 0],
    rosybrown: [188, 143, 143],
    royalblue: [65, 105, 225],
    saddlebrown: [139, 69, 19],
    salmon: [250, 128, 114],
    sandybrown: [244, 164, 96],
    seagreen: [46, 139, 87],
    seashell: [255, 245, 238],
    sienna: [160, 82, 45],
    silver: [192, 192, 192],
    skyblue: [135, 206, 235],
    slateblue: [106, 90, 205],
    slategray: [112, 128, 144],
    slategrey: [112, 128, 144],
    snow: [255, 250, 250],
    springgreen: [0, 255, 127],
    steelblue: [70, 130, 180],
    tan: [210, 180, 140],
    teal: [0, 128, 128],
    thistle: [216, 191, 216],
    tomato: [255, 99, 71],
    turquoise: [64, 224, 208],
    violet: [238, 130, 238],
    wheat: [245, 222, 179],
    white: [255, 255, 255],
    whitesmoke: [245, 245, 245],
    yellow: [255, 255, 0],
    yellowgreen: [154, 205, 50]
  };
});
var OE = y((i1e, pq) => {
  var cs = cq(), dq = {};
  for (let e of Object.keys(cs))
    dq[cs[e]] = e;
  var z = {
    rgb: { channels: 3, labels: "rgb" },
    hsl: { channels: 3, labels: "hsl" },
    hsv: { channels: 3, labels: "hsv" },
    hwb: { channels: 3, labels: "hwb" },
    cmyk: { channels: 4, labels: "cmyk" },
    xyz: { channels: 3, labels: "xyz" },
    lab: { channels: 3, labels: "lab" },
    lch: { channels: 3, labels: "lch" },
    hex: { channels: 1, labels: ["hex"] },
    keyword: { channels: 1, labels: ["keyword"] },
    ansi16: { channels: 1, labels: ["ansi16"] },
    ansi256: { channels: 1, labels: ["ansi256"] },
    hcg: { channels: 3, labels: ["h", "c", "g"] },
    apple: { channels: 3, labels: ["r16", "g16", "b16"] },
    gray: { channels: 1, labels: ["gray"] }
  };
  pq.exports = z;
  for (let e of Object.keys(z)) {
    if (!("channels" in z[e]))
      throw new Error("missing channels property: " + e);
    if (!("labels" in z[e]))
      throw new Error("missing channel labels property: " + e);
    if (z[e].labels.length !== z[e].channels)
      throw new Error("channel and label counts mismatch: " + e);
    let { channels: t, labels: r7 } = z[e];
    delete z[e].channels, delete z[e].labels, Object.defineProperty(z[e], "channels", { value: t }), Object.defineProperty(z[e], "labels", {
      value: r7
    });
  }
  z.rgb.hsl = function(e) {
    let t = e[0] / 255, r7 = e[1] / 255, n = e[2] / 255, i = Math.min(t, r7, n), s = Math.max(t, r7, n), a = s - i, l, u;
    s === i ? l = 0 : t === s ? l = (r7 - n) / a : r7 === s ? l = 2 + (n - t) / a : n === s && (l = 4 + (t - r7) / a), l = Math.min(l * 60, 360), l < 0 && (l += 360);
    let c = (i + s) / 2;
    return s === i ? u = 0 : c <= 0.5 ? u = a / (s + i) : u = a / (2 - s - i), [l, u * 100, c * 100];
  };
  z.rgb.hsv = function(e) {
    let t, r7, n, i, s, a = e[0] / 255, l = e[1] / 255, u = e[2] / 255, c = Math.max(a, l, u), d = c - Math.min(a, l, u), p5 = /* @__PURE__ */ o(
      function(f) {
        return (c - f) / 6 / d + 1 / 2;
      },
      "diffc"
    );
    return d === 0 ? (i = 0, s = 0) : (s = d / c, t = p5(a), r7 = p5(l), n = p5(u), a === c ? i = n - r7 : l === c ? i = 1 / 3 + t - n : u === c && (i = 2 / 3 + r7 - t), i < 0 ? i += 1 : i > 1 && (i -= 1)), [
      i * 360,
      s * 100,
      c * 100
    ];
  };
  z.rgb.hwb = function(e) {
    let t = e[0], r7 = e[1], n = e[2], i = z.rgb.hsl(e)[0], s = 1 / 255 * Math.min(t, Math.min(r7, n));
    return n = 1 - 1 / 255 * Math.max(t, Math.max(r7, n)), [i, s * 100, n * 100];
  };
  z.rgb.cmyk = function(e) {
    let t = e[0] / 255, r7 = e[1] / 255, n = e[2] / 255, i = Math.min(1 - t, 1 - r7, 1 - n), s = (1 - t - i) / (1 - i) || 0, a = (1 - r7 - i) / (1 - i) || 0, l = (1 - n - i) / (1 - i) || 0;
    return [s * 100, a * 100, l * 100, i * 100];
  };
  function jJ(e, t) {
    return (e[0] - t[0]) ** 2 + (e[1] - t[1]) ** 2 + (e[2] - t[2]) ** 2;
  }
  o(jJ, "comparativeDistance");
  z.rgb.keyword = function(e) {
    let t = dq[e];
    if (t)
      return t;
    let r7 = 1 / 0, n;
    for (let i of Object.keys(cs)) {
      let s = cs[i], a = jJ(e, s);
      a < r7 && (r7 = a, n = i);
    }
    return n;
  };
  z.keyword.rgb = function(e) {
    return cs[e];
  };
  z.rgb.xyz = function(e) {
    let t = e[0] / 255, r7 = e[1] / 255, n = e[2] / 255;
    t = t > 0.04045 ? ((t + 0.055) / 1.055) ** 2.4 : t / 12.92, r7 = r7 > 0.04045 ? ((r7 + 0.055) / 1.055) ** 2.4 : r7 / 12.92, n = n > 0.04045 ? ((n + 0.055) / 1.055) ** 2.4 : n / 12.92;
    let i = t * 0.4124 + r7 * 0.3576 + n * 0.1805, s = t * 0.2126 + r7 * 0.7152 + n * 0.0722, a = t * 0.0193 + r7 * 0.1192 + n * 0.9505;
    return [i * 100, s * 100, a * 100];
  };
  z.rgb.lab = function(e) {
    let t = z.rgb.xyz(e), r7 = t[0], n = t[1], i = t[2];
    r7 /= 95.047, n /= 100, i /= 108.883, r7 = r7 > 8856e-6 ? r7 ** (1 / 3) : 7.787 * r7 + 16 / 116, n = n > 8856e-6 ? n ** (1 / 3) : 7.787 * n + 16 / 116, i = i > 8856e-6 ? i ** (1 / 3) : 7.787 * i + 16 / 116;
    let s = 116 * n - 16, a = 500 * (r7 - n), l = 200 * (n - i);
    return [s, a, l];
  };
  z.hsl.rgb = function(e) {
    let t = e[0] / 360, r7 = e[1] / 100, n = e[2] / 100, i, s, a;
    if (r7 === 0)
      return a = n * 255, [a, a, a];
    n < 0.5 ? i = n * (1 + r7) : i = n + r7 - n * r7;
    let l = 2 * n - i, u = [0, 0, 0];
    for (let c = 0; c < 3; c++)
      s = t + 1 / 3 * -(c - 1), s < 0 && s++, s > 1 && s--, 6 * s < 1 ? a = l + (i - l) * 6 * s : 2 * s < 1 ? a = i : 3 * s < 2 ? a = l + (i - l) * (2 / 3 - s) * 6 : a = l, u[c] = a * 255;
    return u;
  };
  z.hsl.hsv = function(e) {
    let t = e[0], r7 = e[1] / 100, n = e[2] / 100, i = r7, s = Math.max(n, 0.01);
    n *= 2, r7 *= n <= 1 ? n : 2 - n, i *= s <= 1 ? s : 2 - s;
    let a = (n + r7) / 2, l = n === 0 ? 2 * i / (s + i) : 2 * r7 / (n + r7);
    return [t, l * 100, a * 100];
  };
  z.hsv.rgb = function(e) {
    let t = e[0] / 60, r7 = e[1] / 100, n = e[2] / 100, i = Math.floor(t) % 6, s = t - Math.floor(t), a = 255 * n * (1 - r7), l = 255 * n * (1 - r7 * s), u = 255 * n * (1 - r7 * (1 - s));
    switch (n *= 255, i) {
      case 0:
        return [n, u, a];
      case 1:
        return [l, n, a];
      case 2:
        return [a, n, u];
      case 3:
        return [a, l, n];
      case 4:
        return [u, a, n];
      case 5:
        return [n, a, l];
    }
  };
  z.hsv.hsl = function(e) {
    let t = e[0], r7 = e[1] / 100, n = e[2] / 100, i = Math.max(n, 0.01), s, a;
    a = (2 - r7) * n;
    let l = (2 - r7) * i;
    return s = r7 * i, s /= l <= 1 ? l : 2 - l, s = s || 0, a /= 2, [t, s * 100, a * 100];
  };
  z.hwb.rgb = function(e) {
    let t = e[0] / 360, r7 = e[1] / 100, n = e[2] / 100, i = r7 + n, s;
    i > 1 && (r7 /= i, n /= i);
    let a = Math.floor(6 * t), l = 1 - n;
    s = 6 * t - a, (a & 1) !== 0 && (s = 1 - s);
    let u = r7 + s * (l - r7), c, d, p5;
    switch (a) {
      default:
      case 6:
      case 0:
        c = l, d = u, p5 = r7;
        break;
      case 1:
        c = u, d = l, p5 = r7;
        break;
      case 2:
        c = r7, d = l, p5 = u;
        break;
      case 3:
        c = r7, d = u, p5 = l;
        break;
      case 4:
        c = u, d = r7, p5 = l;
        break;
      case 5:
        c = l, d = r7, p5 = u;
        break;
    }
    return [c * 255, d * 255, p5 * 255];
  };
  z.cmyk.rgb = function(e) {
    let t = e[0] / 100, r7 = e[1] / 100, n = e[2] / 100, i = e[3] / 100, s = 1 - Math.min(1, t * (1 - i) + i), a = 1 - Math.min(1, r7 * (1 - i) + i), l = 1 - Math.min(1, n * (1 - i) + i);
    return [s * 255, a * 255, l * 255];
  };
  z.xyz.rgb = function(e) {
    let t = e[0] / 100, r7 = e[1] / 100, n = e[2] / 100, i, s, a;
    return i = t * 3.2406 + r7 * -1.5372 + n * -0.4986, s = t * -0.9689 + r7 * 1.8758 + n * 0.0415, a = t * 0.0557 + r7 * -0.204 + n * 1.057, i = i > 31308e-7 ? 1.055 * i ** (1 / 2.4) - 0.055 : i * 12.92, s = s > 31308e-7 ? 1.055 * s ** (1 / 2.4) - 0.055 : s * 12.92, a = a > 31308e-7 ? 1.055 * a ** (1 / 2.4) - 0.055 : a * 12.92, i = Math.min(Math.max(0, i), 1), s = Math.min(Math.max(0, s), 1), a = Math.min(
      Math.max(0, a),
      1
    ), [i * 255, s * 255, a * 255];
  };
  z.xyz.lab = function(e) {
    let t = e[0], r7 = e[1], n = e[2];
    t /= 95.047, r7 /= 100, n /= 108.883, t = t > 8856e-6 ? t ** (1 / 3) : 7.787 * t + 16 / 116, r7 = r7 > 8856e-6 ? r7 ** (1 / 3) : 7.787 * r7 + 16 / 116, n = n > 8856e-6 ? n ** (1 / 3) : 7.787 * n + 16 / 116;
    let i = 116 * r7 - 16, s = 500 * (t - r7), a = 200 * (r7 - n);
    return [i, s, a];
  };
  z.lab.xyz = function(e) {
    let t = e[0], r7 = e[1], n = e[2], i, s, a;
    s = (t + 16) / 116, i = r7 / 500 + s, a = s - n / 200;
    let l = s ** 3, u = i ** 3, c = a ** 3;
    return s = l > 8856e-6 ? l : (s - 16 / 116) / 7.787, i = u > 8856e-6 ? u : (i - 16 / 116) / 7.787, a = c > 8856e-6 ? c : (a - 16 / 116) / 7.787, i *= 95.047, s *= 100, a *= 108.883, [i, s, a];
  };
  z.lab.lch = function(e) {
    let t = e[0], r7 = e[1], n = e[2], i;
    i = Math.atan2(n, r7) * 360 / 2 / Math.PI, i < 0 && (i += 360);
    let a = Math.sqrt(r7 * r7 + n * n);
    return [t, a, i];
  };
  z.lch.lab = function(e) {
    let t = e[0], r7 = e[1], i = e[2] / 360 * 2 * Math.PI, s = r7 * Math.cos(i), a = r7 * Math.sin(i);
    return [t, s, a];
  };
  z.rgb.ansi16 = function(e, t = null) {
    let [r7, n, i] = e, s = t === null ? z.rgb.hsv(e)[2] : t;
    if (s = Math.round(s / 50), s === 0)
      return 30;
    let a = 30 + (Math.round(i / 255) << 2 | Math.round(n / 255) << 1 | Math.round(r7 / 255));
    return s === 2 && (a += 60), a;
  };
  z.hsv.ansi16 = function(e) {
    return z.rgb.ansi16(z.hsv.rgb(e), e[2]);
  };
  z.rgb.ansi256 = function(e) {
    let t = e[0], r7 = e[1], n = e[2];
    return t === r7 && r7 === n ? t < 8 ? 16 : t > 248 ? 231 : Math.round((t - 8) / 247 * 24) + 232 : 16 + 36 * Math.round(t / 255 * 5) + 6 * Math.round(r7 / 255 * 5) + Math.round(n / 255 * 5);
  };
  z.ansi16.rgb = function(e) {
    let t = e % 10;
    if (t === 0 || t === 7)
      return e > 50 && (t += 3.5), t = t / 10.5 * 255, [t, t, t];
    let r7 = (~~(e > 50) + 1) * 0.5, n = (t & 1) * r7 * 255, i = (t >> 1 & 1) * r7 * 255, s = (t >> 2 & 1) * r7 * 255;
    return [n, i, s];
  };
  z.ansi256.rgb = function(e) {
    if (e >= 232) {
      let s = (e - 232) * 10 + 8;
      return [s, s, s];
    }
    e -= 16;
    let t, r7 = Math.floor(e / 36) / 5 * 255, n = Math.floor((t = e % 36) / 6) / 5 * 255, i = t % 6 / 5 * 255;
    return [r7, n, i];
  };
  z.rgb.hex = function(e) {
    let r7 = (((Math.round(e[0]) & 255) << 16) + ((Math.round(e[1]) & 255) << 8) + (Math.round(e[2]) & 255)).toString(16).toUpperCase();
    return "000000".substring(r7.length) + r7;
  };
  z.hex.rgb = function(e) {
    let t = e.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);
    if (!t)
      return [0, 0, 0];
    let r7 = t[0];
    t[0].length === 3 && (r7 = r7.split("").map((l) => l + l).join(""));
    let n = parseInt(r7, 16), i = n >> 16 & 255, s = n >> 8 & 255, a = n & 255;
    return [i, s, a];
  };
  z.rgb.hcg = function(e) {
    let t = e[0] / 255, r7 = e[1] / 255, n = e[2] / 255, i = Math.max(Math.max(t, r7), n), s = Math.min(Math.min(t, r7), n), a = i - s, l, u;
    return a < 1 ? l = s / (1 - a) : l = 0, a <= 0 ? u = 0 : i === t ? u = (r7 - n) / a % 6 : i === r7 ? u = 2 + (n - t) / a : u = 4 + (t - r7) / a, u /= 6, u %= 1, [u * 360, a * 100, l * 100];
  };
  z.hsl.hcg = function(e) {
    let t = e[1] / 100, r7 = e[2] / 100, n = r7 < 0.5 ? 2 * t * r7 : 2 * t * (1 - r7), i = 0;
    return n < 1 && (i = (r7 - 0.5 * n) / (1 - n)), [e[0], n * 100, i * 100];
  };
  z.hsv.hcg = function(e) {
    let t = e[1] / 100, r7 = e[2] / 100, n = t * r7, i = 0;
    return n < 1 && (i = (r7 - n) / (1 - n)), [e[0], n * 100, i * 100];
  };
  z.hcg.rgb = function(e) {
    let t = e[0] / 360, r7 = e[1] / 100, n = e[2] / 100;
    if (r7 === 0)
      return [n * 255, n * 255, n * 255];
    let i = [0, 0, 0], s = t % 1 * 6, a = s % 1, l = 1 - a, u = 0;
    switch (Math.floor(s)) {
      case 0:
        i[0] = 1, i[1] = a, i[2] = 0;
        break;
      case 1:
        i[0] = l, i[1] = 1, i[2] = 0;
        break;
      case 2:
        i[0] = 0, i[1] = 1, i[2] = a;
        break;
      case 3:
        i[0] = 0, i[1] = l, i[2] = 1;
        break;
      case 4:
        i[0] = a, i[1] = 0, i[2] = 1;
        break;
      default:
        i[0] = 1, i[1] = 0, i[2] = l;
    }
    return u = (1 - r7) * n, [
      (r7 * i[0] + u) * 255,
      (r7 * i[1] + u) * 255,
      (r7 * i[2] + u) * 255
    ];
  };
  z.hcg.hsv = function(e) {
    let t = e[1] / 100, r7 = e[2] / 100, n = t + r7 * (1 - t), i = 0;
    return n > 0 && (i = t / n), [e[0], i * 100, n * 100];
  };
  z.hcg.hsl = function(e) {
    let t = e[1] / 100, n = e[2] / 100 * (1 - t) + 0.5 * t, i = 0;
    return n > 0 && n < 0.5 ? i = t / (2 * n) : n >= 0.5 && n < 1 && (i = t / (2 * (1 - n))), [e[0], i * 100, n * 100];
  };
  z.hcg.hwb = function(e) {
    let t = e[1] / 100, r7 = e[2] / 100, n = t + r7 * (1 - t);
    return [e[0], (n - t) * 100, (1 - n) * 100];
  };
  z.hwb.hcg = function(e) {
    let t = e[1] / 100, n = 1 - e[2] / 100, i = n - t, s = 0;
    return i < 1 && (s = (n - i) / (1 - i)), [e[0], i * 100, s * 100];
  };
  z.apple.rgb = function(e) {
    return [e[0] / 65535 * 255, e[1] / 65535 * 255, e[2] / 65535 * 255];
  };
  z.rgb.apple = function(e) {
    return [e[0] / 255 * 65535, e[1] / 255 * 65535, e[2] / 255 * 65535];
  };
  z.gray.rgb = function(e) {
    return [e[0] / 100 * 255, e[0] / 100 * 255, e[0] / 100 * 255];
  };
  z.gray.hsl = function(e) {
    return [0, 0, e[0]];
  };
  z.gray.hsv = z.gray.hsl;
  z.gray.hwb = function(e) {
    return [0, 100, e[0]];
  };
  z.gray.cmyk = function(e) {
    return [0, 0, 0, e[0]];
  };
  z.gray.lab = function(e) {
    return [e[0], 0, 0];
  };
  z.gray.hex = function(e) {
    let t = Math.round(e[0] / 100 * 255) & 255, n = ((t << 16) + (t << 8) + t).toString(16).toUpperCase();
    return "000000".substring(n.length) + n;
  };
  z.rgb.gray = function(e) {
    return [(e[0] + e[1] + e[2]) / 3 / 255 * 100];
  };
});
var mq = y((a1e, fq) => {
  var Dd = OE();
  function kJ() {
    let e = {}, t = Object.keys(Dd);
    for (let r7 = t.length, n = 0; n < r7; n++)
      e[t[n]] = {
        // http://jsperf.com/1-vs-infinity
        // micro-opt, but this is simple.
        distance: -1,
        parent: null
      };
    return e;
  }
  o(kJ, "buildGraph");
  function LJ(e) {
    let t = kJ(), r7 = [e];
    for (t[e].distance = 0; r7.length; ) {
      let n = r7.pop(), i = Object.keys(Dd[n]);
      for (let s = i.length, a = 0; a < s; a++) {
        let l = i[a], u = t[l];
        u.distance === -1 && (u.distance = t[n].distance + 1, u.parent = n, r7.unshift(l));
      }
    }
    return t;
  }
  o(LJ, "deriveBFS");
  function FJ(e, t) {
    return function(r7) {
      return t(e(r7));
    };
  }
  o(FJ, "link");
  function DJ(e, t) {
    let r7 = [t[e].parent, e], n = Dd[t[e].parent][e], i = t[e].parent;
    for (; t[i].parent; )
      r7.unshift(t[i].parent), n = FJ(Dd[t[i].parent][i], n), i = t[i].parent;
    return n.conversion = r7, n;
  }
  o(DJ, "wrapConversion");
  fq.exports = function(e) {
    let t = LJ(e), r7 = {}, n = Object.keys(t);
    for (let i = n.length, s = 0; s < i; s++) {
      let a = n[s];
      t[a].parent !== null && (r7[a] = DJ(a, t));
    }
    return r7;
  };
});
var yq = y((u1e, hq) => {
  var qE = OE(), $J = mq(), Mo = {}, BJ = Object.keys(qE);
  function HJ(e) {
    let t = /* @__PURE__ */ o(function(...r7) {
      let n = r7[0];
      return n == null ? n : (n.length > 1 && (r7 = n), e(r7));
    }, "wrappedFn");
    return "conversion" in e && (t.conversion = e.conversion), t;
  }
  o(HJ, "wrapRaw");
  function UJ(e) {
    let t = /* @__PURE__ */ o(function(...r7) {
      let n = r7[0];
      if (n == null)
        return n;
      n.length > 1 && (r7 = n);
      let i = e(r7);
      if (typeof i == "object")
        for (let s = i.length, a = 0; a < s; a++)
          i[a] = Math.round(i[a]);
      return i;
    }, "wrappedFn");
    return "conversion" in e && (t.conversion = e.conversion), t;
  }
  o(UJ, "wrapRounded");
  BJ.forEach((e) => {
    Mo[e] = {}, Object.defineProperty(Mo[e], "channels", { value: qE[e].channels }), Object.defineProperty(Mo[e], "labels", { value: qE[e].labels });
    let t = $J(e);
    Object.keys(t).forEach((n) => {
      let i = t[n];
      Mo[e][n] = UJ(i), Mo[e][n].raw = HJ(i);
    });
  });
  hq.exports = Mo;
});
var wq = y((d1e, xq) => {
  var bq = /* @__PURE__ */ o((e, t) => (...r7) => `\x1B[${e(...r7) + t}m`, "wrapAnsi16"), gq = /* @__PURE__ */ o((e, t) => (...r7) => {
    let n = e(...r7);
    return `\x1B[${38 + t};5;${n}m`;
  }, "wrapAnsi256"), vq = /* @__PURE__ */ o((e, t) => (...r7) => {
    let n = e(...r7);
    return `\x1B[${38 + t};2;${n[0]};${n[1]};${n[2]}m`;
  }, "wrapAnsi16m"), $d = /* @__PURE__ */ o((e) => e, "ansi2ansi"), Eq = /* @__PURE__ */ o((e, t, r7) => [e, t, r7], "rgb2rgb"), No = /* @__PURE__ */ o(
    (e, t, r7) => {
      Object.defineProperty(e, t, {
        get: /* @__PURE__ */ o(() => {
          let n = r7();
          return Object.defineProperty(e, t, {
            value: n,
            enumerable: true,
            configurable: true
          }), n;
        }, "get"),
        enumerable: true,
        configurable: true
      });
    },
    "setLazyProperty"
  ), IE, jo = /* @__PURE__ */ o((e, t, r7, n) => {
    IE === void 0 && (IE = yq());
    let i = n ? 10 : 0, s = {};
    for (let [a, l] of Object.entries(IE)) {
      let u = a === "ansi16" ? "ansi" : a;
      a === t ? s[u] = e(r7, i) : typeof l == "object" && (s[u] = e(l[t], i));
    }
    return s;
  }, "makeDynamicStyles");
  function VJ() {
    let e = /* @__PURE__ */ new Map(), t = {
      modifier: {
        reset: [0, 0],
        // 21 isn't widely supported and 22 does the same thing
        bold: [1, 22],
        dim: [2, 22],
        italic: [3, 23],
        underline: [4, 24],
        inverse: [7, 27],
        hidden: [8, 28],
        strikethrough: [9, 29]
      },
      color: {
        black: [30, 39],
        red: [31, 39],
        green: [32, 39],
        yellow: [33, 39],
        blue: [34, 39],
        magenta: [35, 39],
        cyan: [36, 39],
        white: [37, 39],
        // Bright color
        blackBright: [90, 39],
        redBright: [91, 39],
        greenBright: [92, 39],
        yellowBright: [93, 39],
        blueBright: [94, 39],
        magentaBright: [95, 39],
        cyanBright: [96, 39],
        whiteBright: [97, 39]
      },
      bgColor: {
        bgBlack: [40, 49],
        bgRed: [41, 49],
        bgGreen: [42, 49],
        bgYellow: [43, 49],
        bgBlue: [44, 49],
        bgMagenta: [45, 49],
        bgCyan: [46, 49],
        bgWhite: [47, 49],
        // Bright color
        bgBlackBright: [100, 49],
        bgRedBright: [101, 49],
        bgGreenBright: [102, 49],
        bgYellowBright: [103, 49],
        bgBlueBright: [104, 49],
        bgMagentaBright: [105, 49],
        bgCyanBright: [106, 49],
        bgWhiteBright: [107, 49]
      }
    };
    t.color.gray = t.color.blackBright, t.bgColor.bgGray = t.bgColor.bgBlackBright, t.color.grey = t.color.blackBright, t.bgColor.bgGrey = t.bgColor.bgBlackBright;
    for (let [r7, n] of Object.entries(t)) {
      for (let [i, s] of Object.entries(n))
        t[i] = {
          open: `\x1B[${s[0]}m`,
          close: `\x1B[${s[1]}m`
        }, n[i] = t[i], e.set(s[0], s[1]);
      Object.defineProperty(t, r7, {
        value: n,
        enumerable: false
      });
    }
    return Object.defineProperty(t, "codes", {
      value: e,
      enumerable: false
    }), t.color.close = "\x1B[39m", t.bgColor.close = "\x1B[49m", No(t.color, "ansi", () => jo(bq, "ansi16", $d, false)), No(
      t.color,
      "ansi256",
      () => jo(gq, "ansi256", $d, false)
    ), No(t.color, "ansi16m", () => jo(vq, "rgb", Eq, false)), No(t.bgColor, "ansi", () => jo(bq, "ansi16", $d, true)), No(t.bgColor, "ansi256", () => jo(gq, "ansi256", $d, true)), No(t.bgColor, "ansi16m", () => jo(vq, "rgb", Eq, true)), t;
  }
  o(VJ, "assembleStyles");
  Object.defineProperty(xq, "exports", {
    enumerable: true,
    get: VJ
  });
});
var Rq = y((f1e, Tq) => {
  Tq.exports = {
    stdout: false,
    stderr: false
  };
});
var _q = y((m1e, Sq) => {
  var zJ = /* @__PURE__ */ o((e, t, r7) => {
    let n = e.indexOf(t);
    if (n === -1)
      return e;
    let i = t.length, s = 0, a = "";
    do
      a += e.substr(s, n - s) + t + r7, s = n + i, n = e.indexOf(t, s);
    while (n !== -1);
    return a += e.substr(s), a;
  }, "stringReplaceAll"), GJ = /* @__PURE__ */ o((e, t, r7, n) => {
    let i = 0, s = "";
    do {
      let a = e[n - 1] === "\r";
      s += e.substr(i, (a ? n - 1 : n) - i) + t + (a ? `\r
` : `
`) + r7, i = n + 1, n = e.indexOf(`
`, i);
    } while (n !== -1);
    return s += e.substr(i), s;
  }, "stringEncaseCRLFWithFirstIndex");
  Sq.exports = {
    stringReplaceAll: zJ,
    stringEncaseCRLFWithFirstIndex: GJ
  };
});
var qq = y((y1e, Oq) => {
  var WJ = /(?:\\(u(?:[a-f\d]{4}|\{[a-f\d]{1,6}\})|x[a-f\d]{2}|.))|(?:\{(~)?(\w+(?:\([^)]*\))?(?:\.\w+(?:\([^)]*\))?)*)(?:[ \t]|(?=\r?\n)))|(\})|((?:.|[\r\n\f])+?)/gi, Cq = /(?:^|\.)(\w+)(?:\(([^)]*)\))?/g, YJ = /^(['"])((?:\\.|(?!\1)[^\\])*)\1$/, KJ = /\\(u(?:[a-f\d]{4}|\{[a-f\d]{1,6}\})|x[a-f\d]{2}|.)|([^\\])/gi, XJ = /* @__PURE__ */ new Map([
    ["n", `
`],
    ["r", "\r"],
    ["t", "	"],
    ["b", "\b"],
    ["f", "\f"],
    ["v", "\v"],
    ["0", "\0"],
    ["\\", "\\"],
    ["e", "\x1B"],
    ["a", "\x07"]
  ]);
  function Aq(e) {
    let t = e[0] === "u", r7 = e[1] === "{";
    return t && !r7 && e.length === 5 || e[0] === "x" && e.length === 3 ? String.fromCharCode(parseInt(e.slice(1), 16)) : t && r7 ? String.fromCodePoint(
      parseInt(e.slice(2, -1), 16)
    ) : XJ.get(e) || e;
  }
  o(Aq, "unescape");
  function JJ(e, t) {
    let r7 = [], n = t.trim().split(/\s*,\s*/g), i;
    for (let s of n) {
      let a = Number(s);
      if (!Number.isNaN(a))
        r7.push(a);
      else if (i = s.match(YJ))
        r7.push(i[2].replace(KJ, (l, u, c) => u ? Aq(u) : c));
      else
        throw new Error(`Invalid Chalk template style argument: ${s} (in style '${e}')`);
    }
    return r7;
  }
  o(JJ, "parseArguments");
  function QJ(e) {
    Cq.lastIndex = 0;
    let t = [], r7;
    for (; (r7 = Cq.exec(e)) !== null; ) {
      let n = r7[1];
      if (r7[2]) {
        let i = JJ(n, r7[2]);
        t.push([n].concat(i));
      } else
        t.push([n]);
    }
    return t;
  }
  o(QJ, "parseStyle");
  function Pq(e, t) {
    let r7 = {};
    for (let i of t)
      for (let s of i.styles)
        r7[s[0]] = i.inverse ? null : s.slice(1);
    let n = e;
    for (let [i, s] of Object.entries(r7))
      if (Array.isArray(s)) {
        if (!(i in n))
          throw new Error(`Unknown Chalk style: ${i}`);
        n = s.length > 0 ? n[i](...s) : n[i];
      }
    return n;
  }
  o(Pq, "buildStyle");
  Oq.exports = (e, t) => {
    let r7 = [], n = [], i = [];
    if (t.replace(WJ, (s, a, l, u, c, d) => {
      if (a)
        i.push(Aq(a));
      else if (u) {
        let p5 = i.join("");
        i = [], n.push(r7.length === 0 ? p5 : Pq(e, r7)(p5)), r7.push({ inverse: l, styles: QJ(u) });
      } else if (c) {
        if (r7.length === 0)
          throw new Error("Found extraneous } in Chalk template literal");
        n.push(Pq(e, r7)(i.join(""))), i = [], r7.pop();
      } else
        i.push(d);
    }), n.push(i.join("")), r7.length > 0) {
      let s = `Chalk template literal is missing ${r7.length} closing bracket${r7.length === 1 ? "" : "s"} (\`}\`)`;
      throw new Error(s);
    }
    return n.join("");
  };
});
var DE = y((g1e, jq) => {
  var ds = wq(), { stdout: NE, stderr: jE } = Rq(), {
    stringReplaceAll: ZJ,
    stringEncaseCRLFWithFirstIndex: eQ
  } = _q(), Iq = [
    "ansi",
    "ansi",
    "ansi256",
    "ansi16m"
  ], ko = /* @__PURE__ */ Object.create(null), tQ = /* @__PURE__ */ o((e, t = {}) => {
    if (t.level > 3 || t.level < 0)
      throw new Error("The `level` option should be an integer from 0 to 3");
    let r7 = NE ? NE.level : 0;
    e.level = t.level === void 0 ? r7 : t.level;
  }, "applyOptions"), FE = class FE {
    constructor(t) {
      return Mq(t);
    }
  };
  o(FE, "ChalkClass");
  var kE = FE, Mq = /* @__PURE__ */ o((e) => {
    let t = {};
    return tQ(t, e), t.template = (...r7) => oQ(t.template, ...r7), Object.setPrototypeOf(t, Bd.prototype), Object.setPrototypeOf(t.template, t), t.template.constructor = () => {
      throw new Error("`chalk.constructor()` is deprecated. Use `new chalk.Instance()` instead.");
    }, t.template.Instance = kE, t.template;
  }, "chalkFactory");
  function Bd(e) {
    return Mq(e);
  }
  o(Bd, "Chalk");
  for (let [e, t] of Object.entries(ds))
    ko[e] = {
      get() {
        let r7 = Hd(this, LE(t.open, t.close, this._styler), this._isEmpty);
        return Object.defineProperty(this, e, { value: r7 }), r7;
      }
    };
  ko.visible = {
    get() {
      let e = Hd(this, this._styler, true);
      return Object.defineProperty(this, "visible", { value: e }), e;
    }
  };
  var Nq = ["rgb", "hex", "keyword", "hsl", "hsv", "hwb", "ansi", "ansi256"];
  for (let e of Nq)
    ko[e] = {
      get() {
        let { level: t } = this;
        return function(...r7) {
          let n = LE(ds.color[Iq[t]][e](...r7), ds.color.close, this._styler);
          return Hd(this, n, this._isEmpty);
        };
      }
    };
  for (let e of Nq) {
    let t = "bg" + e[0].toUpperCase() + e.slice(1);
    ko[t] = {
      get() {
        let { level: r7 } = this;
        return function(...n) {
          let i = LE(ds.bgColor[Iq[r7]][e](...n), ds.bgColor.close, this._styler);
          return Hd(this, i, this._isEmpty);
        };
      }
    };
  }
  var rQ = Object.defineProperties(() => {
  }, {
    ...ko,
    level: {
      enumerable: true,
      get() {
        return this._generator.level;
      },
      set(e) {
        this._generator.level = e;
      }
    }
  }), LE = /* @__PURE__ */ o((e, t, r7) => {
    let n, i;
    return r7 === void 0 ? (n = e, i = t) : (n = r7.openAll + e, i = t + r7.closeAll), {
      open: e,
      close: t,
      openAll: n,
      closeAll: i,
      parent: r7
    };
  }, "createStyler"), Hd = /* @__PURE__ */ o((e, t, r7) => {
    let n = /* @__PURE__ */ o((...i) => nQ(n, i.length === 1 ? "" + i[0] : i.join(" ")), "builder");
    return n.__proto__ = rQ, n._generator = e, n._styler = t, n._isEmpty = r7, n;
  }, "createBuilder"), nQ = /* @__PURE__ */ o((e, t) => {
    if (e.level <= 0 || !t)
      return e._isEmpty ? "" : t;
    let r7 = e._styler;
    if (r7 === void 0)
      return t;
    let { openAll: n, closeAll: i } = r7;
    if (t.indexOf("\x1B") !== -1)
      for (; r7 !== void 0; )
        t = ZJ(t, r7.close, r7.open), r7 = r7.parent;
    let s = t.indexOf(`
`);
    return s !== -1 && (t = eQ(t, i, n, s)), n + t + i;
  }, "applyStyle"), ME, oQ = /* @__PURE__ */ o((e, ...t) => {
    let [r7] = t;
    if (!Array.isArray(r7))
      return t.join(" ");
    let n = t.slice(1), i = [r7.raw[0]];
    for (let s = 1; s < r7.length; s++)
      i.push(
        String(n[s - 1]).replace(/[{}\\]/g, "\\$&"),
        String(r7.raw[s])
      );
    return ME === void 0 && (ME = qq()), ME(e, i.join(""));
  }, "chalkTag");
  Object.defineProperties(Bd.prototype, ko);
  var ps = Bd();
  ps.supportsColor = NE;
  ps.stderr = Bd({ level: jE ? jE.level : 0 });
  ps.stderr.supportsColor = jE;
  ps.Level = {
    None: 0,
    Basic: 1,
    Ansi256: 2,
    TrueColor: 3,
    0: "None",
    1: "Basic",
    2: "Ansi256",
    3: "TrueColor"
  };
  jq.exports = ps;
});
var Lq = y((E1e, kq) => {
  function iQ() {
    this.__data__ = [], this.size = 0;
  }
  o(iQ, "listCacheClear");
  kq.exports = iQ;
});
var $E = y((w1e, Fq) => {
  function sQ(e, t) {
    return e === t || e !== e && t !== t;
  }
  o(sQ, "eq");
  Fq.exports = sQ;
});
var fs = y((R1e, Dq) => {
  var aQ = $E();
  function lQ(e, t) {
    for (var r7 = e.length; r7--; )
      if (aQ(e[r7][0], t))
        return r7;
    return -1;
  }
  o(lQ, "assocIndexOf");
  Dq.exports = lQ;
});
var Bq = y((_1e, $q) => {
  var uQ = fs(), cQ = Array.prototype, dQ = cQ.splice;
  function pQ(e) {
    var t = this.__data__, r7 = uQ(t, e);
    if (r7 < 0)
      return false;
    var n = t.length - 1;
    return r7 == n ? t.pop() : dQ.call(t, r7, 1), --this.size, true;
  }
  o(pQ, "listCacheDelete");
  $q.exports = pQ;
});
var Uq = y((P1e, Hq) => {
  var fQ = fs();
  function mQ(e) {
    var t = this.__data__, r7 = fQ(t, e);
    return r7 < 0 ? void 0 : t[r7][1];
  }
  o(mQ, "listCacheGet");
  Hq.exports = mQ;
});
var zq = y((O1e, Vq) => {
  var hQ = fs();
  function yQ(e) {
    return hQ(this.__data__, e) > -1;
  }
  o(yQ, "listCacheHas");
  Vq.exports = yQ;
});
var Wq = y((I1e, Gq) => {
  var bQ = fs();
  function gQ(e, t) {
    var r7 = this.__data__, n = bQ(r7, e);
    return n < 0 ? (++this.size, r7.push([e, t])) : r7[n][1] = t, this;
  }
  o(gQ, "listCacheSet");
  Gq.exports = gQ;
});
var ms = y((N1e, Yq) => {
  var vQ = Lq(), EQ = Bq(), xQ = Uq(), wQ = zq(), TQ = Wq();
  function Lo(e) {
    var t = -1, r7 = e == null ? 0 : e.length;
    for (this.clear(); ++t < r7; ) {
      var n = e[t];
      this.set(n[0], n[1]);
    }
  }
  o(Lo, "ListCache");
  Lo.prototype.clear = vQ;
  Lo.prototype.delete = EQ;
  Lo.prototype.get = xQ;
  Lo.prototype.has = wQ;
  Lo.prototype.set = TQ;
  Yq.exports = Lo;
});
var Xq = y((k1e, Kq) => {
  var RQ = ms();
  function SQ() {
    this.__data__ = new RQ(), this.size = 0;
  }
  o(SQ, "stackClear");
  Kq.exports = SQ;
});
var Qq = y((F1e, Jq) => {
  function _Q(e) {
    var t = this.__data__, r7 = t.delete(e);
    return this.size = t.size, r7;
  }
  o(_Q, "stackDelete");
  Jq.exports = _Q;
});
var e1 = y(($1e, Zq) => {
  function CQ(e) {
    return this.__data__.get(e);
  }
  o(CQ, "stackGet");
  Zq.exports = CQ;
});
var r1 = y((H1e, t1) => {
  function PQ(e) {
    return this.__data__.has(e);
  }
  o(PQ, "stackHas");
  t1.exports = PQ;
});
var BE = y((V1e, n1) => {
  var AQ = typeof global == "object" && global && global.Object === Object && global;
  n1.exports = AQ;
});
var or = y((z1e, o1) => {
  var OQ = BE(), qQ = typeof self == "object" && self && self.Object === Object && self, IQ = OQ || qQ || Function("return this")();
  o1.exports = IQ;
});
var Ud = y((G1e, i1) => {
  var MQ = or(), NQ = MQ.Symbol;
  i1.exports = NQ;
});
var u1 = y((W1e, l1) => {
  var s1 = Ud(), a1 = Object.prototype, jQ = a1.hasOwnProperty, kQ = a1.toString, hs = s1 ? s1.toStringTag : void 0;
  function LQ(e) {
    var t = jQ.call(e, hs), r7 = e[hs];
    try {
      e[hs] = void 0;
      var n = true;
    } catch {
    }
    var i = kQ.call(e);
    return n && (t ? e[hs] = r7 : delete e[hs]), i;
  }
  o(LQ, "getRawTag");
  l1.exports = LQ;
});
var d1 = y((K1e, c1) => {
  var FQ = Object.prototype, DQ = FQ.toString;
  function $Q(e) {
    return DQ.call(e);
  }
  o($Q, "objectToString");
  c1.exports = $Q;
});
var ys = y((J1e, m1) => {
  var p1 = Ud(), BQ = u1(), HQ = d1(), UQ = "[object Null]", VQ = "[object Undefined]", f1 = p1 ? p1.toStringTag : void 0;
  function zQ(e) {
    return e == null ? e === void 0 ? VQ : UQ : f1 && f1 in Object(e) ? BQ(e) : HQ(e);
  }
  o(zQ, "baseGetTag");
  m1.exports = zQ;
});
var HE = y((Z1e, h1) => {
  function GQ(e) {
    var t = typeof e;
    return e != null && (t == "object" || t == "function");
  }
  o(GQ, "isObject");
  h1.exports = GQ;
});
var UE = y((tIe, y1) => {
  var WQ = ys(), YQ = HE(), KQ = "[object AsyncFunction]", XQ = "[object Function]", JQ = "[object GeneratorFunction]", QQ = "[object Proxy]";
  function ZQ(e) {
    if (!YQ(e))
      return false;
    var t = WQ(e);
    return t == XQ || t == JQ || t == KQ || t == QQ;
  }
  o(ZQ, "isFunction");
  y1.exports = ZQ;
});
var g1 = y((nIe, b1) => {
  var eZ = or(), tZ = eZ["__core-js_shared__"];
  b1.exports = tZ;
});
var x1 = y((oIe, E1) => {
  var VE = g1(), v1 = (function() {
    var e = /[^.]+$/.exec(VE && VE.keys && VE.keys.IE_PROTO || "");
    return e ? "Symbol(src)_1." + e : "";
  })();
  function rZ(e) {
    return !!v1 && v1 in e;
  }
  o(rZ, "isMasked");
  E1.exports = rZ;
});
var zE = y((sIe, w1) => {
  var nZ = Function.prototype, oZ = nZ.toString;
  function iZ(e) {
    if (e != null) {
      try {
        return oZ.call(e);
      } catch {
      }
      try {
        return e + "";
      } catch {
      }
    }
    return "";
  }
  o(iZ, "toSource");
  w1.exports = iZ;
});
var R1 = y((lIe, T1) => {
  var sZ = UE(), aZ = x1(), lZ = HE(), uZ = zE(), cZ = /[\\^$.*+?()[\]{}|]/g, dZ = /^\[object .+?Constructor\]$/, pZ = Function.prototype, fZ = Object.prototype, mZ = pZ.toString, hZ = fZ.hasOwnProperty, yZ = RegExp(
    "^" + mZ.call(hZ).replace(cZ, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
  );
  function bZ(e) {
    if (!lZ(e) || aZ(e))
      return false;
    var t = sZ(e) ? yZ : dZ;
    return t.test(uZ(e));
  }
  o(bZ, "baseIsNative");
  T1.exports = bZ;
});
var _1 = y((cIe, S1) => {
  function gZ(e, t) {
    return e?.[t];
  }
  o(gZ, "getValue");
  S1.exports = gZ;
});
var Cn = y((pIe, C1) => {
  var vZ = R1(), EZ = _1();
  function xZ(e, t) {
    var r7 = EZ(e, t);
    return vZ(r7) ? r7 : void 0;
  }
  o(xZ, "getNative");
  C1.exports = xZ;
});
var Vd = y((mIe, P1) => {
  var wZ = Cn(), TZ = or(), RZ = wZ(TZ, "Map");
  P1.exports = RZ;
});
var bs = y((hIe, A1) => {
  var SZ = Cn(), _Z = SZ(Object, "create");
  A1.exports = _Z;
});
var I1 = y((yIe, q1) => {
  var O1 = bs();
  function CZ() {
    this.__data__ = O1 ? O1(null) : {}, this.size = 0;
  }
  o(CZ, "hashClear");
  q1.exports = CZ;
});
var N1 = y((gIe, M1) => {
  function PZ(e) {
    var t = this.has(e) && delete this.__data__[e];
    return this.size -= t ? 1 : 0, t;
  }
  o(PZ, "hashDelete");
  M1.exports = PZ;
});
var k1 = y((EIe, j1) => {
  var AZ = bs(), OZ = "__lodash_hash_undefined__", qZ = Object.prototype, IZ = qZ.hasOwnProperty;
  function MZ(e) {
    var t = this.__data__;
    if (AZ) {
      var r7 = t[e];
      return r7 === OZ ? void 0 : r7;
    }
    return IZ.call(t, e) ? t[e] : void 0;
  }
  o(MZ, "hashGet");
  j1.exports = MZ;
});
var F1 = y((wIe, L1) => {
  var NZ = bs(), jZ = Object.prototype, kZ = jZ.hasOwnProperty;
  function LZ(e) {
    var t = this.__data__;
    return NZ ? t[e] !== void 0 : kZ.call(t, e);
  }
  o(LZ, "hashHas");
  L1.exports = LZ;
});
var $1 = y((RIe, D1) => {
  var FZ = bs(), DZ = "__lodash_hash_undefined__";
  function $Z(e, t) {
    var r7 = this.__data__;
    return this.size += this.has(e) ? 0 : 1, r7[e] = FZ && t === void 0 ? DZ : t, this;
  }
  o($Z, "hashSet");
  D1.exports = $Z;
});
var H1 = y((_Ie, B1) => {
  var BZ = I1(), HZ = N1(), UZ = k1(), VZ = F1(), zZ = $1();
  function Fo(e) {
    var t = -1, r7 = e == null ? 0 : e.length;
    for (this.clear(); ++t < r7; ) {
      var n = e[t];
      this.set(n[0], n[1]);
    }
  }
  o(Fo, "Hash");
  Fo.prototype.clear = BZ;
  Fo.prototype.delete = HZ;
  Fo.prototype.get = UZ;
  Fo.prototype.has = VZ;
  Fo.prototype.set = zZ;
  B1.exports = Fo;
});
var z1 = y((PIe, V1) => {
  var U1 = H1(), GZ = ms(), WZ = Vd();
  function YZ() {
    this.size = 0, this.__data__ = {
      hash: new U1(),
      map: new (WZ || GZ)(),
      string: new U1()
    };
  }
  o(YZ, "mapCacheClear");
  V1.exports = YZ;
});
var W1 = y((OIe, G1) => {
  function KZ(e) {
    var t = typeof e;
    return t == "string" || t == "number" || t == "symbol" || t == "boolean" ? e !== "__proto__" : e === null;
  }
  o(KZ, "isKeyable");
  G1.exports = KZ;
});
var gs = y((IIe, Y1) => {
  var XZ = W1();
  function JZ(e, t) {
    var r7 = e.__data__;
    return XZ(t) ? r7[typeof t == "string" ? "string" : "hash"] : r7.map;
  }
  o(JZ, "getMapData");
  Y1.exports = JZ;
});
var X1 = y((NIe, K1) => {
  var QZ = gs();
  function ZZ(e) {
    var t = QZ(this, e).delete(e);
    return this.size -= t ? 1 : 0, t;
  }
  o(ZZ, "mapCacheDelete");
  K1.exports = ZZ;
});
var Q1 = y((kIe, J1) => {
  var eee = gs();
  function tee(e) {
    return eee(this, e).get(e);
  }
  o(tee, "mapCacheGet");
  J1.exports = tee;
});
var eI = y((FIe, Z1) => {
  var ree = gs();
  function nee(e) {
    return ree(this, e).has(e);
  }
  o(nee, "mapCacheHas");
  Z1.exports = nee;
});
var rI = y(($Ie, tI) => {
  var oee = gs();
  function iee(e, t) {
    var r7 = oee(this, e), n = r7.size;
    return r7.set(e, t), this.size += r7.size == n ? 0 : 1, this;
  }
  o(iee, "mapCacheSet");
  tI.exports = iee;
});
var GE = y((HIe, nI) => {
  var see = z1(), aee = X1(), lee = Q1(), uee = eI(), cee = rI();
  function Do(e) {
    var t = -1, r7 = e == null ? 0 : e.length;
    for (this.clear(); ++t < r7; ) {
      var n = e[t];
      this.set(n[0], n[1]);
    }
  }
  o(Do, "MapCache");
  Do.prototype.clear = see;
  Do.prototype.delete = aee;
  Do.prototype.get = lee;
  Do.prototype.has = uee;
  Do.prototype.set = cee;
  nI.exports = Do;
});
var iI = y((VIe, oI) => {
  var dee = ms(), pee = Vd(), fee = GE(), mee = 200;
  function hee(e, t) {
    var r7 = this.__data__;
    if (r7 instanceof dee) {
      var n = r7.__data__;
      if (!pee || n.length < mee - 1)
        return n.push([e, t]), this.size = ++r7.size, this;
      r7 = this.__data__ = new fee(n);
    }
    return r7.set(e, t), this.size = r7.size, this;
  }
  o(hee, "stackSet");
  oI.exports = hee;
});
var aI = y((GIe, sI) => {
  var yee = ms(), bee = Xq(), gee = Qq(), vee = e1(), Eee = r1(), xee = iI();
  function $o(e) {
    var t = this.__data__ = new yee(e);
    this.size = t.size;
  }
  o($o, "Stack");
  $o.prototype.clear = bee;
  $o.prototype.delete = gee;
  $o.prototype.get = vee;
  $o.prototype.has = Eee;
  $o.prototype.set = xee;
  sI.exports = $o;
});
var uI = y((YIe, lI) => {
  var wee = "__lodash_hash_undefined__";
  function Tee(e) {
    return this.__data__.set(e, wee), this;
  }
  o(Tee, "setCacheAdd");
  lI.exports = Tee;
});
var dI = y((XIe, cI) => {
  function Ree(e) {
    return this.__data__.has(e);
  }
  o(Ree, "setCacheHas");
  cI.exports = Ree;
});
var fI = y((QIe, pI) => {
  var See = GE(), _ee = uI(), Cee = dI();
  function zd(e) {
    var t = -1, r7 = e == null ? 0 : e.length;
    for (this.__data__ = new See(); ++t < r7; )
      this.add(e[t]);
  }
  o(zd, "SetCache");
  zd.prototype.add = zd.prototype.push = _ee;
  zd.prototype.has = Cee;
  pI.exports = zd;
});
var hI = y((eMe, mI) => {
  function Pee(e, t) {
    for (var r7 = -1, n = e == null ? 0 : e.length; ++r7 < n; )
      if (t(e[r7], r7, e))
        return true;
    return false;
  }
  o(Pee, "arraySome");
  mI.exports = Pee;
});
var bI = y((rMe, yI) => {
  function Aee(e, t) {
    return e.has(t);
  }
  o(Aee, "cacheHas");
  yI.exports = Aee;
});
var WE = y((oMe, gI) => {
  var Oee = fI(), qee = hI(), Iee = bI(), Mee = 1, Nee = 2;
  function jee(e, t, r7, n, i, s) {
    var a = r7 & Mee, l = e.length, u = t.length;
    if (l != u && !(a && u > l))
      return false;
    var c = s.get(e), d = s.get(t);
    if (c && d)
      return c == t && d == e;
    var p5 = -1, f = true, m = r7 & Nee ? new Oee() : void 0;
    for (s.set(e, t), s.set(t, e); ++p5 < l; ) {
      var h5 = e[p5], b = t[p5];
      if (n)
        var v5 = a ? n(b, h5, p5, t, e, s) : n(h5, b, p5, e, t, s);
      if (v5 !== void 0) {
        if (v5)
          continue;
        f = false;
        break;
      }
      if (m) {
        if (!qee(t, function(g, w5) {
          if (!Iee(m, w5) && (h5 === g || i(h5, g, r7, n, s)))
            return m.push(w5);
        })) {
          f = false;
          break;
        }
      } else if (!(h5 === b || i(h5, b, r7, n, s))) {
        f = false;
        break;
      }
    }
    return s.delete(e), s.delete(t), f;
  }
  o(jee, "equalArrays");
  gI.exports = jee;
});
var EI = y((sMe, vI) => {
  var kee = or(), Lee = kee.Uint8Array;
  vI.exports = Lee;
});
var wI = y((aMe, xI) => {
  function Fee(e) {
    var t = -1, r7 = Array(e.size);
    return e.forEach(function(n, i) {
      r7[++t] = [i, n];
    }), r7;
  }
  o(Fee, "mapToArray");
  xI.exports = Fee;
});
var RI = y((uMe, TI) => {
  function Dee(e) {
    var t = -1, r7 = Array(e.size);
    return e.forEach(function(n) {
      r7[++t] = n;
    }), r7;
  }
  o(Dee, "setToArray");
  TI.exports = Dee;
});
var AI = y((dMe, PI) => {
  var SI = Ud(), _I = EI(), $ee = $E(), Bee = WE(), Hee = wI(), Uee = RI(), Vee = 1, zee = 2, Gee = "[object Boolean]", Wee = "[object Date]", Yee = "[object Error]", Kee = "[object Map]", Xee = "[object Number]", Jee = "[object RegExp]", Qee = "[object Set]", Zee = "[object String]", ete = "[object Symbol]", tte = "[object ArrayBuffer]", rte = "[object DataView]", CI = SI ? SI.prototype : void 0, YE = CI ? CI.valueOf : void 0;
  function nte(e, t, r7, n, i, s, a) {
    switch (r7) {
      case rte:
        if (e.byteLength != t.byteLength || e.byteOffset != t.byteOffset)
          return false;
        e = e.buffer, t = t.buffer;
      case tte:
        return !(e.byteLength != t.byteLength || !s(new _I(e), new _I(t)));
      case Gee:
      case Wee:
      case Xee:
        return $ee(+e, +t);
      case Yee:
        return e.name == t.name && e.message == t.message;
      case Jee:
      case Zee:
        return e == t + "";
      case Kee:
        var l = Hee;
      case Qee:
        var u = n & Vee;
        if (l || (l = Uee), e.size != t.size && !u)
          return false;
        var c = a.get(e);
        if (c)
          return c == t;
        n |= zee, a.set(e, t);
        var d = Bee(l(e), l(t), n, i, s, a);
        return a.delete(e), d;
      case ete:
        if (YE)
          return YE.call(e) == YE.call(t);
    }
    return false;
  }
  o(nte, "equalByTag");
  PI.exports = nte;
});
var qI = y((fMe, OI) => {
  function ote(e, t) {
    for (var r7 = -1, n = t.length, i = e.length; ++r7 < n; )
      e[i + r7] = t[r7];
    return e;
  }
  o(ote, "arrayPush");
  OI.exports = ote;
});
var Gd = y((hMe, II) => {
  var ite = Array.isArray;
  II.exports = ite;
});
var NI = y((yMe, MI) => {
  var ste = qI(), ate = Gd();
  function lte(e, t, r7) {
    var n = t(e);
    return ate(e) ? n : ste(n, r7(e));
  }
  o(lte, "baseGetAllKeys");
  MI.exports = lte;
});
var kI = y((gMe, jI) => {
  function ute(e, t) {
    for (var r7 = -1, n = e == null ? 0 : e.length, i = 0, s = []; ++r7 < n; ) {
      var a = e[r7];
      t(a, r7, e) && (s[i++] = a);
    }
    return s;
  }
  o(ute, "arrayFilter");
  jI.exports = ute;
});
var FI = y((EMe, LI) => {
  function cte() {
    return [];
  }
  o(cte, "stubArray");
  LI.exports = cte;
});
var BI = y((wMe, $I) => {
  var dte = kI(), pte = FI(), fte = Object.prototype, mte = fte.propertyIsEnumerable, DI = Object.getOwnPropertySymbols, hte = DI ? function(e) {
    return e == null ? [] : (e = Object(e), dte(DI(e), function(t) {
      return mte.call(e, t);
    }));
  } : pte;
  $I.exports = hte;
});
var UI = y((TMe, HI) => {
  function yte(e, t) {
    for (var r7 = -1, n = Array(e); ++r7 < e; )
      n[r7] = t(r7);
    return n;
  }
  o(yte, "baseTimes");
  HI.exports = yte;
});
var vs = y((SMe, VI) => {
  function bte(e) {
    return e != null && typeof e == "object";
  }
  o(bte, "isObjectLike");
  VI.exports = bte;
});
var GI = y((CMe, zI) => {
  var gte = ys(), vte = vs(), Ete = "[object Arguments]";
  function xte(e) {
    return vte(e) && gte(e) == Ete;
  }
  o(xte, "baseIsArguments");
  zI.exports = xte;
});
var XI = y((AMe, KI) => {
  var WI = GI(), wte = vs(), YI = Object.prototype, Tte = YI.hasOwnProperty, Rte = YI.propertyIsEnumerable, Ste = WI(/* @__PURE__ */ (function() {
    return arguments;
  })()) ? WI : function(e) {
    return wte(e) && Tte.call(e, "callee") && !Rte.call(e, "callee");
  };
  KI.exports = Ste;
});
var QI = y((OMe, JI) => {
  function _te() {
    return false;
  }
  o(_te, "stubFalse");
  JI.exports = _te;
});
var KE = y((Es, Bo) => {
  var Cte = or(), Pte = QI(), tM = typeof Es == "object" && Es && !Es.nodeType && Es, ZI = tM && typeof Bo == "object" && Bo && !Bo.nodeType && Bo, Ate = ZI && ZI.exports === tM, eM = Ate ? Cte.Buffer : void 0, Ote = eM ? eM.isBuffer : void 0, qte = Ote || Pte;
  Bo.exports = qte;
});
var nM = y((IMe, rM) => {
  var Ite = 9007199254740991, Mte = /^(?:0|[1-9]\d*)$/;
  function Nte(e, t) {
    var r7 = typeof e;
    return t = t ?? Ite, !!t && (r7 == "number" || r7 != "symbol" && Mte.test(e)) && e > -1 && e % 1 == 0 && e < t;
  }
  o(Nte, "isIndex");
  rM.exports = Nte;
});
var XE = y((NMe, oM) => {
  var jte = 9007199254740991;
  function kte(e) {
    return typeof e == "number" && e > -1 && e % 1 == 0 && e <= jte;
  }
  o(kte, "isLength");
  oM.exports = kte;
});
var sM = y((kMe, iM) => {
  var Lte = ys(), Fte = XE(), Dte = vs(), $te = "[object Arguments]", Bte = "[object Array]", Hte = "[object Boolean]", Ute = "[object Date]", Vte = "[object Error]", zte = "[object Function]", Gte = "[object Map]", Wte = "[object Number]", Yte = "[object Object]", Kte = "[object RegExp]", Xte = "[object Set]", Jte = "[object String]", Qte = "[object WeakMap]", Zte = "[object ArrayBuffer]", ere = "[object DataView]", tre = "[object Float32Array]", rre = "[object Float64Array]", nre = "[object Int8Array]", ore = "[object Int16Array]", ire = "[object Int32Array]", sre = "[object Uint8Array]", are = "[object Uint8ClampedArray]", lre = "[object Uint16Array]", ure = "[object Uint32Array]", Se = {};
  Se[tre] = Se[rre] = Se[nre] = Se[ore] = Se[ire] = Se[sre] = Se[are] = Se[lre] = Se[ure] = true;
  Se[$te] = Se[Bte] = Se[Zte] = Se[Hte] = Se[ere] = Se[Ute] = Se[Vte] = Se[zte] = Se[Gte] = Se[Wte] = Se[Yte] = Se[Kte] = Se[Xte] = Se[Jte] = Se[Qte] = false;
  function cre(e) {
    return Dte(e) && Fte(e.length) && !!Se[Lte(e)];
  }
  o(cre, "baseIsTypedArray");
  iM.exports = cre;
});
var lM = y((FMe, aM) => {
  function dre(e) {
    return function(t) {
      return e(t);
    };
  }
  o(dre, "baseUnary");
  aM.exports = dre;
});
var cM = y((xs, Ho) => {
  var pre = BE(), uM = typeof xs == "object" && xs && !xs.nodeType && xs, ws = uM && typeof Ho == "object" && Ho && !Ho.nodeType && Ho, fre = ws && ws.exports === uM, JE = fre && pre.process, mre = (function() {
    try {
      var e = ws && ws.require && ws.require("util").types;
      return e || JE && JE.binding && JE.binding("util");
    } catch {
    }
  })();
  Ho.exports = mre;
});
var QE = y(($Me, fM) => {
  var hre = sM(), yre = lM(), dM = cM(), pM = dM && dM.isTypedArray, bre = pM ? yre(pM) : hre;
  fM.exports = bre;
});
var hM = y((BMe, mM) => {
  var gre = UI(), vre = XI(), Ere = Gd(), xre = KE(), wre = nM(), Tre = QE(), Rre = Object.prototype, Sre = Rre.hasOwnProperty;
  function _re(e, t) {
    var r7 = Ere(e), n = !r7 && vre(e), i = !r7 && !n && xre(e), s = !r7 && !n && !i && Tre(e), a = r7 || n || i || s, l = a ? gre(e.length, String) : [], u = l.length;
    for (var c in e)
      (t || Sre.call(e, c)) && !(a && // Safari 9 has enumerable `arguments.length` in strict mode.
      (c == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
      i && (c == "offset" || c == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
      s && (c == "buffer" || c == "byteLength" || c == "byteOffset") || // Skip index properties.
      wre(c, u))) && l.push(c);
    return l;
  }
  o(_re, "arrayLikeKeys");
  mM.exports = _re;
});
var bM = y((UMe, yM) => {
  var Cre = Object.prototype;
  function Pre(e) {
    var t = e && e.constructor, r7 = typeof t == "function" && t.prototype || Cre;
    return e === r7;
  }
  o(Pre, "isPrototype");
  yM.exports = Pre;
});
var vM = y((zMe, gM) => {
  function Are(e, t) {
    return function(r7) {
      return e(t(r7));
    };
  }
  o(Are, "overArg");
  gM.exports = Are;
});
var xM = y((WMe, EM) => {
  var Ore = vM(), qre = Ore(Object.keys, Object);
  EM.exports = qre;
});
var TM = y((YMe, wM) => {
  var Ire = bM(), Mre = xM(), Nre = Object.prototype, jre = Nre.hasOwnProperty;
  function kre(e) {
    if (!Ire(e))
      return Mre(e);
    var t = [];
    for (var r7 in Object(e))
      jre.call(e, r7) && r7 != "constructor" && t.push(r7);
    return t;
  }
  o(kre, "baseKeys");
  wM.exports = kre;
});
var SM = y((XMe, RM) => {
  var Lre = UE(), Fre = XE();
  function Dre(e) {
    return e != null && Fre(e.length) && !Lre(e);
  }
  o(Dre, "isArrayLike");
  RM.exports = Dre;
});
var CM = y((QMe, _M) => {
  var $re = hM(), Bre = TM(), Hre = SM();
  function Ure(e) {
    return Hre(e) ? $re(e) : Bre(e);
  }
  o(Ure, "keys");
  _M.exports = Ure;
});
var AM = y((eNe, PM) => {
  var Vre = NI(), zre = BI(), Gre = CM();
  function Wre(e) {
    return Vre(e, Gre, zre);
  }
  o(Wre, "getAllKeys");
  PM.exports = Wre;
});
var IM = y((rNe, qM) => {
  var OM = AM(), Yre = 1, Kre = Object.prototype, Xre = Kre.hasOwnProperty;
  function Jre(e, t, r7, n, i, s) {
    var a = r7 & Yre, l = OM(e), u = l.length, c = OM(t), d = c.length;
    if (u != d && !a)
      return false;
    for (var p5 = u; p5--; ) {
      var f = l[p5];
      if (!(a ? f in t : Xre.call(t, f)))
        return false;
    }
    var m = s.get(e), h5 = s.get(t);
    if (m && h5)
      return m == t && h5 == e;
    var b = true;
    s.set(e, t), s.set(t, e);
    for (var v5 = a; ++p5 < u; ) {
      f = l[p5];
      var g = e[f], w5 = t[f];
      if (n)
        var E = a ? n(w5, g, f, t, e, s) : n(g, w5, f, e, t, s);
      if (!(E === void 0 ? g === w5 || i(g, w5, r7, n, s) : E)) {
        b = false;
        break;
      }
      v5 || (v5 = f == "constructor");
    }
    if (b && !v5) {
      var R = e.constructor, S = t.constructor;
      R != S && "constructor" in e && "constructor" in t && !(typeof R == "function" && R instanceof R && typeof S == "function" && S instanceof S) && (b = false);
    }
    return s.delete(e), s.delete(t), b;
  }
  o(Jre, "equalObjects");
  qM.exports = Jre;
});
var NM = y((oNe, MM) => {
  var Qre = Cn(), Zre = or(), ene = Qre(Zre, "DataView");
  MM.exports = ene;
});
var kM = y((iNe, jM) => {
  var tne = Cn(), rne = or(), nne = tne(rne, "Promise");
  jM.exports = nne;
});
var FM = y((sNe, LM) => {
  var one = Cn(), ine = or(), sne = one(ine, "Set");
  LM.exports = sne;
});
var $M = y((aNe, DM) => {
  var ane = Cn(), lne = or(), une = ane(lne, "WeakMap");
  DM.exports = une;
});
var YM = y((lNe, WM) => {
  var ZE = NM(), ex = Vd(), tx = kM(), rx = FM(), nx = $M(), GM = ys(), Uo = zE(), BM = "[object Map]", cne = "[object Object]", HM = "[object Promise]", UM = "[object Set]", VM = "[object WeakMap]", zM = "[object DataView]", dne = Uo(ZE), pne = Uo(ex), fne = Uo(tx), mne = Uo(rx), hne = Uo(nx), Pn = GM;
  (ZE && Pn(new ZE(new ArrayBuffer(1))) != zM || ex && Pn(new ex()) != BM || tx && Pn(tx.resolve()) != HM || rx && Pn(new rx()) != UM || nx && Pn(new nx()) != VM) && (Pn = /* @__PURE__ */ o(function(e) {
    var t = GM(e), r7 = t == cne ? e.constructor : void 0, n = r7 ? Uo(r7) : "";
    if (n)
      switch (n) {
        case dne:
          return zM;
        case pne:
          return BM;
        case fne:
          return HM;
        case mne:
          return UM;
        case hne:
          return VM;
      }
    return t;
  }, "getTag"));
  WM.exports = Pn;
});
var rN = y((cNe, tN) => {
  var ox = aI(), yne = WE(), bne = AI(), gne = IM(), KM = YM(), XM = Gd(), JM = KE(), vne = QE(), Ene = 1, QM = "[object Arguments]", ZM = "[object Array]", Wd = "[object Object]", xne = Object.prototype, eN = xne.hasOwnProperty;
  function wne(e, t, r7, n, i, s) {
    var a = XM(e), l = XM(t), u = a ? ZM : KM(e), c = l ? ZM : KM(t);
    u = u == QM ? Wd : u, c = c == QM ? Wd : c;
    var d = u == Wd, p5 = c == Wd, f = u == c;
    if (f && JM(e)) {
      if (!JM(t))
        return false;
      a = true, d = false;
    }
    if (f && !d)
      return s || (s = new ox()), a || vne(e) ? yne(e, t, r7, n, i, s) : bne(e, t, u, r7, n, i, s);
    if (!(r7 & Ene)) {
      var m = d && eN.call(e, "__wrapped__"), h5 = p5 && eN.call(t, "__wrapped__");
      if (m || h5) {
        var b = m ? e.value() : e, v5 = h5 ? t.value() : t;
        return s || (s = new ox()), i(b, v5, r7, n, s);
      }
    }
    return f ? (s || (s = new ox()), gne(e, t, r7, n, i, s)) : false;
  }
  o(wne, "baseIsEqualDeep");
  tN.exports = wne;
});
var sN = y((pNe, iN) => {
  var Tne = rN(), nN = vs();
  function oN(e, t, r7, n, i) {
    return e === t ? true : e == null || t == null || !nN(e) && !nN(t) ? e !== e && t !== t : Tne(e, t, r7, n, oN, i);
  }
  o(oN, "baseIsEqual");
  iN.exports = oN;
});
var ix = y((mNe, aN) => {
  var Rne = sN();
  function Sne(e, t, r7) {
    r7 = typeof r7 == "function" ? r7 : void 0;
    var n = r7 ? r7(e, t) : void 0;
    return n === void 0 ? Rne(e, t, void 0, r7) : !!n;
  }
  o(Sne, "isEqualWith");
  aN.exports = Sne;
});
var ax = y((sx, lN) => {
  (function(e, t) {
    typeof sx == "object" ? lN.exports = t(e) : typeof define == "function" && define.amd ? define([], t.bind(e, e)) : t(e);
  })(typeof global < "u" ? global : sx, function(e) {
    if (e.CSS && e.CSS.escape)
      return e.CSS.escape;
    var t = /* @__PURE__ */ o(function(r7) {
      if (arguments.length == 0)
        throw new TypeError("`CSS.escape` requires an argument.");
      for (var n = String(r7), i = n.length, s = -1, a, l = "", u = n.charCodeAt(0); ++s < i; ) {
        if (a = n.charCodeAt(s), a == 0) {
          l += "�";
          continue;
        }
        if (
          // If the character is in the range [\1-\1F] (U+0001 to U+001F) or is
          // U+007F, […]
          a >= 1 && a <= 31 || a == 127 || // If the character is the first character and is in the range [0-9]
          // (U+0030 to U+0039), […]
          s == 0 && a >= 48 && a <= 57 || // If the character is the second character and is in the range [0-9]
          // (U+0030 to U+0039) and the first character is a `-` (U+002D), […]
          s == 1 && a >= 48 && a <= 57 && u == 45
        ) {
          l += "\\" + a.toString(16) + " ";
          continue;
        }
        if (
          // If the character is the first character and is a `-` (U+002D), and
          // there is no second character, […]
          s == 0 && i == 1 && a == 45
        ) {
          l += "\\" + n.charAt(s);
          continue;
        }
        if (a >= 128 || a == 45 || a == 95 || a >= 48 && a <= 57 || a >= 65 && a <= 90 || a >= 97 && a <= 122) {
          l += n.charAt(s);
          continue;
        }
        l += "\\" + n.charAt(s);
      }
      return l;
    }, "cssEscape");
    return e.CSS || (e.CSS = {}), e.CSS.escape = t, t;
  });
});
var fw = y((yje, rj) => {
  var ej = /* @__PURE__ */ o((e = 0) => (t) => `\x1B[${38 + e};5;${t}m`, "wrapAnsi256"), tj = /* @__PURE__ */ o((e = 0) => (t, r7, n) => `\x1B[${38 + e};2;${t};${r7};${n}m`, "wrapAnsi16m");
  function uie() {
    let e = /* @__PURE__ */ new Map(), t = {
      modifier: {
        reset: [0, 0],
        // 21 isn't widely supported and 22 does the same thing
        bold: [1, 22],
        dim: [2, 22],
        italic: [3, 23],
        underline: [4, 24],
        overline: [53, 55],
        inverse: [7, 27],
        hidden: [8, 28],
        strikethrough: [9, 29]
      },
      color: {
        black: [30, 39],
        red: [31, 39],
        green: [32, 39],
        yellow: [33, 39],
        blue: [34, 39],
        magenta: [35, 39],
        cyan: [36, 39],
        white: [37, 39],
        // Bright color
        blackBright: [90, 39],
        redBright: [91, 39],
        greenBright: [92, 39],
        yellowBright: [93, 39],
        blueBright: [94, 39],
        magentaBright: [95, 39],
        cyanBright: [96, 39],
        whiteBright: [97, 39]
      },
      bgColor: {
        bgBlack: [40, 49],
        bgRed: [41, 49],
        bgGreen: [42, 49],
        bgYellow: [43, 49],
        bgBlue: [44, 49],
        bgMagenta: [45, 49],
        bgCyan: [46, 49],
        bgWhite: [47, 49],
        // Bright color
        bgBlackBright: [100, 49],
        bgRedBright: [101, 49],
        bgGreenBright: [102, 49],
        bgYellowBright: [103, 49],
        bgBlueBright: [104, 49],
        bgMagentaBright: [105, 49],
        bgCyanBright: [106, 49],
        bgWhiteBright: [107, 49]
      }
    };
    t.color.gray = t.color.blackBright, t.bgColor.bgGray = t.bgColor.bgBlackBright, t.color.grey = t.color.blackBright, t.bgColor.bgGrey = t.bgColor.bgBlackBright;
    for (let [r7, n] of Object.entries(t)) {
      for (let [i, s] of Object.entries(n))
        t[i] = {
          open: `\x1B[${s[0]}m`,
          close: `\x1B[${s[1]}m`
        }, n[i] = t[i], e.set(s[0], s[1]);
      Object.defineProperty(t, r7, {
        value: n,
        enumerable: false
      });
    }
    return Object.defineProperty(t, "codes", {
      value: e,
      enumerable: false
    }), t.color.close = "\x1B[39m", t.bgColor.close = "\x1B[49m", t.color.ansi256 = ej(), t.color.ansi16m = tj(), t.bgColor.ansi256 = ej(10), t.bgColor.ansi16m = tj(10), Object.defineProperties(t, {
      rgbToAnsi256: {
        value: /* @__PURE__ */ o((r7, n, i) => r7 === n && n === i ? r7 < 8 ? 16 : r7 > 248 ? 231 : Math.round((r7 - 8) / 247 * 24) + 232 : 16 + 36 * Math.round(r7 / 255 * 5) + 6 * Math.round(n / 255 * 5) + Math.round(i / 255 * 5), "value"),
        enumerable: false
      },
      hexToRgb: {
        value: /* @__PURE__ */ o((r7) => {
          let n = /(?<colorString>[a-f\d]{6}|[a-f\d]{3})/i.exec(r7.toString(16));
          if (!n)
            return [0, 0, 0];
          let { colorString: i } = n.groups;
          i.length === 3 && (i = i.split("").map((a) => a + a).join(""));
          let s = Number.parseInt(i, 16);
          return [
            s >> 16 & 255,
            s >> 8 & 255,
            s & 255
          ];
        }, "value"),
        enumerable: false
      },
      hexToAnsi256: {
        value: /* @__PURE__ */ o((r7) => t.rgbToAnsi256(...t.hexToRgb(r7)), "value"),
        enumerable: false
      }
    }), t;
  }
  o(uie, "assembleStyles");
  Object.defineProperty(rj, "exports", {
    enumerable: true,
    get: uie
  });
});
var Is = y((Wo) => {
  Object.defineProperty(Wo, "__esModule", {
    value: true
  });
  Wo.printIteratorEntries = die;
  Wo.printIteratorValues = pie;
  Wo.printListItems = fie;
  Wo.printObjectProperties = mie;
  var cie = /* @__PURE__ */ o((e, t) => {
    let r7 = Object.keys(e).sort(t);
    return Object.getOwnPropertySymbols && Object.getOwnPropertySymbols(e).forEach((n) => {
      Object.getOwnPropertyDescriptor(e, n).enumerable && r7.push(n);
    }), r7;
  }, "getKeysOfEnumerableProperties");
  function die(e, t, r7, n, i, s, a = ": ") {
    let l = "", u = e.next();
    if (!u.done) {
      l += t.spacingOuter;
      let c = r7 + t.indent;
      for (; !u.done; ) {
        let d = s(
          u.value[0],
          t,
          c,
          n,
          i
        ), p5 = s(
          u.value[1],
          t,
          c,
          n,
          i
        );
        l += c + d + a + p5, u = e.next(), u.done ? t.min || (l += ",") : l += "," + t.spacingInner;
      }
      l += t.spacingOuter + r7;
    }
    return l;
  }
  o(die, "printIteratorEntries");
  function pie(e, t, r7, n, i, s) {
    let a = "", l = e.next();
    if (!l.done) {
      a += t.spacingOuter;
      let u = r7 + t.indent;
      for (; !l.done; )
        a += u + s(l.value, t, u, n, i), l = e.next(), l.done ? t.min || (a += ",") : a += "," + t.spacingInner;
      a += t.spacingOuter + r7;
    }
    return a;
  }
  o(pie, "printIteratorValues");
  function fie(e, t, r7, n, i, s) {
    let a = "";
    if (e.length) {
      a += t.spacingOuter;
      let l = r7 + t.indent;
      for (let u = 0; u < e.length; u++)
        a += l, u in e && (a += s(e[u], t, l, n, i)), u < e.length - 1 ? a += "," + t.spacingInner : t.min || (a += ",");
      a += t.spacingOuter + r7;
    }
    return a;
  }
  o(fie, "printListItems");
  function mie(e, t, r7, n, i, s) {
    let a = "", l = cie(e, t.compareKeys);
    if (l.length) {
      a += t.spacingOuter;
      let u = r7 + t.indent;
      for (let c = 0; c < l.length; c++) {
        let d = l[c], p5 = s(d, t, u, n, i), f = s(e[d], t, u, n, i);
        a += u + p5 + ": " + f, c < l.length - 1 ? a += "," + t.spacingInner : t.min || (a += ",");
      }
      a += t.spacingOuter + r7;
    }
    return a;
  }
  o(mie, "printObjectProperties");
});
var sj = y((Vr2) => {
  Object.defineProperty(Vr2, "__esModule", {
    value: true
  });
  Vr2.test = Vr2.serialize = Vr2.default = void 0;
  var nj = Is(), xp = (function() {
    return typeof globalThis < "u" ? globalThis : typeof xp < "u" ? xp : typeof self < "u" ? self : typeof window < "u" ? window : Function(
      "return this"
    )();
  })(), mw = xp["jest-symbol-do-not-touch"] || xp.Symbol, hie = typeof mw == "function" && mw.for ? mw.for("jest.asymmetricMatcher") : 1267621, Ep = " ", oj = /* @__PURE__ */ o((e, t, r7, n, i, s) => {
    let a = e.toString();
    return a === "ArrayContaining" || a === "ArrayNotContaining" ? ++n > t.maxDepth ? "[" + a + "]" : a + Ep + "[" + (0, nj.printListItems)(
      e.sample,
      t,
      r7,
      n,
      i,
      s
    ) + "]" : a === "ObjectContaining" || a === "ObjectNotContaining" ? ++n > t.maxDepth ? "[" + a + "]" : a + Ep + "{" + (0, nj.printObjectProperties)(
      e.sample,
      t,
      r7,
      n,
      i,
      s
    ) + "}" : a === "StringMatching" || a === "StringNotMatching" || a === "StringContaining" || a === "StringNotContaining" ? a + Ep + s(e.sample, t, r7, n, i) : e.toAsymmetricMatcher();
  }, "serialize");
  Vr2.serialize = oj;
  var ij = /* @__PURE__ */ o((e) => e && e.$$typeof === hie, "test");
  Vr2.test = ij;
  var yie = {
    serialize: oj,
    test: ij
  }, bie = yie;
  Vr2.default = bie;
});
var lj = y((wje, aj) => {
  aj.exports = ({ onlyFirst: e = false } = {}) => {
    let t = [
      "[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]+)*|[a-zA-Z\\d]+(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)",
      "(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-ntqry=><~]))"
    ].join("|");
    return new RegExp(t, e ? void 0 : "g");
  };
});
var fj = y((zr2) => {
  Object.defineProperty(zr2, "__esModule", {
    value: true
  });
  zr2.test = zr2.serialize = zr2.default = void 0;
  var uj = cj(lj()), xe = cj(fw());
  function cj(e) {
    return e && e.__esModule ? e : { default: e };
  }
  o(cj, "_interopRequireDefault");
  var gie = /* @__PURE__ */ o((e) => e.replace((0, uj.default)(), (t) => {
    switch (t) {
      case xe.default.red.close:
      case xe.default.green.close:
      case xe.default.cyan.close:
      case xe.default.gray.close:
      case xe.default.white.close:
      case xe.default.yellow.close:
      case xe.default.bgRed.close:
      case xe.default.bgGreen.close:
      case xe.default.bgYellow.close:
      case xe.default.inverse.close:
      case xe.default.dim.close:
      case xe.default.bold.close:
      case xe.default.reset.open:
      case xe.default.reset.close:
        return "</>";
      case xe.default.red.open:
        return "<red>";
      case xe.default.green.open:
        return "<green>";
      case xe.default.cyan.open:
        return "<cyan>";
      case xe.default.gray.open:
        return "<gray>";
      case xe.default.white.open:
        return "<white>";
      case xe.default.yellow.open:
        return "<yellow>";
      case xe.default.bgRed.open:
        return "<bgRed>";
      case xe.default.bgGreen.open:
        return "<bgGreen>";
      case xe.default.bgYellow.open:
        return "<bgYellow>";
      case xe.default.inverse.open:
        return "<inverse>";
      case xe.default.dim.open:
        return "<dim>";
      case xe.default.bold.open:
        return "<bold>";
      default:
        return "";
    }
  }), "toHumanReadableAnsi"), dj = /* @__PURE__ */ o((e) => typeof e == "string" && !!e.match((0, uj.default)()), "test");
  zr2.test = dj;
  var pj = /* @__PURE__ */ o((e, t, r7, n, i, s) => s(gie(e), t, r7, n, i), "serialize");
  zr2.serialize = pj;
  var vie = {
    serialize: pj,
    test: dj
  }, Eie = vie;
  zr2.default = Eie;
});
var gj = y((Gr2) => {
  Object.defineProperty(Gr2, "__esModule", {
    value: true
  });
  Gr2.test = Gr2.serialize = Gr2.default = void 0;
  var mj = Is(), xie = " ", hj = ["DOMStringMap", "NamedNodeMap"], wie = /^(HTML\w*Collection|NodeList)$/, Tie = /* @__PURE__ */ o((e) => hj.indexOf(e) !== -1 || wie.test(e), "testName"), yj = /* @__PURE__ */ o((e) => e && e.constructor && !!e.constructor.name && Tie(e.constructor.name), "test");
  Gr2.test = yj;
  var Rie = /* @__PURE__ */ o((e) => e.constructor.name === "NamedNodeMap", "isNamedNodeMap"), bj = /* @__PURE__ */ o((e, t, r7, n, i, s) => {
    let a = e.constructor.name;
    return ++n > t.maxDepth ? "[" + a + "]" : (t.min ? "" : a + xie) + (hj.indexOf(a) !== -1 ? "{" + (0, mj.printObjectProperties)(
      Rie(e) ? Array.from(e).reduce((l, u) => (l[u.name] = u.value, l), {}) : { ...e },
      t,
      r7,
      n,
      i,
      s
    ) + "}" : "[" + (0, mj.printListItems)(
      Array.from(e),
      t,
      r7,
      n,
      i,
      s
    ) + "]");
  }, "serialize");
  Gr2.serialize = bj;
  var Sie = {
    serialize: bj,
    test: yj
  }, _ie = Sie;
  Gr2.default = _ie;
});
var vj = y((hw) => {
  Object.defineProperty(hw, "__esModule", {
    value: true
  });
  hw.default = Cie;
  function Cie(e) {
    return e.replace(/</g, "&lt;").replace(/>/g, "&gt;");
  }
  o(Cie, "escapeHTML");
});
var wp = y((ft2) => {
  Object.defineProperty(ft2, "__esModule", {
    value: true
  });
  ft2.printText = ft2.printProps = ft2.printElementAsLeaf = ft2.printElement = ft2.printComment = ft2.printChildren = void 0;
  var Ej = Pie(vj());
  function Pie(e) {
    return e && e.__esModule ? e : { default: e };
  }
  o(Pie, "_interopRequireDefault");
  var Aie = /* @__PURE__ */ o((e, t, r7, n, i, s, a) => {
    let l = n + r7.indent, u = r7.colors;
    return e.map((c) => {
      let d = t[c], p5 = a(d, r7, l, i, s);
      return typeof d != "string" && (p5.indexOf(`
`) !== -1 && (p5 = r7.spacingOuter + l + p5 + r7.spacingOuter + n), p5 = "{" + p5 + "}"), r7.spacingInner + n + u.prop.open + c + u.prop.close + "=" + u.value.open + p5 + u.value.close;
    }).join("");
  }, "printProps");
  ft2.printProps = Aie;
  var Oie = /* @__PURE__ */ o((e, t, r7, n, i, s) => e.map(
    (a) => t.spacingOuter + r7 + (typeof a == "string" ? xj(a, t) : s(a, t, r7, n, i))
  ).join(""), "printChildren");
  ft2.printChildren = Oie;
  var xj = /* @__PURE__ */ o((e, t) => {
    let r7 = t.colors.content;
    return r7.open + (0, Ej.default)(e) + r7.close;
  }, "printText");
  ft2.printText = xj;
  var qie = /* @__PURE__ */ o((e, t) => {
    let r7 = t.colors.comment;
    return r7.open + "<!--" + (0, Ej.default)(e) + "-->" + r7.close;
  }, "printComment");
  ft2.printComment = qie;
  var Iie = /* @__PURE__ */ o((e, t, r7, n, i) => {
    let s = n.colors.tag;
    return s.open + "<" + e + (t && s.close + t + n.spacingOuter + i + s.open) + (r7 ? ">" + s.close + r7 + n.spacingOuter + i + s.open + "</" + e : (t && !n.min ? "" : " ") + "/") + ">" + s.close;
  }, "printElement");
  ft2.printElement = Iie;
  var Mie = /* @__PURE__ */ o((e, t) => {
    let r7 = t.colors.tag;
    return r7.open + "<" + e + r7.close + " …" + r7.open + " />" + r7.close;
  }, "printElementAsLeaf");
  ft2.printElementAsLeaf = Mie;
});
var Cj = y((Wr2) => {
  Object.defineProperty(Wr2, "__esModule", {
    value: true
  });
  Wr2.test = Wr2.serialize = Wr2.default = void 0;
  var Yo = wp(), Nie = 1, wj = 3, Tj = 8, Rj = 11, jie = /^((HTML|SVG)\w*)?Element$/, kie = /* @__PURE__ */ o((e) => {
    try {
      return typeof e.hasAttribute == "function" && e.hasAttribute("is");
    } catch {
      return false;
    }
  }, "testHasAttribute"), Lie = /* @__PURE__ */ o((e) => {
    let t = e.constructor.name, { nodeType: r7, tagName: n } = e, i = typeof n == "string" && n.includes("-") || kie(e);
    return r7 === Nie && (jie.test(t) || i) || r7 === wj && t === "Text" || r7 === Tj && t === "Comment" || r7 === Rj && t === "DocumentFragment";
  }, "testNode"), Sj = /* @__PURE__ */ o((e) => {
    var t;
    return (e == null || (t = e.constructor) === null || t === void 0 ? void 0 : t.name) && Lie(e);
  }, "test");
  Wr2.test = Sj;
  function Fie(e) {
    return e.nodeType === wj;
  }
  o(Fie, "nodeIsText");
  function Die(e) {
    return e.nodeType === Tj;
  }
  o(Die, "nodeIsComment");
  function yw(e) {
    return e.nodeType === Rj;
  }
  o(yw, "nodeIsFragment");
  var _j = /* @__PURE__ */ o((e, t, r7, n, i, s) => {
    if (Fie(e))
      return (0, Yo.printText)(e.data, t);
    if (Die(e))
      return (0, Yo.printComment)(e.data, t);
    let a = yw(e) ? "DocumentFragment" : e.tagName.toLowerCase();
    return ++n > t.maxDepth ? (0, Yo.printElementAsLeaf)(a, t) : (0, Yo.printElement)(
      a,
      (0, Yo.printProps)(
        yw(e) ? [] : Array.from(e.attributes).map((l) => l.name).sort(),
        yw(e) ? {} : Array.from(e.attributes).reduce((l, u) => (l[u.name] = u.value, l), {}),
        t,
        r7 + t.indent,
        n,
        i,
        s
      ),
      (0, Yo.printChildren)(
        Array.prototype.slice.call(e.childNodes || e.children),
        t,
        r7 + t.indent,
        n,
        i,
        s
      ),
      t,
      r7
    );
  }, "serialize");
  Wr2.serialize = _j;
  var $ie = {
    serialize: _j,
    test: Sj
  }, Bie = $ie;
  Wr2.default = Bie;
});
var Ij = y((Yr2) => {
  Object.defineProperty(Yr2, "__esModule", {
    value: true
  });
  Yr2.test = Yr2.serialize = Yr2.default = void 0;
  var Ms = Is(), Hie = "@@__IMMUTABLE_ITERABLE__@@", Uie = "@@__IMMUTABLE_LIST__@@", Vie = "@@__IMMUTABLE_KEYED__@@", zie = "@@__IMMUTABLE_MAP__@@", Pj = "@@__IMMUTABLE_ORDERED__@@", Gie = "@@__IMMUTABLE_RECORD__@@", Wie = "@@__IMMUTABLE_SEQ__@@", Yie = "@@__IMMUTABLE_SET__@@", Kie = "@@__IMMUTABLE_STACK__@@", Ko = /* @__PURE__ */ o((e) => "Immutable." + e, "getImmutableName"), Tp = /* @__PURE__ */ o((e) => "[" + e + "]", "printAsLeaf"), Ns = " ", Aj = "…", Xie = /* @__PURE__ */ o((e, t, r7, n, i, s, a) => ++n > t.maxDepth ? Tp(Ko(a)) : Ko(a) + Ns + "{" + (0, Ms.printIteratorEntries)(
    e.entries(),
    t,
    r7,
    n,
    i,
    s
  ) + "}", "printImmutableEntries");
  function Jie(e) {
    let t = 0;
    return {
      next() {
        if (t < e._keys.length) {
          let r7 = e._keys[t++];
          return {
            done: false,
            value: [r7, e.get(r7)]
          };
        }
        return {
          done: true,
          value: void 0
        };
      }
    };
  }
  o(Jie, "getRecordEntries");
  var Qie = /* @__PURE__ */ o((e, t, r7, n, i, s) => {
    let a = Ko(e._name || "Record");
    return ++n > t.maxDepth ? Tp(a) : a + Ns + "{" + (0, Ms.printIteratorEntries)(
      Jie(e),
      t,
      r7,
      n,
      i,
      s
    ) + "}";
  }, "printImmutableRecord"), Zie = /* @__PURE__ */ o((e, t, r7, n, i, s) => {
    let a = Ko("Seq");
    return ++n > t.maxDepth ? Tp(a) : e[Vie] ? a + Ns + "{" + // from Immutable collection of entries or from ECMAScript object
    (e._iter || e._object ? (0, Ms.printIteratorEntries)(
      e.entries(),
      t,
      r7,
      n,
      i,
      s
    ) : Aj) + "}" : a + Ns + "[" + (e._iter || // from Immutable collection of values
    e._array || // from ECMAScript array
    e._collection || // from ECMAScript collection in immutable v4
    e._iterable ? (0, Ms.printIteratorValues)(
      e.values(),
      t,
      r7,
      n,
      i,
      s
    ) : Aj) + "]";
  }, "printImmutableSeq"), bw = /* @__PURE__ */ o((e, t, r7, n, i, s, a) => ++n > t.maxDepth ? Tp(Ko(a)) : Ko(a) + Ns + "[" + (0, Ms.printIteratorValues)(
    e.values(),
    t,
    r7,
    n,
    i,
    s
  ) + "]", "printImmutableValues"), Oj = /* @__PURE__ */ o((e, t, r7, n, i, s) => e[zie] ? Xie(
    e,
    t,
    r7,
    n,
    i,
    s,
    e[Pj] ? "OrderedMap" : "Map"
  ) : e[Uie] ? bw(
    e,
    t,
    r7,
    n,
    i,
    s,
    "List"
  ) : e[Yie] ? bw(
    e,
    t,
    r7,
    n,
    i,
    s,
    e[Pj] ? "OrderedSet" : "Set"
  ) : e[Kie] ? bw(
    e,
    t,
    r7,
    n,
    i,
    s,
    "Stack"
  ) : e[Wie] ? Zie(e, t, r7, n, i, s) : Qie(e, t, r7, n, i, s), "serialize");
  Yr2.serialize = Oj;
  var qj = /* @__PURE__ */ o((e) => e && (e[Hie] === true || e[Gie] === true), "test");
  Yr2.test = qj;
  var ese = {
    serialize: Oj,
    test: qj
  }, tse = ese;
  Yr2.default = tse;
});
var Fj = y((ge) => {
  var Rp = 60103, Sp = 60106, js = 60107, ks = 60108, Ls = 60114, Fs = 60109, Ds = 60110, $s = 60112, Bs = 60113, gw = 60120, Hs = 60115, Us = 60116, Mj = 60121, Nj = 60122, jj = 60117, kj = 60129, Lj = 60131;
  typeof Symbol == "function" && Symbol.for && (ze = Symbol.for, Rp = ze("react.element"), Sp = ze("react.portal"), js = ze("react.fragment"), ks = ze("react.strict_mode"), Ls = ze("react.profiler"), Fs = ze("react.provider"), Ds = ze("react.context"), $s = ze("react.forward_ref"), Bs = ze("react.suspense"), gw = ze("react.suspense_list"), Hs = ze("react.memo"), Us = ze("react.lazy"), Mj = ze("react.block"), Nj = ze("react.server.block"), jj = ze("react.fundamental"), kj = ze("react.debug_trace_mode"), Lj = ze("react.legacy_hidden"));
  var ze;
  function Vt(e) {
    if (typeof e == "object" && e !== null) {
      var t = e.$$typeof;
      switch (t) {
        case Rp:
          switch (e = e.type, e) {
            case js:
            case Ls:
            case ks:
            case Bs:
            case gw:
              return e;
            default:
              switch (e = e && e.$$typeof, e) {
                case Ds:
                case $s:
                case Us:
                case Hs:
                case Fs:
                  return e;
                default:
                  return t;
              }
          }
        case Sp:
          return t;
      }
    }
  }
  o(Vt, "y");
  var rse = Fs, nse = Rp, ose = $s, ise = js, sse = Us, ase = Hs, lse = Sp, use = Ls, cse = ks, dse = Bs;
  ge.ContextConsumer = Ds;
  ge.ContextProvider = rse;
  ge.Element = nse;
  ge.ForwardRef = ose;
  ge.Fragment = ise;
  ge.Lazy = sse;
  ge.Memo = ase;
  ge.Portal = lse;
  ge.Profiler = use;
  ge.StrictMode = cse;
  ge.Suspense = dse;
  ge.isAsyncMode = function() {
    return false;
  };
  ge.isConcurrentMode = function() {
    return false;
  };
  ge.isContextConsumer = function(e) {
    return Vt(e) === Ds;
  };
  ge.isContextProvider = function(e) {
    return Vt(e) === Fs;
  };
  ge.isElement = function(e) {
    return typeof e == "object" && e !== null && e.$$typeof === Rp;
  };
  ge.isForwardRef = function(e) {
    return Vt(e) === $s;
  };
  ge.isFragment = function(e) {
    return Vt(e) === js;
  };
  ge.isLazy = function(e) {
    return Vt(e) === Us;
  };
  ge.isMemo = function(e) {
    return Vt(e) === Hs;
  };
  ge.isPortal = function(e) {
    return Vt(e) === Sp;
  };
  ge.isProfiler = function(e) {
    return Vt(e) === Ls;
  };
  ge.isStrictMode = function(e) {
    return Vt(e) === ks;
  };
  ge.isSuspense = function(e) {
    return Vt(e) === Bs;
  };
  ge.isValidElementType = function(e) {
    return typeof e == "string" || typeof e == "function" || e === js || e === Ls || e === kj || e === ks || e === Bs || e === gw || e === Lj || typeof e == "object" && e !== null && (e.$$typeof === Us || e.$$typeof === Hs || e.$$typeof === Fs || e.$$typeof === Ds || e.$$typeof === $s || e.$$typeof === jj || e.$$typeof === Mj || e[0] === Nj);
  };
  ge.typeOf = Vt;
});
var $j = y((Lje, Dj) => {
  Dj.exports = Fj();
});
var Gj = y((Kr2) => {
  Object.defineProperty(Kr2, "__esModule", {
    value: true
  });
  Kr2.test = Kr2.serialize = Kr2.default = void 0;
  var An = pse($j()), _p = wp();
  function Hj(e) {
    if (typeof WeakMap != "function") return null;
    var t = /* @__PURE__ */ new WeakMap(), r7 = /* @__PURE__ */ new WeakMap();
    return (Hj = /* @__PURE__ */ o(function(n) {
      return n ? r7 : t;
    }, "_getRequireWildcardCache"))(e);
  }
  o(Hj, "_getRequireWildcardCache");
  function pse(e, t) {
    if (!t && e && e.__esModule)
      return e;
    if (e === null || typeof e != "object" && typeof e != "function")
      return { default: e };
    var r7 = Hj(t);
    if (r7 && r7.has(e))
      return r7.get(e);
    var n = {}, i = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for (var s in e)
      if (s !== "default" && Object.prototype.hasOwnProperty.call(e, s)) {
        var a = i ? Object.getOwnPropertyDescriptor(e, s) : null;
        a && (a.get || a.set) ? Object.defineProperty(n, s, a) : n[s] = e[s];
      }
    return n.default = e, r7 && r7.set(e, n), n;
  }
  o(pse, "_interopRequireWildcard");
  var Uj = /* @__PURE__ */ o((e, t = []) => (Array.isArray(e) ? e.forEach((r7) => {
    Uj(r7, t);
  }) : e != null && e !== false && t.push(e), t), "getChildren"), Bj = /* @__PURE__ */ o((e) => {
    let t = e.type;
    if (typeof t == "string")
      return t;
    if (typeof t == "function")
      return t.displayName || t.name || "Unknown";
    if (An.isFragment(e))
      return "React.Fragment";
    if (An.isSuspense(e))
      return "React.Suspense";
    if (typeof t == "object" && t !== null) {
      if (An.isContextProvider(e))
        return "Context.Provider";
      if (An.isContextConsumer(e))
        return "Context.Consumer";
      if (An.isForwardRef(e)) {
        if (t.displayName)
          return t.displayName;
        let r7 = t.render.displayName || t.render.name || "";
        return r7 !== "" ? "ForwardRef(" + r7 + ")" : "ForwardRef";
      }
      if (An.isMemo(e)) {
        let r7 = t.displayName || t.type.displayName || t.type.name || "";
        return r7 !== "" ? "Memo(" + r7 + ")" : "Memo";
      }
    }
    return "UNDEFINED";
  }, "getType"), fse = /* @__PURE__ */ o((e) => {
    let { props: t } = e;
    return Object.keys(t).filter((r7) => r7 !== "children" && t[r7] !== void 0).sort();
  }, "getPropKeys"), Vj = /* @__PURE__ */ o((e, t, r7, n, i, s) => ++n > t.maxDepth ? (0, _p.printElementAsLeaf)(Bj(e), t) : (0, _p.printElement)(
    Bj(e),
    (0, _p.printProps)(
      fse(e),
      e.props,
      t,
      r7 + t.indent,
      n,
      i,
      s
    ),
    (0, _p.printChildren)(
      Uj(e.props.children),
      t,
      r7 + t.indent,
      n,
      i,
      s
    ),
    t,
    r7
  ), "serialize");
  Kr2.serialize = Vj;
  var zj = /* @__PURE__ */ o((e) => e != null && An.isElement(e), "test");
  Kr2.test = zj;
  var mse = {
    serialize: Vj,
    test: zj
  }, hse = mse;
  Kr2.default = hse;
});
var Kj = y((Xr2) => {
  Object.defineProperty(Xr2, "__esModule", {
    value: true
  });
  Xr2.test = Xr2.serialize = Xr2.default = void 0;
  var Cp = wp(), Pp = (function() {
    return typeof globalThis < "u" ? globalThis : typeof Pp < "u" ? Pp : typeof self < "u" ? self : typeof window < "u" ? window : Function(
      "return this"
    )();
  })(), vw = Pp["jest-symbol-do-not-touch"] || Pp.Symbol, yse = typeof vw == "function" && vw.for ? vw.for("react.test.json") : 245830487, bse = /* @__PURE__ */ o(
    (e) => {
      let { props: t } = e;
      return t ? Object.keys(t).filter((r7) => t[r7] !== void 0).sort() : [];
    },
    "getPropKeys"
  ), Wj = /* @__PURE__ */ o((e, t, r7, n, i, s) => ++n > t.maxDepth ? (0, Cp.printElementAsLeaf)(e.type, t) : (0, Cp.printElement)(
    e.type,
    e.props ? (0, Cp.printProps)(
      bse(e),
      e.props,
      t,
      r7 + t.indent,
      n,
      i,
      s
    ) : "",
    e.children ? (0, Cp.printChildren)(
      e.children,
      t,
      r7 + t.indent,
      n,
      i,
      s
    ) : "",
    t,
    r7
  ), "serialize");
  Xr2.serialize = Wj;
  var Yj = /* @__PURE__ */ o((e) => e && e.$$typeof === yse, "test");
  Xr2.test = Yj;
  var gse = {
    serialize: Wj,
    test: Yj
  }, vse = gse;
  Xr2.default = vse;
});
var dk = y((yr) => {
  Object.defineProperty(yr, "__esModule", {
    value: true
  });
  yr.default = yr.DEFAULT_OPTIONS = void 0;
  yr.format = ck;
  yr.plugins = void 0;
  var Ese = Qr2(fw()), Vs = Is(), xse = Qr2(
    sj()
  ), wse = Qr2(fj()), Tse = Qr2(gj()), Rse = Qr2(Cj()), Sse = Qr2(Ij()), _se = Qr2(Gj()), Cse = Qr2(
    Kj()
  );
  function Qr2(e) {
    return e && e.__esModule ? e : { default: e };
  }
  o(Qr2, "_interopRequireDefault");
  var tk = Object.prototype.toString, Pse = Date.prototype.toISOString, Ase = Error.prototype.toString, Xj = RegExp.prototype.toString, Ew = /* @__PURE__ */ o(
    (e) => typeof e.constructor == "function" && e.constructor.name || "Object",
    "getConstructorName"
  ), Ose = /* @__PURE__ */ o((e) => typeof window < "u" && e === window, "isWindow"), qse = /^Symbol\((.*)\)(.*)$/, Ise = /\n/gi, ww = class ww extends Error {
    constructor(t, r7) {
      super(t), this.stack = r7, this.name = this.constructor.name;
    }
  };
  o(ww, "PrettyFormatPluginError");
  var Ap = ww;
  function Mse(e) {
    return e === "[object Array]" || e === "[object ArrayBuffer]" || e === "[object DataView]" || e === "[object Float32Array]" || e === "[object Float64Array]" || e === "[object Int8Array]" || e === "[object Int16Array]" || e === "[object Int32Array]" || e === "[object Uint8Array]" || e === "[object Uint8ClampedArray]" || e === "[object Uint16Array]" || e === "[object Uint32Array]";
  }
  o(Mse, "isToStringedArrayType");
  function Nse(e) {
    return Object.is(e, -0) ? "-0" : String(e);
  }
  o(Nse, "printNumber");
  function jse(e) {
    return `${e}n`;
  }
  o(jse, "printBigInt");
  function Jj(e, t) {
    return t ? "[Function " + (e.name || "anonymous") + "]" : "[Function]";
  }
  o(Jj, "printFunction");
  function Qj(e) {
    return String(e).replace(qse, "Symbol($1)");
  }
  o(Qj, "printSymbol");
  function Zj(e) {
    return "[" + Ase.call(e) + "]";
  }
  o(Zj, "printError");
  function rk(e, t, r7, n) {
    if (e === true || e === false)
      return "" + e;
    if (e === void 0)
      return "undefined";
    if (e === null)
      return "null";
    let i = typeof e;
    if (i === "number")
      return Nse(e);
    if (i === "bigint")
      return jse(e);
    if (i === "string")
      return n ? '"' + e.replace(/"|\\/g, "\\$&") + '"' : '"' + e + '"';
    if (i === "function")
      return Jj(e, t);
    if (i === "symbol")
      return Qj(e);
    let s = tk.call(e);
    return s === "[object WeakMap]" ? "WeakMap {}" : s === "[object WeakSet]" ? "WeakSet {}" : s === "[object Function]" || s === "[object GeneratorFunction]" ? Jj(e, t) : s === "[object Symbol]" ? Qj(e) : s === "[object Date]" ? isNaN(+e) ? "Date { NaN }" : Pse.call(e) : s === "[object Error]" ? Zj(e) : s === "[object RegExp]" ? r7 ? Xj.call(e).replace(/[\\^$*+?.()|[\]{}]/g, "\\$&") : Xj.call(e) : e instanceof Error ? Zj(e) : null;
  }
  o(rk, "printBasicValue");
  function nk(e, t, r7, n, i, s) {
    if (i.indexOf(e) !== -1)
      return "[Circular]";
    i = i.slice(), i.push(e);
    let a = ++n > t.maxDepth, l = t.min;
    if (t.callToJSON && !a && e.toJSON && typeof e.toJSON == "function" && !s)
      return Jr2(e.toJSON(), t, r7, n, i, true);
    let u = tk.call(e);
    return u === "[object Arguments]" ? a ? "[Arguments]" : (l ? "" : "Arguments ") + "[" + (0, Vs.printListItems)(
      e,
      t,
      r7,
      n,
      i,
      Jr2
    ) + "]" : Mse(u) ? a ? "[" + e.constructor.name + "]" : (l || !t.printBasicPrototype && e.constructor.name === "Array" ? "" : e.constructor.name + " ") + "[" + (0, Vs.printListItems)(
      e,
      t,
      r7,
      n,
      i,
      Jr2
    ) + "]" : u === "[object Map]" ? a ? "[Map]" : "Map {" + (0, Vs.printIteratorEntries)(
      e.entries(),
      t,
      r7,
      n,
      i,
      Jr2,
      " => "
    ) + "}" : u === "[object Set]" ? a ? "[Set]" : "Set {" + (0, Vs.printIteratorValues)(
      e.values(),
      t,
      r7,
      n,
      i,
      Jr2
    ) + "}" : a || Ose(e) ? "[" + Ew(e) + "]" : (l || !t.printBasicPrototype && Ew(e) === "Object" ? "" : Ew(e) + " ") + "{" + (0, Vs.printObjectProperties)(
      e,
      t,
      r7,
      n,
      i,
      Jr2
    ) + "}";
  }
  o(nk, "printComplexValue");
  function kse(e) {
    return e.serialize != null;
  }
  o(kse, "isNewPlugin");
  function ok(e, t, r7, n, i, s) {
    let a;
    try {
      a = kse(e) ? e.serialize(t, r7, n, i, s, Jr2) : e.print(
        t,
        (l) => Jr2(l, r7, n, i, s),
        (l) => {
          let u = n + r7.indent;
          return u + l.replace(Ise, `
` + u);
        },
        {
          edgeSpacing: r7.spacingOuter,
          min: r7.min,
          spacing: r7.spacingInner
        },
        r7.colors
      );
    } catch (l) {
      throw new Ap(l.message, l.stack);
    }
    if (typeof a != "string")
      throw new Error(
        `pretty-format: Plugin must return type "string" but instead returned "${typeof a}".`
      );
    return a;
  }
  o(ok, "printPlugin");
  function ik(e, t) {
    for (let r7 = 0; r7 < e.length; r7++)
      try {
        if (e[r7].test(t))
          return e[r7];
      } catch (n) {
        throw new Ap(n.message, n.stack);
      }
    return null;
  }
  o(ik, "findPlugin");
  function Jr2(e, t, r7, n, i, s) {
    let a = ik(t.plugins, e);
    if (a !== null)
      return ok(a, e, t, r7, n, i);
    let l = rk(
      e,
      t.printFunctionName,
      t.escapeRegex,
      t.escapeString
    );
    return l !== null ? l : nk(
      e,
      t,
      r7,
      n,
      i,
      s
    );
  }
  o(Jr2, "printer");
  var xw = {
    comment: "gray",
    content: "reset",
    prop: "yellow",
    tag: "cyan",
    value: "green"
  }, sk = Object.keys(xw), zt = {
    callToJSON: true,
    compareKeys: void 0,
    escapeRegex: false,
    escapeString: true,
    highlight: false,
    indent: 2,
    maxDepth: 1 / 0,
    min: false,
    plugins: [],
    printBasicPrototype: true,
    printFunctionName: true,
    theme: xw
  };
  yr.DEFAULT_OPTIONS = zt;
  function Lse(e) {
    if (Object.keys(e).forEach((t) => {
      if (!zt.hasOwnProperty(t))
        throw new Error(`pretty-format: Unknown option "${t}".`);
    }), e.min && e.indent !== void 0 && e.indent !== 0)
      throw new Error(
        'pretty-format: Options "min" and "indent" cannot be used together.'
      );
    if (e.theme !== void 0) {
      if (e.theme === null)
        throw new Error('pretty-format: Option "theme" must not be null.');
      if (typeof e.theme != "object")
        throw new Error(
          `pretty-format: Option "theme" must be of type "object" but instead received "${typeof e.theme}".`
        );
    }
  }
  o(Lse, "validateOptions");
  var Fse = /* @__PURE__ */ o((e) => sk.reduce((t, r7) => {
    let n = e.theme && e.theme[r7] !== void 0 ? e.theme[r7] : xw[r7], i = n && Ese.default[n];
    if (i && typeof i.close == "string" && typeof i.open == "string")
      t[r7] = i;
    else
      throw new Error(
        `pretty-format: Option "theme" has a key "${r7}" whose value "${n}" is undefined in ansi-styles.`
      );
    return t;
  }, /* @__PURE__ */ Object.create(null)), "getColorsHighlight"), Dse = /* @__PURE__ */ o(() => sk.reduce((e, t) => (e[t] = {
    close: "",
    open: ""
  }, e), /* @__PURE__ */ Object.create(null)), "getColorsEmpty"), ak = /* @__PURE__ */ o((e) => e && e.printFunctionName !== void 0 ? e.printFunctionName : zt.printFunctionName, "getPrintFunctionName"), lk = /* @__PURE__ */ o(
    (e) => e && e.escapeRegex !== void 0 ? e.escapeRegex : zt.escapeRegex,
    "getEscapeRegex"
  ), uk = /* @__PURE__ */ o((e) => e && e.escapeString !== void 0 ? e.escapeString : zt.escapeString, "getEscapeString"), ek = /* @__PURE__ */ o(
    (e) => {
      var t;
      return {
        callToJSON: e && e.callToJSON !== void 0 ? e.callToJSON : zt.callToJSON,
        colors: e && e.highlight ? Fse(e) : Dse(),
        compareKeys: e && typeof e.compareKeys == "function" ? e.compareKeys : zt.compareKeys,
        escapeRegex: lk(e),
        escapeString: uk(e),
        indent: e && e.min ? "" : $se(
          e && e.indent !== void 0 ? e.indent : zt.indent
        ),
        maxDepth: e && e.maxDepth !== void 0 ? e.maxDepth : zt.maxDepth,
        min: e && e.min !== void 0 ? e.min : zt.min,
        plugins: e && e.plugins !== void 0 ? e.plugins : zt.plugins,
        printBasicPrototype: (t = e?.printBasicPrototype) !== null && t !== void 0 ? t : true,
        printFunctionName: ak(e),
        spacingInner: e && e.min ? " " : `
`,
        spacingOuter: e && e.min ? "" : `
`
      };
    },
    "getConfig"
  );
  function $se(e) {
    return new Array(e + 1).join(" ");
  }
  o($se, "createIndent");
  function ck(e, t) {
    if (t && (Lse(t), t.plugins)) {
      let n = ik(t.plugins, e);
      if (n !== null)
        return ok(n, e, ek(t), "", 0, []);
    }
    let r7 = rk(
      e,
      ak(t),
      lk(t),
      uk(t)
    );
    return r7 !== null ? r7 : nk(e, ek(t), "", 0, []);
  }
  o(ck, "format");
  var Bse = {
    AsymmetricMatcher: xse.default,
    ConvertAnsi: wse.default,
    DOMCollection: Tse.default,
    DOMElement: Rse.default,
    Immutable: Sse.default,
    ReactElement: _se.default,
    ReactTestComponent: Cse.default
  };
  yr.plugins = Bse;
  var Hse = ck;
  yr.default = Hse;
});
var Nk = y((Mp) => {
  Object.defineProperty(Mp, "__esModule", {
    value: true
  });
  Mp.default = void 0;
  function Eae() {
    var e = this, t = 0, r7 = {
      "@@iterator": /* @__PURE__ */ o(function() {
        return r7;
      }, "iterator"),
      next: /* @__PURE__ */ o(function() {
        if (t < e.length) {
          var i = e[t];
          return t = t + 1, {
            done: false,
            value: i
          };
        } else
          return {
            done: true
          };
      }, "next")
    };
    return r7;
  }
  o(Eae, "iteratorProxy");
  var xae = Eae;
  Mp.default = xae;
});
var Jo = y((Sw) => {
  Object.defineProperty(Sw, "__esModule", {
    value: true
  });
  Sw.default = Rae;
  var wae = Tae(Nk());
  function Tae(e) {
    return e && e.__esModule ? e : { default: e };
  }
  o(Tae, "_interopRequireDefault");
  function Rw(e) {
    "@babel/helpers - typeof";
    return Rw = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t) {
      return typeof t;
    } : function(t) {
      return t && typeof Symbol == "function" && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
    }, Rw(e);
  }
  o(Rw, "_typeof");
  function Rae(e, t) {
    return typeof Symbol == "function" && Rw(Symbol.iterator) === "symbol" && Object.defineProperty(e, Symbol.iterator, {
      value: wae.default.bind(t)
    }), e;
  }
  o(Rae, "iterationDecorator");
});
var Lk = y((Np) => {
  Object.defineProperty(Np, "__esModule", {
    value: true
  });
  Np.default = void 0;
  var Sae = _ae(Jo());
  function _ae(e) {
    return e && e.__esModule ? e : { default: e };
  }
  o(_ae, "_interopRequireDefault");
  function _w(e, t) {
    return Aae(e) || Pae(e, t) || kk(e, t) || Cae();
  }
  o(_w, "_slicedToArray");
  function Cae() {
    throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
  }
  o(Cae, "_nonIterableRest");
  function Pae(e, t) {
    var r7 = e == null ? null : typeof Symbol < "u" && e[Symbol.iterator] || e["@@iterator"];
    if (r7 != null) {
      var n = [], i = true, s = false, a, l;
      try {
        for (r7 = r7.call(e); !(i = (a = r7.next()).done) && (n.push(a.value), !(t && n.length === t)); i = true)
          ;
      } catch (u) {
        s = true, l = u;
      } finally {
        try {
          !i && r7.return != null && r7.return();
        } finally {
          if (s) throw l;
        }
      }
      return n;
    }
  }
  o(Pae, "_iterableToArrayLimit");
  function Aae(e) {
    if (Array.isArray(e)) return e;
  }
  o(Aae, "_arrayWithHoles");
  function Oae(e, t) {
    var r7 = typeof Symbol < "u" && e[Symbol.iterator] || e["@@iterator"];
    if (!r7) {
      if (Array.isArray(e) || (r7 = kk(e)) || t && e && typeof e.length == "number") {
        r7 && (e = r7);
        var n = 0, i = /* @__PURE__ */ o(function() {
        }, "F");
        return { s: i, n: /* @__PURE__ */ o(function() {
          return n >= e.length ? { done: true } : { done: false, value: e[n++] };
        }, "n"), e: /* @__PURE__ */ o(function(c) {
          throw c;
        }, "e"), f: i };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var s = true, a = false, l;
    return { s: /* @__PURE__ */ o(function() {
      r7 = r7.call(e);
    }, "s"), n: /* @__PURE__ */ o(function() {
      var c = r7.next();
      return s = c.done, c;
    }, "n"), e: /* @__PURE__ */ o(function(c) {
      a = true, l = c;
    }, "e"), f: /* @__PURE__ */ o(function() {
      try {
        !s && r7.return != null && r7.return();
      } finally {
        if (a) throw l;
      }
    }, "f") };
  }
  o(Oae, "_createForOfIteratorHelper");
  function kk(e, t) {
    if (e) {
      if (typeof e == "string") return jk(e, t);
      var r7 = Object.prototype.toString.call(e).slice(8, -1);
      if (r7 === "Object" && e.constructor && (r7 = e.constructor.name), r7 === "Map" || r7 === "Set") return Array.from(e);
      if (r7 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r7)) return jk(e, t);
    }
  }
  o(kk, "_unsupportedIterableToArray");
  function jk(e, t) {
    (t == null || t > e.length) && (t = e.length);
    for (var r7 = 0, n = new Array(t); r7 < t; r7++)
      n[r7] = e[r7];
    return n;
  }
  o(jk, "_arrayLikeToArray");
  var Qo = [["aria-activedescendant", {
    type: "id"
  }], ["aria-atomic", {
    type: "boolean"
  }], ["aria-autocomplete", {
    type: "token",
    values: ["inline", "list", "both", "none"]
  }], ["aria-braillelabel", {
    type: "string"
  }], ["aria-brailleroledescription", {
    type: "string"
  }], ["aria-busy", {
    type: "boolean"
  }], ["aria-checked", {
    type: "tristate"
  }], ["aria-colcount", {
    type: "integer"
  }], ["aria-colindex", {
    type: "integer"
  }], ["aria-colspan", {
    type: "integer"
  }], ["aria-controls", {
    type: "idlist"
  }], ["aria-current", {
    type: "token",
    values: ["page", "step", "location", "date", "time", true, false]
  }], ["aria-describedby", {
    type: "idlist"
  }], ["aria-description", {
    type: "string"
  }], ["aria-details", {
    type: "id"
  }], ["aria-disabled", {
    type: "boolean"
  }], ["aria-dropeffect", {
    type: "tokenlist",
    values: ["copy", "execute", "link", "move", "none", "popup"]
  }], ["aria-errormessage", {
    type: "id"
  }], ["aria-expanded", {
    type: "boolean",
    allowundefined: true
  }], ["aria-flowto", {
    type: "idlist"
  }], ["aria-grabbed", {
    type: "boolean",
    allowundefined: true
  }], ["aria-haspopup", {
    type: "token",
    values: [false, true, "menu", "listbox", "tree", "grid", "dialog"]
  }], ["aria-hidden", {
    type: "boolean",
    allowundefined: true
  }], ["aria-invalid", {
    type: "token",
    values: ["grammar", false, "spelling", true]
  }], ["aria-keyshortcuts", {
    type: "string"
  }], ["aria-label", {
    type: "string"
  }], ["aria-labelledby", {
    type: "idlist"
  }], ["aria-level", {
    type: "integer"
  }], ["aria-live", {
    type: "token",
    values: ["assertive", "off", "polite"]
  }], ["aria-modal", {
    type: "boolean"
  }], ["aria-multiline", {
    type: "boolean"
  }], ["aria-multiselectable", {
    type: "boolean"
  }], ["aria-orientation", {
    type: "token",
    values: ["vertical", "undefined", "horizontal"]
  }], ["aria-owns", {
    type: "idlist"
  }], ["aria-placeholder", {
    type: "string"
  }], ["aria-posinset", {
    type: "integer"
  }], ["aria-pressed", {
    type: "tristate"
  }], ["aria-readonly", {
    type: "boolean"
  }], ["aria-relevant", {
    type: "tokenlist",
    values: ["additions", "all", "removals", "text"]
  }], ["aria-required", {
    type: "boolean"
  }], ["aria-roledescription", {
    type: "string"
  }], ["aria-rowcount", {
    type: "integer"
  }], ["aria-rowindex", {
    type: "integer"
  }], ["aria-rowspan", {
    type: "integer"
  }], ["aria-selected", {
    type: "boolean",
    allowundefined: true
  }], ["aria-setsize", {
    type: "integer"
  }], ["aria-sort", {
    type: "token",
    values: ["ascending", "descending", "none", "other"]
  }], ["aria-valuemax", {
    type: "number"
  }], ["aria-valuemin", {
    type: "number"
  }], ["aria-valuenow", {
    type: "number"
  }], ["aria-valuetext", {
    type: "string"
  }]], Cw = {
    entries: /* @__PURE__ */ o(function() {
      return Qo;
    }, "entries"),
    forEach: /* @__PURE__ */ o(function(t) {
      var r7 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null, n = Oae(Qo), i;
      try {
        for (n.s(); !(i = n.n()).done; ) {
          var s = _w(i.value, 2), a = s[0], l = s[1];
          t.call(r7, l, a, Qo);
        }
      } catch (u) {
        n.e(u);
      } finally {
        n.f();
      }
    }, "forEach"),
    get: /* @__PURE__ */ o(function(t) {
      var r7 = Qo.find(function(n) {
        return n[0] === t;
      });
      return r7 && r7[1];
    }, "get"),
    has: /* @__PURE__ */ o(function(t) {
      return !!Cw.get(t);
    }, "has"),
    keys: /* @__PURE__ */ o(function() {
      return Qo.map(function(t) {
        var r7 = _w(t, 1), n = r7[0];
        return n;
      });
    }, "keys"),
    values: /* @__PURE__ */ o(function() {
      return Qo.map(function(t) {
        var r7 = _w(t, 2), n = r7[1];
        return n;
      });
    }, "values")
  }, qae = (0, Sae.default)(Cw, Cw.entries());
  Np.default = qae;
});
var $k = y((jp) => {
  Object.defineProperty(jp, "__esModule", {
    value: true
  });
  jp.default = void 0;
  var Iae = Mae(Jo());
  function Mae(e) {
    return e && e.__esModule ? e : { default: e };
  }
  o(Mae, "_interopRequireDefault");
  function Pw(e, t) {
    return kae(e) || jae(e, t) || Dk(e, t) || Nae();
  }
  o(Pw, "_slicedToArray");
  function Nae() {
    throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
  }
  o(Nae, "_nonIterableRest");
  function jae(e, t) {
    var r7 = e == null ? null : typeof Symbol < "u" && e[Symbol.iterator] || e["@@iterator"];
    if (r7 != null) {
      var n = [], i = true, s = false, a, l;
      try {
        for (r7 = r7.call(e); !(i = (a = r7.next()).done) && (n.push(a.value), !(t && n.length === t)); i = true)
          ;
      } catch (u) {
        s = true, l = u;
      } finally {
        try {
          !i && r7.return != null && r7.return();
        } finally {
          if (s) throw l;
        }
      }
      return n;
    }
  }
  o(jae, "_iterableToArrayLimit");
  function kae(e) {
    if (Array.isArray(e)) return e;
  }
  o(kae, "_arrayWithHoles");
  function Lae(e, t) {
    var r7 = typeof Symbol < "u" && e[Symbol.iterator] || e["@@iterator"];
    if (!r7) {
      if (Array.isArray(e) || (r7 = Dk(e)) || t && e && typeof e.length == "number") {
        r7 && (e = r7);
        var n = 0, i = /* @__PURE__ */ o(function() {
        }, "F");
        return { s: i, n: /* @__PURE__ */ o(function() {
          return n >= e.length ? { done: true } : { done: false, value: e[n++] };
        }, "n"), e: /* @__PURE__ */ o(function(c) {
          throw c;
        }, "e"), f: i };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var s = true, a = false, l;
    return { s: /* @__PURE__ */ o(function() {
      r7 = r7.call(e);
    }, "s"), n: /* @__PURE__ */ o(function() {
      var c = r7.next();
      return s = c.done, c;
    }, "n"), e: /* @__PURE__ */ o(function(c) {
      a = true, l = c;
    }, "e"), f: /* @__PURE__ */ o(function() {
      try {
        !s && r7.return != null && r7.return();
      } finally {
        if (a) throw l;
      }
    }, "f") };
  }
  o(Lae, "_createForOfIteratorHelper");
  function Dk(e, t) {
    if (e) {
      if (typeof e == "string") return Fk(e, t);
      var r7 = Object.prototype.toString.call(e).slice(8, -1);
      if (r7 === "Object" && e.constructor && (r7 = e.constructor.name), r7 === "Map" || r7 === "Set") return Array.from(e);
      if (r7 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r7)) return Fk(e, t);
    }
  }
  o(Dk, "_unsupportedIterableToArray");
  function Fk(e, t) {
    (t == null || t > e.length) && (t = e.length);
    for (var r7 = 0, n = new Array(t); r7 < t; r7++)
      n[r7] = e[r7];
    return n;
  }
  o(Fk, "_arrayLikeToArray");
  var Zo = [["a", {
    reserved: false
  }], ["abbr", {
    reserved: false
  }], ["acronym", {
    reserved: false
  }], ["address", {
    reserved: false
  }], ["applet", {
    reserved: false
  }], ["area", {
    reserved: false
  }], ["article", {
    reserved: false
  }], ["aside", {
    reserved: false
  }], ["audio", {
    reserved: false
  }], ["b", {
    reserved: false
  }], ["base", {
    reserved: true
  }], ["bdi", {
    reserved: false
  }], ["bdo", {
    reserved: false
  }], ["big", {
    reserved: false
  }], ["blink", {
    reserved: false
  }], ["blockquote", {
    reserved: false
  }], ["body", {
    reserved: false
  }], ["br", {
    reserved: false
  }], ["button", {
    reserved: false
  }], ["canvas", {
    reserved: false
  }], ["caption", {
    reserved: false
  }], ["center", {
    reserved: false
  }], ["cite", {
    reserved: false
  }], ["code", {
    reserved: false
  }], ["col", {
    reserved: true
  }], ["colgroup", {
    reserved: true
  }], ["content", {
    reserved: false
  }], ["data", {
    reserved: false
  }], ["datalist", {
    reserved: false
  }], ["dd", {
    reserved: false
  }], ["del", {
    reserved: false
  }], ["details", {
    reserved: false
  }], ["dfn", {
    reserved: false
  }], ["dialog", {
    reserved: false
  }], ["dir", {
    reserved: false
  }], ["div", {
    reserved: false
  }], ["dl", {
    reserved: false
  }], ["dt", {
    reserved: false
  }], ["em", {
    reserved: false
  }], ["embed", {
    reserved: false
  }], ["fieldset", {
    reserved: false
  }], ["figcaption", {
    reserved: false
  }], ["figure", {
    reserved: false
  }], ["font", {
    reserved: false
  }], ["footer", {
    reserved: false
  }], ["form", {
    reserved: false
  }], ["frame", {
    reserved: false
  }], ["frameset", {
    reserved: false
  }], ["h1", {
    reserved: false
  }], ["h2", {
    reserved: false
  }], ["h3", {
    reserved: false
  }], ["h4", {
    reserved: false
  }], ["h5", {
    reserved: false
  }], ["h6", {
    reserved: false
  }], ["head", {
    reserved: true
  }], ["header", {
    reserved: false
  }], ["hgroup", {
    reserved: false
  }], ["hr", {
    reserved: false
  }], ["html", {
    reserved: true
  }], ["i", {
    reserved: false
  }], ["iframe", {
    reserved: false
  }], ["img", {
    reserved: false
  }], ["input", {
    reserved: false
  }], ["ins", {
    reserved: false
  }], ["kbd", {
    reserved: false
  }], ["keygen", {
    reserved: false
  }], ["label", {
    reserved: false
  }], ["legend", {
    reserved: false
  }], ["li", {
    reserved: false
  }], ["link", {
    reserved: true
  }], ["main", {
    reserved: false
  }], ["map", {
    reserved: false
  }], ["mark", {
    reserved: false
  }], ["marquee", {
    reserved: false
  }], ["menu", {
    reserved: false
  }], ["menuitem", {
    reserved: false
  }], ["meta", {
    reserved: true
  }], ["meter", {
    reserved: false
  }], ["nav", {
    reserved: false
  }], ["noembed", {
    reserved: true
  }], ["noscript", {
    reserved: true
  }], ["object", {
    reserved: false
  }], ["ol", {
    reserved: false
  }], ["optgroup", {
    reserved: false
  }], ["option", {
    reserved: false
  }], ["output", {
    reserved: false
  }], ["p", {
    reserved: false
  }], ["param", {
    reserved: true
  }], ["picture", {
    reserved: true
  }], ["pre", {
    reserved: false
  }], ["progress", {
    reserved: false
  }], ["q", {
    reserved: false
  }], ["rp", {
    reserved: false
  }], ["rt", {
    reserved: false
  }], ["rtc", {
    reserved: false
  }], ["ruby", {
    reserved: false
  }], ["s", {
    reserved: false
  }], ["samp", {
    reserved: false
  }], ["script", {
    reserved: true
  }], ["section", {
    reserved: false
  }], ["select", {
    reserved: false
  }], ["small", {
    reserved: false
  }], ["source", {
    reserved: true
  }], ["spacer", {
    reserved: false
  }], ["span", {
    reserved: false
  }], ["strike", {
    reserved: false
  }], ["strong", {
    reserved: false
  }], ["style", {
    reserved: true
  }], ["sub", {
    reserved: false
  }], ["summary", {
    reserved: false
  }], ["sup", {
    reserved: false
  }], ["table", {
    reserved: false
  }], ["tbody", {
    reserved: false
  }], ["td", {
    reserved: false
  }], ["textarea", {
    reserved: false
  }], ["tfoot", {
    reserved: false
  }], ["th", {
    reserved: false
  }], ["thead", {
    reserved: false
  }], ["time", {
    reserved: false
  }], ["title", {
    reserved: true
  }], ["tr", {
    reserved: false
  }], ["track", {
    reserved: true
  }], ["tt", {
    reserved: false
  }], ["u", {
    reserved: false
  }], ["ul", {
    reserved: false
  }], ["var", {
    reserved: false
  }], ["video", {
    reserved: false
  }], ["wbr", {
    reserved: false
  }], ["xmp", {
    reserved: false
  }]], Aw = {
    entries: /* @__PURE__ */ o(function() {
      return Zo;
    }, "entries"),
    forEach: /* @__PURE__ */ o(function(t) {
      var r7 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null, n = Lae(Zo), i;
      try {
        for (n.s(); !(i = n.n()).done; ) {
          var s = Pw(i.value, 2), a = s[0], l = s[1];
          t.call(r7, l, a, Zo);
        }
      } catch (u) {
        n.e(u);
      } finally {
        n.f();
      }
    }, "forEach"),
    get: /* @__PURE__ */ o(function(t) {
      var r7 = Zo.find(function(n) {
        return n[0] === t;
      });
      return r7 && r7[1];
    }, "get"),
    has: /* @__PURE__ */ o(function(t) {
      return !!Aw.get(t);
    }, "has"),
    keys: /* @__PURE__ */ o(function() {
      return Zo.map(function(t) {
        var r7 = Pw(t, 1), n = r7[0];
        return n;
      });
    }, "keys"),
    values: /* @__PURE__ */ o(function() {
      return Zo.map(function(t) {
        var r7 = Pw(t, 2), n = r7[1];
        return n;
      });
    }, "values")
  }, Fae = (0, Iae.default)(Aw, Aw.entries());
  jp.default = Fae;
});
var Bk = y((kp) => {
  Object.defineProperty(kp, "__esModule", {
    value: true
  });
  kp.default = void 0;
  var Dae = {
    abstract: true,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "widget"]]
  }, $ae = Dae;
  kp.default = $ae;
});
var Hk = y((Lp) => {
  Object.defineProperty(Lp, "__esModule", {
    value: true
  });
  Lp.default = void 0;
  var Bae = {
    abstract: true,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-activedescendant": null,
      "aria-disabled": null
    },
    relatedConcepts: [],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "widget"]]
  }, Hae = Bae;
  Lp.default = Hae;
});
var Uk = y((Fp) => {
  Object.defineProperty(Fp, "__esModule", {
    value: true
  });
  Fp.default = void 0;
  var Uae = {
    abstract: true,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null
    },
    relatedConcepts: [{
      concept: {
        name: "input"
      },
      module: "XForms"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "widget"]]
  }, Vae = Uae;
  Fp.default = Vae;
});
var Vk = y((Dp) => {
  Object.defineProperty(Dp, "__esModule", {
    value: true
  });
  Dp.default = void 0;
  var zae = {
    abstract: true,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  }, Gae = zae;
  Dp.default = Gae;
});
var zk = y(($p) => {
  Object.defineProperty($p, "__esModule", {
    value: true
  });
  $p.default = void 0;
  var Wae = {
    abstract: true,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-valuemax": null,
      "aria-valuemin": null,
      "aria-valuenow": null
    },
    relatedConcepts: [],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure"]]
  }, Yae = Wae;
  $p.default = Yae;
});
var Gk = y((Bp) => {
  Object.defineProperty(Bp, "__esModule", {
    value: true
  });
  Bp.default = void 0;
  var Kae = {
    abstract: true,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: [],
    prohibitedProps: [],
    props: {
      "aria-atomic": null,
      "aria-busy": null,
      "aria-controls": null,
      "aria-current": null,
      "aria-describedby": null,
      "aria-details": null,
      "aria-dropeffect": null,
      "aria-flowto": null,
      "aria-grabbed": null,
      "aria-hidden": null,
      "aria-keyshortcuts": null,
      "aria-label": null,
      "aria-labelledby": null,
      "aria-live": null,
      "aria-owns": null,
      "aria-relevant": null,
      "aria-roledescription": null
    },
    relatedConcepts: [{
      concept: {
        name: "role"
      },
      module: "XHTML"
    }, {
      concept: {
        name: "type"
      },
      module: "Dublin Core"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: []
  }, Xae = Kae;
  Bp.default = Xae;
});
var Wk = y((Hp) => {
  Object.defineProperty(Hp, "__esModule", {
    value: true
  });
  Hp.default = void 0;
  var Jae = {
    abstract: true,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: [],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [{
      concept: {
        name: "frontmatter"
      },
      module: "DTB"
    }, {
      concept: {
        name: "level"
      },
      module: "DTB"
    }, {
      concept: {
        name: "level"
      },
      module: "SMIL"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure"]]
  }, Qae = Jae;
  Hp.default = Qae;
});
var Yk = y((Up) => {
  Object.defineProperty(Up, "__esModule", {
    value: true
  });
  Up.default = void 0;
  var Zae = {
    abstract: true,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author", "contents"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure"]]
  }, ele = Zae;
  Up.default = ele;
});
var Kk = y((Vp) => {
  Object.defineProperty(Vp, "__esModule", {
    value: true
  });
  Vp.default = void 0;
  var tle = {
    abstract: true,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-orientation": null
    },
    relatedConcepts: [],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "widget", "composite"], ["roletype", "structure", "section", "group"]]
  }, rle = tle;
  Vp.default = rle;
});
var Xk = y((zp) => {
  Object.defineProperty(zp, "__esModule", {
    value: true
  });
  zp.default = void 0;
  var nle = {
    abstract: true,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: [],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype"]]
  }, ole = nle;
  zp.default = ole;
});
var Jk = y((Gp) => {
  Object.defineProperty(Gp, "__esModule", {
    value: true
  });
  Gp.default = void 0;
  var ile = {
    abstract: true,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: [],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype"]]
  }, sle = ile;
  Gp.default = sle;
});
var Qk = y((Wp) => {
  Object.defineProperty(Wp, "__esModule", {
    value: true
  });
  Wp.default = void 0;
  var ale = {
    abstract: true,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-modal": null
    },
    relatedConcepts: [],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype"]]
  }, lle = ale;
  Wp.default = lle;
});
var Zk = y((Yp) => {
  Object.defineProperty(Yp, "__esModule", {
    value: true
  });
  Yp.default = void 0;
  var ule = It2(Bk()), cle = It2(Hk()), dle = It2(Uk()), ple = It2(Vk()), fle = It2(zk()), mle = It2(Gk()), hle = It2(Wk()), yle = It2(Yk()), ble = It2(
    Kk()
  ), gle = It2(Xk()), vle = It2(Jk()), Ele = It2(Qk());
  function It2(e) {
    return e && e.__esModule ? e : { default: e };
  }
  o(It2, "_interopRequireDefault");
  var xle = [
    ["command", ule.default],
    ["composite", cle.default],
    ["input", dle.default],
    ["landmark", ple.default],
    ["range", fle.default],
    ["roletype", mle.default],
    ["section", hle.default],
    ["sectionhead", yle.default],
    ["select", ble.default],
    ["structure", gle.default],
    ["widget", vle.default],
    ["window", Ele.default]
  ], wle = xle;
  Yp.default = wle;
});
var eL = y((Kp) => {
  Object.defineProperty(Kp, "__esModule", {
    value: true
  });
  Kp.default = void 0;
  var Tle = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-atomic": "true",
      "aria-live": "assertive"
    },
    relatedConcepts: [{
      concept: {
        name: "alert"
      },
      module: "XForms"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  }, Rle = Tle;
  Kp.default = Rle;
});
var tL = y((Xp) => {
  Object.defineProperty(Xp, "__esModule", {
    value: true
  });
  Xp.default = void 0;
  var Sle = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [{
      concept: {
        name: "alert"
      },
      module: "XForms"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "alert"], ["roletype", "window", "dialog"]]
  }, _le = Sle;
  Xp.default = _le;
});
var rL = y((Jp) => {
  Object.defineProperty(Jp, "__esModule", {
    value: true
  });
  Jp.default = void 0;
  var Cle = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-activedescendant": null,
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "Device Independence Delivery Unit"
      }
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure"]]
  }, Ple = Cle;
  Jp.default = Ple;
});
var nL = y((Qp) => {
  Object.defineProperty(Qp, "__esModule", {
    value: true
  });
  Qp.default = void 0;
  var Ale = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-posinset": null,
      "aria-setsize": null
    },
    relatedConcepts: [{
      concept: {
        name: "article"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "document"]]
  }, Ole = Ale;
  Qp.default = Ole;
});
var oL = y((Zp) => {
  Object.defineProperty(Zp, "__esModule", {
    value: true
  });
  Zp.default = void 0;
  var qle = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [{
      concept: {
        constraints: ["scoped to the body element"],
        name: "header"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "landmark"]]
  }, Ile = qle;
  Zp.default = Ile;
});
var iL = y((ef) => {
  Object.defineProperty(ef, "__esModule", {
    value: true
  });
  ef.default = void 0;
  var Mle = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [{
      concept: {
        name: "blockquote"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  }, Nle = Mle;
  ef.default = Nle;
});
var sL = y((tf) => {
  Object.defineProperty(tf, "__esModule", {
    value: true
  });
  tf.default = void 0;
  var jle = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: true,
    nameFrom: ["author", "contents"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-pressed": null
    },
    relatedConcepts: [{
      concept: {
        attributes: [{
          name: "type",
          value: "button"
        }],
        name: "input"
      },
      module: "HTML"
    }, {
      concept: {
        attributes: [{
          name: "type",
          value: "image"
        }],
        name: "input"
      },
      module: "HTML"
    }, {
      concept: {
        attributes: [{
          name: "type",
          value: "reset"
        }],
        name: "input"
      },
      module: "HTML"
    }, {
      concept: {
        attributes: [{
          name: "type",
          value: "submit"
        }],
        name: "input"
      },
      module: "HTML"
    }, {
      concept: {
        name: "button"
      },
      module: "HTML"
    }, {
      concept: {
        name: "trigger"
      },
      module: "XForms"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "widget", "command"]]
  }, kle = jle;
  tf.default = kle;
});
var aL = y((rf) => {
  Object.defineProperty(rf, "__esModule", {
    value: true
  });
  rf.default = void 0;
  var Lle = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["prohibited"],
    prohibitedProps: ["aria-label", "aria-labelledby"],
    props: {},
    relatedConcepts: [{
      concept: {
        name: "caption"
      },
      module: "HTML"
    }],
    requireContextRole: ["figure", "grid", "table"],
    requiredContextRole: ["figure", "grid", "table"],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  }, Fle = Lle;
  rf.default = Fle;
});
var lL = y((nf) => {
  Object.defineProperty(nf, "__esModule", {
    value: true
  });
  nf.default = void 0;
  var Dle = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author", "contents"],
    prohibitedProps: [],
    props: {
      "aria-colindex": null,
      "aria-colspan": null,
      "aria-rowindex": null,
      "aria-rowspan": null
    },
    relatedConcepts: [{
      concept: {
        constraints: ["ancestor table element has table role"],
        name: "td"
      },
      module: "HTML"
    }],
    requireContextRole: ["row"],
    requiredContextRole: ["row"],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  }, $le = Dle;
  nf.default = $le;
});
var uL = y((of) => {
  Object.defineProperty(of, "__esModule", {
    value: true
  });
  of.default = void 0;
  var Ble = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: true,
    nameFrom: ["author", "contents"],
    prohibitedProps: [],
    props: {
      "aria-checked": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-invalid": null,
      "aria-readonly": null,
      "aria-required": null
    },
    relatedConcepts: [{
      concept: {
        attributes: [{
          name: "type",
          value: "checkbox"
        }],
        name: "input"
      },
      module: "HTML"
    }, {
      concept: {
        name: "option"
      },
      module: "ARIA"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {
      "aria-checked": null
    },
    superClass: [["roletype", "widget", "input"]]
  }, Hle = Ble;
  of.default = Hle;
});
var cL = y((sf) => {
  Object.defineProperty(sf, "__esModule", {
    value: true
  });
  sf.default = void 0;
  var Ule = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["prohibited"],
    prohibitedProps: ["aria-label", "aria-labelledby"],
    props: {},
    relatedConcepts: [{
      concept: {
        name: "code"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  }, Vle = Ule;
  sf.default = Vle;
});
var dL = y((af) => {
  Object.defineProperty(af, "__esModule", {
    value: true
  });
  af.default = void 0;
  var zle = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author", "contents"],
    prohibitedProps: [],
    props: {
      "aria-sort": null
    },
    relatedConcepts: [{
      concept: {
        name: "th"
      },
      module: "HTML"
    }, {
      concept: {
        attributes: [{
          name: "scope",
          value: "col"
        }],
        name: "th"
      },
      module: "HTML"
    }, {
      concept: {
        attributes: [{
          name: "scope",
          value: "colgroup"
        }],
        name: "th"
      },
      module: "HTML"
    }],
    requireContextRole: ["row"],
    requiredContextRole: ["row"],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "cell"], ["roletype", "structure", "section", "cell", "gridcell"], ["roletype", "widget", "gridcell"], ["roletype", "structure", "sectionhead"]]
  }, Gle = zle;
  af.default = Gle;
});
var pL = y((lf) => {
  Object.defineProperty(lf, "__esModule", {
    value: true
  });
  lf.default = void 0;
  var Wle = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-activedescendant": null,
      "aria-autocomplete": null,
      "aria-errormessage": null,
      "aria-invalid": null,
      "aria-readonly": null,
      "aria-required": null,
      "aria-expanded": "false",
      "aria-haspopup": "listbox"
    },
    relatedConcepts: [{
      concept: {
        attributes: [{
          constraints: ["set"],
          name: "list"
        }, {
          name: "type",
          value: "email"
        }],
        name: "input"
      },
      module: "HTML"
    }, {
      concept: {
        attributes: [{
          constraints: ["set"],
          name: "list"
        }, {
          name: "type",
          value: "search"
        }],
        name: "input"
      },
      module: "HTML"
    }, {
      concept: {
        attributes: [{
          constraints: ["set"],
          name: "list"
        }, {
          name: "type",
          value: "tel"
        }],
        name: "input"
      },
      module: "HTML"
    }, {
      concept: {
        attributes: [{
          constraints: ["set"],
          name: "list"
        }, {
          name: "type",
          value: "text"
        }],
        name: "input"
      },
      module: "HTML"
    }, {
      concept: {
        attributes: [{
          constraints: ["set"],
          name: "list"
        }, {
          name: "type",
          value: "url"
        }],
        name: "input"
      },
      module: "HTML"
    }, {
      concept: {
        attributes: [{
          constraints: ["set"],
          name: "list"
        }, {
          name: "type",
          value: "url"
        }],
        name: "input"
      },
      module: "HTML"
    }, {
      concept: {
        attributes: [{
          constraints: ["undefined"],
          name: "multiple"
        }, {
          constraints: ["undefined"],
          name: "size"
        }],
        constraints: ["the multiple attribute is not set and the size attribute does not have a value greater than 1"],
        name: "select"
      },
      module: "HTML"
    }, {
      concept: {
        name: "select"
      },
      module: "XForms"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {
      "aria-controls": null,
      "aria-expanded": "false"
    },
    superClass: [["roletype", "widget", "input"]]
  }, Yle = Wle;
  lf.default = Yle;
});
var fL = y((uf) => {
  Object.defineProperty(uf, "__esModule", {
    value: true
  });
  uf.default = void 0;
  var Kle = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [{
      concept: {
        name: "aside"
      },
      module: "HTML"
    }, {
      concept: {
        attributes: [{
          constraints: ["set"],
          name: "aria-label"
        }],
        constraints: ["scoped to a sectioning content element", "scoped to a sectioning root element other than body"],
        name: "aside"
      },
      module: "HTML"
    }, {
      concept: {
        attributes: [{
          constraints: ["set"],
          name: "aria-labelledby"
        }],
        constraints: ["scoped to a sectioning content element", "scoped to a sectioning root element other than body"],
        name: "aside"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "landmark"]]
  }, Xle = Kle;
  uf.default = Xle;
});
var mL = y((cf) => {
  Object.defineProperty(cf, "__esModule", {
    value: true
  });
  cf.default = void 0;
  var Jle = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [{
      concept: {
        constraints: ["scoped to the body element"],
        name: "footer"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "landmark"]]
  }, Qle = Jle;
  cf.default = Qle;
});
var hL = y((df) => {
  Object.defineProperty(df, "__esModule", {
    value: true
  });
  df.default = void 0;
  var Zle = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [{
      concept: {
        name: "dd"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  }, eue = Zle;
  df.default = eue;
});
var yL = y((pf) => {
  Object.defineProperty(pf, "__esModule", {
    value: true
  });
  pf.default = void 0;
  var tue = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["prohibited"],
    prohibitedProps: ["aria-label", "aria-labelledby"],
    props: {},
    relatedConcepts: [{
      concept: {
        name: "del"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  }, rue = tue;
  pf.default = rue;
});
var bL = y((ff) => {
  Object.defineProperty(ff, "__esModule", {
    value: true
  });
  ff.default = void 0;
  var nue = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [{
      concept: {
        name: "dialog"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "window"]]
  }, oue = nue;
  ff.default = oue;
});
var gL = y((mf) => {
  Object.defineProperty(mf, "__esModule", {
    value: true
  });
  mf.default = void 0;
  var iue = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [{
      module: "DAISY Guide"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "list"]]
  }, sue = iue;
  mf.default = sue;
});
var vL = y((hf) => {
  Object.defineProperty(hf, "__esModule", {
    value: true
  });
  hf.default = void 0;
  var aue = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [{
      concept: {
        name: "Device Independence Delivery Unit"
      }
    }, {
      concept: {
        name: "html"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure"]]
  }, lue = aue;
  hf.default = lue;
});
var EL = y((yf) => {
  Object.defineProperty(yf, "__esModule", {
    value: true
  });
  yf.default = void 0;
  var uue = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["prohibited"],
    prohibitedProps: ["aria-label", "aria-labelledby"],
    props: {},
    relatedConcepts: [{
      concept: {
        name: "em"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  }, cue = uue;
  yf.default = cue;
});
var xL = y((bf) => {
  Object.defineProperty(bf, "__esModule", {
    value: true
  });
  bf.default = void 0;
  var due = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [["article"]],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "list"]]
  }, pue = due;
  bf.default = pue;
});
var wL = y((gf) => {
  Object.defineProperty(gf, "__esModule", {
    value: true
  });
  gf.default = void 0;
  var fue = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [{
      concept: {
        name: "figure"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  }, mue = fue;
  gf.default = mue;
});
var TL = y((vf) => {
  Object.defineProperty(vf, "__esModule", {
    value: true
  });
  vf.default = void 0;
  var hue = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [{
      concept: {
        attributes: [{
          constraints: ["set"],
          name: "aria-label"
        }],
        name: "form"
      },
      module: "HTML"
    }, {
      concept: {
        attributes: [{
          constraints: ["set"],
          name: "aria-labelledby"
        }],
        name: "form"
      },
      module: "HTML"
    }, {
      concept: {
        attributes: [{
          constraints: ["set"],
          name: "name"
        }],
        name: "form"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "landmark"]]
  }, yue = hue;
  vf.default = yue;
});
var RL = y((Ef) => {
  Object.defineProperty(Ef, "__esModule", {
    value: true
  });
  Ef.default = void 0;
  var bue = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["prohibited"],
    prohibitedProps: ["aria-label", "aria-labelledby"],
    props: {},
    relatedConcepts: [{
      concept: {
        name: "a"
      },
      module: "HTML"
    }, {
      concept: {
        name: "area"
      },
      module: "HTML"
    }, {
      concept: {
        name: "aside"
      },
      module: "HTML"
    }, {
      concept: {
        name: "b"
      },
      module: "HTML"
    }, {
      concept: {
        name: "bdo"
      },
      module: "HTML"
    }, {
      concept: {
        name: "body"
      },
      module: "HTML"
    }, {
      concept: {
        name: "data"
      },
      module: "HTML"
    }, {
      concept: {
        name: "div"
      },
      module: "HTML"
    }, {
      concept: {
        constraints: ["scoped to the main element", "scoped to a sectioning content element", "scoped to a sectioning root element other than body"],
        name: "footer"
      },
      module: "HTML"
    }, {
      concept: {
        constraints: ["scoped to the main element", "scoped to a sectioning content element", "scoped to a sectioning root element other than body"],
        name: "header"
      },
      module: "HTML"
    }, {
      concept: {
        name: "hgroup"
      },
      module: "HTML"
    }, {
      concept: {
        name: "i"
      },
      module: "HTML"
    }, {
      concept: {
        name: "pre"
      },
      module: "HTML"
    }, {
      concept: {
        name: "q"
      },
      module: "HTML"
    }, {
      concept: {
        name: "samp"
      },
      module: "HTML"
    }, {
      concept: {
        name: "section"
      },
      module: "HTML"
    }, {
      concept: {
        name: "small"
      },
      module: "HTML"
    }, {
      concept: {
        name: "span"
      },
      module: "HTML"
    }, {
      concept: {
        name: "u"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure"]]
  }, gue = bue;
  Ef.default = gue;
});
var SL = y((xf) => {
  Object.defineProperty(xf, "__esModule", {
    value: true
  });
  xf.default = void 0;
  var vue = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-multiselectable": null,
      "aria-readonly": null
    },
    relatedConcepts: [],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [["row"], ["row", "rowgroup"]],
    requiredProps: {},
    superClass: [["roletype", "widget", "composite"], ["roletype", "structure", "section", "table"]]
  }, Eue = vue;
  xf.default = Eue;
});
var _L = y((wf) => {
  Object.defineProperty(wf, "__esModule", {
    value: true
  });
  wf.default = void 0;
  var xue = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author", "contents"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null,
      "aria-readonly": null,
      "aria-required": null,
      "aria-selected": null
    },
    relatedConcepts: [{
      concept: {
        constraints: ["ancestor table element has grid role", "ancestor table element has treegrid role"],
        name: "td"
      },
      module: "HTML"
    }],
    requireContextRole: ["row"],
    requiredContextRole: ["row"],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "cell"], ["roletype", "widget"]]
  }, wue = xue;
  wf.default = wue;
});
var CL = y((Tf) => {
  Object.defineProperty(Tf, "__esModule", {
    value: true
  });
  Tf.default = void 0;
  var Tue = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-activedescendant": null,
      "aria-disabled": null
    },
    relatedConcepts: [{
      concept: {
        name: "details"
      },
      module: "HTML"
    }, {
      concept: {
        name: "fieldset"
      },
      module: "HTML"
    }, {
      concept: {
        name: "optgroup"
      },
      module: "HTML"
    }, {
      concept: {
        name: "address"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  }, Rue = Tue;
  Tf.default = Rue;
});
var PL = y((Rf) => {
  Object.defineProperty(Rf, "__esModule", {
    value: true
  });
  Rf.default = void 0;
  var Sue = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author", "contents"],
    prohibitedProps: [],
    props: {
      "aria-level": "2"
    },
    relatedConcepts: [{
      concept: {
        name: "h1"
      },
      module: "HTML"
    }, {
      concept: {
        name: "h2"
      },
      module: "HTML"
    }, {
      concept: {
        name: "h3"
      },
      module: "HTML"
    }, {
      concept: {
        name: "h4"
      },
      module: "HTML"
    }, {
      concept: {
        name: "h5"
      },
      module: "HTML"
    }, {
      concept: {
        name: "h6"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {
      "aria-level": "2"
    },
    superClass: [["roletype", "structure", "sectionhead"]]
  }, _ue = Sue;
  Rf.default = _ue;
});
var AL = y((Sf) => {
  Object.defineProperty(Sf, "__esModule", {
    value: true
  });
  Sf.default = void 0;
  var Cue = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: true,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [{
      concept: {
        attributes: [{
          constraints: ["set"],
          name: "alt"
        }],
        name: "img"
      },
      module: "HTML"
    }, {
      concept: {
        attributes: [{
          constraints: ["undefined"],
          name: "alt"
        }],
        name: "img"
      },
      module: "HTML"
    }, {
      concept: {
        name: "imggroup"
      },
      module: "DTB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  }, Pue = Cue;
  Sf.default = Pue;
});
var OL = y((_f) => {
  Object.defineProperty(_f, "__esModule", {
    value: true
  });
  _f.default = void 0;
  var Aue = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["prohibited"],
    prohibitedProps: ["aria-label", "aria-labelledby"],
    props: {},
    relatedConcepts: [{
      concept: {
        name: "ins"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  }, Oue = Aue;
  _f.default = Oue;
});
var qL = y((Cf) => {
  Object.defineProperty(Cf, "__esModule", {
    value: true
  });
  Cf.default = void 0;
  var que = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author", "contents"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-expanded": null,
      "aria-haspopup": null
    },
    relatedConcepts: [{
      concept: {
        attributes: [{
          constraints: ["set"],
          name: "href"
        }],
        name: "a"
      },
      module: "HTML"
    }, {
      concept: {
        attributes: [{
          constraints: ["set"],
          name: "href"
        }],
        name: "area"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "widget", "command"]]
  }, Iue = que;
  Cf.default = Iue;
});
var IL = y((Pf) => {
  Object.defineProperty(Pf, "__esModule", {
    value: true
  });
  Pf.default = void 0;
  var Mue = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [{
      concept: {
        name: "menu"
      },
      module: "HTML"
    }, {
      concept: {
        name: "ol"
      },
      module: "HTML"
    }, {
      concept: {
        name: "ul"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [["listitem"]],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  }, Nue = Mue;
  Pf.default = Nue;
});
var ML = y((Af) => {
  Object.defineProperty(Af, "__esModule", {
    value: true
  });
  Af.default = void 0;
  var jue = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-invalid": null,
      "aria-multiselectable": null,
      "aria-readonly": null,
      "aria-required": null,
      "aria-orientation": "vertical"
    },
    relatedConcepts: [{
      concept: {
        attributes: [{
          constraints: [">1"],
          name: "size"
        }],
        constraints: ["the size attribute value is greater than 1"],
        name: "select"
      },
      module: "HTML"
    }, {
      concept: {
        attributes: [{
          name: "multiple"
        }],
        name: "select"
      },
      module: "HTML"
    }, {
      concept: {
        name: "datalist"
      },
      module: "HTML"
    }, {
      concept: {
        name: "list"
      },
      module: "ARIA"
    }, {
      concept: {
        name: "select"
      },
      module: "XForms"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [["option", "group"], ["option"]],
    requiredProps: {},
    superClass: [["roletype", "widget", "composite", "select"], ["roletype", "structure", "section", "group", "select"]]
  }, kue = jue;
  Af.default = kue;
});
var NL = y((Of) => {
  Object.defineProperty(Of, "__esModule", {
    value: true
  });
  Of.default = void 0;
  var Lue = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-level": null,
      "aria-posinset": null,
      "aria-setsize": null
    },
    relatedConcepts: [{
      concept: {
        constraints: ["direct descendant of ol", "direct descendant of ul", "direct descendant of menu"],
        name: "li"
      },
      module: "HTML"
    }, {
      concept: {
        name: "item"
      },
      module: "XForms"
    }],
    requireContextRole: ["directory", "list"],
    requiredContextRole: ["directory", "list"],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  }, Fue = Lue;
  Of.default = Fue;
});
var jL = y((qf) => {
  Object.defineProperty(qf, "__esModule", {
    value: true
  });
  qf.default = void 0;
  var Due = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-live": "polite"
    },
    relatedConcepts: [],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  }, $ue = Due;
  qf.default = $ue;
});
var kL = y((If) => {
  Object.defineProperty(If, "__esModule", {
    value: true
  });
  If.default = void 0;
  var Bue = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [{
      concept: {
        name: "main"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "landmark"]]
  }, Hue = Bue;
  If.default = Hue;
});
var LL = y((Mf) => {
  Object.defineProperty(Mf, "__esModule", {
    value: true
  });
  Mf.default = void 0;
  var Uue = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["prohibited"],
    prohibitedProps: [],
    props: {
      "aria-braillelabel": null,
      "aria-brailleroledescription": null,
      "aria-description": null
    },
    relatedConcepts: [{
      concept: {
        name: "mark"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  }, Vue = Uue;
  Mf.default = Vue;
});
var FL = y((Nf) => {
  Object.defineProperty(Nf, "__esModule", {
    value: true
  });
  Nf.default = void 0;
  var zue = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  }, Gue = zue;
  Nf.default = Gue;
});
var DL = y((jf) => {
  Object.defineProperty(jf, "__esModule", {
    value: true
  });
  jf.default = void 0;
  var Wue = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [{
      concept: {
        name: "math"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  }, Yue = Wue;
  jf.default = Yue;
});
var $L = y((kf) => {
  Object.defineProperty(kf, "__esModule", {
    value: true
  });
  kf.default = void 0;
  var Kue = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-orientation": "vertical"
    },
    relatedConcepts: [{
      concept: {
        name: "MENU"
      },
      module: "JAPI"
    }, {
      concept: {
        name: "list"
      },
      module: "ARIA"
    }, {
      concept: {
        name: "select"
      },
      module: "XForms"
    }, {
      concept: {
        name: "sidebar"
      },
      module: "DTB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [["menuitem", "group"], ["menuitemradio", "group"], ["menuitemcheckbox", "group"], ["menuitem"], ["menuitemcheckbox"], ["menuitemradio"]],
    requiredProps: {},
    superClass: [["roletype", "widget", "composite", "select"], ["roletype", "structure", "section", "group", "select"]]
  }, Xue = Kue;
  kf.default = Xue;
});
var BL = y((Lf) => {
  Object.defineProperty(Lf, "__esModule", {
    value: true
  });
  Lf.default = void 0;
  var Jue = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-orientation": "horizontal"
    },
    relatedConcepts: [{
      concept: {
        name: "toolbar"
      },
      module: "ARIA"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [["menuitem", "group"], ["menuitemradio", "group"], ["menuitemcheckbox", "group"], ["menuitem"], ["menuitemcheckbox"], ["menuitemradio"]],
    requiredProps: {},
    superClass: [["roletype", "widget", "composite", "select", "menu"], ["roletype", "structure", "section", "group", "select", "menu"]]
  }, Que = Jue;
  Lf.default = Que;
});
var HL = y((Ff) => {
  Object.defineProperty(Ff, "__esModule", {
    value: true
  });
  Ff.default = void 0;
  var Zue = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author", "contents"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-posinset": null,
      "aria-setsize": null
    },
    relatedConcepts: [{
      concept: {
        name: "MENU_ITEM"
      },
      module: "JAPI"
    }, {
      concept: {
        name: "listitem"
      },
      module: "ARIA"
    }, {
      concept: {
        name: "option"
      },
      module: "ARIA"
    }],
    requireContextRole: ["group", "menu", "menubar"],
    requiredContextRole: ["group", "menu", "menubar"],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "widget", "command"]]
  }, ece = Zue;
  Ff.default = ece;
});
var UL = y((Df) => {
  Object.defineProperty(Df, "__esModule", {
    value: true
  });
  Df.default = void 0;
  var tce = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: true,
    nameFrom: ["author", "contents"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [{
      concept: {
        name: "menuitem"
      },
      module: "ARIA"
    }],
    requireContextRole: ["group", "menu", "menubar"],
    requiredContextRole: ["group", "menu", "menubar"],
    requiredOwnedElements: [],
    requiredProps: {
      "aria-checked": null
    },
    superClass: [["roletype", "widget", "input", "checkbox"], ["roletype", "widget", "command", "menuitem"]]
  }, rce = tce;
  Df.default = rce;
});
var VL = y(($f) => {
  Object.defineProperty($f, "__esModule", {
    value: true
  });
  $f.default = void 0;
  var nce = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: true,
    nameFrom: ["author", "contents"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [{
      concept: {
        name: "menuitem"
      },
      module: "ARIA"
    }],
    requireContextRole: ["group", "menu", "menubar"],
    requiredContextRole: ["group", "menu", "menubar"],
    requiredOwnedElements: [],
    requiredProps: {
      "aria-checked": null
    },
    superClass: [["roletype", "widget", "input", "checkbox", "menuitemcheckbox"], ["roletype", "widget", "command", "menuitem", "menuitemcheckbox"], ["roletype", "widget", "input", "radio"]]
  }, oce = nce;
  $f.default = oce;
});
var zL = y((Bf) => {
  Object.defineProperty(Bf, "__esModule", {
    value: true
  });
  Bf.default = void 0;
  var ice = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: true,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-valuetext": null,
      "aria-valuemax": "100",
      "aria-valuemin": "0"
    },
    relatedConcepts: [{
      concept: {
        name: "meter"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {
      "aria-valuenow": null
    },
    superClass: [["roletype", "structure", "range"]]
  }, sce = ice;
  Bf.default = sce;
});
var GL = y((Hf) => {
  Object.defineProperty(Hf, "__esModule", {
    value: true
  });
  Hf.default = void 0;
  var ace = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [{
      concept: {
        name: "nav"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "landmark"]]
  }, lce = ace;
  Hf.default = lce;
});
var WL = y((Uf) => {
  Object.defineProperty(Uf, "__esModule", {
    value: true
  });
  Uf.default = void 0;
  var uce = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: [],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: []
  }, cce = uce;
  Uf.default = cce;
});
var YL = y((Vf) => {
  Object.defineProperty(Vf, "__esModule", {
    value: true
  });
  Vf.default = void 0;
  var dce = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  }, pce = dce;
  Vf.default = pce;
});
var KL = y((zf) => {
  Object.defineProperty(zf, "__esModule", {
    value: true
  });
  zf.default = void 0;
  var fce = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: true,
    nameFrom: ["author", "contents"],
    prohibitedProps: [],
    props: {
      "aria-checked": null,
      "aria-posinset": null,
      "aria-setsize": null,
      "aria-selected": "false"
    },
    relatedConcepts: [{
      concept: {
        name: "item"
      },
      module: "XForms"
    }, {
      concept: {
        name: "listitem"
      },
      module: "ARIA"
    }, {
      concept: {
        name: "option"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {
      "aria-selected": "false"
    },
    superClass: [["roletype", "widget", "input"]]
  }, mce = fce;
  zf.default = mce;
});
var XL = y((Gf) => {
  Object.defineProperty(Gf, "__esModule", {
    value: true
  });
  Gf.default = void 0;
  var hce = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["prohibited"],
    prohibitedProps: ["aria-label", "aria-labelledby"],
    props: {},
    relatedConcepts: [{
      concept: {
        name: "p"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  }, yce = hce;
  Gf.default = yce;
});
var JL = y((Wf) => {
  Object.defineProperty(Wf, "__esModule", {
    value: true
  });
  Wf.default = void 0;
  var bce = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["prohibited"],
    prohibitedProps: ["aria-label", "aria-labelledby"],
    props: {},
    relatedConcepts: [{
      concept: {
        attributes: [{
          name: "alt",
          value: ""
        }],
        name: "img"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure"]]
  }, gce = bce;
  Wf.default = gce;
});
var QL = y((Yf) => {
  Object.defineProperty(Yf, "__esModule", {
    value: true
  });
  Yf.default = void 0;
  var vce = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: true,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-valuetext": null
    },
    relatedConcepts: [{
      concept: {
        name: "progress"
      },
      module: "HTML"
    }, {
      concept: {
        name: "status"
      },
      module: "ARIA"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "range"], ["roletype", "widget"]]
  }, Ece = vce;
  Yf.default = Ece;
});
var ZL = y((Kf) => {
  Object.defineProperty(Kf, "__esModule", {
    value: true
  });
  Kf.default = void 0;
  var xce = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: true,
    nameFrom: ["author", "contents"],
    prohibitedProps: [],
    props: {
      "aria-checked": null,
      "aria-posinset": null,
      "aria-setsize": null
    },
    relatedConcepts: [{
      concept: {
        attributes: [{
          name: "type",
          value: "radio"
        }],
        name: "input"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {
      "aria-checked": null
    },
    superClass: [["roletype", "widget", "input"]]
  }, wce = xce;
  Kf.default = wce;
});
var eF = y((Xf) => {
  Object.defineProperty(Xf, "__esModule", {
    value: true
  });
  Xf.default = void 0;
  var Tce = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-errormessage": null,
      "aria-invalid": null,
      "aria-readonly": null,
      "aria-required": null
    },
    relatedConcepts: [{
      concept: {
        name: "list"
      },
      module: "ARIA"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [["radio"]],
    requiredProps: {},
    superClass: [["roletype", "widget", "composite", "select"], ["roletype", "structure", "section", "group", "select"]]
  }, Rce = Tce;
  Xf.default = Rce;
});
var tF = y((Jf) => {
  Object.defineProperty(Jf, "__esModule", {
    value: true
  });
  Jf.default = void 0;
  var Sce = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [{
      concept: {
        attributes: [{
          constraints: ["set"],
          name: "aria-label"
        }],
        name: "section"
      },
      module: "HTML"
    }, {
      concept: {
        attributes: [{
          constraints: ["set"],
          name: "aria-labelledby"
        }],
        name: "section"
      },
      module: "HTML"
    }, {
      concept: {
        name: "Device Independence Glossart perceivable unit"
      }
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "landmark"]]
  }, _ce = Sce;
  Jf.default = _ce;
});
var rF = y((Qf) => {
  Object.defineProperty(Qf, "__esModule", {
    value: true
  });
  Qf.default = void 0;
  var Cce = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author", "contents"],
    prohibitedProps: [],
    props: {
      "aria-colindex": null,
      "aria-expanded": null,
      "aria-level": null,
      "aria-posinset": null,
      "aria-rowindex": null,
      "aria-selected": null,
      "aria-setsize": null
    },
    relatedConcepts: [{
      concept: {
        name: "tr"
      },
      module: "HTML"
    }],
    requireContextRole: ["grid", "rowgroup", "table", "treegrid"],
    requiredContextRole: ["grid", "rowgroup", "table", "treegrid"],
    requiredOwnedElements: [["cell"], ["columnheader"], ["gridcell"], ["rowheader"]],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "group"], ["roletype", "widget"]]
  }, Pce = Cce;
  Qf.default = Pce;
});
var nF = y((Zf) => {
  Object.defineProperty(Zf, "__esModule", {
    value: true
  });
  Zf.default = void 0;
  var Ace = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author", "contents"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [{
      concept: {
        name: "tbody"
      },
      module: "HTML"
    }, {
      concept: {
        name: "tfoot"
      },
      module: "HTML"
    }, {
      concept: {
        name: "thead"
      },
      module: "HTML"
    }],
    requireContextRole: ["grid", "table", "treegrid"],
    requiredContextRole: ["grid", "table", "treegrid"],
    requiredOwnedElements: [["row"]],
    requiredProps: {},
    superClass: [["roletype", "structure"]]
  }, Oce = Ace;
  Zf.default = Oce;
});
var oF = y((em) => {
  Object.defineProperty(em, "__esModule", {
    value: true
  });
  em.default = void 0;
  var qce = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author", "contents"],
    prohibitedProps: [],
    props: {
      "aria-sort": null
    },
    relatedConcepts: [{
      concept: {
        attributes: [{
          name: "scope",
          value: "row"
        }],
        name: "th"
      },
      module: "HTML"
    }, {
      concept: {
        attributes: [{
          name: "scope",
          value: "rowgroup"
        }],
        name: "th"
      },
      module: "HTML"
    }],
    requireContextRole: ["row", "rowgroup"],
    requiredContextRole: ["row", "rowgroup"],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "cell"], ["roletype", "structure", "section", "cell", "gridcell"], ["roletype", "widget", "gridcell"], ["roletype", "structure", "sectionhead"]]
  }, Ice = qce;
  em.default = Ice;
});
var iF = y((tm) => {
  Object.defineProperty(tm, "__esModule", {
    value: true
  });
  tm.default = void 0;
  var Mce = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: true,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-valuetext": null,
      "aria-orientation": "vertical",
      "aria-valuemax": "100",
      "aria-valuemin": "0"
    },
    relatedConcepts: [],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {
      "aria-controls": null,
      "aria-valuenow": null
    },
    superClass: [["roletype", "structure", "range"], ["roletype", "widget"]]
  }, Nce = Mce;
  tm.default = Nce;
});
var sF = y((rm) => {
  Object.defineProperty(rm, "__esModule", {
    value: true
  });
  rm.default = void 0;
  var jce = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "landmark"]]
  }, kce = jce;
  rm.default = kce;
});
var aF = y((nm) => {
  Object.defineProperty(nm, "__esModule", {
    value: true
  });
  nm.default = void 0;
  var Lce = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [{
      concept: {
        attributes: [{
          constraints: ["undefined"],
          name: "list"
        }, {
          name: "type",
          value: "search"
        }],
        constraints: ["the list attribute is not set"],
        name: "input"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "widget", "input", "textbox"]]
  }, Fce = Lce;
  nm.default = Fce;
});
var lF = y((om) => {
  Object.defineProperty(om, "__esModule", {
    value: true
  });
  om.default = void 0;
  var Dce = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: true,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-orientation": "horizontal",
      "aria-valuemax": "100",
      "aria-valuemin": "0",
      "aria-valuenow": null,
      "aria-valuetext": null
    },
    relatedConcepts: [{
      concept: {
        name: "hr"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure"]]
  }, $ce = Dce;
  om.default = $ce;
});
var uF = y((im) => {
  Object.defineProperty(im, "__esModule", {
    value: true
  });
  im.default = void 0;
  var Bce = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: true,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-errormessage": null,
      "aria-haspopup": null,
      "aria-invalid": null,
      "aria-readonly": null,
      "aria-valuetext": null,
      "aria-orientation": "horizontal",
      "aria-valuemax": "100",
      "aria-valuemin": "0"
    },
    relatedConcepts: [{
      concept: {
        attributes: [{
          name: "type",
          value: "range"
        }],
        name: "input"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {
      "aria-valuenow": null
    },
    superClass: [["roletype", "widget", "input"], ["roletype", "structure", "range"]]
  }, Hce = Bce;
  im.default = Hce;
});
var cF = y((sm) => {
  Object.defineProperty(sm, "__esModule", {
    value: true
  });
  sm.default = void 0;
  var Uce = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-errormessage": null,
      "aria-invalid": null,
      "aria-readonly": null,
      "aria-required": null,
      "aria-valuetext": null,
      "aria-valuenow": "0"
    },
    relatedConcepts: [{
      concept: {
        attributes: [{
          name: "type",
          value: "number"
        }],
        name: "input"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "widget", "composite"], ["roletype", "widget", "input"], ["roletype", "structure", "range"]]
  }, Vce = Uce;
  sm.default = Vce;
});
var dF = y((am) => {
  Object.defineProperty(am, "__esModule", {
    value: true
  });
  am.default = void 0;
  var zce = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-atomic": "true",
      "aria-live": "polite"
    },
    relatedConcepts: [{
      concept: {
        name: "output"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  }, Gce = zce;
  am.default = Gce;
});
var pF = y((lm) => {
  Object.defineProperty(lm, "__esModule", {
    value: true
  });
  lm.default = void 0;
  var Wce = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["prohibited"],
    prohibitedProps: ["aria-label", "aria-labelledby"],
    props: {},
    relatedConcepts: [{
      concept: {
        name: "strong"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  }, Yce = Wce;
  lm.default = Yce;
});
var fF = y((um) => {
  Object.defineProperty(um, "__esModule", {
    value: true
  });
  um.default = void 0;
  var Kce = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["prohibited"],
    prohibitedProps: ["aria-label", "aria-labelledby"],
    props: {},
    relatedConcepts: [{
      concept: {
        name: "sub"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  }, Xce = Kce;
  um.default = Xce;
});
var mF = y((cm) => {
  Object.defineProperty(cm, "__esModule", {
    value: true
  });
  cm.default = void 0;
  var Jce = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["prohibited"],
    prohibitedProps: ["aria-label", "aria-labelledby"],
    props: {},
    relatedConcepts: [{
      concept: {
        name: "sup"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  }, Qce = Jce;
  cm.default = Qce;
});
var hF = y((dm) => {
  Object.defineProperty(dm, "__esModule", {
    value: true
  });
  dm.default = void 0;
  var Zce = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: true,
    nameFrom: ["author", "contents"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [{
      concept: {
        name: "button"
      },
      module: "ARIA"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {
      "aria-checked": null
    },
    superClass: [["roletype", "widget", "input", "checkbox"]]
  }, ede = Zce;
  dm.default = ede;
});
var yF = y((pm) => {
  Object.defineProperty(pm, "__esModule", {
    value: true
  });
  pm.default = void 0;
  var tde = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: true,
    nameFrom: ["author", "contents"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-posinset": null,
      "aria-setsize": null,
      "aria-selected": "false"
    },
    relatedConcepts: [],
    requireContextRole: ["tablist"],
    requiredContextRole: ["tablist"],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "sectionhead"], ["roletype", "widget"]]
  }, rde = tde;
  pm.default = rde;
});
var bF = y((fm) => {
  Object.defineProperty(fm, "__esModule", {
    value: true
  });
  fm.default = void 0;
  var nde = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-colcount": null,
      "aria-rowcount": null
    },
    relatedConcepts: [{
      concept: {
        name: "table"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [["row"], ["row", "rowgroup"]],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  }, ode = nde;
  fm.default = ode;
});
var gF = y((mm) => {
  Object.defineProperty(mm, "__esModule", {
    value: true
  });
  mm.default = void 0;
  var ide = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-level": null,
      "aria-multiselectable": null,
      "aria-orientation": "horizontal"
    },
    relatedConcepts: [{
      module: "DAISY",
      concept: {
        name: "guide"
      }
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [["tab"]],
    requiredProps: {},
    superClass: [["roletype", "widget", "composite"]]
  }, sde = ide;
  mm.default = sde;
});
var vF = y((hm) => {
  Object.defineProperty(hm, "__esModule", {
    value: true
  });
  hm.default = void 0;
  var ade = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  }, lde = ade;
  hm.default = lde;
});
var EF = y((ym) => {
  Object.defineProperty(ym, "__esModule", {
    value: true
  });
  ym.default = void 0;
  var ude = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [{
      concept: {
        name: "dfn"
      },
      module: "HTML"
    }, {
      concept: {
        name: "dt"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  }, cde = ude;
  ym.default = cde;
});
var xF = y((bm) => {
  Object.defineProperty(bm, "__esModule", {
    value: true
  });
  bm.default = void 0;
  var dde = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-activedescendant": null,
      "aria-autocomplete": null,
      "aria-errormessage": null,
      "aria-haspopup": null,
      "aria-invalid": null,
      "aria-multiline": null,
      "aria-placeholder": null,
      "aria-readonly": null,
      "aria-required": null
    },
    relatedConcepts: [{
      concept: {
        attributes: [{
          constraints: ["undefined"],
          name: "type"
        }, {
          constraints: ["undefined"],
          name: "list"
        }],
        constraints: ["the list attribute is not set"],
        name: "input"
      },
      module: "HTML"
    }, {
      concept: {
        attributes: [{
          constraints: ["undefined"],
          name: "list"
        }, {
          name: "type",
          value: "email"
        }],
        constraints: ["the list attribute is not set"],
        name: "input"
      },
      module: "HTML"
    }, {
      concept: {
        attributes: [{
          constraints: ["undefined"],
          name: "list"
        }, {
          name: "type",
          value: "tel"
        }],
        constraints: ["the list attribute is not set"],
        name: "input"
      },
      module: "HTML"
    }, {
      concept: {
        attributes: [{
          constraints: ["undefined"],
          name: "list"
        }, {
          name: "type",
          value: "text"
        }],
        constraints: ["the list attribute is not set"],
        name: "input"
      },
      module: "HTML"
    }, {
      concept: {
        attributes: [{
          constraints: ["undefined"],
          name: "list"
        }, {
          name: "type",
          value: "url"
        }],
        constraints: ["the list attribute is not set"],
        name: "input"
      },
      module: "HTML"
    }, {
      concept: {
        name: "input"
      },
      module: "XForms"
    }, {
      concept: {
        name: "textarea"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "widget", "input"]]
  }, pde = dde;
  bm.default = pde;
});
var wF = y((gm) => {
  Object.defineProperty(gm, "__esModule", {
    value: true
  });
  gm.default = void 0;
  var fde = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [{
      concept: {
        name: "time"
      },
      module: "HTML"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  }, mde = fde;
  gm.default = mde;
});
var TF = y((vm) => {
  Object.defineProperty(vm, "__esModule", {
    value: true
  });
  vm.default = void 0;
  var hde = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "status"]]
  }, yde = hde;
  vm.default = yde;
});
var RF = y((Em) => {
  Object.defineProperty(Em, "__esModule", {
    value: true
  });
  Em.default = void 0;
  var bde = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-orientation": "horizontal"
    },
    relatedConcepts: [{
      concept: {
        name: "menubar"
      },
      module: "ARIA"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "group"]]
  }, gde = bde;
  Em.default = gde;
});
var SF = y((xm) => {
  Object.defineProperty(xm, "__esModule", {
    value: true
  });
  xm.default = void 0;
  var vde = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author", "contents"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  }, Ede = vde;
  xm.default = Ede;
});
var _F = y((wm) => {
  Object.defineProperty(wm, "__esModule", {
    value: true
  });
  wm.default = void 0;
  var xde = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-errormessage": null,
      "aria-invalid": null,
      "aria-multiselectable": null,
      "aria-required": null,
      "aria-orientation": "vertical"
    },
    relatedConcepts: [],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [["treeitem", "group"], ["treeitem"]],
    requiredProps: {},
    superClass: [["roletype", "widget", "composite", "select"], ["roletype", "structure", "section", "group", "select"]]
  }, wde = xde;
  wm.default = wde;
});
var CF = y((Tm) => {
  Object.defineProperty(Tm, "__esModule", {
    value: true
  });
  Tm.default = void 0;
  var Tde = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [["row"], ["row", "rowgroup"]],
    requiredProps: {},
    superClass: [["roletype", "widget", "composite", "grid"], ["roletype", "structure", "section", "table", "grid"], ["roletype", "widget", "composite", "select", "tree"], ["roletype", "structure", "section", "group", "select", "tree"]]
  }, Rde = Tde;
  Tm.default = Rde;
});
var PF = y((Rm) => {
  Object.defineProperty(Rm, "__esModule", {
    value: true
  });
  Rm.default = void 0;
  var Sde = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author", "contents"],
    prohibitedProps: [],
    props: {
      "aria-expanded": null,
      "aria-haspopup": null
    },
    relatedConcepts: [],
    requireContextRole: ["group", "tree"],
    requiredContextRole: ["group", "tree"],
    requiredOwnedElements: [],
    requiredProps: {
      "aria-selected": null
    },
    superClass: [["roletype", "structure", "section", "listitem"], ["roletype", "widget", "input", "option"]]
  }, _de = Sde;
  Rm.default = _de;
});
var AF = y((Sm) => {
  Object.defineProperty(Sm, "__esModule", {
    value: true
  });
  Sm.default = void 0;
  var Cde = B7(eL()), Pde = B7(tL()), Ade = B7(rL()), Ode = B7(nL()), qde = B7(oL()), Ide = B7(iL()), Mde = B7(sL()), Nde = B7(aL()), jde = B7(lL()), kde = B7(uL()), Lde = B7(cL()), Fde = B7(dL()), Dde = B7(pL()), $de = B7(fL()), Bde = B7(mL()), Hde = B7(hL()), Ude = B7(yL()), Vde = B7(bL()), zde = B7(
    gL()
  ), Gde = B7(vL()), Wde = B7(EL()), Yde = B7(xL()), Kde = B7(wL()), Xde = B7(TL()), Jde = B7(RL()), Qde = B7(SL()), Zde = B7(_L()), epe = B7(CL()), tpe = B7(PL()), rpe = B7(AL()), npe = B7(OL()), ope = B7(qL()), ipe = B7(IL()), spe = B7(ML()), ape = B7(NL()), lpe = B7(jL()), upe = B7(kL()), cpe = B7(
    LL()
  ), dpe = B7(FL()), ppe = B7(DL()), fpe = B7($L()), mpe = B7(BL()), hpe = B7(HL()), ype = B7(UL()), bpe = B7(VL()), gpe = B7(zL()), vpe = B7(GL()), Epe = B7(WL()), xpe = B7(YL()), wpe = B7(KL()), Tpe = B7(XL()), Rpe = B7(JL()), Spe = B7(QL()), _pe = B7(ZL()), Cpe = B7(eF()), Ppe = B7(tF()), Ape = B7(
    rF()
  ), Ope = B7(nF()), qpe = B7(oF()), Ipe = B7(iF()), Mpe = B7(sF()), Npe = B7(aF()), jpe = B7(lF()), kpe = B7(uF()), Lpe = B7(cF()), Fpe = B7(dF()), Dpe = B7(pF()), $pe = B7(fF()), Bpe = B7(mF()), Hpe = B7(hF()), Upe = B7(yF()), Vpe = B7(bF()), zpe = B7(gF()), Gpe = B7(vF()), Wpe = B7(EF()), Ype = B7(
    xF()
  ), Kpe = B7(wF()), Xpe = B7(TF()), Jpe = B7(RF()), Qpe = B7(SF()), Zpe = B7(_F()), efe = B7(CF()), tfe = B7(PF());
  function B7(e) {
    return e && e.__esModule ? e : { default: e };
  }
  o(B7, "_interopRequireDefault");
  var rfe = [
    ["alert", Cde.default],
    ["alertdialog", Pde.default],
    ["application", Ade.default],
    ["article", Ode.default],
    ["banner", qde.default],
    ["blockquote", Ide.default],
    ["button", Mde.default],
    ["caption", Nde.default],
    ["cell", jde.default],
    ["checkbox", kde.default],
    [
      "code",
      Lde.default
    ],
    ["columnheader", Fde.default],
    ["combobox", Dde.default],
    ["complementary", $de.default],
    ["contentinfo", Bde.default],
    ["definition", Hde.default],
    ["deletion", Ude.default],
    ["dialog", Vde.default],
    ["directory", zde.default],
    ["document", Gde.default],
    ["emphasis", Wde.default],
    ["feed", Yde.default],
    ["figure", Kde.default],
    ["form", Xde.default],
    ["generic", Jde.default],
    ["grid", Qde.default],
    [
      "gridcell",
      Zde.default
    ],
    ["group", epe.default],
    ["heading", tpe.default],
    ["img", rpe.default],
    ["insertion", npe.default],
    ["link", ope.default],
    ["list", ipe.default],
    ["listbox", spe.default],
    ["listitem", ape.default],
    ["log", lpe.default],
    ["main", upe.default],
    [
      "mark",
      cpe.default
    ],
    ["marquee", dpe.default],
    ["math", ppe.default],
    ["menu", fpe.default],
    ["menubar", mpe.default],
    ["menuitem", hpe.default],
    ["menuitemcheckbox", ype.default],
    ["menuitemradio", bpe.default],
    ["meter", gpe.default],
    ["navigation", vpe.default],
    ["none", Epe.default],
    ["note", xpe.default],
    ["option", wpe.default],
    ["paragraph", Tpe.default],
    ["presentation", Rpe.default],
    ["progressbar", Spe.default],
    [
      "radio",
      _pe.default
    ],
    ["radiogroup", Cpe.default],
    ["region", Ppe.default],
    ["row", Ape.default],
    ["rowgroup", Ope.default],
    [
      "rowheader",
      qpe.default
    ],
    ["scrollbar", Ipe.default],
    ["search", Mpe.default],
    ["searchbox", Npe.default],
    ["separator", jpe.default],
    ["slider", kpe.default],
    ["spinbutton", Lpe.default],
    ["status", Fpe.default],
    ["strong", Dpe.default],
    ["subscript", $pe.default],
    ["superscript", Bpe.default],
    ["switch", Hpe.default],
    ["tab", Upe.default],
    ["table", Vpe.default],
    ["tablist", zpe.default],
    ["tabpanel", Gpe.default],
    ["term", Wpe.default],
    ["textbox", Ype.default],
    ["time", Kpe.default],
    ["timer", Xpe.default],
    ["toolbar", Jpe.default],
    ["tooltip", Qpe.default],
    ["tree", Zpe.default],
    ["treegrid", efe.default],
    ["treeitem", tfe.default]
  ], nfe = rfe;
  Sm.default = nfe;
});
var OF = y((_m) => {
  Object.defineProperty(_m, "__esModule", {
    value: true
  });
  _m.default = void 0;
  var ofe = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "abstract [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  }, ife = ofe;
  _m.default = ife;
});
var qF = y((Cm) => {
  Object.defineProperty(Cm, "__esModule", {
    value: true
  });
  Cm.default = void 0;
  var sfe = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "acknowledgments [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "landmark"]]
  }, afe = sfe;
  Cm.default = afe;
});
var IF = y((Pm) => {
  Object.defineProperty(Pm, "__esModule", {
    value: true
  });
  Pm.default = void 0;
  var lfe = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "afterword [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "landmark"]]
  }, ufe = lfe;
  Pm.default = ufe;
});
var MF = y((Am) => {
  Object.defineProperty(Am, "__esModule", {
    value: true
  });
  Am.default = void 0;
  var cfe = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "appendix [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "landmark"]]
  }, dfe = cfe;
  Am.default = dfe;
});
var NF = y((Om) => {
  Object.defineProperty(Om, "__esModule", {
    value: true
  });
  Om.default = void 0;
  var pfe = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author", "contents"],
    prohibitedProps: [],
    props: {
      "aria-errormessage": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "referrer [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "widget", "command", "link"]]
  }, ffe = pfe;
  Om.default = ffe;
});
var jF = y((qm) => {
  Object.defineProperty(qm, "__esModule", {
    value: true
  });
  qm.default = void 0;
  var mfe = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "EPUB biblioentry [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: ["doc-bibliography"],
    requiredContextRole: ["doc-bibliography"],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "listitem"]]
  }, hfe = mfe;
  qm.default = hfe;
});
var kF = y((Im) => {
  Object.defineProperty(Im, "__esModule", {
    value: true
  });
  Im.default = void 0;
  var yfe = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "bibliography [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [["doc-biblioentry"]],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "landmark"]]
  }, bfe = yfe;
  Im.default = bfe;
});
var LF = y((Mm) => {
  Object.defineProperty(Mm, "__esModule", {
    value: true
  });
  Mm.default = void 0;
  var gfe = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author", "contents"],
    prohibitedProps: [],
    props: {
      "aria-errormessage": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "biblioref [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "widget", "command", "link"]]
  }, vfe = gfe;
  Mm.default = vfe;
});
var FF = y((Nm) => {
  Object.defineProperty(Nm, "__esModule", {
    value: true
  });
  Nm.default = void 0;
  var Efe = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "chapter [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "landmark"]]
  }, xfe = Efe;
  Nm.default = xfe;
});
var DF = y((jm) => {
  Object.defineProperty(jm, "__esModule", {
    value: true
  });
  jm.default = void 0;
  var wfe = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "colophon [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  }, Tfe = wfe;
  jm.default = Tfe;
});
var $F = y((km) => {
  Object.defineProperty(km, "__esModule", {
    value: true
  });
  km.default = void 0;
  var Rfe = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "conclusion [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "landmark"]]
  }, Sfe = Rfe;
  km.default = Sfe;
});
var BF = y((Lm) => {
  Object.defineProperty(Lm, "__esModule", {
    value: true
  });
  Lm.default = void 0;
  var _fe = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "cover [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "img"]]
  }, Cfe = _fe;
  Lm.default = Cfe;
});
var HF = y((Fm) => {
  Object.defineProperty(Fm, "__esModule", {
    value: true
  });
  Fm.default = void 0;
  var Pfe = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "credit [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  }, Afe = Pfe;
  Fm.default = Afe;
});
var UF = y((Dm) => {
  Object.defineProperty(Dm, "__esModule", {
    value: true
  });
  Dm.default = void 0;
  var Ofe = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "credits [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "landmark"]]
  }, qfe = Ofe;
  Dm.default = qfe;
});
var VF = y(($m) => {
  Object.defineProperty($m, "__esModule", {
    value: true
  });
  $m.default = void 0;
  var Ife = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "dedication [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  }, Mfe = Ife;
  $m.default = Mfe;
});
var zF = y((Bm) => {
  Object.defineProperty(Bm, "__esModule", {
    value: true
  });
  Bm.default = void 0;
  var Nfe = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "rearnote [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: ["doc-endnotes"],
    requiredContextRole: ["doc-endnotes"],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "listitem"]]
  }, jfe = Nfe;
  Bm.default = jfe;
});
var GF = y((Hm) => {
  Object.defineProperty(Hm, "__esModule", {
    value: true
  });
  Hm.default = void 0;
  var kfe = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "rearnotes [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [["doc-endnote"]],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "landmark"]]
  }, Lfe = kfe;
  Hm.default = Lfe;
});
var WF = y((Um) => {
  Object.defineProperty(Um, "__esModule", {
    value: true
  });
  Um.default = void 0;
  var Ffe = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "epigraph [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  }, Dfe = Ffe;
  Um.default = Dfe;
});
var YF = y((Vm) => {
  Object.defineProperty(Vm, "__esModule", {
    value: true
  });
  Vm.default = void 0;
  var $fe = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "epilogue [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "landmark"]]
  }, Bfe = $fe;
  Vm.default = Bfe;
});
var KF = y((zm) => {
  Object.defineProperty(zm, "__esModule", {
    value: true
  });
  zm.default = void 0;
  var Hfe = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "errata [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "landmark"]]
  }, Ufe = Hfe;
  zm.default = Ufe;
});
var XF = y((Gm) => {
  Object.defineProperty(Gm, "__esModule", {
    value: true
  });
  Gm.default = void 0;
  var Vfe = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  }, zfe = Vfe;
  Gm.default = zfe;
});
var JF = y((Wm) => {
  Object.defineProperty(Wm, "__esModule", {
    value: true
  });
  Wm.default = void 0;
  var Gfe = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "footnote [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  }, Wfe = Gfe;
  Wm.default = Wfe;
});
var QF = y((Ym) => {
  Object.defineProperty(Ym, "__esModule", {
    value: true
  });
  Ym.default = void 0;
  var Yfe = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "foreword [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "landmark"]]
  }, Kfe = Yfe;
  Ym.default = Kfe;
});
var ZF = y((Km) => {
  Object.defineProperty(Km, "__esModule", {
    value: true
  });
  Km.default = void 0;
  var Xfe = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "glossary [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [["definition"], ["term"]],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "landmark"]]
  }, Jfe = Xfe;
  Km.default = Jfe;
});
var eD = y((Xm) => {
  Object.defineProperty(Xm, "__esModule", {
    value: true
  });
  Xm.default = void 0;
  var Qfe = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author", "contents"],
    prohibitedProps: [],
    props: {
      "aria-errormessage": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "glossref [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "widget", "command", "link"]]
  }, Zfe = Qfe;
  Xm.default = Zfe;
});
var tD = y((Jm) => {
  Object.defineProperty(Jm, "__esModule", {
    value: true
  });
  Jm.default = void 0;
  var eme = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "index [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "landmark", "navigation"]]
  }, tme = eme;
  Jm.default = tme;
});
var rD = y((Qm) => {
  Object.defineProperty(Qm, "__esModule", {
    value: true
  });
  Qm.default = void 0;
  var rme = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "introduction [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "landmark"]]
  }, nme = rme;
  Qm.default = nme;
});
var nD = y((Zm) => {
  Object.defineProperty(Zm, "__esModule", {
    value: true
  });
  Zm.default = void 0;
  var ome = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author", "contents"],
    prohibitedProps: [],
    props: {
      "aria-errormessage": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "noteref [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "widget", "command", "link"]]
  }, ime = ome;
  Zm.default = ime;
});
var oD = y((eh) => {
  Object.defineProperty(eh, "__esModule", {
    value: true
  });
  eh.default = void 0;
  var sme = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "notice [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "note"]]
  }, ame = sme;
  eh.default = ame;
});
var iD = y((th) => {
  Object.defineProperty(th, "__esModule", {
    value: true
  });
  th.default = void 0;
  var lme = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: true,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "pagebreak [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "separator"]]
  }, ume = lme;
  th.default = ume;
});
var sD = y((rh) => {
  Object.defineProperty(rh, "__esModule", {
    value: true
  });
  rh.default = void 0;
  var cme = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "page-list [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "landmark", "navigation"]]
  }, dme = cme;
  rh.default = dme;
});
var aD = y((nh) => {
  Object.defineProperty(nh, "__esModule", {
    value: true
  });
  nh.default = void 0;
  var pme = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "part [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "landmark"]]
  }, fme = pme;
  nh.default = fme;
});
var lD = y((oh) => {
  Object.defineProperty(oh, "__esModule", {
    value: true
  });
  oh.default = void 0;
  var mme = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "preface [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "landmark"]]
  }, hme = mme;
  oh.default = hme;
});
var uD = y((ih) => {
  Object.defineProperty(ih, "__esModule", {
    value: true
  });
  ih.default = void 0;
  var yme = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "prologue [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "landmark"]]
  }, bme = yme;
  ih.default = bme;
});
var cD = y((sh) => {
  Object.defineProperty(sh, "__esModule", {
    value: true
  });
  sh.default = void 0;
  var gme = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {},
    relatedConcepts: [{
      concept: {
        name: "pullquote [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["none"]]
  }, vme = gme;
  sh.default = vme;
});
var dD = y((ah) => {
  Object.defineProperty(ah, "__esModule", {
    value: true
  });
  ah.default = void 0;
  var Eme = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "qna [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section"]]
  }, xme = Eme;
  ah.default = xme;
});
var pD = y((lh) => {
  Object.defineProperty(lh, "__esModule", {
    value: true
  });
  lh.default = void 0;
  var wme = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "subtitle [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "sectionhead"]]
  }, Tme = wme;
  lh.default = Tme;
});
var fD = y((uh) => {
  Object.defineProperty(uh, "__esModule", {
    value: true
  });
  uh.default = void 0;
  var Rme = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "help [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "note"]]
  }, Sme = Rme;
  uh.default = Sme;
});
var mD = y((ch) => {
  Object.defineProperty(ch, "__esModule", {
    value: true
  });
  ch.default = void 0;
  var _me = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      concept: {
        name: "toc [EPUB-SSV]"
      },
      module: "EPUB"
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "landmark", "navigation"]]
  }, Cme = _me;
  ch.default = Cme;
});
var hD = y((dh) => {
  Object.defineProperty(dh, "__esModule", {
    value: true
  });
  dh.default = void 0;
  var Pme = ne(OF()), Ame = ne(qF()), Ome = ne(IF()), qme = ne(MF()), Ime = ne(NF()), Mme = ne(jF()), Nme = ne(kF()), jme = ne(LF()), kme = ne(
    FF()
  ), Lme = ne(DF()), Fme = ne($F()), Dme = ne(BF()), $me = ne(HF()), Bme = ne(UF()), Hme = ne(VF()), Ume = ne(zF()), Vme = ne(GF()), zme = ne(
    WF()
  ), Gme = ne(YF()), Wme = ne(KF()), Yme = ne(XF()), Kme = ne(JF()), Xme = ne(QF()), Jme = ne(ZF()), Qme = ne(eD()), Zme = ne(tD()), ehe = ne(
    rD()
  ), the = ne(nD()), rhe = ne(oD()), nhe = ne(iD()), ohe = ne(sD()), ihe = ne(aD()), she = ne(lD()), ahe = ne(uD()), lhe = ne(cD()), uhe = ne(
    dD()
  ), che = ne(pD()), dhe = ne(fD()), phe = ne(mD());
  function ne(e) {
    return e && e.__esModule ? e : { default: e };
  }
  o(ne, "_interopRequireDefault");
  var fhe = [
    ["doc-abstract", Pme.default],
    ["doc-acknowledgments", Ame.default],
    ["doc-afterword", Ome.default],
    ["doc-appendix", qme.default],
    ["doc-backlink", Ime.default],
    ["doc-biblioentry", Mme.default],
    ["doc-bibliography", Nme.default],
    ["doc-biblioref", jme.default],
    ["doc-chapter", kme.default],
    ["doc-colophon", Lme.default],
    ["doc-conclusion", Fme.default],
    ["doc-cover", Dme.default],
    ["doc-credit", $me.default],
    ["doc-credits", Bme.default],
    ["doc-dedication", Hme.default],
    ["doc-endnote", Ume.default],
    ["doc-endnotes", Vme.default],
    [
      "doc-epigraph",
      zme.default
    ],
    ["doc-epilogue", Gme.default],
    ["doc-errata", Wme.default],
    ["doc-example", Yme.default],
    ["doc-footnote", Kme.default],
    ["doc-foreword", Xme.default],
    ["doc-glossary", Jme.default],
    ["doc-glossref", Qme.default],
    ["doc-index", Zme.default],
    ["doc-introduction", ehe.default],
    ["doc-noteref", the.default],
    ["doc-notice", rhe.default],
    ["doc-pagebreak", nhe.default],
    ["doc-pagelist", ohe.default],
    ["doc-part", ihe.default],
    ["doc-preface", she.default],
    ["doc-prologue", ahe.default],
    ["doc-pullquote", lhe.default],
    ["doc-qna", uhe.default],
    [
      "doc-subtitle",
      che.default
    ],
    ["doc-tip", dhe.default],
    ["doc-toc", phe.default]
  ], mhe = fhe;
  dh.default = mhe;
});
var yD = y((ph) => {
  Object.defineProperty(ph, "__esModule", {
    value: true
  });
  ph.default = void 0;
  var hhe = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      module: "GRAPHICS",
      concept: {
        name: "graphics-object"
      }
    }, {
      module: "ARIA",
      concept: {
        name: "img"
      }
    }, {
      module: "ARIA",
      concept: {
        name: "article"
      }
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "document"]]
  }, yhe = hhe;
  ph.default = yhe;
});
var bD = y((fh) => {
  Object.defineProperty(fh, "__esModule", {
    value: true
  });
  fh.default = void 0;
  var bhe = {
    abstract: false,
    accessibleNameRequired: false,
    baseConcepts: [],
    childrenPresentational: false,
    nameFrom: ["author", "contents"],
    prohibitedProps: [],
    props: {
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [{
      module: "GRAPHICS",
      concept: {
        name: "graphics-document"
      }
    }, {
      module: "ARIA",
      concept: {
        name: "group"
      }
    }, {
      module: "ARIA",
      concept: {
        name: "img"
      }
    }, {
      module: "GRAPHICS",
      concept: {
        name: "graphics-symbol"
      }
    }],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "group"]]
  }, ghe = bhe;
  fh.default = ghe;
});
var gD = y((mh) => {
  Object.defineProperty(mh, "__esModule", {
    value: true
  });
  mh.default = void 0;
  var vhe = {
    abstract: false,
    accessibleNameRequired: true,
    baseConcepts: [],
    childrenPresentational: true,
    nameFrom: ["author"],
    prohibitedProps: [],
    props: {
      "aria-disabled": null,
      "aria-errormessage": null,
      "aria-expanded": null,
      "aria-haspopup": null,
      "aria-invalid": null
    },
    relatedConcepts: [],
    requireContextRole: [],
    requiredContextRole: [],
    requiredOwnedElements: [],
    requiredProps: {},
    superClass: [["roletype", "structure", "section", "img"]]
  }, Ehe = vhe;
  mh.default = Ehe;
});
var vD = y((hh) => {
  Object.defineProperty(hh, "__esModule", {
    value: true
  });
  hh.default = void 0;
  var xhe = Ow(yD()), whe = Ow(bD()), The = Ow(gD());
  function Ow(e) {
    return e && e.__esModule ? e : { default: e };
  }
  o(Ow, "_interopRequireDefault");
  var Rhe = [["graphics-document", xhe.default], ["graphics-object", whe.default], ["graphics-symbol", The.default]], She = Rhe;
  hh.default = She;
});
var bh = y((yh) => {
  Object.defineProperty(yh, "__esModule", {
    value: true
  });
  yh.default = void 0;
  var _he = Xs(Zk()), Che = Xs(AF()), Phe = Xs(hD()), Ahe = Xs(vD()), Ohe = Xs(Jo());
  function Xs(e) {
    return e && e.__esModule ? e : { default: e };
  }
  o(Xs, "_interopRequireDefault");
  function qhe(e, t, r7) {
    return t in e ? Object.defineProperty(e, t, { value: r7, enumerable: true, configurable: true, writable: true }) : e[t] = r7, e;
  }
  o(qhe, "_defineProperty");
  function qw(e, t) {
    var r7 = typeof Symbol < "u" && e[Symbol.iterator] || e["@@iterator"];
    if (!r7) {
      if (Array.isArray(e) || (r7 = xD(e)) || t && e && typeof e.length == "number") {
        r7 && (e = r7);
        var n = 0, i = /* @__PURE__ */ o(function() {
        }, "F");
        return { s: i, n: /* @__PURE__ */ o(function() {
          return n >= e.length ? { done: true } : { done: false, value: e[n++] };
        }, "n"), e: /* @__PURE__ */ o(function(c) {
          throw c;
        }, "e"), f: i };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var s = true, a = false, l;
    return { s: /* @__PURE__ */ o(function() {
      r7 = r7.call(e);
    }, "s"), n: /* @__PURE__ */ o(function() {
      var c = r7.next();
      return s = c.done, c;
    }, "n"), e: /* @__PURE__ */ o(function(c) {
      a = true, l = c;
    }, "e"), f: /* @__PURE__ */ o(function() {
      try {
        !s && r7.return != null && r7.return();
      } finally {
        if (a) throw l;
      }
    }, "f") };
  }
  o(qw, "_createForOfIteratorHelper");
  function Ks(e, t) {
    return Nhe(e) || Mhe(e, t) || xD(e, t) || Ihe();
  }
  o(Ks, "_slicedToArray");
  function Ihe() {
    throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
  }
  o(Ihe, "_nonIterableRest");
  function xD(e, t) {
    if (e) {
      if (typeof e == "string") return ED(e, t);
      var r7 = Object.prototype.toString.call(e).slice(8, -1);
      if (r7 === "Object" && e.constructor && (r7 = e.constructor.name), r7 === "Map" || r7 === "Set") return Array.from(e);
      if (r7 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r7)) return ED(e, t);
    }
  }
  o(xD, "_unsupportedIterableToArray");
  function ED(e, t) {
    (t == null || t > e.length) && (t = e.length);
    for (var r7 = 0, n = new Array(t); r7 < t; r7++)
      n[r7] = e[r7];
    return n;
  }
  o(ED, "_arrayLikeToArray");
  function Mhe(e, t) {
    var r7 = e == null ? null : typeof Symbol < "u" && e[Symbol.iterator] || e["@@iterator"];
    if (r7 != null) {
      var n = [], i = true, s = false, a, l;
      try {
        for (r7 = r7.call(e); !(i = (a = r7.next()).done) && (n.push(a.value), !(t && n.length === t)); i = true)
          ;
      } catch (u) {
        s = true, l = u;
      } finally {
        try {
          !i && r7.return != null && r7.return();
        } finally {
          if (s) throw l;
        }
      }
      return n;
    }
  }
  o(Mhe, "_iterableToArrayLimit");
  function Nhe(e) {
    if (Array.isArray(e)) return e;
  }
  o(Nhe, "_arrayWithHoles");
  var Zr2 = [].concat(_he.default, Che.default, Phe.default, Ahe.default);
  Zr2.forEach(function(e) {
    var t = Ks(e, 2), r7 = t[1], n = qw(r7.superClass), i;
    try {
      for (n.s(); !(i = n.n()).done; ) {
        var s = i.value, a = qw(s), l;
        try {
          var u = /* @__PURE__ */ o(function() {
            var d = l.value, p5 = Zr2.find(function(v5) {
              var g = Ks(v5, 1), w5 = g[0];
              return w5 === d;
            });
            if (p5)
              for (var f = p5[1], m = 0, h5 = Object.keys(f.props); m < h5.length; m++) {
                var b = h5[m];
                Object.prototype.hasOwnProperty.call(r7.props, b) || Object.assign(r7.props, qhe({}, b, f.props[b]));
              }
          }, "_loop");
          for (a.s(); !(l = a.n()).done; )
            u();
        } catch (c) {
          a.e(c);
        } finally {
          a.f();
        }
      }
    } catch (c) {
      n.e(c);
    } finally {
      n.f();
    }
  });
  var Iw = {
    entries: /* @__PURE__ */ o(function() {
      return Zr2;
    }, "entries"),
    forEach: /* @__PURE__ */ o(function(t) {
      var r7 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null, n = qw(Zr2), i;
      try {
        for (n.s(); !(i = n.n()).done; ) {
          var s = Ks(i.value, 2), a = s[0], l = s[1];
          t.call(r7, l, a, Zr2);
        }
      } catch (u) {
        n.e(u);
      } finally {
        n.f();
      }
    }, "forEach"),
    get: /* @__PURE__ */ o(function(t) {
      var r7 = Zr2.find(function(n) {
        return n[0] === t;
      });
      return r7 && r7[1];
    }, "get"),
    has: /* @__PURE__ */ o(function(t) {
      return !!Iw.get(t);
    }, "has"),
    keys: /* @__PURE__ */ o(function() {
      return Zr2.map(function(t) {
        var r7 = Ks(t, 1), n = r7[0];
        return n;
      });
    }, "keys"),
    values: /* @__PURE__ */ o(function() {
      return Zr2.map(function(t) {
        var r7 = Ks(t, 2), n = r7[1];
        return n;
      });
    }, "values")
  }, jhe = (0, Ohe.default)(Iw, Iw.entries());
  yh.default = jhe;
});
var TD = {};
st$1(TD, {
  dequal: () => Mw
});
function Mw(e, t) {
  var r7, n;
  if (e === t) return true;
  if (e && t && (r7 = e.constructor) === t.constructor) {
    if (r7 === Date) return e.getTime() === t.getTime();
    if (r7 === RegExp) return e.toString() === t.toString();
    if (r7 === Array) {
      if ((n = e.length) === t.length)
        for (; n-- && Mw(e[n], t[n]); ) ;
      return n === -1;
    }
    if (!r7 || typeof e == "object") {
      n = 0;
      for (r7 in e)
        if (wD.call(e, r7) && ++n && !wD.call(t, r7) || !(r7 in t) || !Mw(e[r7], t[r7])) return false;
      return Object.keys(t).length === n;
    }
  }
  return e !== e && t !== t;
}
var wD, RD = X5(() => {
  wD = Object.prototype.hasOwnProperty;
  o(Mw, "dequal");
});
var qD = y((wh) => {
  Object.defineProperty(wh, "__esModule", {
    value: true
  });
  wh.default = void 0;
  var CD = (RD(), J5(TD)), khe = AD(Jo()), PD = AD(bh());
  function AD(e) {
    return e && e.__esModule ? e : { default: e };
  }
  o(AD, "_interopRequireDefault");
  function Nw(e, t) {
    return Dhe(e) || Fhe(e, t) || OD(e, t) || Lhe();
  }
  o(Nw, "_slicedToArray");
  function Lhe() {
    throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
  }
  o(Lhe, "_nonIterableRest");
  function Fhe(e, t) {
    var r7 = e == null ? null : typeof Symbol < "u" && e[Symbol.iterator] || e["@@iterator"];
    if (r7 != null) {
      var n = [], i = true, s = false, a, l;
      try {
        for (r7 = r7.call(e); !(i = (a = r7.next()).done) && (n.push(a.value), !(t && n.length === t)); i = true)
          ;
      } catch (u) {
        s = true, l = u;
      } finally {
        try {
          !i && r7.return != null && r7.return();
        } finally {
          if (s) throw l;
        }
      }
      return n;
    }
  }
  o(Fhe, "_iterableToArrayLimit");
  function Dhe(e) {
    if (Array.isArray(e)) return e;
  }
  o(Dhe, "_arrayWithHoles");
  function $he(e, t) {
    var r7 = typeof Symbol < "u" && e[Symbol.iterator] || e["@@iterator"];
    if (!r7) {
      if (Array.isArray(e) || (r7 = OD(e)) || t && e && typeof e.length == "number") {
        r7 && (e = r7);
        var n = 0, i = /* @__PURE__ */ o(function() {
        }, "F");
        return { s: i, n: /* @__PURE__ */ o(function() {
          return n >= e.length ? { done: true } : { done: false, value: e[n++] };
        }, "n"), e: /* @__PURE__ */ o(function(c) {
          throw c;
        }, "e"), f: i };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var s = true, a = false, l;
    return { s: /* @__PURE__ */ o(function() {
      r7 = r7.call(e);
    }, "s"), n: /* @__PURE__ */ o(function() {
      var c = r7.next();
      return s = c.done, c;
    }, "n"), e: /* @__PURE__ */ o(function(c) {
      a = true, l = c;
    }, "e"), f: /* @__PURE__ */ o(function() {
      try {
        !s && r7.return != null && r7.return();
      } finally {
        if (a) throw l;
      }
    }, "f") };
  }
  o($he, "_createForOfIteratorHelper");
  function OD(e, t) {
    if (e) {
      if (typeof e == "string") return SD(e, t);
      var r7 = Object.prototype.toString.call(e).slice(8, -1);
      if (r7 === "Object" && e.constructor && (r7 = e.constructor.name), r7 === "Map" || r7 === "Set") return Array.from(e);
      if (r7 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r7)) return SD(e, t);
    }
  }
  o(OD, "_unsupportedIterableToArray");
  function SD(e, t) {
    (t == null || t > e.length) && (t = e.length);
    for (var r7 = 0, n = new Array(t); r7 < t; r7++)
      n[r7] = e[r7];
    return n;
  }
  o(SD, "_arrayLikeToArray");
  var en2 = [], _D = PD.default.keys();
  for (gh = 0; gh < _D.length; gh++)
    if (vh = _D[gh], Eh = PD.default.get(vh), Eh)
      for (jw = [].concat(Eh.baseConcepts, Eh.relatedConcepts), xh = 0; xh < jw.length; xh++)
        kw = jw[xh], kw.module === "HTML" && (function() {
          var e = kw.concept;
          if (e) {
            var t = en2.find(function(s) {
              return (0, CD.dequal)(s, e);
            }), r7;
            t ? r7 = t[1] : r7 = [];
            for (var n = true, i = 0; i < r7.length; i++)
              if (r7[i] === vh) {
                n = false;
                break;
              }
            n && r7.push(vh), en2.push([e, r7]);
          }
        })();
  var vh, Eh, jw, kw, xh, gh, Lw = {
    entries: /* @__PURE__ */ o(function() {
      return en2;
    }, "entries"),
    forEach: /* @__PURE__ */ o(function(t) {
      var r7 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null, n = $he(en2), i;
      try {
        for (n.s(); !(i = n.n()).done; ) {
          var s = Nw(i.value, 2), a = s[0], l = s[1];
          t.call(r7, l, a, en2);
        }
      } catch (u) {
        n.e(u);
      } finally {
        n.f();
      }
    }, "forEach"),
    get: /* @__PURE__ */ o(function(t) {
      var r7 = en2.find(function(n) {
        return t.name === n[0].name && (0, CD.dequal)(t.attributes, n[0].attributes);
      });
      return r7 && r7[1];
    }, "get"),
    has: /* @__PURE__ */ o(function(t) {
      return !!Lw.get(t);
    }, "has"),
    keys: /* @__PURE__ */ o(function() {
      return en2.map(function(t) {
        var r7 = Nw(t, 1), n = r7[0];
        return n;
      });
    }, "keys"),
    values: /* @__PURE__ */ o(function() {
      return en2.map(function(t) {
        var r7 = Nw(t, 2), n = r7[1];
        return n;
      });
    }, "values")
  }, Bhe = (0, khe.default)(Lw, Lw.entries());
  wh.default = Bhe;
});
var LD = y((Ch) => {
  Object.defineProperty(Ch, "__esModule", {
    value: true
  });
  Ch.default = void 0;
  var Hhe = jD(Jo()), ND = jD(bh());
  function jD(e) {
    return e && e.__esModule ? e : { default: e };
  }
  o(jD, "_interopRequireDefault");
  function Fw(e, t) {
    return zhe(e) || Vhe(e, t) || kD(e, t) || Uhe();
  }
  o(Fw, "_slicedToArray");
  function Uhe() {
    throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
  }
  o(Uhe, "_nonIterableRest");
  function Vhe(e, t) {
    var r7 = e == null ? null : typeof Symbol < "u" && e[Symbol.iterator] || e["@@iterator"];
    if (r7 != null) {
      var n = [], i = true, s = false, a, l;
      try {
        for (r7 = r7.call(e); !(i = (a = r7.next()).done) && (n.push(a.value), !(t && n.length === t)); i = true)
          ;
      } catch (u) {
        s = true, l = u;
      } finally {
        try {
          !i && r7.return != null && r7.return();
        } finally {
          if (s) throw l;
        }
      }
      return n;
    }
  }
  o(Vhe, "_iterableToArrayLimit");
  function zhe(e) {
    if (Array.isArray(e)) return e;
  }
  o(zhe, "_arrayWithHoles");
  function Ghe(e, t) {
    var r7 = typeof Symbol < "u" && e[Symbol.iterator] || e["@@iterator"];
    if (!r7) {
      if (Array.isArray(e) || (r7 = kD(e)) || t && e && typeof e.length == "number") {
        r7 && (e = r7);
        var n = 0, i = /* @__PURE__ */ o(function() {
        }, "F");
        return { s: i, n: /* @__PURE__ */ o(function() {
          return n >= e.length ? { done: true } : { done: false, value: e[n++] };
        }, "n"), e: /* @__PURE__ */ o(function(c) {
          throw c;
        }, "e"), f: i };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var s = true, a = false, l;
    return { s: /* @__PURE__ */ o(function() {
      r7 = r7.call(e);
    }, "s"), n: /* @__PURE__ */ o(function() {
      var c = r7.next();
      return s = c.done, c;
    }, "n"), e: /* @__PURE__ */ o(function(c) {
      a = true, l = c;
    }, "e"), f: /* @__PURE__ */ o(function() {
      try {
        !s && r7.return != null && r7.return();
      } finally {
        if (a) throw l;
      }
    }, "f") };
  }
  o(Ghe, "_createForOfIteratorHelper");
  function kD(e, t) {
    if (e) {
      if (typeof e == "string") return ID(e, t);
      var r7 = Object.prototype.toString.call(e).slice(8, -1);
      if (r7 === "Object" && e.constructor && (r7 = e.constructor.name), r7 === "Map" || r7 === "Set") return Array.from(e);
      if (r7 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r7)) return ID(e, t);
    }
  }
  o(kD, "_unsupportedIterableToArray");
  function ID(e, t) {
    (t == null || t > e.length) && (t = e.length);
    for (var r7 = 0, n = new Array(t); r7 < t; r7++)
      n[r7] = e[r7];
    return n;
  }
  o(ID, "_arrayLikeToArray");
  var On = [], MD = ND.default.keys();
  for (Th = 0; Th < MD.length; Th++)
    if (Dw = MD[Th], Rh = ND.default.get(Dw), Sh = [], Rh) {
      for ($w = [].concat(Rh.baseConcepts, Rh.relatedConcepts), _h = 0; _h < $w.length; _h++)
        Bw = $w[_h], Bw.module === "HTML" && (Hw = Bw.concept, Hw != null && Sh.push(Hw));
      Sh.length > 0 && On.push([Dw, Sh]);
    }
  var Dw, Rh, Sh, $w, Bw, Hw, _h, Th, Uw = {
    entries: /* @__PURE__ */ o(function() {
      return On;
    }, "entries"),
    forEach: /* @__PURE__ */ o(function(t) {
      var r7 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null, n = Ghe(On), i;
      try {
        for (n.s(); !(i = n.n()).done; ) {
          var s = Fw(i.value, 2), a = s[0], l = s[1];
          t.call(r7, l, a, On);
        }
      } catch (u) {
        n.e(u);
      } finally {
        n.f();
      }
    }, "forEach"),
    get: /* @__PURE__ */ o(function(t) {
      var r7 = On.find(function(n) {
        return n[0] === t;
      });
      return r7 && r7[1];
    }, "get"),
    has: /* @__PURE__ */ o(function(t) {
      return !!Uw.get(t);
    }, "has"),
    keys: /* @__PURE__ */ o(function() {
      return On.map(function(t) {
        var r7 = Fw(t, 1), n = r7[0];
        return n;
      });
    }, "keys"),
    values: /* @__PURE__ */ o(function() {
      return On.map(function(t) {
        var r7 = Fw(t, 2), n = r7[1];
        return n;
      });
    }, "values")
  }, Whe = (0, Hhe.default)(Uw, Uw.entries());
  Ch.default = Whe;
});
var FD = y((Mt) => {
  Object.defineProperty(Mt, "__esModule", {
    value: true
  });
  Mt.roles = Mt.roleElements = Mt.elementRoles = Mt.dom = Mt.aria = void 0;
  var Yhe = Js(Lk()), Khe = Js($k()), Xhe = Js(bh()), Jhe = Js(qD()), Qhe = Js(LD());
  function Js(e) {
    return e && e.__esModule ? e : { default: e };
  }
  o(Js, "_interopRequireDefault");
  var Zhe = Yhe.default;
  Mt.aria = Zhe;
  var eye = Khe.default;
  Mt.dom = eye;
  var tye = Xhe.default;
  Mt.roles = tye;
  var rye = Jhe.default;
  Mt.elementRoles = rye;
  var nye = Qhe.default;
  Mt.roleElements = nye;
});
var DD = y((EDe, Ph) => {
  var Vw = (function() {
    var e = String.fromCharCode, t = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", r7 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$", n = {};
    function i(a, l) {
      if (!n[a]) {
        n[a] = {};
        for (var u = 0; u < a.length; u++)
          n[a][a.charAt(u)] = u;
      }
      return n[a][l];
    }
    o(i, "getBaseValue");
    var s = {
      compressToBase64: /* @__PURE__ */ o(function(a) {
        if (a == null) return "";
        var l = s._compress(a, 6, function(u) {
          return t.charAt(u);
        });
        switch (l.length % 4) {
          // To produce valid Base64
          default:
          // When could this happen ?
          case 0:
            return l;
          case 1:
            return l + "===";
          case 2:
            return l + "==";
          case 3:
            return l + "=";
        }
      }, "compressToBase64"),
      decompressFromBase64: /* @__PURE__ */ o(function(a) {
        return a == null ? "" : a == "" ? null : s._decompress(a.length, 32, function(l) {
          return i(t, a.charAt(l));
        });
      }, "decompressFromBase64"),
      compressToUTF16: /* @__PURE__ */ o(function(a) {
        return a == null ? "" : s._compress(a, 15, function(l) {
          return e(l + 32);
        }) + " ";
      }, "compressToUTF16"),
      decompressFromUTF16: /* @__PURE__ */ o(function(a) {
        return a == null ? "" : a == "" ? null : s._decompress(a.length, 16384, function(l) {
          return a.charCodeAt(l) - 32;
        });
      }, "decompressFromUTF16"),
      //compress into uint8array (UCS-2 big endian format)
      compressToUint8Array: /* @__PURE__ */ o(function(a) {
        for (var l = s.compress(a), u = new Uint8Array(l.length * 2), c = 0, d = l.length; c < d; c++) {
          var p5 = l.charCodeAt(c);
          u[c * 2] = p5 >>> 8, u[c * 2 + 1] = p5 % 256;
        }
        return u;
      }, "compressToUint8Array"),
      //decompress from uint8array (UCS-2 big endian format)
      decompressFromUint8Array: /* @__PURE__ */ o(function(a) {
        if (a == null)
          return s.decompress(a);
        for (var l = new Array(a.length / 2), u = 0, c = l.length; u < c; u++)
          l[u] = a[u * 2] * 256 + a[u * 2 + 1];
        var d = [];
        return l.forEach(function(p5) {
          d.push(e(p5));
        }), s.decompress(d.join(""));
      }, "decompressFromUint8Array"),
      //compress into a string that is already URI encoded
      compressToEncodedURIComponent: /* @__PURE__ */ o(function(a) {
        return a == null ? "" : s._compress(a, 6, function(l) {
          return r7.charAt(l);
        });
      }, "compressToEncodedURIComponent"),
      //decompress from an output of compressToEncodedURIComponent
      decompressFromEncodedURIComponent: /* @__PURE__ */ o(function(a) {
        return a == null ? "" : a == "" ? null : (a = a.replace(/ /g, "+"), s._decompress(a.length, 32, function(l) {
          return i(r7, a.charAt(l));
        }));
      }, "decompressFromEncodedURIComponent"),
      compress: /* @__PURE__ */ o(function(a) {
        return s._compress(a, 16, function(l) {
          return e(l);
        });
      }, "compress"),
      _compress: /* @__PURE__ */ o(function(a, l, u) {
        if (a == null) return "";
        var c, d, p5 = {}, f = {}, m = "", h5 = "", b = "", v5 = 2, g = 3, w5 = 2, E = [], R = 0, S = 0, P;
        for (P = 0; P < a.length; P += 1)
          if (m = a.charAt(P), Object.prototype.hasOwnProperty.call(p5, m) || (p5[m] = g++, f[m] = true), h5 = b + m, Object.prototype.hasOwnProperty.call(p5, h5))
            b = h5;
          else {
            if (Object.prototype.hasOwnProperty.call(f, b)) {
              if (b.charCodeAt(0) < 256) {
                for (c = 0; c < w5; c++)
                  R = R << 1, S == l - 1 ? (S = 0, E.push(u(R)), R = 0) : S++;
                for (d = b.charCodeAt(0), c = 0; c < 8; c++)
                  R = R << 1 | d & 1, S == l - 1 ? (S = 0, E.push(u(R)), R = 0) : S++, d = d >> 1;
              } else {
                for (d = 1, c = 0; c < w5; c++)
                  R = R << 1 | d, S == l - 1 ? (S = 0, E.push(u(R)), R = 0) : S++, d = 0;
                for (d = b.charCodeAt(0), c = 0; c < 16; c++)
                  R = R << 1 | d & 1, S == l - 1 ? (S = 0, E.push(u(R)), R = 0) : S++, d = d >> 1;
              }
              v5--, v5 == 0 && (v5 = Math.pow(2, w5), w5++), delete f[b];
            } else
              for (d = p5[b], c = 0; c < w5; c++)
                R = R << 1 | d & 1, S == l - 1 ? (S = 0, E.push(u(R)), R = 0) : S++, d = d >> 1;
            v5--, v5 == 0 && (v5 = Math.pow(2, w5), w5++), p5[h5] = g++, b = String(m);
          }
        if (b !== "") {
          if (Object.prototype.hasOwnProperty.call(f, b)) {
            if (b.charCodeAt(0) < 256) {
              for (c = 0; c < w5; c++)
                R = R << 1, S == l - 1 ? (S = 0, E.push(u(R)), R = 0) : S++;
              for (d = b.charCodeAt(0), c = 0; c < 8; c++)
                R = R << 1 | d & 1, S == l - 1 ? (S = 0, E.push(u(R)), R = 0) : S++, d = d >> 1;
            } else {
              for (d = 1, c = 0; c < w5; c++)
                R = R << 1 | d, S == l - 1 ? (S = 0, E.push(u(R)), R = 0) : S++, d = 0;
              for (d = b.charCodeAt(0), c = 0; c < 16; c++)
                R = R << 1 | d & 1, S == l - 1 ? (S = 0, E.push(u(R)), R = 0) : S++, d = d >> 1;
            }
            v5--, v5 == 0 && (v5 = Math.pow(2, w5), w5++), delete f[b];
          } else
            for (d = p5[b], c = 0; c < w5; c++)
              R = R << 1 | d & 1, S == l - 1 ? (S = 0, E.push(u(R)), R = 0) : S++, d = d >> 1;
          v5--, v5 == 0 && (v5 = Math.pow(2, w5), w5++);
        }
        for (d = 2, c = 0; c < w5; c++)
          R = R << 1 | d & 1, S == l - 1 ? (S = 0, E.push(u(R)), R = 0) : S++, d = d >> 1;
        for (; ; )
          if (R = R << 1, S == l - 1) {
            E.push(u(R));
            break;
          } else S++;
        return E.join("");
      }, "_compress"),
      decompress: /* @__PURE__ */ o(function(a) {
        return a == null ? "" : a == "" ? null : s._decompress(a.length, 32768, function(l) {
          return a.charCodeAt(l);
        });
      }, "decompress"),
      _decompress: /* @__PURE__ */ o(function(a, l, u) {
        var c = [], p5 = 4, f = 4, m = 3, h5 = "", b = [], v5, g, w5, E, R, S, P, _5 = { val: u(0), position: l, index: 1 };
        for (v5 = 0; v5 < 3; v5 += 1)
          c[v5] = v5;
        for (w5 = 0, R = Math.pow(2, 2), S = 1; S != R; )
          E = _5.val & _5.position, _5.position >>= 1, _5.position == 0 && (_5.position = l, _5.val = u(_5.index++)), w5 |= (E > 0 ? 1 : 0) * S, S <<= 1;
        switch (w5) {
          case 0:
            for (w5 = 0, R = Math.pow(2, 8), S = 1; S != R; )
              E = _5.val & _5.position, _5.position >>= 1, _5.position == 0 && (_5.position = l, _5.val = u(_5.index++)), w5 |= (E > 0 ? 1 : 0) * S, S <<= 1;
            P = e(w5);
            break;
          case 1:
            for (w5 = 0, R = Math.pow(2, 16), S = 1; S != R; )
              E = _5.val & _5.position, _5.position >>= 1, _5.position == 0 && (_5.position = l, _5.val = u(_5.index++)), w5 |= (E > 0 ? 1 : 0) * S, S <<= 1;
            P = e(w5);
            break;
          case 2:
            return "";
        }
        for (c[3] = P, g = P, b.push(P); ; ) {
          if (_5.index > a)
            return "";
          for (w5 = 0, R = Math.pow(2, m), S = 1; S != R; )
            E = _5.val & _5.position, _5.position >>= 1, _5.position == 0 && (_5.position = l, _5.val = u(_5.index++)), w5 |= (E > 0 ? 1 : 0) * S, S <<= 1;
          switch (P = w5) {
            case 0:
              for (w5 = 0, R = Math.pow(2, 8), S = 1; S != R; )
                E = _5.val & _5.position, _5.position >>= 1, _5.position == 0 && (_5.position = l, _5.val = u(_5.index++)), w5 |= (E > 0 ? 1 : 0) * S, S <<= 1;
              c[f++] = e(w5), P = f - 1, p5--;
              break;
            case 1:
              for (w5 = 0, R = Math.pow(2, 16), S = 1; S != R; )
                E = _5.val & _5.position, _5.position >>= 1, _5.position == 0 && (_5.position = l, _5.val = u(_5.index++)), w5 |= (E > 0 ? 1 : 0) * S, S <<= 1;
              c[f++] = e(w5), P = f - 1, p5--;
              break;
            case 2:
              return b.join("");
          }
          if (p5 == 0 && (p5 = Math.pow(2, m), m++), c[P])
            h5 = c[P];
          else if (P === f)
            h5 = g + g.charAt(0);
          else
            return null;
          b.push(h5), c[f++] = g + h5.charAt(0), p5--, g = h5, p5 == 0 && (p5 = Math.pow(2, m), m++);
        }
      }, "_decompress")
    };
    return s;
  })();
  typeof define == "function" && define.amd ? define(function() {
    return Vw;
  }) : typeof Ph < "u" && Ph != null ? Ph.exports = Vw : typeof angular < "u" && angular != null && angular.module("LZString", []).factory("LZString", function() {
    return Vw;
  });
});
var vR = y((fU, gR) => {
  (function(e) {
    if (typeof fU == "object" && typeof gR < "u")
      gR.exports = e();
    else if (typeof define == "function" && define.amd)
      define([], e);
    else {
      var t;
      typeof window < "u" ? t = window : typeof global < "u" ? t = global : typeof self < "u" ? t = self : t = this, t.memoizerific = e();
    }
  })(function() {
    return (/* @__PURE__ */ o(function n(i, s, a) {
      function l(d, p5) {
        if (!s[d]) {
          if (!i[d]) {
            var f = typeof wi == "function" && wi;
            if (!p5 && f) return f(d, true);
            if (u) return u(d, true);
            var m = new Error("Cannot find module '" + d + "'");
            throw m.code = "MODULE_NOT_FOUND", m;
          }
          var h5 = s[d] = { exports: {} };
          i[d][0].call(h5.exports, function(b) {
            var v5 = i[d][1][b];
            return l(v5 || b);
          }, h5, h5.exports, n, i, s, a);
        }
        return s[d].exports;
      }
      o(l, "s");
      for (var u = typeof wi == "function" && wi, c = 0; c < a.length; c++) l(a[c]);
      return l;
    }, "e"))({ 1: [function(n, i, s) {
      i.exports = function(a) {
        if (typeof Map != "function" || a) {
          var l = n("./similar");
          return new l();
        } else
          return /* @__PURE__ */ new Map();
      };
    }, { "./similar": 2 }], 2: [function(n, i, s) {
      function a() {
        return this.list = [], this.lastItem = void 0, this.size = 0, this;
      }
      o(a, "Similar"), a.prototype.get = function(l) {
        var u;
        if (this.lastItem && this.isEqual(this.lastItem.key, l))
          return this.lastItem.val;
        if (u = this.indexOf(l), u >= 0)
          return this.lastItem = this.list[u], this.list[u].val;
      }, a.prototype.set = function(l, u) {
        var c;
        return this.lastItem && this.isEqual(this.lastItem.key, l) ? (this.lastItem.val = u, this) : (c = this.indexOf(l), c >= 0 ? (this.lastItem = this.list[c], this.list[c].val = u, this) : (this.lastItem = { key: l, val: u }, this.list.push(this.lastItem), this.size++, this));
      }, a.prototype.delete = function(l) {
        var u;
        if (this.lastItem && this.isEqual(this.lastItem.key, l) && (this.lastItem = void 0), u = this.indexOf(l), u >= 0)
          return this.size--, this.list.splice(u, 1)[0];
      }, a.prototype.has = function(l) {
        var u;
        return this.lastItem && this.isEqual(this.lastItem.key, l) ? true : (u = this.indexOf(l), u >= 0 ? (this.lastItem = this.list[u], true) : false);
      }, a.prototype.forEach = function(l, u) {
        var c;
        for (c = 0; c < this.size; c++)
          l.call(u || this, this.list[c].val, this.list[c].key, this);
      }, a.prototype.indexOf = function(l) {
        var u;
        for (u = 0; u < this.size; u++)
          if (this.isEqual(this.list[u].key, l))
            return u;
        return -1;
      }, a.prototype.isEqual = function(l, u) {
        return l === u || l !== l && u !== u;
      }, i.exports = a;
    }, {}], 3: [function(n, i, s) {
      var a = n("map-or-similar");
      i.exports = function(d) {
        var p5 = new a(false), f = [];
        return function(m) {
          var h5 = /* @__PURE__ */ o(function() {
            var b = p5, v5, g, w5 = arguments.length - 1, E = Array(w5 + 1), R = true, S;
            if ((h5.numArgs || h5.numArgs === 0) && h5.numArgs !== w5 + 1)
              throw new Error("Memoizerific functions should always be called with the same number of arguments");
            for (S = 0; S < w5; S++) {
              if (E[S] = {
                cacheItem: b,
                arg: arguments[S]
              }, b.has(arguments[S])) {
                b = b.get(arguments[S]);
                continue;
              }
              R = false, v5 = new a(false), b.set(arguments[S], v5), b = v5;
            }
            return R && (b.has(arguments[w5]) ? g = b.get(arguments[w5]) : R = false), R || (g = m.apply(null, arguments), b.set(arguments[w5], g)), d > 0 && (E[w5] = {
              cacheItem: b,
              arg: arguments[w5]
            }, R ? l(f, E) : f.push(E), f.length > d && u(f.shift())), h5.wasMemoized = R, h5.numArgs = w5 + 1, g;
          }, "memoizerific");
          return h5.limit = d, h5.wasMemoized = false, h5.cache = p5, h5.lru = f, h5;
        };
      };
      function l(d, p5) {
        var f = d.length, m = p5.length, h5, b, v5;
        for (b = 0; b < f; b++) {
          for (h5 = true, v5 = 0; v5 < m; v5++)
            if (!c(d[b][v5].arg, p5[v5].arg)) {
              h5 = false;
              break;
            }
          if (h5)
            break;
        }
        d.push(d.splice(b, 1)[0]);
      }
      o(l, "moveToMostRecentLru");
      function u(d) {
        var p5 = d.length, f = d[p5 - 1], m, h5;
        for (f.cacheItem.delete(f.arg), h5 = p5 - 2; h5 >= 0 && (f = d[h5], m = f.cacheItem.get(f.arg), !m || !m.size); h5--)
          f.cacheItem.delete(f.arg);
      }
      o(u, "removeCachedResult");
      function c(d, p5) {
        return d === p5 || d !== d && p5 !== p5;
      }
      o(c, "isEqual");
    }, { "map-or-similar": 1 }] }, {}, [3])(3);
  });
});
var HR = y((BR) => {
  Object.defineProperty(BR, "__esModule", { value: true });
  BR.encodeString = axe;
  var lr = Array.from({ length: 256 }, (e, t) => "%" + ((t < 16 ? "0" : "") + t.toString(16)).toUpperCase()), sxe = new Int8Array([
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    0,
    0,
    0,
    0,
    0,
    1,
    1,
    1,
    1,
    0,
    0,
    1,
    1,
    0,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    0,
    0,
    0,
    0,
    1,
    0,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    0,
    0,
    0,
    1,
    0
  ]);
  function axe(e) {
    let t = e.length;
    if (t === 0)
      return "";
    let r7 = "", n = 0, i = 0;
    e: for (; i < t; i++) {
      let s = e.charCodeAt(i);
      for (; s < 128; ) {
        if (sxe[s] !== 1 && (n < i && (r7 += e.slice(n, i)), n = i + 1, r7 += lr[s]), ++i === t)
          break e;
        s = e.charCodeAt(i);
      }
      if (n < i && (r7 += e.slice(n, i)), s < 2048) {
        n = i + 1, r7 += lr[192 | s >> 6] + lr[128 | s & 63];
        continue;
      }
      if (s < 55296 || s >= 57344) {
        n = i + 1, r7 += lr[224 | s >> 12] + lr[128 | s >> 6 & 63] + lr[128 | s & 63];
        continue;
      }
      if (++i, i >= t)
        throw new Error("URI malformed");
      let a = e.charCodeAt(i) & 1023;
      n = i + 1, s = 65536 + ((s & 1023) << 10 | a), r7 += lr[240 | s >> 18] + lr[128 | s >> 12 & 63] + lr[128 | s >> 6 & 63] + lr[128 | s & 63];
    }
    return n === 0 ? e : n < t ? r7 + e.slice(n) : r7;
  }
  o(axe, "encodeString");
});
var Cy = y((ur) => {
  Object.defineProperty(ur, "__esModule", { value: true });
  ur.defaultOptions = ur.defaultShouldSerializeObject = ur.defaultValueSerializer = void 0;
  var UR = HR(), lxe = /* @__PURE__ */ o((e) => {
    switch (typeof e) {
      case "string":
        return (0, UR.encodeString)(e);
      case "bigint":
      case "boolean":
        return "" + e;
      case "number":
        if (Number.isFinite(e))
          return e < 1e21 ? "" + e : (0, UR.encodeString)("" + e);
        break;
    }
    return e instanceof Date ? (0, UR.encodeString)(e.toISOString()) : "";
  }, "defaultValueSerializer");
  ur.defaultValueSerializer = lxe;
  var uxe = /* @__PURE__ */ o((e) => e instanceof Date, "defaultShouldSerializeObject");
  ur.defaultShouldSerializeObject = uxe;
  var FU = /* @__PURE__ */ o((e) => e, "identityFunc");
  ur.defaultOptions = {
    nesting: true,
    nestingSyntax: "dot",
    arrayRepeat: false,
    arrayRepeatSyntax: "repeat",
    delimiter: 38,
    valueDeserializer: FU,
    valueSerializer: ur.defaultValueSerializer,
    keyDeserializer: FU,
    shouldSerializeObject: ur.defaultShouldSerializeObject
  };
});
var VR = y((Py) => {
  Object.defineProperty(Py, "__esModule", { value: true });
  Py.getDeepObject = pxe;
  Py.stringifyObject = DU;
  var eo = Cy(), cxe = HR();
  function dxe(e) {
    return e === "__proto__" || e === "constructor" || e === "prototype";
  }
  o(dxe, "isPrototypeKey");
  function pxe(e, t, r7, n, i) {
    if (dxe(t))
      return e;
    let s = e[t];
    return typeof s == "object" && s !== null ? s : !n && (i || typeof r7 == "number" || typeof r7 == "string" && r7 * 0 === 0 && r7.indexOf(".") === -1) ? e[t] = [] : e[t] = {};
  }
  o(pxe, "getDeepObject");
  var fxe = 20, mxe = "[]", hxe = "[", yxe = "]", bxe = ".";
  function DU(e, t, r7 = 0, n, i) {
    let { nestingSyntax: s = eo.defaultOptions.nestingSyntax, arrayRepeat: a = eo.defaultOptions.arrayRepeat, arrayRepeatSyntax: l = eo.defaultOptions.arrayRepeatSyntax, nesting: u = eo.defaultOptions.nesting, delimiter: c = eo.defaultOptions.delimiter, valueSerializer: d = eo.defaultOptions.valueSerializer, shouldSerializeObject: p5 = eo.defaultOptions.shouldSerializeObject } = t, f = typeof c == "number" ? String.fromCharCode(
      c
    ) : c, m = i === true && a, h5 = s === "dot" || s === "js" && !i;
    if (r7 > fxe)
      return "";
    let b = "", v5 = true, g = false;
    for (let w5 in e) {
      let E = e[w5], R;
      n ? (R = n, m ? l === "bracket" && (R += mxe) : h5 ? (R += bxe, R += w5) : (R += hxe, R += w5, R += yxe)) : R = w5, v5 || (b += f), typeof E == "object" && E !== null && !p5(E) ? (g = E.pop !== void 0, (u || a && g) && (b += DU(E, t, r7 + 1, R, g))) : (b += (0, cxe.encodeString)(
        R
      ), b += "=", b += d(E, w5)), v5 && (v5 = false);
    }
    return b;
  }
  o(DU, "stringifyObject");
});
var UU = y((eYe, HU) => {
  var $U = 12, gxe = 0, zR = [
    // The first part of the table maps bytes to character to a transition.
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    4,
    4,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    6,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    8,
    7,
    7,
    10,
    9,
    9,
    9,
    11,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    // The second part of the table maps a state to a new state when adding a
    // transition.
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    12,
    0,
    0,
    0,
    0,
    24,
    36,
    48,
    60,
    72,
    84,
    96,
    0,
    12,
    12,
    12,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    24,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    24,
    24,
    24,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    24,
    24,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    48,
    48,
    48,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    48,
    48,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    48,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    // The third part maps the current transition to a mask that needs to apply
    // to the byte.
    127,
    63,
    63,
    63,
    0,
    31,
    15,
    15,
    15,
    7,
    7,
    7
  ];
  function vxe(e) {
    var t = e.indexOf("%");
    if (t === -1) return e;
    for (var r7 = e.length, n = "", i = 0, s = 0, a = t, l = $U; t > -1 && t < r7; ) {
      var u = BU(e[t + 1], 4), c = BU(e[t + 2], 0), d = u | c, p5 = zR[d];
      if (l = zR[256 + l + p5], s = s << 6 | d & zR[364 + p5], l === $U)
        n += e.slice(i, a), n += s <= 65535 ? String.fromCharCode(s) : String.fromCharCode(
          55232 + (s >> 10),
          56320 + (s & 1023)
        ), s = 0, i = t + 3, t = a = e.indexOf("%", i);
      else {
        if (l === gxe)
          return null;
        if (t += 3, t < r7 && e.charCodeAt(t) === 37) continue;
        return null;
      }
    }
    return n + e.slice(i);
  }
  o(vxe, "decodeURIComponent");
  var Exe = {
    0: 0,
    1: 1,
    2: 2,
    3: 3,
    4: 4,
    5: 5,
    6: 6,
    7: 7,
    8: 8,
    9: 9,
    a: 10,
    A: 10,
    b: 11,
    B: 11,
    c: 12,
    C: 12,
    d: 13,
    D: 13,
    e: 14,
    E: 14,
    f: 15,
    F: 15
  };
  function BU(e, t) {
    var r7 = Exe[e];
    return r7 === void 0 ? 255 : r7 << t;
  }
  o(BU, "hexCodeToInt");
  HU.exports = vxe;
});
var WU = y((Pr2) => {
  var xxe = Pr2 && Pr2.__importDefault || function(e) {
    return e && e.__esModule ? e : { default: e };
  };
  Object.defineProperty(Pr2, "__esModule", { value: true });
  Pr2.numberValueDeserializer = Pr2.numberKeyDeserializer = void 0;
  Pr2.parse = Rxe;
  var Ay = VR(), to = Cy(), VU = xxe(UU()), wxe = /* @__PURE__ */ o((e) => {
    let t = Number(e);
    return Number.isNaN(t) ? e : t;
  }, "numberKeyDeserializer");
  Pr2.numberKeyDeserializer = wxe;
  var Txe = /* @__PURE__ */ o((e) => {
    let t = Number(e);
    return Number.isNaN(t) ? e : t;
  }, "numberValueDeserializer");
  Pr2.numberValueDeserializer = Txe;
  var zU = /\+/g, GU = /* @__PURE__ */ o(function() {
  }, "Empty");
  GU.prototype = /* @__PURE__ */ Object.create(null);
  function Oy(e, t, r7, n, i) {
    let s = e.substring(t, r7);
    return n && (s = s.replace(zU, " ")), i && (s = (0, VU.default)(s) || s), s;
  }
  o(Oy, "computeKeySlice");
  function Rxe(e, t) {
    let { valueDeserializer: r7 = to.defaultOptions.valueDeserializer, keyDeserializer: n = to.defaultOptions.keyDeserializer, arrayRepeatSyntax: i = to.defaultOptions.arrayRepeatSyntax, nesting: s = to.defaultOptions.nesting, arrayRepeat: a = to.defaultOptions.arrayRepeat, nestingSyntax: l = to.defaultOptions.nestingSyntax, delimiter: u = to.defaultOptions.delimiter } = t ?? {}, c = typeof u == "string" ? u.charCodeAt(0) : u, d = l === "js", p5 = new GU();
    if (typeof e != "string")
      return p5;
    let f = e.length, m = "", h5 = -1, b = -1, v5 = -1, g = p5, w5, E = "", R = "", S = false, P = false, _5 = false, C5 = false, O = false, L = false, q = false, D = 0, H = -1, M7 = -1, U = -1;
    for (let N = 0; N < f + 1; N++) {
      if (D = N !== f ? e.charCodeAt(N) : c, D === c) {
        if (q = b > h5, q || (b = N), v5 !== b - 1 && (R = Oy(e, v5 + 1, H > -1 ? H : b, _5, S), E = n(R), w5 !== void 0 && (g = (0, Ay.getDeepObject)(
          g,
          w5,
          E,
          d && O,
          d && L
        ))), q || E !== "") {
          q && (m = e.slice(b + 1, N), C5 && (m = m.replace(zU, " ")), P && (m = (0, VU.default)(m) || m));
          let W = r7(m, E);
          if (a) {
            let Y = g[E];
            Y === void 0 ? H > -1 ? g[E] = [W] : g[E] = W : Y.pop ? Y.push(W) : g[E] = [Y, W];
          } else
            g[E] = W;
        }
        m = "", h5 = N, b = N, S = false, P = false, _5 = false, C5 = false, O = false, L = false, H = -1, v5 = N, g = p5, w5 = void 0, E = "";
      } else D === 93 ? (a && i === "bracket" && U === 91 && (H = M7), s && (l === "index" || d) && b <= h5 && (v5 !== M7 && (R = Oy(
        e,
        v5 + 1,
        N,
        _5,
        S
      ), E = n(R), w5 !== void 0 && (g = (0, Ay.getDeepObject)(g, w5, E, void 0, d)), w5 = E, _5 = false, S = false), v5 = N, L = true, O = false)) : D === 46 ? s && (l === "dot" || d) && b <= h5 && (v5 !== M7 && (R = Oy(e, v5 + 1, N, _5, S), E = n(R), w5 !== void 0 && (g = (0, Ay.getDeepObject)(
        g,
        w5,
        E,
        d
      )), w5 = E, _5 = false, S = false), O = true, L = false, v5 = N) : D === 91 ? s && (l === "index" || d) && b <= h5 && (v5 !== M7 && (R = Oy(
        e,
        v5 + 1,
        N,
        _5,
        S
      ), E = n(R), d && w5 !== void 0 && (g = (0, Ay.getDeepObject)(g, w5, E, d)), w5 = E, _5 = false, S = false, O = false, L = true), v5 = N) : D === 61 ? b <= h5 ? b = N : P = true : D === 43 ? b > h5 ? C5 = true : _5 = true : D === 37 && (b > h5 ? P = true : S = true);
      M7 = N, U = D;
    }
    return p5;
  }
  o(Rxe, "parse");
});
var YU = y((GR) => {
  Object.defineProperty(GR, "__esModule", { value: true });
  GR.stringify = _xe;
  var Sxe = VR();
  function _xe(e, t) {
    if (e === null || typeof e != "object")
      return "";
    let r7 = t ?? {};
    return (0, Sxe.stringifyObject)(e, r7);
  }
  o(_xe, "stringify");
});
var qy = y((Zt) => {
  var Cxe = Zt && Zt.__createBinding || (Object.create ? function(e, t, r7, n) {
    n === void 0 && (n = r7);
    var i = Object.getOwnPropertyDescriptor(t, r7);
    (!i || ("get" in i ? !t.__esModule : i.writable || i.configurable)) && (i = { enumerable: true, get: /* @__PURE__ */ o(function() {
      return t[r7];
    }, "get") }), Object.defineProperty(e, n, i);
  } : function(e, t, r7, n) {
    n === void 0 && (n = r7), e[n] = t[r7];
  }), Pxe = Zt && Zt.__exportStar || function(e, t) {
    for (var r7 in e) r7 !== "default" && !Object.prototype.hasOwnProperty.call(t, r7) && Cxe(t, e, r7);
  };
  Object.defineProperty(Zt, "__esModule", { value: true });
  Zt.stringify = Zt.parse = void 0;
  var Axe = WU();
  Object.defineProperty(Zt, "parse", { enumerable: true, get: /* @__PURE__ */ o(function() {
    return Axe.parse;
  }, "get") });
  var Oxe = YU();
  Object.defineProperty(Zt, "stringify", { enumerable: true, get: /* @__PURE__ */ o(function() {
    return Oxe.stringify;
  }, "get") });
  Pxe(Cy(), Zt);
});
var XR = y((bYe, Lxe) => {
  Lxe.exports = {
    Aacute: "Á",
    aacute: "á",
    Abreve: "Ă",
    abreve: "ă",
    ac: "∾",
    acd: "∿",
    acE: "∾̳",
    Acirc: "Â",
    acirc: "â",
    acute: "´",
    Acy: "А",
    acy: "а",
    AElig: "Æ",
    aelig: "æ",
    af: "⁡",
    Afr: "𝔄",
    afr: "𝔞",
    Agrave: "À",
    agrave: "à",
    alefsym: "ℵ",
    aleph: "ℵ",
    Alpha: "Α",
    alpha: "α",
    Amacr: "Ā",
    amacr: "ā",
    amalg: "⨿",
    amp: "&",
    AMP: "&",
    andand: "⩕",
    And: "⩓",
    and: "∧",
    andd: "⩜",
    andslope: "⩘",
    andv: "⩚",
    ang: "∠",
    ange: "⦤",
    angle: "∠",
    angmsdaa: "⦨",
    angmsdab: "⦩",
    angmsdac: "⦪",
    angmsdad: "⦫",
    angmsdae: "⦬",
    angmsdaf: "⦭",
    angmsdag: "⦮",
    angmsdah: "⦯",
    angmsd: "∡",
    angrt: "∟",
    angrtvb: "⊾",
    angrtvbd: "⦝",
    angsph: "∢",
    angst: "Å",
    angzarr: "⍼",
    Aogon: "Ą",
    aogon: "ą",
    Aopf: "𝔸",
    aopf: "𝕒",
    apacir: "⩯",
    ap: "≈",
    apE: "⩰",
    ape: "≊",
    apid: "≋",
    apos: "'",
    ApplyFunction: "⁡",
    approx: "≈",
    approxeq: "≊",
    Aring: "Å",
    aring: "å",
    Ascr: "𝒜",
    ascr: "𝒶",
    Assign: "≔",
    ast: "*",
    asymp: "≈",
    asympeq: "≍",
    Atilde: "Ã",
    atilde: "ã",
    Auml: "Ä",
    auml: "ä",
    awconint: "∳",
    awint: "⨑",
    backcong: "≌",
    backepsilon: "϶",
    backprime: "‵",
    backsim: "∽",
    backsimeq: "⋍",
    Backslash: "∖",
    Barv: "⫧",
    barvee: "⊽",
    barwed: "⌅",
    Barwed: "⌆",
    barwedge: "⌅",
    bbrk: "⎵",
    bbrktbrk: "⎶",
    bcong: "≌",
    Bcy: "Б",
    bcy: "б",
    bdquo: "„",
    becaus: "∵",
    because: "∵",
    Because: "∵",
    bemptyv: "⦰",
    bepsi: "϶",
    bernou: "ℬ",
    Bernoullis: "ℬ",
    Beta: "Β",
    beta: "β",
    beth: "ℶ",
    between: "≬",
    Bfr: "𝔅",
    bfr: "𝔟",
    bigcap: "⋂",
    bigcirc: "◯",
    bigcup: "⋃",
    bigodot: "⨀",
    bigoplus: "⨁",
    bigotimes: "⨂",
    bigsqcup: "⨆",
    bigstar: "★",
    bigtriangledown: "▽",
    bigtriangleup: "△",
    biguplus: "⨄",
    bigvee: "⋁",
    bigwedge: "⋀",
    bkarow: "⤍",
    blacklozenge: "⧫",
    blacksquare: "▪",
    blacktriangle: "▴",
    blacktriangledown: "▾",
    blacktriangleleft: "◂",
    blacktriangleright: "▸",
    blank: "␣",
    blk12: "▒",
    blk14: "░",
    blk34: "▓",
    block: "█",
    bne: "=⃥",
    bnequiv: "≡⃥",
    bNot: "⫭",
    bnot: "⌐",
    Bopf: "𝔹",
    bopf: "𝕓",
    bot: "⊥",
    bottom: "⊥",
    bowtie: "⋈",
    boxbox: "⧉",
    boxdl: "┐",
    boxdL: "╕",
    boxDl: "╖",
    boxDL: "╗",
    boxdr: "┌",
    boxdR: "╒",
    boxDr: "╓",
    boxDR: "╔",
    boxh: "─",
    boxH: "═",
    boxhd: "┬",
    boxHd: "╤",
    boxhD: "╥",
    boxHD: "╦",
    boxhu: "┴",
    boxHu: "╧",
    boxhU: "╨",
    boxHU: "╩",
    boxminus: "⊟",
    boxplus: "⊞",
    boxtimes: "⊠",
    boxul: "┘",
    boxuL: "╛",
    boxUl: "╜",
    boxUL: "╝",
    boxur: "└",
    boxuR: "╘",
    boxUr: "╙",
    boxUR: "╚",
    boxv: "│",
    boxV: "║",
    boxvh: "┼",
    boxvH: "╪",
    boxVh: "╫",
    boxVH: "╬",
    boxvl: "┤",
    boxvL: "╡",
    boxVl: "╢",
    boxVL: "╣",
    boxvr: "├",
    boxvR: "╞",
    boxVr: "╟",
    boxVR: "╠",
    bprime: "‵",
    breve: "˘",
    Breve: "˘",
    brvbar: "¦",
    bscr: "𝒷",
    Bscr: "ℬ",
    bsemi: "⁏",
    bsim: "∽",
    bsime: "⋍",
    bsolb: "⧅",
    bsol: "\\",
    bsolhsub: "⟈",
    bull: "•",
    bullet: "•",
    bump: "≎",
    bumpE: "⪮",
    bumpe: "≏",
    Bumpeq: "≎",
    bumpeq: "≏",
    Cacute: "Ć",
    cacute: "ć",
    capand: "⩄",
    capbrcup: "⩉",
    capcap: "⩋",
    cap: "∩",
    Cap: "⋒",
    capcup: "⩇",
    capdot: "⩀",
    CapitalDifferentialD: "ⅅ",
    caps: "∩︀",
    caret: "⁁",
    caron: "ˇ",
    Cayleys: "ℭ",
    ccaps: "⩍",
    Ccaron: "Č",
    ccaron: "č",
    Ccedil: "Ç",
    ccedil: "ç",
    Ccirc: "Ĉ",
    ccirc: "ĉ",
    Cconint: "∰",
    ccups: "⩌",
    ccupssm: "⩐",
    Cdot: "Ċ",
    cdot: "ċ",
    cedil: "¸",
    Cedilla: "¸",
    cemptyv: "⦲",
    cent: "¢",
    centerdot: "·",
    CenterDot: "·",
    cfr: "𝔠",
    Cfr: "ℭ",
    CHcy: "Ч",
    chcy: "ч",
    check: "✓",
    checkmark: "✓",
    Chi: "Χ",
    chi: "χ",
    circ: "ˆ",
    circeq: "≗",
    circlearrowleft: "↺",
    circlearrowright: "↻",
    circledast: "⊛",
    circledcirc: "⊚",
    circleddash: "⊝",
    CircleDot: "⊙",
    circledR: "®",
    circledS: "Ⓢ",
    CircleMinus: "⊖",
    CirclePlus: "⊕",
    CircleTimes: "⊗",
    cir: "○",
    cirE: "⧃",
    cire: "≗",
    cirfnint: "⨐",
    cirmid: "⫯",
    cirscir: "⧂",
    ClockwiseContourIntegral: "∲",
    CloseCurlyDoubleQuote: "”",
    CloseCurlyQuote: "’",
    clubs: "♣",
    clubsuit: "♣",
    colon: ":",
    Colon: "∷",
    Colone: "⩴",
    colone: "≔",
    coloneq: "≔",
    comma: ",",
    commat: "@",
    comp: "∁",
    compfn: "∘",
    complement: "∁",
    complexes: "ℂ",
    cong: "≅",
    congdot: "⩭",
    Congruent: "≡",
    conint: "∮",
    Conint: "∯",
    ContourIntegral: "∮",
    copf: "𝕔",
    Copf: "ℂ",
    coprod: "∐",
    Coproduct: "∐",
    copy: "©",
    COPY: "©",
    copysr: "℗",
    CounterClockwiseContourIntegral: "∳",
    crarr: "↵",
    cross: "✗",
    Cross: "⨯",
    Cscr: "𝒞",
    cscr: "𝒸",
    csub: "⫏",
    csube: "⫑",
    csup: "⫐",
    csupe: "⫒",
    ctdot: "⋯",
    cudarrl: "⤸",
    cudarrr: "⤵",
    cuepr: "⋞",
    cuesc: "⋟",
    cularr: "↶",
    cularrp: "⤽",
    cupbrcap: "⩈",
    cupcap: "⩆",
    CupCap: "≍",
    cup: "∪",
    Cup: "⋓",
    cupcup: "⩊",
    cupdot: "⊍",
    cupor: "⩅",
    cups: "∪︀",
    curarr: "↷",
    curarrm: "⤼",
    curlyeqprec: "⋞",
    curlyeqsucc: "⋟",
    curlyvee: "⋎",
    curlywedge: "⋏",
    curren: "¤",
    curvearrowleft: "↶",
    curvearrowright: "↷",
    cuvee: "⋎",
    cuwed: "⋏",
    cwconint: "∲",
    cwint: "∱",
    cylcty: "⌭",
    dagger: "†",
    Dagger: "‡",
    daleth: "ℸ",
    darr: "↓",
    Darr: "↡",
    dArr: "⇓",
    dash: "‐",
    Dashv: "⫤",
    dashv: "⊣",
    dbkarow: "⤏",
    dblac: "˝",
    Dcaron: "Ď",
    dcaron: "ď",
    Dcy: "Д",
    dcy: "д",
    ddagger: "‡",
    ddarr: "⇊",
    DD: "ⅅ",
    dd: "ⅆ",
    DDotrahd: "⤑",
    ddotseq: "⩷",
    deg: "°",
    Del: "∇",
    Delta: "Δ",
    delta: "δ",
    demptyv: "⦱",
    dfisht: "⥿",
    Dfr: "𝔇",
    dfr: "𝔡",
    dHar: "⥥",
    dharl: "⇃",
    dharr: "⇂",
    DiacriticalAcute: "´",
    DiacriticalDot: "˙",
    DiacriticalDoubleAcute: "˝",
    DiacriticalGrave: "`",
    DiacriticalTilde: "˜",
    diam: "⋄",
    diamond: "⋄",
    Diamond: "⋄",
    diamondsuit: "♦",
    diams: "♦",
    die: "¨",
    DifferentialD: "ⅆ",
    digamma: "ϝ",
    disin: "⋲",
    div: "÷",
    divide: "÷",
    divideontimes: "⋇",
    divonx: "⋇",
    DJcy: "Ђ",
    djcy: "ђ",
    dlcorn: "⌞",
    dlcrop: "⌍",
    dollar: "$",
    Dopf: "𝔻",
    dopf: "𝕕",
    Dot: "¨",
    dot: "˙",
    DotDot: "⃜",
    doteq: "≐",
    doteqdot: "≑",
    DotEqual: "≐",
    dotminus: "∸",
    dotplus: "∔",
    dotsquare: "⊡",
    doublebarwedge: "⌆",
    DoubleContourIntegral: "∯",
    DoubleDot: "¨",
    DoubleDownArrow: "⇓",
    DoubleLeftArrow: "⇐",
    DoubleLeftRightArrow: "⇔",
    DoubleLeftTee: "⫤",
    DoubleLongLeftArrow: "⟸",
    DoubleLongLeftRightArrow: "⟺",
    DoubleLongRightArrow: "⟹",
    DoubleRightArrow: "⇒",
    DoubleRightTee: "⊨",
    DoubleUpArrow: "⇑",
    DoubleUpDownArrow: "⇕",
    DoubleVerticalBar: "∥",
    DownArrowBar: "⤓",
    downarrow: "↓",
    DownArrow: "↓",
    Downarrow: "⇓",
    DownArrowUpArrow: "⇵",
    DownBreve: "̑",
    downdownarrows: "⇊",
    downharpoonleft: "⇃",
    downharpoonright: "⇂",
    DownLeftRightVector: "⥐",
    DownLeftTeeVector: "⥞",
    DownLeftVectorBar: "⥖",
    DownLeftVector: "↽",
    DownRightTeeVector: "⥟",
    DownRightVectorBar: "⥗",
    DownRightVector: "⇁",
    DownTeeArrow: "↧",
    DownTee: "⊤",
    drbkarow: "⤐",
    drcorn: "⌟",
    drcrop: "⌌",
    Dscr: "𝒟",
    dscr: "𝒹",
    DScy: "Ѕ",
    dscy: "ѕ",
    dsol: "⧶",
    Dstrok: "Đ",
    dstrok: "đ",
    dtdot: "⋱",
    dtri: "▿",
    dtrif: "▾",
    duarr: "⇵",
    duhar: "⥯",
    dwangle: "⦦",
    DZcy: "Џ",
    dzcy: "џ",
    dzigrarr: "⟿",
    Eacute: "É",
    eacute: "é",
    easter: "⩮",
    Ecaron: "Ě",
    ecaron: "ě",
    Ecirc: "Ê",
    ecirc: "ê",
    ecir: "≖",
    ecolon: "≕",
    Ecy: "Э",
    ecy: "э",
    eDDot: "⩷",
    Edot: "Ė",
    edot: "ė",
    eDot: "≑",
    ee: "ⅇ",
    efDot: "≒",
    Efr: "𝔈",
    efr: "𝔢",
    eg: "⪚",
    Egrave: "È",
    egrave: "è",
    egs: "⪖",
    egsdot: "⪘",
    el: "⪙",
    Element: "∈",
    elinters: "⏧",
    ell: "ℓ",
    els: "⪕",
    elsdot: "⪗",
    Emacr: "Ē",
    emacr: "ē",
    empty: "∅",
    emptyset: "∅",
    EmptySmallSquare: "◻",
    emptyv: "∅",
    EmptyVerySmallSquare: "▫",
    emsp13: " ",
    emsp14: " ",
    emsp: " ",
    ENG: "Ŋ",
    eng: "ŋ",
    ensp: " ",
    Eogon: "Ę",
    eogon: "ę",
    Eopf: "𝔼",
    eopf: "𝕖",
    epar: "⋕",
    eparsl: "⧣",
    eplus: "⩱",
    epsi: "ε",
    Epsilon: "Ε",
    epsilon: "ε",
    epsiv: "ϵ",
    eqcirc: "≖",
    eqcolon: "≕",
    eqsim: "≂",
    eqslantgtr: "⪖",
    eqslantless: "⪕",
    Equal: "⩵",
    equals: "=",
    EqualTilde: "≂",
    equest: "≟",
    Equilibrium: "⇌",
    equiv: "≡",
    equivDD: "⩸",
    eqvparsl: "⧥",
    erarr: "⥱",
    erDot: "≓",
    escr: "ℯ",
    Escr: "ℰ",
    esdot: "≐",
    Esim: "⩳",
    esim: "≂",
    Eta: "Η",
    eta: "η",
    ETH: "Ð",
    eth: "ð",
    Euml: "Ë",
    euml: "ë",
    euro: "€",
    excl: "!",
    exist: "∃",
    Exists: "∃",
    expectation: "ℰ",
    exponentiale: "ⅇ",
    ExponentialE: "ⅇ",
    fallingdotseq: "≒",
    Fcy: "Ф",
    fcy: "ф",
    female: "♀",
    ffilig: "ﬃ",
    fflig: "ﬀ",
    ffllig: "ﬄ",
    Ffr: "𝔉",
    ffr: "𝔣",
    filig: "ﬁ",
    FilledSmallSquare: "◼",
    FilledVerySmallSquare: "▪",
    fjlig: "fj",
    flat: "♭",
    fllig: "ﬂ",
    fltns: "▱",
    fnof: "ƒ",
    Fopf: "𝔽",
    fopf: "𝕗",
    forall: "∀",
    ForAll: "∀",
    fork: "⋔",
    forkv: "⫙",
    Fouriertrf: "ℱ",
    fpartint: "⨍",
    frac12: "½",
    frac13: "⅓",
    frac14: "¼",
    frac15: "⅕",
    frac16: "⅙",
    frac18: "⅛",
    frac23: "⅔",
    frac25: "⅖",
    frac34: "¾",
    frac35: "⅗",
    frac38: "⅜",
    frac45: "⅘",
    frac56: "⅚",
    frac58: "⅝",
    frac78: "⅞",
    frasl: "⁄",
    frown: "⌢",
    fscr: "𝒻",
    Fscr: "ℱ",
    gacute: "ǵ",
    Gamma: "Γ",
    gamma: "γ",
    Gammad: "Ϝ",
    gammad: "ϝ",
    gap: "⪆",
    Gbreve: "Ğ",
    gbreve: "ğ",
    Gcedil: "Ģ",
    Gcirc: "Ĝ",
    gcirc: "ĝ",
    Gcy: "Г",
    gcy: "г",
    Gdot: "Ġ",
    gdot: "ġ",
    ge: "≥",
    gE: "≧",
    gEl: "⪌",
    gel: "⋛",
    geq: "≥",
    geqq: "≧",
    geqslant: "⩾",
    gescc: "⪩",
    ges: "⩾",
    gesdot: "⪀",
    gesdoto: "⪂",
    gesdotol: "⪄",
    gesl: "⋛︀",
    gesles: "⪔",
    Gfr: "𝔊",
    gfr: "𝔤",
    gg: "≫",
    Gg: "⋙",
    ggg: "⋙",
    gimel: "ℷ",
    GJcy: "Ѓ",
    gjcy: "ѓ",
    gla: "⪥",
    gl: "≷",
    glE: "⪒",
    glj: "⪤",
    gnap: "⪊",
    gnapprox: "⪊",
    gne: "⪈",
    gnE: "≩",
    gneq: "⪈",
    gneqq: "≩",
    gnsim: "⋧",
    Gopf: "𝔾",
    gopf: "𝕘",
    grave: "`",
    GreaterEqual: "≥",
    GreaterEqualLess: "⋛",
    GreaterFullEqual: "≧",
    GreaterGreater: "⪢",
    GreaterLess: "≷",
    GreaterSlantEqual: "⩾",
    GreaterTilde: "≳",
    Gscr: "𝒢",
    gscr: "ℊ",
    gsim: "≳",
    gsime: "⪎",
    gsiml: "⪐",
    gtcc: "⪧",
    gtcir: "⩺",
    gt: ">",
    GT: ">",
    Gt: "≫",
    gtdot: "⋗",
    gtlPar: "⦕",
    gtquest: "⩼",
    gtrapprox: "⪆",
    gtrarr: "⥸",
    gtrdot: "⋗",
    gtreqless: "⋛",
    gtreqqless: "⪌",
    gtrless: "≷",
    gtrsim: "≳",
    gvertneqq: "≩︀",
    gvnE: "≩︀",
    Hacek: "ˇ",
    hairsp: " ",
    half: "½",
    hamilt: "ℋ",
    HARDcy: "Ъ",
    hardcy: "ъ",
    harrcir: "⥈",
    harr: "↔",
    hArr: "⇔",
    harrw: "↭",
    Hat: "^",
    hbar: "ℏ",
    Hcirc: "Ĥ",
    hcirc: "ĥ",
    hearts: "♥",
    heartsuit: "♥",
    hellip: "…",
    hercon: "⊹",
    hfr: "𝔥",
    Hfr: "ℌ",
    HilbertSpace: "ℋ",
    hksearow: "⤥",
    hkswarow: "⤦",
    hoarr: "⇿",
    homtht: "∻",
    hookleftarrow: "↩",
    hookrightarrow: "↪",
    hopf: "𝕙",
    Hopf: "ℍ",
    horbar: "―",
    HorizontalLine: "─",
    hscr: "𝒽",
    Hscr: "ℋ",
    hslash: "ℏ",
    Hstrok: "Ħ",
    hstrok: "ħ",
    HumpDownHump: "≎",
    HumpEqual: "≏",
    hybull: "⁃",
    hyphen: "‐",
    Iacute: "Í",
    iacute: "í",
    ic: "⁣",
    Icirc: "Î",
    icirc: "î",
    Icy: "И",
    icy: "и",
    Idot: "İ",
    IEcy: "Е",
    iecy: "е",
    iexcl: "¡",
    iff: "⇔",
    ifr: "𝔦",
    Ifr: "ℑ",
    Igrave: "Ì",
    igrave: "ì",
    ii: "ⅈ",
    iiiint: "⨌",
    iiint: "∭",
    iinfin: "⧜",
    iiota: "℩",
    IJlig: "Ĳ",
    ijlig: "ĳ",
    Imacr: "Ī",
    imacr: "ī",
    image: "ℑ",
    ImaginaryI: "ⅈ",
    imagline: "ℐ",
    imagpart: "ℑ",
    imath: "ı",
    Im: "ℑ",
    imof: "⊷",
    imped: "Ƶ",
    Implies: "⇒",
    incare: "℅",
    in: "∈",
    infin: "∞",
    infintie: "⧝",
    inodot: "ı",
    intcal: "⊺",
    int: "∫",
    Int: "∬",
    integers: "ℤ",
    Integral: "∫",
    intercal: "⊺",
    Intersection: "⋂",
    intlarhk: "⨗",
    intprod: "⨼",
    InvisibleComma: "⁣",
    InvisibleTimes: "⁢",
    IOcy: "Ё",
    iocy: "ё",
    Iogon: "Į",
    iogon: "į",
    Iopf: "𝕀",
    iopf: "𝕚",
    Iota: "Ι",
    iota: "ι",
    iprod: "⨼",
    iquest: "¿",
    iscr: "𝒾",
    Iscr: "ℐ",
    isin: "∈",
    isindot: "⋵",
    isinE: "⋹",
    isins: "⋴",
    isinsv: "⋳",
    isinv: "∈",
    it: "⁢",
    Itilde: "Ĩ",
    itilde: "ĩ",
    Iukcy: "І",
    iukcy: "і",
    Iuml: "Ï",
    iuml: "ï",
    Jcirc: "Ĵ",
    jcirc: "ĵ",
    Jcy: "Й",
    jcy: "й",
    Jfr: "𝔍",
    jfr: "𝔧",
    jmath: "ȷ",
    Jopf: "𝕁",
    jopf: "𝕛",
    Jscr: "𝒥",
    jscr: "𝒿",
    Jsercy: "Ј",
    jsercy: "ј",
    Jukcy: "Є",
    jukcy: "є",
    Kappa: "Κ",
    kappa: "κ",
    kappav: "ϰ",
    Kcedil: "Ķ",
    kcedil: "ķ",
    Kcy: "К",
    kcy: "к",
    Kfr: "𝔎",
    kfr: "𝔨",
    kgreen: "ĸ",
    KHcy: "Х",
    khcy: "х",
    KJcy: "Ќ",
    kjcy: "ќ",
    Kopf: "𝕂",
    kopf: "𝕜",
    Kscr: "𝒦",
    kscr: "𝓀",
    lAarr: "⇚",
    Lacute: "Ĺ",
    lacute: "ĺ",
    laemptyv: "⦴",
    lagran: "ℒ",
    Lambda: "Λ",
    lambda: "λ",
    lang: "⟨",
    Lang: "⟪",
    langd: "⦑",
    langle: "⟨",
    lap: "⪅",
    Laplacetrf: "ℒ",
    laquo: "«",
    larrb: "⇤",
    larrbfs: "⤟",
    larr: "←",
    Larr: "↞",
    lArr: "⇐",
    larrfs: "⤝",
    larrhk: "↩",
    larrlp: "↫",
    larrpl: "⤹",
    larrsim: "⥳",
    larrtl: "↢",
    latail: "⤙",
    lAtail: "⤛",
    lat: "⪫",
    late: "⪭",
    lates: "⪭︀",
    lbarr: "⤌",
    lBarr: "⤎",
    lbbrk: "❲",
    lbrace: "{",
    lbrack: "[",
    lbrke: "⦋",
    lbrksld: "⦏",
    lbrkslu: "⦍",
    Lcaron: "Ľ",
    lcaron: "ľ",
    Lcedil: "Ļ",
    lcedil: "ļ",
    lceil: "⌈",
    lcub: "{",
    Lcy: "Л",
    lcy: "л",
    ldca: "⤶",
    ldquo: "“",
    ldquor: "„",
    ldrdhar: "⥧",
    ldrushar: "⥋",
    ldsh: "↲",
    le: "≤",
    lE: "≦",
    LeftAngleBracket: "⟨",
    LeftArrowBar: "⇤",
    leftarrow: "←",
    LeftArrow: "←",
    Leftarrow: "⇐",
    LeftArrowRightArrow: "⇆",
    leftarrowtail: "↢",
    LeftCeiling: "⌈",
    LeftDoubleBracket: "⟦",
    LeftDownTeeVector: "⥡",
    LeftDownVectorBar: "⥙",
    LeftDownVector: "⇃",
    LeftFloor: "⌊",
    leftharpoondown: "↽",
    leftharpoonup: "↼",
    leftleftarrows: "⇇",
    leftrightarrow: "↔",
    LeftRightArrow: "↔",
    Leftrightarrow: "⇔",
    leftrightarrows: "⇆",
    leftrightharpoons: "⇋",
    leftrightsquigarrow: "↭",
    LeftRightVector: "⥎",
    LeftTeeArrow: "↤",
    LeftTee: "⊣",
    LeftTeeVector: "⥚",
    leftthreetimes: "⋋",
    LeftTriangleBar: "⧏",
    LeftTriangle: "⊲",
    LeftTriangleEqual: "⊴",
    LeftUpDownVector: "⥑",
    LeftUpTeeVector: "⥠",
    LeftUpVectorBar: "⥘",
    LeftUpVector: "↿",
    LeftVectorBar: "⥒",
    LeftVector: "↼",
    lEg: "⪋",
    leg: "⋚",
    leq: "≤",
    leqq: "≦",
    leqslant: "⩽",
    lescc: "⪨",
    les: "⩽",
    lesdot: "⩿",
    lesdoto: "⪁",
    lesdotor: "⪃",
    lesg: "⋚︀",
    lesges: "⪓",
    lessapprox: "⪅",
    lessdot: "⋖",
    lesseqgtr: "⋚",
    lesseqqgtr: "⪋",
    LessEqualGreater: "⋚",
    LessFullEqual: "≦",
    LessGreater: "≶",
    lessgtr: "≶",
    LessLess: "⪡",
    lesssim: "≲",
    LessSlantEqual: "⩽",
    LessTilde: "≲",
    lfisht: "⥼",
    lfloor: "⌊",
    Lfr: "𝔏",
    lfr: "𝔩",
    lg: "≶",
    lgE: "⪑",
    lHar: "⥢",
    lhard: "↽",
    lharu: "↼",
    lharul: "⥪",
    lhblk: "▄",
    LJcy: "Љ",
    ljcy: "љ",
    llarr: "⇇",
    ll: "≪",
    Ll: "⋘",
    llcorner: "⌞",
    Lleftarrow: "⇚",
    llhard: "⥫",
    lltri: "◺",
    Lmidot: "Ŀ",
    lmidot: "ŀ",
    lmoustache: "⎰",
    lmoust: "⎰",
    lnap: "⪉",
    lnapprox: "⪉",
    lne: "⪇",
    lnE: "≨",
    lneq: "⪇",
    lneqq: "≨",
    lnsim: "⋦",
    loang: "⟬",
    loarr: "⇽",
    lobrk: "⟦",
    longleftarrow: "⟵",
    LongLeftArrow: "⟵",
    Longleftarrow: "⟸",
    longleftrightarrow: "⟷",
    LongLeftRightArrow: "⟷",
    Longleftrightarrow: "⟺",
    longmapsto: "⟼",
    longrightarrow: "⟶",
    LongRightArrow: "⟶",
    Longrightarrow: "⟹",
    looparrowleft: "↫",
    looparrowright: "↬",
    lopar: "⦅",
    Lopf: "𝕃",
    lopf: "𝕝",
    loplus: "⨭",
    lotimes: "⨴",
    lowast: "∗",
    lowbar: "_",
    LowerLeftArrow: "↙",
    LowerRightArrow: "↘",
    loz: "◊",
    lozenge: "◊",
    lozf: "⧫",
    lpar: "(",
    lparlt: "⦓",
    lrarr: "⇆",
    lrcorner: "⌟",
    lrhar: "⇋",
    lrhard: "⥭",
    lrm: "‎",
    lrtri: "⊿",
    lsaquo: "‹",
    lscr: "𝓁",
    Lscr: "ℒ",
    lsh: "↰",
    Lsh: "↰",
    lsim: "≲",
    lsime: "⪍",
    lsimg: "⪏",
    lsqb: "[",
    lsquo: "‘",
    lsquor: "‚",
    Lstrok: "Ł",
    lstrok: "ł",
    ltcc: "⪦",
    ltcir: "⩹",
    lt: "<",
    LT: "<",
    Lt: "≪",
    ltdot: "⋖",
    lthree: "⋋",
    ltimes: "⋉",
    ltlarr: "⥶",
    ltquest: "⩻",
    ltri: "◃",
    ltrie: "⊴",
    ltrif: "◂",
    ltrPar: "⦖",
    lurdshar: "⥊",
    luruhar: "⥦",
    lvertneqq: "≨︀",
    lvnE: "≨︀",
    macr: "¯",
    male: "♂",
    malt: "✠",
    maltese: "✠",
    Map: "⤅",
    map: "↦",
    mapsto: "↦",
    mapstodown: "↧",
    mapstoleft: "↤",
    mapstoup: "↥",
    marker: "▮",
    mcomma: "⨩",
    Mcy: "М",
    mcy: "м",
    mdash: "—",
    mDDot: "∺",
    measuredangle: "∡",
    MediumSpace: " ",
    Mellintrf: "ℳ",
    Mfr: "𝔐",
    mfr: "𝔪",
    mho: "℧",
    micro: "µ",
    midast: "*",
    midcir: "⫰",
    mid: "∣",
    middot: "·",
    minusb: "⊟",
    minus: "−",
    minusd: "∸",
    minusdu: "⨪",
    MinusPlus: "∓",
    mlcp: "⫛",
    mldr: "…",
    mnplus: "∓",
    models: "⊧",
    Mopf: "𝕄",
    mopf: "𝕞",
    mp: "∓",
    mscr: "𝓂",
    Mscr: "ℳ",
    mstpos: "∾",
    Mu: "Μ",
    mu: "μ",
    multimap: "⊸",
    mumap: "⊸",
    nabla: "∇",
    Nacute: "Ń",
    nacute: "ń",
    nang: "∠⃒",
    nap: "≉",
    napE: "⩰̸",
    napid: "≋̸",
    napos: "ŉ",
    napprox: "≉",
    natural: "♮",
    naturals: "ℕ",
    natur: "♮",
    nbsp: " ",
    nbump: "≎̸",
    nbumpe: "≏̸",
    ncap: "⩃",
    Ncaron: "Ň",
    ncaron: "ň",
    Ncedil: "Ņ",
    ncedil: "ņ",
    ncong: "≇",
    ncongdot: "⩭̸",
    ncup: "⩂",
    Ncy: "Н",
    ncy: "н",
    ndash: "–",
    nearhk: "⤤",
    nearr: "↗",
    neArr: "⇗",
    nearrow: "↗",
    ne: "≠",
    nedot: "≐̸",
    NegativeMediumSpace: "​",
    NegativeThickSpace: "​",
    NegativeThinSpace: "​",
    NegativeVeryThinSpace: "​",
    nequiv: "≢",
    nesear: "⤨",
    nesim: "≂̸",
    NestedGreaterGreater: "≫",
    NestedLessLess: "≪",
    NewLine: `
`,
    nexist: "∄",
    nexists: "∄",
    Nfr: "𝔑",
    nfr: "𝔫",
    ngE: "≧̸",
    nge: "≱",
    ngeq: "≱",
    ngeqq: "≧̸",
    ngeqslant: "⩾̸",
    nges: "⩾̸",
    nGg: "⋙̸",
    ngsim: "≵",
    nGt: "≫⃒",
    ngt: "≯",
    ngtr: "≯",
    nGtv: "≫̸",
    nharr: "↮",
    nhArr: "⇎",
    nhpar: "⫲",
    ni: "∋",
    nis: "⋼",
    nisd: "⋺",
    niv: "∋",
    NJcy: "Њ",
    njcy: "њ",
    nlarr: "↚",
    nlArr: "⇍",
    nldr: "‥",
    nlE: "≦̸",
    nle: "≰",
    nleftarrow: "↚",
    nLeftarrow: "⇍",
    nleftrightarrow: "↮",
    nLeftrightarrow: "⇎",
    nleq: "≰",
    nleqq: "≦̸",
    nleqslant: "⩽̸",
    nles: "⩽̸",
    nless: "≮",
    nLl: "⋘̸",
    nlsim: "≴",
    nLt: "≪⃒",
    nlt: "≮",
    nltri: "⋪",
    nltrie: "⋬",
    nLtv: "≪̸",
    nmid: "∤",
    NoBreak: "⁠",
    NonBreakingSpace: " ",
    nopf: "𝕟",
    Nopf: "ℕ",
    Not: "⫬",
    not: "¬",
    NotCongruent: "≢",
    NotCupCap: "≭",
    NotDoubleVerticalBar: "∦",
    NotElement: "∉",
    NotEqual: "≠",
    NotEqualTilde: "≂̸",
    NotExists: "∄",
    NotGreater: "≯",
    NotGreaterEqual: "≱",
    NotGreaterFullEqual: "≧̸",
    NotGreaterGreater: "≫̸",
    NotGreaterLess: "≹",
    NotGreaterSlantEqual: "⩾̸",
    NotGreaterTilde: "≵",
    NotHumpDownHump: "≎̸",
    NotHumpEqual: "≏̸",
    notin: "∉",
    notindot: "⋵̸",
    notinE: "⋹̸",
    notinva: "∉",
    notinvb: "⋷",
    notinvc: "⋶",
    NotLeftTriangleBar: "⧏̸",
    NotLeftTriangle: "⋪",
    NotLeftTriangleEqual: "⋬",
    NotLess: "≮",
    NotLessEqual: "≰",
    NotLessGreater: "≸",
    NotLessLess: "≪̸",
    NotLessSlantEqual: "⩽̸",
    NotLessTilde: "≴",
    NotNestedGreaterGreater: "⪢̸",
    NotNestedLessLess: "⪡̸",
    notni: "∌",
    notniva: "∌",
    notnivb: "⋾",
    notnivc: "⋽",
    NotPrecedes: "⊀",
    NotPrecedesEqual: "⪯̸",
    NotPrecedesSlantEqual: "⋠",
    NotReverseElement: "∌",
    NotRightTriangleBar: "⧐̸",
    NotRightTriangle: "⋫",
    NotRightTriangleEqual: "⋭",
    NotSquareSubset: "⊏̸",
    NotSquareSubsetEqual: "⋢",
    NotSquareSuperset: "⊐̸",
    NotSquareSupersetEqual: "⋣",
    NotSubset: "⊂⃒",
    NotSubsetEqual: "⊈",
    NotSucceeds: "⊁",
    NotSucceedsEqual: "⪰̸",
    NotSucceedsSlantEqual: "⋡",
    NotSucceedsTilde: "≿̸",
    NotSuperset: "⊃⃒",
    NotSupersetEqual: "⊉",
    NotTilde: "≁",
    NotTildeEqual: "≄",
    NotTildeFullEqual: "≇",
    NotTildeTilde: "≉",
    NotVerticalBar: "∤",
    nparallel: "∦",
    npar: "∦",
    nparsl: "⫽⃥",
    npart: "∂̸",
    npolint: "⨔",
    npr: "⊀",
    nprcue: "⋠",
    nprec: "⊀",
    npreceq: "⪯̸",
    npre: "⪯̸",
    nrarrc: "⤳̸",
    nrarr: "↛",
    nrArr: "⇏",
    nrarrw: "↝̸",
    nrightarrow: "↛",
    nRightarrow: "⇏",
    nrtri: "⋫",
    nrtrie: "⋭",
    nsc: "⊁",
    nsccue: "⋡",
    nsce: "⪰̸",
    Nscr: "𝒩",
    nscr: "𝓃",
    nshortmid: "∤",
    nshortparallel: "∦",
    nsim: "≁",
    nsime: "≄",
    nsimeq: "≄",
    nsmid: "∤",
    nspar: "∦",
    nsqsube: "⋢",
    nsqsupe: "⋣",
    nsub: "⊄",
    nsubE: "⫅̸",
    nsube: "⊈",
    nsubset: "⊂⃒",
    nsubseteq: "⊈",
    nsubseteqq: "⫅̸",
    nsucc: "⊁",
    nsucceq: "⪰̸",
    nsup: "⊅",
    nsupE: "⫆̸",
    nsupe: "⊉",
    nsupset: "⊃⃒",
    nsupseteq: "⊉",
    nsupseteqq: "⫆̸",
    ntgl: "≹",
    Ntilde: "Ñ",
    ntilde: "ñ",
    ntlg: "≸",
    ntriangleleft: "⋪",
    ntrianglelefteq: "⋬",
    ntriangleright: "⋫",
    ntrianglerighteq: "⋭",
    Nu: "Ν",
    nu: "ν",
    num: "#",
    numero: "№",
    numsp: " ",
    nvap: "≍⃒",
    nvdash: "⊬",
    nvDash: "⊭",
    nVdash: "⊮",
    nVDash: "⊯",
    nvge: "≥⃒",
    nvgt: ">⃒",
    nvHarr: "⤄",
    nvinfin: "⧞",
    nvlArr: "⤂",
    nvle: "≤⃒",
    nvlt: "<⃒",
    nvltrie: "⊴⃒",
    nvrArr: "⤃",
    nvrtrie: "⊵⃒",
    nvsim: "∼⃒",
    nwarhk: "⤣",
    nwarr: "↖",
    nwArr: "⇖",
    nwarrow: "↖",
    nwnear: "⤧",
    Oacute: "Ó",
    oacute: "ó",
    oast: "⊛",
    Ocirc: "Ô",
    ocirc: "ô",
    ocir: "⊚",
    Ocy: "О",
    ocy: "о",
    odash: "⊝",
    Odblac: "Ő",
    odblac: "ő",
    odiv: "⨸",
    odot: "⊙",
    odsold: "⦼",
    OElig: "Œ",
    oelig: "œ",
    ofcir: "⦿",
    Ofr: "𝔒",
    ofr: "𝔬",
    ogon: "˛",
    Ograve: "Ò",
    ograve: "ò",
    ogt: "⧁",
    ohbar: "⦵",
    ohm: "Ω",
    oint: "∮",
    olarr: "↺",
    olcir: "⦾",
    olcross: "⦻",
    oline: "‾",
    olt: "⧀",
    Omacr: "Ō",
    omacr: "ō",
    Omega: "Ω",
    omega: "ω",
    Omicron: "Ο",
    omicron: "ο",
    omid: "⦶",
    ominus: "⊖",
    Oopf: "𝕆",
    oopf: "𝕠",
    opar: "⦷",
    OpenCurlyDoubleQuote: "“",
    OpenCurlyQuote: "‘",
    operp: "⦹",
    oplus: "⊕",
    orarr: "↻",
    Or: "⩔",
    or: "∨",
    ord: "⩝",
    order: "ℴ",
    orderof: "ℴ",
    ordf: "ª",
    ordm: "º",
    origof: "⊶",
    oror: "⩖",
    orslope: "⩗",
    orv: "⩛",
    oS: "Ⓢ",
    Oscr: "𝒪",
    oscr: "ℴ",
    Oslash: "Ø",
    oslash: "ø",
    osol: "⊘",
    Otilde: "Õ",
    otilde: "õ",
    otimesas: "⨶",
    Otimes: "⨷",
    otimes: "⊗",
    Ouml: "Ö",
    ouml: "ö",
    ovbar: "⌽",
    OverBar: "‾",
    OverBrace: "⏞",
    OverBracket: "⎴",
    OverParenthesis: "⏜",
    para: "¶",
    parallel: "∥",
    par: "∥",
    parsim: "⫳",
    parsl: "⫽",
    part: "∂",
    PartialD: "∂",
    Pcy: "П",
    pcy: "п",
    percnt: "%",
    period: ".",
    permil: "‰",
    perp: "⊥",
    pertenk: "‱",
    Pfr: "𝔓",
    pfr: "𝔭",
    Phi: "Φ",
    phi: "φ",
    phiv: "ϕ",
    phmmat: "ℳ",
    phone: "☎",
    Pi: "Π",
    pi: "π",
    pitchfork: "⋔",
    piv: "ϖ",
    planck: "ℏ",
    planckh: "ℎ",
    plankv: "ℏ",
    plusacir: "⨣",
    plusb: "⊞",
    pluscir: "⨢",
    plus: "+",
    plusdo: "∔",
    plusdu: "⨥",
    pluse: "⩲",
    PlusMinus: "±",
    plusmn: "±",
    plussim: "⨦",
    plustwo: "⨧",
    pm: "±",
    Poincareplane: "ℌ",
    pointint: "⨕",
    popf: "𝕡",
    Popf: "ℙ",
    pound: "£",
    prap: "⪷",
    Pr: "⪻",
    pr: "≺",
    prcue: "≼",
    precapprox: "⪷",
    prec: "≺",
    preccurlyeq: "≼",
    Precedes: "≺",
    PrecedesEqual: "⪯",
    PrecedesSlantEqual: "≼",
    PrecedesTilde: "≾",
    preceq: "⪯",
    precnapprox: "⪹",
    precneqq: "⪵",
    precnsim: "⋨",
    pre: "⪯",
    prE: "⪳",
    precsim: "≾",
    prime: "′",
    Prime: "″",
    primes: "ℙ",
    prnap: "⪹",
    prnE: "⪵",
    prnsim: "⋨",
    prod: "∏",
    Product: "∏",
    profalar: "⌮",
    profline: "⌒",
    profsurf: "⌓",
    prop: "∝",
    Proportional: "∝",
    Proportion: "∷",
    propto: "∝",
    prsim: "≾",
    prurel: "⊰",
    Pscr: "𝒫",
    pscr: "𝓅",
    Psi: "Ψ",
    psi: "ψ",
    puncsp: " ",
    Qfr: "𝔔",
    qfr: "𝔮",
    qint: "⨌",
    qopf: "𝕢",
    Qopf: "ℚ",
    qprime: "⁗",
    Qscr: "𝒬",
    qscr: "𝓆",
    quaternions: "ℍ",
    quatint: "⨖",
    quest: "?",
    questeq: "≟",
    quot: '"',
    QUOT: '"',
    rAarr: "⇛",
    race: "∽̱",
    Racute: "Ŕ",
    racute: "ŕ",
    radic: "√",
    raemptyv: "⦳",
    rang: "⟩",
    Rang: "⟫",
    rangd: "⦒",
    range: "⦥",
    rangle: "⟩",
    raquo: "»",
    rarrap: "⥵",
    rarrb: "⇥",
    rarrbfs: "⤠",
    rarrc: "⤳",
    rarr: "→",
    Rarr: "↠",
    rArr: "⇒",
    rarrfs: "⤞",
    rarrhk: "↪",
    rarrlp: "↬",
    rarrpl: "⥅",
    rarrsim: "⥴",
    Rarrtl: "⤖",
    rarrtl: "↣",
    rarrw: "↝",
    ratail: "⤚",
    rAtail: "⤜",
    ratio: "∶",
    rationals: "ℚ",
    rbarr: "⤍",
    rBarr: "⤏",
    RBarr: "⤐",
    rbbrk: "❳",
    rbrace: "}",
    rbrack: "]",
    rbrke: "⦌",
    rbrksld: "⦎",
    rbrkslu: "⦐",
    Rcaron: "Ř",
    rcaron: "ř",
    Rcedil: "Ŗ",
    rcedil: "ŗ",
    rceil: "⌉",
    rcub: "}",
    Rcy: "Р",
    rcy: "р",
    rdca: "⤷",
    rdldhar: "⥩",
    rdquo: "”",
    rdquor: "”",
    rdsh: "↳",
    real: "ℜ",
    realine: "ℛ",
    realpart: "ℜ",
    reals: "ℝ",
    Re: "ℜ",
    rect: "▭",
    reg: "®",
    REG: "®",
    ReverseElement: "∋",
    ReverseEquilibrium: "⇋",
    ReverseUpEquilibrium: "⥯",
    rfisht: "⥽",
    rfloor: "⌋",
    rfr: "𝔯",
    Rfr: "ℜ",
    rHar: "⥤",
    rhard: "⇁",
    rharu: "⇀",
    rharul: "⥬",
    Rho: "Ρ",
    rho: "ρ",
    rhov: "ϱ",
    RightAngleBracket: "⟩",
    RightArrowBar: "⇥",
    rightarrow: "→",
    RightArrow: "→",
    Rightarrow: "⇒",
    RightArrowLeftArrow: "⇄",
    rightarrowtail: "↣",
    RightCeiling: "⌉",
    RightDoubleBracket: "⟧",
    RightDownTeeVector: "⥝",
    RightDownVectorBar: "⥕",
    RightDownVector: "⇂",
    RightFloor: "⌋",
    rightharpoondown: "⇁",
    rightharpoonup: "⇀",
    rightleftarrows: "⇄",
    rightleftharpoons: "⇌",
    rightrightarrows: "⇉",
    rightsquigarrow: "↝",
    RightTeeArrow: "↦",
    RightTee: "⊢",
    RightTeeVector: "⥛",
    rightthreetimes: "⋌",
    RightTriangleBar: "⧐",
    RightTriangle: "⊳",
    RightTriangleEqual: "⊵",
    RightUpDownVector: "⥏",
    RightUpTeeVector: "⥜",
    RightUpVectorBar: "⥔",
    RightUpVector: "↾",
    RightVectorBar: "⥓",
    RightVector: "⇀",
    ring: "˚",
    risingdotseq: "≓",
    rlarr: "⇄",
    rlhar: "⇌",
    rlm: "‏",
    rmoustache: "⎱",
    rmoust: "⎱",
    rnmid: "⫮",
    roang: "⟭",
    roarr: "⇾",
    robrk: "⟧",
    ropar: "⦆",
    ropf: "𝕣",
    Ropf: "ℝ",
    roplus: "⨮",
    rotimes: "⨵",
    RoundImplies: "⥰",
    rpar: ")",
    rpargt: "⦔",
    rppolint: "⨒",
    rrarr: "⇉",
    Rrightarrow: "⇛",
    rsaquo: "›",
    rscr: "𝓇",
    Rscr: "ℛ",
    rsh: "↱",
    Rsh: "↱",
    rsqb: "]",
    rsquo: "’",
    rsquor: "’",
    rthree: "⋌",
    rtimes: "⋊",
    rtri: "▹",
    rtrie: "⊵",
    rtrif: "▸",
    rtriltri: "⧎",
    RuleDelayed: "⧴",
    ruluhar: "⥨",
    rx: "℞",
    Sacute: "Ś",
    sacute: "ś",
    sbquo: "‚",
    scap: "⪸",
    Scaron: "Š",
    scaron: "š",
    Sc: "⪼",
    sc: "≻",
    sccue: "≽",
    sce: "⪰",
    scE: "⪴",
    Scedil: "Ş",
    scedil: "ş",
    Scirc: "Ŝ",
    scirc: "ŝ",
    scnap: "⪺",
    scnE: "⪶",
    scnsim: "⋩",
    scpolint: "⨓",
    scsim: "≿",
    Scy: "С",
    scy: "с",
    sdotb: "⊡",
    sdot: "⋅",
    sdote: "⩦",
    searhk: "⤥",
    searr: "↘",
    seArr: "⇘",
    searrow: "↘",
    sect: "§",
    semi: ";",
    seswar: "⤩",
    setminus: "∖",
    setmn: "∖",
    sext: "✶",
    Sfr: "𝔖",
    sfr: "𝔰",
    sfrown: "⌢",
    sharp: "♯",
    SHCHcy: "Щ",
    shchcy: "щ",
    SHcy: "Ш",
    shcy: "ш",
    ShortDownArrow: "↓",
    ShortLeftArrow: "←",
    shortmid: "∣",
    shortparallel: "∥",
    ShortRightArrow: "→",
    ShortUpArrow: "↑",
    shy: "­",
    Sigma: "Σ",
    sigma: "σ",
    sigmaf: "ς",
    sigmav: "ς",
    sim: "∼",
    simdot: "⩪",
    sime: "≃",
    simeq: "≃",
    simg: "⪞",
    simgE: "⪠",
    siml: "⪝",
    simlE: "⪟",
    simne: "≆",
    simplus: "⨤",
    simrarr: "⥲",
    slarr: "←",
    SmallCircle: "∘",
    smallsetminus: "∖",
    smashp: "⨳",
    smeparsl: "⧤",
    smid: "∣",
    smile: "⌣",
    smt: "⪪",
    smte: "⪬",
    smtes: "⪬︀",
    SOFTcy: "Ь",
    softcy: "ь",
    solbar: "⌿",
    solb: "⧄",
    sol: "/",
    Sopf: "𝕊",
    sopf: "𝕤",
    spades: "♠",
    spadesuit: "♠",
    spar: "∥",
    sqcap: "⊓",
    sqcaps: "⊓︀",
    sqcup: "⊔",
    sqcups: "⊔︀",
    Sqrt: "√",
    sqsub: "⊏",
    sqsube: "⊑",
    sqsubset: "⊏",
    sqsubseteq: "⊑",
    sqsup: "⊐",
    sqsupe: "⊒",
    sqsupset: "⊐",
    sqsupseteq: "⊒",
    square: "□",
    Square: "□",
    SquareIntersection: "⊓",
    SquareSubset: "⊏",
    SquareSubsetEqual: "⊑",
    SquareSuperset: "⊐",
    SquareSupersetEqual: "⊒",
    SquareUnion: "⊔",
    squarf: "▪",
    squ: "□",
    squf: "▪",
    srarr: "→",
    Sscr: "𝒮",
    sscr: "𝓈",
    ssetmn: "∖",
    ssmile: "⌣",
    sstarf: "⋆",
    Star: "⋆",
    star: "☆",
    starf: "★",
    straightepsilon: "ϵ",
    straightphi: "ϕ",
    strns: "¯",
    sub: "⊂",
    Sub: "⋐",
    subdot: "⪽",
    subE: "⫅",
    sube: "⊆",
    subedot: "⫃",
    submult: "⫁",
    subnE: "⫋",
    subne: "⊊",
    subplus: "⪿",
    subrarr: "⥹",
    subset: "⊂",
    Subset: "⋐",
    subseteq: "⊆",
    subseteqq: "⫅",
    SubsetEqual: "⊆",
    subsetneq: "⊊",
    subsetneqq: "⫋",
    subsim: "⫇",
    subsub: "⫕",
    subsup: "⫓",
    succapprox: "⪸",
    succ: "≻",
    succcurlyeq: "≽",
    Succeeds: "≻",
    SucceedsEqual: "⪰",
    SucceedsSlantEqual: "≽",
    SucceedsTilde: "≿",
    succeq: "⪰",
    succnapprox: "⪺",
    succneqq: "⪶",
    succnsim: "⋩",
    succsim: "≿",
    SuchThat: "∋",
    sum: "∑",
    Sum: "∑",
    sung: "♪",
    sup1: "¹",
    sup2: "²",
    sup3: "³",
    sup: "⊃",
    Sup: "⋑",
    supdot: "⪾",
    supdsub: "⫘",
    supE: "⫆",
    supe: "⊇",
    supedot: "⫄",
    Superset: "⊃",
    SupersetEqual: "⊇",
    suphsol: "⟉",
    suphsub: "⫗",
    suplarr: "⥻",
    supmult: "⫂",
    supnE: "⫌",
    supne: "⊋",
    supplus: "⫀",
    supset: "⊃",
    Supset: "⋑",
    supseteq: "⊇",
    supseteqq: "⫆",
    supsetneq: "⊋",
    supsetneqq: "⫌",
    supsim: "⫈",
    supsub: "⫔",
    supsup: "⫖",
    swarhk: "⤦",
    swarr: "↙",
    swArr: "⇙",
    swarrow: "↙",
    swnwar: "⤪",
    szlig: "ß",
    Tab: "	",
    target: "⌖",
    Tau: "Τ",
    tau: "τ",
    tbrk: "⎴",
    Tcaron: "Ť",
    tcaron: "ť",
    Tcedil: "Ţ",
    tcedil: "ţ",
    Tcy: "Т",
    tcy: "т",
    tdot: "⃛",
    telrec: "⌕",
    Tfr: "𝔗",
    tfr: "𝔱",
    there4: "∴",
    therefore: "∴",
    Therefore: "∴",
    Theta: "Θ",
    theta: "θ",
    thetasym: "ϑ",
    thetav: "ϑ",
    thickapprox: "≈",
    thicksim: "∼",
    ThickSpace: "  ",
    ThinSpace: " ",
    thinsp: " ",
    thkap: "≈",
    thksim: "∼",
    THORN: "Þ",
    thorn: "þ",
    tilde: "˜",
    Tilde: "∼",
    TildeEqual: "≃",
    TildeFullEqual: "≅",
    TildeTilde: "≈",
    timesbar: "⨱",
    timesb: "⊠",
    times: "×",
    timesd: "⨰",
    tint: "∭",
    toea: "⤨",
    topbot: "⌶",
    topcir: "⫱",
    top: "⊤",
    Topf: "𝕋",
    topf: "𝕥",
    topfork: "⫚",
    tosa: "⤩",
    tprime: "‴",
    trade: "™",
    TRADE: "™",
    triangle: "▵",
    triangledown: "▿",
    triangleleft: "◃",
    trianglelefteq: "⊴",
    triangleq: "≜",
    triangleright: "▹",
    trianglerighteq: "⊵",
    tridot: "◬",
    trie: "≜",
    triminus: "⨺",
    TripleDot: "⃛",
    triplus: "⨹",
    trisb: "⧍",
    tritime: "⨻",
    trpezium: "⏢",
    Tscr: "𝒯",
    tscr: "𝓉",
    TScy: "Ц",
    tscy: "ц",
    TSHcy: "Ћ",
    tshcy: "ћ",
    Tstrok: "Ŧ",
    tstrok: "ŧ",
    twixt: "≬",
    twoheadleftarrow: "↞",
    twoheadrightarrow: "↠",
    Uacute: "Ú",
    uacute: "ú",
    uarr: "↑",
    Uarr: "↟",
    uArr: "⇑",
    Uarrocir: "⥉",
    Ubrcy: "Ў",
    ubrcy: "ў",
    Ubreve: "Ŭ",
    ubreve: "ŭ",
    Ucirc: "Û",
    ucirc: "û",
    Ucy: "У",
    ucy: "у",
    udarr: "⇅",
    Udblac: "Ű",
    udblac: "ű",
    udhar: "⥮",
    ufisht: "⥾",
    Ufr: "𝔘",
    ufr: "𝔲",
    Ugrave: "Ù",
    ugrave: "ù",
    uHar: "⥣",
    uharl: "↿",
    uharr: "↾",
    uhblk: "▀",
    ulcorn: "⌜",
    ulcorner: "⌜",
    ulcrop: "⌏",
    ultri: "◸",
    Umacr: "Ū",
    umacr: "ū",
    uml: "¨",
    UnderBar: "_",
    UnderBrace: "⏟",
    UnderBracket: "⎵",
    UnderParenthesis: "⏝",
    Union: "⋃",
    UnionPlus: "⊎",
    Uogon: "Ų",
    uogon: "ų",
    Uopf: "𝕌",
    uopf: "𝕦",
    UpArrowBar: "⤒",
    uparrow: "↑",
    UpArrow: "↑",
    Uparrow: "⇑",
    UpArrowDownArrow: "⇅",
    updownarrow: "↕",
    UpDownArrow: "↕",
    Updownarrow: "⇕",
    UpEquilibrium: "⥮",
    upharpoonleft: "↿",
    upharpoonright: "↾",
    uplus: "⊎",
    UpperLeftArrow: "↖",
    UpperRightArrow: "↗",
    upsi: "υ",
    Upsi: "ϒ",
    upsih: "ϒ",
    Upsilon: "Υ",
    upsilon: "υ",
    UpTeeArrow: "↥",
    UpTee: "⊥",
    upuparrows: "⇈",
    urcorn: "⌝",
    urcorner: "⌝",
    urcrop: "⌎",
    Uring: "Ů",
    uring: "ů",
    urtri: "◹",
    Uscr: "𝒰",
    uscr: "𝓊",
    utdot: "⋰",
    Utilde: "Ũ",
    utilde: "ũ",
    utri: "▵",
    utrif: "▴",
    uuarr: "⇈",
    Uuml: "Ü",
    uuml: "ü",
    uwangle: "⦧",
    vangrt: "⦜",
    varepsilon: "ϵ",
    varkappa: "ϰ",
    varnothing: "∅",
    varphi: "ϕ",
    varpi: "ϖ",
    varpropto: "∝",
    varr: "↕",
    vArr: "⇕",
    varrho: "ϱ",
    varsigma: "ς",
    varsubsetneq: "⊊︀",
    varsubsetneqq: "⫋︀",
    varsupsetneq: "⊋︀",
    varsupsetneqq: "⫌︀",
    vartheta: "ϑ",
    vartriangleleft: "⊲",
    vartriangleright: "⊳",
    vBar: "⫨",
    Vbar: "⫫",
    vBarv: "⫩",
    Vcy: "В",
    vcy: "в",
    vdash: "⊢",
    vDash: "⊨",
    Vdash: "⊩",
    VDash: "⊫",
    Vdashl: "⫦",
    veebar: "⊻",
    vee: "∨",
    Vee: "⋁",
    veeeq: "≚",
    vellip: "⋮",
    verbar: "|",
    Verbar: "‖",
    vert: "|",
    Vert: "‖",
    VerticalBar: "∣",
    VerticalLine: "|",
    VerticalSeparator: "❘",
    VerticalTilde: "≀",
    VeryThinSpace: " ",
    Vfr: "𝔙",
    vfr: "𝔳",
    vltri: "⊲",
    vnsub: "⊂⃒",
    vnsup: "⊃⃒",
    Vopf: "𝕍",
    vopf: "𝕧",
    vprop: "∝",
    vrtri: "⊳",
    Vscr: "𝒱",
    vscr: "𝓋",
    vsubnE: "⫋︀",
    vsubne: "⊊︀",
    vsupnE: "⫌︀",
    vsupne: "⊋︀",
    Vvdash: "⊪",
    vzigzag: "⦚",
    Wcirc: "Ŵ",
    wcirc: "ŵ",
    wedbar: "⩟",
    wedge: "∧",
    Wedge: "⋀",
    wedgeq: "≙",
    weierp: "℘",
    Wfr: "𝔚",
    wfr: "𝔴",
    Wopf: "𝕎",
    wopf: "𝕨",
    wp: "℘",
    wr: "≀",
    wreath: "≀",
    Wscr: "𝒲",
    wscr: "𝓌",
    xcap: "⋂",
    xcirc: "◯",
    xcup: "⋃",
    xdtri: "▽",
    Xfr: "𝔛",
    xfr: "𝔵",
    xharr: "⟷",
    xhArr: "⟺",
    Xi: "Ξ",
    xi: "ξ",
    xlarr: "⟵",
    xlArr: "⟸",
    xmap: "⟼",
    xnis: "⋻",
    xodot: "⨀",
    Xopf: "𝕏",
    xopf: "𝕩",
    xoplus: "⨁",
    xotime: "⨂",
    xrarr: "⟶",
    xrArr: "⟹",
    Xscr: "𝒳",
    xscr: "𝓍",
    xsqcup: "⨆",
    xuplus: "⨄",
    xutri: "△",
    xvee: "⋁",
    xwedge: "⋀",
    Yacute: "Ý",
    yacute: "ý",
    YAcy: "Я",
    yacy: "я",
    Ycirc: "Ŷ",
    ycirc: "ŷ",
    Ycy: "Ы",
    ycy: "ы",
    yen: "¥",
    Yfr: "𝔜",
    yfr: "𝔶",
    YIcy: "Ї",
    yicy: "ї",
    Yopf: "𝕐",
    yopf: "𝕪",
    Yscr: "𝒴",
    yscr: "𝓎",
    YUcy: "Ю",
    yucy: "ю",
    yuml: "ÿ",
    Yuml: "Ÿ",
    Zacute: "Ź",
    zacute: "ź",
    Zcaron: "Ž",
    zcaron: "ž",
    Zcy: "З",
    zcy: "з",
    Zdot: "Ż",
    zdot: "ż",
    zeetrf: "ℨ",
    ZeroWidthSpace: "​",
    Zeta: "Ζ",
    zeta: "ζ",
    zfr: "𝔷",
    Zfr: "ℨ",
    ZHcy: "Ж",
    zhcy: "ж",
    zigrarr: "⇝",
    zopf: "𝕫",
    Zopf: "ℤ",
    Zscr: "𝒵",
    zscr: "𝓏",
    zwj: "‍",
    zwnj: "‌"
  };
});
var t5 = y((gYe, Fxe) => {
  Fxe.exports = {
    Aacute: "Á",
    aacute: "á",
    Acirc: "Â",
    acirc: "â",
    acute: "´",
    AElig: "Æ",
    aelig: "æ",
    Agrave: "À",
    agrave: "à",
    amp: "&",
    AMP: "&",
    Aring: "Å",
    aring: "å",
    Atilde: "Ã",
    atilde: "ã",
    Auml: "Ä",
    auml: "ä",
    brvbar: "¦",
    Ccedil: "Ç",
    ccedil: "ç",
    cedil: "¸",
    cent: "¢",
    copy: "©",
    COPY: "©",
    curren: "¤",
    deg: "°",
    divide: "÷",
    Eacute: "É",
    eacute: "é",
    Ecirc: "Ê",
    ecirc: "ê",
    Egrave: "È",
    egrave: "è",
    ETH: "Ð",
    eth: "ð",
    Euml: "Ë",
    euml: "ë",
    frac12: "½",
    frac14: "¼",
    frac34: "¾",
    gt: ">",
    GT: ">",
    Iacute: "Í",
    iacute: "í",
    Icirc: "Î",
    icirc: "î",
    iexcl: "¡",
    Igrave: "Ì",
    igrave: "ì",
    iquest: "¿",
    Iuml: "Ï",
    iuml: "ï",
    laquo: "«",
    lt: "<",
    LT: "<",
    macr: "¯",
    micro: "µ",
    middot: "·",
    nbsp: " ",
    not: "¬",
    Ntilde: "Ñ",
    ntilde: "ñ",
    Oacute: "Ó",
    oacute: "ó",
    Ocirc: "Ô",
    ocirc: "ô",
    Ograve: "Ò",
    ograve: "ò",
    ordf: "ª",
    ordm: "º",
    Oslash: "Ø",
    oslash: "ø",
    Otilde: "Õ",
    otilde: "õ",
    Ouml: "Ö",
    ouml: "ö",
    para: "¶",
    plusmn: "±",
    pound: "£",
    quot: '"',
    QUOT: '"',
    raquo: "»",
    reg: "®",
    REG: "®",
    sect: "§",
    shy: "­",
    sup1: "¹",
    sup2: "²",
    sup3: "³",
    szlig: "ß",
    THORN: "Þ",
    thorn: "þ",
    times: "×",
    Uacute: "Ú",
    uacute: "ú",
    Ucirc: "Û",
    ucirc: "û",
    Ugrave: "Ù",
    ugrave: "ù",
    uml: "¨",
    Uuml: "Ü",
    uuml: "ü",
    Yacute: "Ý",
    yacute: "ý",
    yen: "¥",
    yuml: "ÿ"
  };
});
var JR = y((vYe, Dxe) => {
  Dxe.exports = { amp: "&", apos: "'", gt: ">", lt: "<", quot: '"' };
});
var r5 = y((EYe, $xe) => {
  $xe.exports = {
    "0": 65533,
    "128": 8364,
    "130": 8218,
    "131": 402,
    "132": 8222,
    "133": 8230,
    "134": 8224,
    "135": 8225,
    "136": 710,
    "137": 8240,
    "138": 352,
    "139": 8249,
    "140": 338,
    "142": 381,
    "145": 8216,
    "146": 8217,
    "147": 8220,
    "148": 8221,
    "149": 8226,
    "150": 8211,
    "151": 8212,
    "152": 732,
    "153": 8482,
    "154": 353,
    "155": 8250,
    "156": 339,
    "158": 382,
    "159": 376
  };
});
var o5 = y((Oa) => {
  var Bxe = Oa && Oa.__importDefault || function(e) {
    return e && e.__esModule ? e : { default: e };
  };
  Object.defineProperty(Oa, "__esModule", { value: true });
  var n5 = Bxe(r5()), Hxe = (
    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition
    String.fromCodePoint || function(e) {
      var t = "";
      return e > 65535 && (e -= 65536, t += String.fromCharCode(e >>> 10 & 1023 | 55296), e = 56320 | e & 1023), t += String.fromCharCode(e), t;
    }
  );
  function Uxe(e) {
    return e >= 55296 && e <= 57343 || e > 1114111 ? "�" : (e in n5.default && (e = n5.default[e]), Hxe(e));
  }
  o(Uxe, "decodeCodePoint");
  Oa.default = Uxe;
});
var ZR = y((cr) => {
  var Iy = cr && cr.__importDefault || function(e) {
    return e && e.__esModule ? e : { default: e };
  };
  Object.defineProperty(cr, "__esModule", { value: true });
  cr.decodeHTML = cr.decodeHTMLStrict = cr.decodeXML = void 0;
  var QR = Iy(XR()), Vxe = Iy(t5()), zxe = Iy(JR()), i5 = Iy(o5()), Gxe = /&(?:[a-zA-Z0-9]+|#[xX][\da-fA-F]+|#\d+);/g;
  cr.decodeXML = a5(zxe.default);
  cr.decodeHTMLStrict = a5(QR.default);
  function a5(e) {
    var t = l5(e);
    return function(r7) {
      return String(r7).replace(Gxe, t);
    };
  }
  o(a5, "getStrictDecoder");
  var s5 = /* @__PURE__ */ o(function(e, t) {
    return e < t ? 1 : -1;
  }, "sorter");
  cr.decodeHTML = (function() {
    for (var e = Object.keys(Vxe.default).sort(s5), t = Object.keys(QR.default).sort(s5), r7 = 0, n = 0; r7 < t.length; r7++)
      e[n] === t[r7] ? (t[r7] += ";?", n++) : t[r7] += ";";
    var i = new RegExp("&(?:" + t.join("|") + "|#[xX][\\da-fA-F]+;?|#\\d+;?)", "g"), s = l5(QR.default);
    function a(l) {
      return l.substr(-1) !== ";" && (l += ";"), s(l);
    }
    return o(a, "replacer"), function(l) {
      return String(l).replace(i, a);
    };
  })();
  function l5(e) {
    return /* @__PURE__ */ o(function(r7) {
      if (r7.charAt(1) === "#") {
        var n = r7.charAt(2);
        return n === "X" || n === "x" ? i5.default(parseInt(r7.substr(3), 16)) : i5.default(parseInt(r7.substr(2), 10));
      }
      return e[r7.slice(1, -1)] || r7;
    }, "replace");
  }
  o(l5, "getReplacer");
});
var tS = y((yt) => {
  var u5 = yt && yt.__importDefault || function(e) {
    return e && e.__esModule ? e : { default: e };
  };
  Object.defineProperty(yt, "__esModule", { value: true });
  yt.escapeUTF8 = yt.escape = yt.encodeNonAsciiHTML = yt.encodeHTML = yt.encodeXML = void 0;
  var Wxe = u5(JR()), c5 = p5(Wxe.default), d5 = f5(c5);
  yt.encodeXML = y5(c5);
  var Yxe = u5(XR()), eS = p5(Yxe.default), Kxe = f5(eS);
  yt.encodeHTML = Jxe(eS, Kxe);
  yt.encodeNonAsciiHTML = y5(eS);
  function p5(e) {
    return Object.keys(e).sort().reduce(function(t, r7) {
      return t[e[r7]] = "&" + r7 + ";", t;
    }, {});
  }
  o(p5, "getInverseObj");
  function f5(e) {
    for (var t = [], r7 = [], n = 0, i = Object.keys(e); n < i.length; n++) {
      var s = i[n];
      s.length === 1 ? t.push("\\" + s) : r7.push(s);
    }
    t.sort();
    for (var a = 0; a < t.length - 1; a++) {
      for (var l = a; l < t.length - 1 && t[l].charCodeAt(1) + 1 === t[l + 1].charCodeAt(1); )
        l += 1;
      var u = 1 + l - a;
      u < 3 || t.splice(a, u, t[a] + "-" + t[l]);
    }
    return r7.unshift("[" + t.join("") + "]"), new RegExp(r7.join("|"), "g");
  }
  o(f5, "getInverseReplacer");
  var m5 = /(?:[\x80-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])/g, Xxe = (
    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition
    String.prototype.codePointAt != null ? (
      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
      (function(e) {
        return e.codePointAt(0);
      })
    ) : (
      // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
      (function(e) {
        return (e.charCodeAt(0) - 55296) * 1024 + e.charCodeAt(1) - 56320 + 65536;
      })
    )
  );
  function My(e) {
    return "&#x" + (e.length > 1 ? Xxe(e) : e.charCodeAt(0)).toString(16).toUpperCase() + ";";
  }
  o(My, "singleCharReplacer");
  function Jxe(e, t) {
    return function(r7) {
      return r7.replace(t, function(n) {
        return e[n];
      }).replace(m5, My);
    };
  }
  o(Jxe, "getInverse");
  var h5 = new RegExp(d5.source + "|" + m5.source, "g");
  function Qxe(e) {
    return e.replace(h5, My);
  }
  o(Qxe, "escape");
  yt.escape = Qxe;
  function Zxe(e) {
    return e.replace(d5, My);
  }
  o(Zxe, "escapeUTF8");
  yt.escapeUTF8 = Zxe;
  function y5(e) {
    return function(t) {
      return t.replace(h5, function(r7) {
        return e[r7] || My(r7);
      });
    };
  }
  o(y5, "getASCIIEncoder");
});
var g5 = y((oe) => {
  Object.defineProperty(oe, "__esModule", { value: true });
  oe.decodeXMLStrict = oe.decodeHTML5Strict = oe.decodeHTML4Strict = oe.decodeHTML5 = oe.decodeHTML4 = oe.decodeHTMLStrict = oe.decodeHTML = oe.decodeXML = oe.encodeHTML5 = oe.encodeHTML4 = oe.escapeUTF8 = oe.escape = oe.encodeNonAsciiHTML = oe.encodeHTML = oe.encodeXML = oe.encode = oe.decodeStrict = oe.decode = void 0;
  var Ny = ZR(), b5 = tS();
  function ewe(e, t) {
    return (!t || t <= 0 ? Ny.decodeXML : Ny.decodeHTML)(e);
  }
  o(ewe, "decode");
  oe.decode = ewe;
  function twe(e, t) {
    return (!t || t <= 0 ? Ny.decodeXML : Ny.decodeHTMLStrict)(e);
  }
  o(twe, "decodeStrict");
  oe.decodeStrict = twe;
  function rwe(e, t) {
    return (!t || t <= 0 ? b5.encodeXML : b5.encodeHTML)(e);
  }
  o(rwe, "encode");
  oe.encode = rwe;
  var no = tS();
  Object.defineProperty(oe, "encodeXML", { enumerable: true, get: /* @__PURE__ */ o(function() {
    return no.encodeXML;
  }, "get") });
  Object.defineProperty(oe, "encodeHTML", { enumerable: true, get: /* @__PURE__ */ o(function() {
    return no.encodeHTML;
  }, "get") });
  Object.defineProperty(oe, "encodeNonAsciiHTML", { enumerable: true, get: /* @__PURE__ */ o(function() {
    return no.encodeNonAsciiHTML;
  }, "get") });
  Object.defineProperty(oe, "escape", { enumerable: true, get: /* @__PURE__ */ o(function() {
    return no.escape;
  }, "get") });
  Object.defineProperty(oe, "escapeUTF8", { enumerable: true, get: /* @__PURE__ */ o(function() {
    return no.escapeUTF8;
  }, "get") });
  Object.defineProperty(oe, "encodeHTML4", { enumerable: true, get: /* @__PURE__ */ o(function() {
    return no.encodeHTML;
  }, "get") });
  Object.defineProperty(oe, "encodeHTML5", { enumerable: true, get: /* @__PURE__ */ o(function() {
    return no.encodeHTML;
  }, "get") });
  var hn = ZR();
  Object.defineProperty(oe, "decodeXML", { enumerable: true, get: /* @__PURE__ */ o(function() {
    return hn.decodeXML;
  }, "get") });
  Object.defineProperty(oe, "decodeHTML", { enumerable: true, get: /* @__PURE__ */ o(function() {
    return hn.decodeHTML;
  }, "get") });
  Object.defineProperty(oe, "decodeHTMLStrict", { enumerable: true, get: /* @__PURE__ */ o(function() {
    return hn.decodeHTMLStrict;
  }, "get") });
  Object.defineProperty(oe, "decodeHTML4", { enumerable: true, get: /* @__PURE__ */ o(function() {
    return hn.decodeHTML;
  }, "get") });
  Object.defineProperty(oe, "decodeHTML5", { enumerable: true, get: /* @__PURE__ */ o(function() {
    return hn.decodeHTML;
  }, "get") });
  Object.defineProperty(oe, "decodeHTML4Strict", { enumerable: true, get: /* @__PURE__ */ o(function() {
    return hn.decodeHTMLStrict;
  }, "get") });
  Object.defineProperty(oe, "decodeHTML5Strict", { enumerable: true, get: /* @__PURE__ */ o(function() {
    return hn.decodeHTMLStrict;
  }, "get") });
  Object.defineProperty(oe, "decodeXMLStrict", { enumerable: true, get: /* @__PURE__ */ o(function() {
    return hn.decodeXML;
  }, "get") });
});
var A5 = y((AYe, P5) => {
  function nwe(e, t) {
    if (!(e instanceof t))
      throw new TypeError("Cannot call a class as a function");
  }
  o(nwe, "_classCallCheck");
  function v5(e, t) {
    for (var r7 = 0; r7 < t.length; r7++) {
      var n = t[r7];
      n.enumerable = n.enumerable || false, n.configurable = true, "value" in n && (n.writable = true), Object.defineProperty(e, n.key, n);
    }
  }
  o(v5, "_defineProperties");
  function owe(e, t, r7) {
    return t && v5(e.prototype, t), r7 && v5(e, r7), e;
  }
  o(owe, "_createClass");
  function S5(e, t) {
    var r7 = typeof Symbol < "u" && e[Symbol.iterator] || e["@@iterator"];
    if (!r7) {
      if (Array.isArray(e) || (r7 = iwe(e)) || t && e && typeof e.length == "number") {
        r7 && (e = r7);
        var n = 0, i = /* @__PURE__ */ o(function() {
        }, "F");
        return { s: i, n: /* @__PURE__ */ o(function() {
          return n >= e.length ? { done: true } : { done: false, value: e[n++] };
        }, "n"), e: /* @__PURE__ */ o(function(c) {
          throw c;
        }, "e"), f: i };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var s = true, a = false, l;
    return { s: /* @__PURE__ */ o(function() {
      r7 = r7.call(e);
    }, "s"), n: /* @__PURE__ */ o(function() {
      var c = r7.next();
      return s = c.done, c;
    }, "n"), e: /* @__PURE__ */ o(function(c) {
      a = true, l = c;
    }, "e"), f: /* @__PURE__ */ o(function() {
      try {
        !s && r7.return != null && r7.return();
      } finally {
        if (a) throw l;
      }
    }, "f") };
  }
  o(S5, "_createForOfIteratorHelper");
  function iwe(e, t) {
    if (e) {
      if (typeof e == "string") return E5(e, t);
      var r7 = Object.prototype.toString.call(e).slice(8, -1);
      if (r7 === "Object" && e.constructor && (r7 = e.constructor.name), r7 === "Map" || r7 === "Set") return Array.from(e);
      if (r7 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r7)) return E5(e, t);
    }
  }
  o(iwe, "_unsupportedIterableToArray");
  function E5(e, t) {
    (t == null || t > e.length) && (t = e.length);
    for (var r7 = 0, n = new Array(t); r7 < t; r7++)
      n[r7] = e[r7];
    return n;
  }
  o(E5, "_arrayLikeToArray");
  var swe = g5(), x5 = {
    fg: "#FFF",
    bg: "#000",
    newline: false,
    escapeXML: false,
    stream: false,
    colors: awe()
  };
  function awe() {
    var e = {
      0: "#000",
      1: "#A00",
      2: "#0A0",
      3: "#A50",
      4: "#00A",
      5: "#A0A",
      6: "#0AA",
      7: "#AAA",
      8: "#555",
      9: "#F55",
      10: "#5F5",
      11: "#FF5",
      12: "#55F",
      13: "#F5F",
      14: "#5FF",
      15: "#FFF"
    };
    return jy(0, 5).forEach(function(t) {
      jy(0, 5).forEach(function(r7) {
        jy(0, 5).forEach(function(n) {
          return lwe(t, r7, n, e);
        });
      });
    }), jy(0, 23).forEach(function(t) {
      var r7 = t + 232, n = _5(t * 10 + 8);
      e[r7] = "#" + n + n + n;
    }), e;
  }
  o(awe, "getDefaultColors");
  function lwe(e, t, r7, n) {
    var i = 16 + e * 36 + t * 6 + r7, s = e > 0 ? e * 40 + 55 : 0, a = t > 0 ? t * 40 + 55 : 0, l = r7 > 0 ? r7 * 40 + 55 : 0;
    n[i] = uwe([s, a, l]);
  }
  o(lwe, "setStyleColor");
  function _5(e) {
    for (var t = e.toString(16); t.length < 2; )
      t = "0" + t;
    return t;
  }
  o(_5, "toHexString");
  function uwe(e) {
    var t = [], r7 = S5(e), n;
    try {
      for (r7.s(); !(n = r7.n()).done; ) {
        var i = n.value;
        t.push(_5(i));
      }
    } catch (s) {
      r7.e(s);
    } finally {
      r7.f();
    }
    return "#" + t.join("");
  }
  o(uwe, "toColorHexString");
  function w5(e, t, r7, n) {
    var i;
    return t === "text" ? i = fwe(r7, n) : t === "display" ? i = dwe(e, r7, n) : t === "xterm256Foreground" ? i = Ly(e, n.colors[r7]) : t === "xterm256Background" ? i = Fy(e, n.colors[r7]) : t === "rgb" && (i = cwe(e, r7)), i;
  }
  o(w5, "generateOutput");
  function cwe(e, t) {
    t = t.substring(2).slice(0, -1);
    var r7 = +t.substr(0, 2), n = t.substring(5).split(";"), i = n.map(function(s) {
      return ("0" + Number(s).toString(16)).substr(-2);
    }).join("");
    return ky(e, (r7 === 38 ? "color:#" : "background-color:#") + i);
  }
  o(cwe, "handleRgb");
  function dwe(e, t, r7) {
    t = parseInt(t, 10);
    var n = {
      "-1": /* @__PURE__ */ o(function() {
        return "<br/>";
      }, "_"),
      0: /* @__PURE__ */ o(function() {
        return e.length && C5(e);
      }, "_"),
      1: /* @__PURE__ */ o(function() {
        return yn2(e, "b");
      }, "_"),
      3: /* @__PURE__ */ o(function() {
        return yn2(e, "i");
      }, "_"),
      4: /* @__PURE__ */ o(function() {
        return yn2(e, "u");
      }, "_"),
      8: /* @__PURE__ */ o(function() {
        return ky(e, "display:none");
      }, "_"),
      9: /* @__PURE__ */ o(function() {
        return yn2(e, "strike");
      }, "_"),
      22: /* @__PURE__ */ o(function() {
        return ky(e, "font-weight:normal;text-decoration:none;font-style:normal");
      }, "_"),
      23: /* @__PURE__ */ o(function() {
        return R5(e, "i");
      }, "_"),
      24: /* @__PURE__ */ o(function() {
        return R5(e, "u");
      }, "_"),
      39: /* @__PURE__ */ o(function() {
        return Ly(e, r7.fg);
      }, "_"),
      49: /* @__PURE__ */ o(function() {
        return Fy(e, r7.bg);
      }, "_"),
      53: /* @__PURE__ */ o(function() {
        return ky(e, "text-decoration:overline");
      }, "_")
    }, i;
    return n[t] ? i = n[t]() : 4 < t && t < 7 ? i = yn2(e, "blink") : 29 < t && t < 38 ? i = Ly(e, r7.colors[t - 30]) : 39 < t && t < 48 ? i = Fy(e, r7.colors[t - 40]) : 89 < t && t < 98 ? i = Ly(e, r7.colors[8 + (t - 90)]) : 99 < t && t < 108 && (i = Fy(e, r7.colors[8 + (t - 100)])), i;
  }
  o(dwe, "handleDisplay");
  function C5(e) {
    var t = e.slice(0);
    return e.length = 0, t.reverse().map(function(r7) {
      return "</" + r7 + ">";
    }).join("");
  }
  o(C5, "resetStyles");
  function jy(e, t) {
    for (var r7 = [], n = e; n <= t; n++)
      r7.push(n);
    return r7;
  }
  o(jy, "range");
  function pwe(e) {
    return function(t) {
      return (e === null || t.category !== e) && e !== "all";
    };
  }
  o(pwe, "notCategory");
  function T5(e) {
    e = parseInt(e, 10);
    var t = null;
    return e === 0 ? t = "all" : e === 1 ? t = "bold" : 2 < e && e < 5 ? t = "underline" : 4 < e && e < 7 ? t = "blink" : e === 8 ? t = "hide" : e === 9 ? t = "strike" : 29 < e && e < 38 || e === 39 || 89 < e && e < 98 ? t = "foreground-color" : (39 < e && e < 48 || e === 49 || 99 < e && e < 108) && (t = "background-color"), t;
  }
  o(T5, "categoryForCode");
  function fwe(e, t) {
    return t.escapeXML ? swe.encodeXML(e) : e;
  }
  o(fwe, "pushText");
  function yn2(e, t, r7) {
    return r7 || (r7 = ""), e.push(t), "<".concat(t).concat(r7 ? ' style="'.concat(r7, '"') : "", ">");
  }
  o(yn2, "pushTag");
  function ky(e, t) {
    return yn2(e, "span", t);
  }
  o(ky, "pushStyle");
  function Ly(e, t) {
    return yn2(e, "span", "color:" + t);
  }
  o(Ly, "pushForegroundColor");
  function Fy(e, t) {
    return yn2(e, "span", "background-color:" + t);
  }
  o(Fy, "pushBackgroundColor");
  function R5(e, t) {
    var r7;
    if (e.slice(-1)[0] === t && (r7 = e.pop()), r7)
      return "</" + t + ">";
  }
  o(R5, "closeTag");
  function mwe(e, t, r7) {
    var n = false, i = 3;
    function s() {
      return "";
    }
    o(s, "remove");
    function a(S, P) {
      return r7("xterm256Foreground", P), "";
    }
    o(a, "removeXterm256Foreground");
    function l(S, P) {
      return r7("xterm256Background", P), "";
    }
    o(l, "removeXterm256Background");
    function u(S) {
      return t.newline ? r7("display", -1) : r7("text", S), "";
    }
    o(u, "newline");
    function c(S, P) {
      n = true, P.trim().length === 0 && (P = "0"), P = P.trimRight(";").split(";");
      var _7 = S5(P), C7;
      try {
        for (_7.s(); !(C7 = _7.n()).done; ) {
          var O = C7.value;
          r7("display", O);
        }
      } catch (L) {
        _7.e(L);
      } finally {
        _7.f();
      }
      return "";
    }
    o(c, "ansiMess");
    function d(S) {
      return r7("text", S), "";
    }
    o(d, "realText");
    function p5(S) {
      return r7("rgb", S), "";
    }
    o(p5, "rgb");
    var f = [{
      pattern: /^\x08+/,
      sub: s
    }, {
      pattern: /^\x1b\[[012]?K/,
      sub: s
    }, {
      pattern: /^\x1b\[\(B/,
      sub: s
    }, {
      pattern: /^\x1b\[[34]8;2;\d+;\d+;\d+m/,
      sub: p5
    }, {
      pattern: /^\x1b\[38;5;(\d+)m/,
      sub: a
    }, {
      pattern: /^\x1b\[48;5;(\d+)m/,
      sub: l
    }, {
      pattern: /^\n/,
      sub: u
    }, {
      pattern: /^\r+\n/,
      sub: u
    }, {
      pattern: /^\r/,
      sub: u
    }, {
      pattern: /^\x1b\[((?:\d{1,3};?)+|)m/,
      sub: c
    }, {
      // CSI n J
      // ED - Erase in Display Clears part of the screen.
      // If n is 0 (or missing), clear from cursor to end of screen.
      // If n is 1, clear from cursor to beginning of the screen.
      // If n is 2, clear entire screen (and moves cursor to upper left on DOS ANSI.SYS).
      // If n is 3, clear entire screen and delete all lines saved in the scrollback buffer
      //   (this feature was added for xterm and is supported by other terminal applications).
      pattern: /^\x1b\[\d?J/,
      sub: s
    }, {
      // CSI n ; m f
      // HVP - Horizontal Vertical Position Same as CUP
      pattern: /^\x1b\[\d{0,3};\d{0,3}f/,
      sub: s
    }, {
      // catch-all for CSI sequences?
      pattern: /^\x1b\[?[\d;]{0,3}/,
      sub: s
    }, {
      /**
       * extracts real text - not containing:
       * - `\x1b' - ESC - escape (Ascii 27)
       * - '\x08' - BS - backspace (Ascii 8)
       * - `\n` - Newline - linefeed (LF) (ascii 10)
       * - `\r` - Windows Carriage Return (CR)
       */
      pattern: /^(([^\x1b\x08\r\n])+)/,
      sub: d
    }];
    function m(S, P) {
      P > i && n || (n = false, e = e.replace(S.pattern, S.sub));
    }
    o(m, "process");
    var h5 = [], b = e, v7 = b.length;
    e: for (; v7 > 0; ) {
      for (var g = 0, w7 = 0, E = f.length; w7 < E; g = ++w7) {
        var R = f[g];
        if (m(R, g), e.length !== v7) {
          v7 = e.length;
          continue e;
        }
      }
      if (e.length === v7)
        break;
      h5.push(0), v7 = e.length;
    }
    return h5;
  }
  o(mwe, "tokenize");
  function hwe(e, t, r7) {
    return t !== "text" && (e = e.filter(pwe(T5(r7))), e.push({
      token: t,
      data: r7,
      category: T5(r7)
    })), e;
  }
  o(hwe, "updateStickyStack");
  var ywe = /* @__PURE__ */ (function() {
    function e(t) {
      nwe(this, e), t = t || {}, t.colors && (t.colors = Object.assign({}, x5.colors, t.colors)), this.options = Object.assign({}, x5, t), this.stack = [], this.stickyStack = [];
    }
    return o(e, "Filter"), owe(e, [{
      key: "toHtml",
      value: /* @__PURE__ */ o(function(r7) {
        var n = this;
        r7 = typeof r7 == "string" ? [r7] : r7;
        var i = this.stack, s = this.options, a = [];
        return this.stickyStack.forEach(function(l) {
          var u = w5(i, l.token, l.data, s);
          u && a.push(u);
        }), mwe(r7.join(""), s, function(l, u) {
          var c = w5(i, l, u, s);
          c && a.push(c), s.stream && (n.stickyStack = hwe(n.stickyStack, l, u));
        }), i.length && a.push(C5(i)), a.join("");
      }, "toHtml")
    }]), e;
  })();
  P5.exports = ywe;
});
var H5 = y((uS, cS) => {
  (function(e, t) {
    typeof uS == "object" && typeof cS < "u" ? cS.exports = t() : typeof define == "function" && define.amd ? define(t) : (e = typeof globalThis < "u" ? globalThis : e || self).BrowserDetector = t();
  })(uS, function() {
    function e(a, l) {
      for (var u = 0; u < l.length; u++) {
        var c = l[u];
        c.enumerable = c.enumerable || false, c.configurable = true, "value" in c && (c.writable = true), Object.defineProperty(a, (d = c.key, p5 = void 0, typeof (p5 = (function(f, m) {
          if (typeof f != "object" || f === null) return f;
          var h5 = f[Symbol.toPrimitive];
          if (h5 !== void 0) {
            var b = h5.call(f, m);
            if (typeof b != "object") return b;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return (m === "string" ? String : Number)(f);
        })(d, "string")) == "symbol" ? p5 : String(p5)), c);
      }
      var d, p5;
    }
    o(e, "e");
    var t = { chrome: "Google Chrome", brave: "Brave", crios: "Google Chrome", edge: "Microsoft Edge", edg: "Microsoft Edge", edgios: "Microsoft Edge", fennec: "Mozilla Firefox", jsdom: "JsDOM", mozilla: "Mozilla Firefox", fxios: "Mozilla Firefox", msie: "Microsoft Internet Explorer", opera: "Opera", opios: "Opera", opr: "Opera", opt: "Opera", rv: "Microsoft Internet Explorer", safari: "Safari", samsungbrowser: "Samsung Browser", electron: "Electron" }, r7 = {
      android: "Android",
      androidTablet: "Android Tablet",
      cros: "Chrome OS",
      fennec: "Android Tablet",
      ipad: "IPad",
      iphone: "IPhone",
      jsdom: "JsDOM",
      linux: "Linux",
      mac: "Macintosh",
      tablet: "Android Tablet",
      win: "Windows",
      "windows phone": "Windows Phone",
      xbox: "Microsoft Xbox"
    }, n = /* @__PURE__ */ o(function(a) {
      var l = new RegExp("^-?\\d+(?:.\\d{0,".concat(arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : -1, "})?")), u = Number(
        a
      ).toString().match(l);
      return u ? u[0] : null;
    }, "n"), i = /* @__PURE__ */ o(function() {
      return typeof window < "u" ? window.navigator : null;
    }, "i"), s = (function() {
      function a(d) {
        var p5;
        (function(f, m) {
          if (!(f instanceof m)) throw new TypeError("Cannot call a class as a function");
        })(this, a), this.userAgent = d || ((p5 = i()) === null || p5 === void 0 ? void 0 : p5.userAgent) || null;
      }
      o(a, "t");
      var l, u, c;
      return l = a, u = [{ key: "parseUserAgent", value: /* @__PURE__ */ o(function(d) {
        var p5, f, m, h5 = {}, b = d || this.userAgent || "", v5 = b.toLowerCase().replace(/\s\s+/g, " "), g = /(edge)\/([\w.]+)/.exec(v5) || /(edg)[/]([\w.]+)/.exec(v5) || /(opr)[/]([\w.]+)/.exec(v5) || /(opt)[/]([\w.]+)/.exec(v5) || /(fxios)[/]([\w.]+)/.exec(v5) || /(edgios)[/]([\w.]+)/.exec(v5) || /(jsdom)[/]([\w.]+)/.exec(v5) || /(samsungbrowser)[/]([\w.]+)/.exec(v5) || /(electron)[/]([\w.]+)/.exec(v5) || /(chrome)[/]([\w.]+)/.exec(
          v5
        ) || /(crios)[/]([\w.]+)/.exec(v5) || /(opios)[/]([\w.]+)/.exec(v5) || /(version)(applewebkit)[/]([\w.]+).*(safari)[/]([\w.]+)/.exec(
          v5
        ) || /(webkit)[/]([\w.]+).*(version)[/]([\w.]+).*(safari)[/]([\w.]+)/.exec(v5) || /(applewebkit)[/]([\w.]+).*(safari)[/]([\w.]+)/.exec(
          v5
        ) || /(webkit)[/]([\w.]+)/.exec(v5) || /(opera)(?:.*version|)[/]([\w.]+)/.exec(v5) || /(msie) ([\w.]+)/.exec(v5) || /(fennec)[/]([\w.]+)/.exec(v5) || v5.indexOf("trident") >= 0 && /(rv)(?::| )([\w.]+)/.exec(v5) || v5.indexOf("compatible") < 0 && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(v5) || [], w5 = /(ipad)/.exec(v5) || /(ipod)/.exec(v5) || /(iphone)/.exec(v5) || /(jsdom)/.exec(v5) || /(windows phone)/.exec(v5) || /(xbox)/.exec(v5) || /(win)/.exec(v5) || /(tablet)/.exec(v5) || /(android)/.test(v5) && /(mobile)/.test(v5) === false && ["androidTablet"] || /(android)/.exec(v5) || /(mac)/.exec(v5) || /(linux)/.exec(v5) || /(cros)/.exec(v5) || [], E = g[5] || g[3] || g[1] || null, R = w5[0] || null, S = g[4] || g[2] || null, P = i();
        E === "chrome" && typeof (P == null || (p5 = P.brave) === null || p5 === void 0 ? void 0 : p5.isBrave) == "function" && (E = "brave"), E && (h5[E] = true), R && (h5[R] = true);
        var _5 = !!(h5.tablet || h5.android || h5.androidTablet), C5 = !!(h5.ipad || h5.tablet || h5.androidTablet), O = !!(h5.android || h5.androidTablet || h5.tablet || h5.ipad || h5.ipod || h5.iphone || h5["windows phone"]), L = !!(h5.cros || h5.mac || h5.linux || h5.win), q = !!(h5.brave || h5.chrome || h5.crios || h5.opr || h5.safari || h5.edg || h5.electron), D = !!(h5.msie || h5.rv);
        return {
          name: (f = t[E]) !== null && f !== void 0 ? f : null,
          platform: (m = r7[R]) !== null && m !== void 0 ? m : null,
          userAgent: b,
          version: S,
          shortVersion: S ? n(parseFloat(S), 2) : null,
          isAndroid: _5,
          isTablet: C5,
          isMobile: O,
          isDesktop: L,
          isWebkit: q,
          isIE: D
        };
      }, "value") }, { key: "getBrowserInfo", value: /* @__PURE__ */ o(function() {
        var d = this.parseUserAgent();
        return { name: d.name, platform: d.platform, userAgent: d.userAgent, version: d.version, shortVersion: d.shortVersion };
      }, "value") }], c = [{ key: "VERSION", get: /* @__PURE__ */ o(function() {
        return "3.4.0";
      }, "get") }], u && e(l.prototype, u), c && e(l, c), Object.defineProperty(l, "prototype", { writable: false }), a;
    })();
    return s;
  });
});
var co = {};
st$1(co, {
  ARGTYPES_INFO_REQUEST: () => ab,
  ARGTYPES_INFO_RESPONSE: () => $a,
  CHANNEL_CREATED: () => Z5,
  CHANNEL_WS_DISCONNECT: () => Hy,
  CONFIG_ERROR: () => Uy,
  CREATE_NEW_STORYFILE_REQUEST: () => e3,
  CREATE_NEW_STORYFILE_RESPONSE: () => t3,
  CURRENT_STORY_WAS_SET: () => La,
  DOCS_PREPARED: () => Vy,
  DOCS_RENDERED: () => Ti,
  FILE_COMPONENT_SEARCH_REQUEST: () => r3,
  FILE_COMPONENT_SEARCH_RESPONSE: () => n3,
  FORCE_REMOUNT: () => lo,
  FORCE_RE_RENDER: () => Ri,
  GLOBALS_UPDATED: () => bn,
  NAVIGATE_URL: () => o3,
  PLAY_FUNCTION_THREW_EXCEPTION: () => zy,
  PRELOAD_ENTRIES: () => Wy,
  PREVIEW_BUILDER_PROGRESS: () => i3,
  PREVIEW_KEYDOWN: () => Yy,
  REGISTER_SUBSCRIPTION: () => s3,
  REQUEST_WHATS_NEW_DATA: () => y3,
  RESET_STORY_ARGS: () => Si,
  RESULT_WHATS_NEW_DATA: () => b3,
  SAVE_STORY_REQUEST: () => E3,
  SAVE_STORY_RESPONSE: () => x3,
  SELECT_STORY: () => a3,
  SET_CONFIG: () => l3,
  SET_CURRENT_STORY: () => _i,
  SET_FILTER: () => u3,
  SET_GLOBALS: () => Ky,
  SET_INDEX: () => c3,
  SET_STORIES: () => d3,
  SET_WHATS_NEW_CACHE: () => g3,
  SHARED_STATE_CHANGED: () => p3,
  SHARED_STATE_SET: () => f3,
  STORIES_COLLAPSE_ALL: () => m3,
  STORIES_EXPAND_ALL: () => h3,
  STORY_ARGS_UPDATED: () => Xy,
  STORY_CHANGED: () => Jy,
  STORY_ERRORED: () => Qy,
  STORY_FINISHED: () => Da,
  STORY_HOT_UPDATED: () => ob,
  STORY_INDEX_INVALIDATED: () => Zy,
  STORY_MISSING: () => Fa,
  STORY_PREPARED: () => eb,
  STORY_RENDERED: () => uo,
  STORY_RENDER_PHASE_CHANGED: () => jt,
  STORY_SPECIFIED: () => tb,
  STORY_THREW_EXCEPTION: () => rb,
  STORY_UNCHANGED: () => nb,
  TELEMETRY_ERROR: () => sb,
  TOGGLE_WHATS_NEW_NOTIFICATIONS: () => v3,
  UNHANDLED_ERRORS_WHILE_PLAYING: () => Gy,
  UPDATE_GLOBALS: () => Ci,
  UPDATE_QUERY_PARAMS: () => ib,
  UPDATE_STORY_ARGS: () => Pi,
  default: () => Q5
});
var By = /* @__PURE__ */ ((V) => (V.CHANNEL_WS_DISCONNECT = "channelWSDisconnect", V.CHANNEL_CREATED = "channelCreated", V.CONFIG_ERROR = "configError", V.STORY_INDEX_INVALIDATED = "storyIndexInvalidated", V.STORY_SPECIFIED = "storySpecified", V.SET_CONFIG = "setConfig", V.SET_STORIES = "setStories", V.SET_INDEX = "setIndex", V.SET_CURRENT_STORY = "setCurrentStory", V.CURRENT_STORY_WAS_SET = "currentStoryWasSet", V.FORCE_RE_RENDER = "forceReRender", V.FORCE_REMOUNT = "forceRemount", V.PRELOAD_ENTRIES = "preloadStories", V.STORY_PREPARED = "storyPrepared", V.DOCS_PREPARED = "docsPrepared", V.STORY_CHANGED = "storyChanged", V.STORY_UNCHANGED = "storyUnchanged", V.STORY_RENDERED = "storyRendered", V.STORY_FINISHED = "storyFinished", V.STORY_MISSING = "storyMissing", V.STORY_ERRORED = "storyErrored", V.STORY_THREW_EXCEPTION = "storyThrewException", V.STORY_RENDER_PHASE_CHANGED = "storyRenderPhaseChanged", V.STORY_HOT_UPDATED = "storyHotUpdated", V.PLAY_FUNCTION_THREW_EXCEPTION = "playFunctionThrewException", V.UNHANDLED_ERRORS_WHILE_PLAYING = "unhandledErrorsWhilePlaying", V.UPDATE_STORY_ARGS = "updateStoryArgs", V.STORY_ARGS_UPDATED = "storyArgsUpdated", V.RESET_STORY_ARGS = "resetStoryArgs", V.SET_FILTER = "setFilter", V.SET_GLOBALS = "setGlobals", V.UPDATE_GLOBALS = "updateGlobals", V.GLOBALS_UPDATED = "globalsUpdated", V.REGISTER_SUBSCRIPTION = "registerSubscription", V.PREVIEW_KEYDOWN = "previewKeydown", V.PREVIEW_BUILDER_PROGRESS = "preview_builder_progress", V.SELECT_STORY = "selectStory", V.STORIES_COLLAPSE_ALL = "storiesCollapseAll", V.STORIES_EXPAND_ALL = "storiesExpandAll", V.DOCS_RENDERED = "docsRendered", V.SHARED_STATE_CHANGED = "sharedStateChanged", V.SHARED_STATE_SET = "sharedStateSet", V.NAVIGATE_URL = "navigateUrl", V.UPDATE_QUERY_PARAMS = "updateQueryParams", V.REQUEST_WHATS_NEW_DATA = "requestWhatsNewData", V.RESULT_WHATS_NEW_DATA = "resultWhatsNewData", V.SET_WHATS_NEW_CACHE = "setWhatsNewCache", V.TOGGLE_WHATS_NEW_NOTIFICATIONS = "toggleWhatsNewNotifications", V.TELEMETRY_ERROR = "telemetryError", V.FILE_COMPONENT_SEARCH_REQUEST = "fileComponentSearchRequest", V.FILE_COMPONENT_SEARCH_RESPONSE = "fileComponentSearchResponse", V.SAVE_STORY_REQUEST = "saveStoryRequest", V.SAVE_STORY_RESPONSE = "saveStoryResponse", V.ARGTYPES_INFO_REQUEST = "argtypesInfoRequest", V.ARGTYPES_INFO_RESPONSE = "argtypesInfoResponse", V.CREATE_NEW_STORYFILE_REQUEST = "createNewStoryfileRequest", V.CREATE_NEW_STORYFILE_RESPONSE = "createNewStoryfileResponse", V))(By || {}), Q5 = By, {
  CHANNEL_WS_DISCONNECT: Hy,
  CHANNEL_CREATED: Z5,
  CONFIG_ERROR: Uy,
  CREATE_NEW_STORYFILE_REQUEST: e3,
  CREATE_NEW_STORYFILE_RESPONSE: t3,
  CURRENT_STORY_WAS_SET: La,
  DOCS_PREPARED: Vy,
  DOCS_RENDERED: Ti,
  FILE_COMPONENT_SEARCH_REQUEST: r3,
  FILE_COMPONENT_SEARCH_RESPONSE: n3,
  FORCE_RE_RENDER: Ri,
  FORCE_REMOUNT: lo,
  GLOBALS_UPDATED: bn,
  NAVIGATE_URL: o3,
  PLAY_FUNCTION_THREW_EXCEPTION: zy,
  UNHANDLED_ERRORS_WHILE_PLAYING: Gy,
  PRELOAD_ENTRIES: Wy,
  PREVIEW_BUILDER_PROGRESS: i3,
  PREVIEW_KEYDOWN: Yy,
  REGISTER_SUBSCRIPTION: s3,
  RESET_STORY_ARGS: Si,
  SELECT_STORY: a3,
  SET_CONFIG: l3,
  SET_CURRENT_STORY: _i,
  SET_FILTER: u3,
  SET_GLOBALS: Ky,
  SET_INDEX: c3,
  SET_STORIES: d3,
  SHARED_STATE_CHANGED: p3,
  SHARED_STATE_SET: f3,
  STORIES_COLLAPSE_ALL: m3,
  STORIES_EXPAND_ALL: h3,
  STORY_ARGS_UPDATED: Xy,
  STORY_CHANGED: Jy,
  STORY_ERRORED: Qy,
  STORY_INDEX_INVALIDATED: Zy,
  STORY_MISSING: Fa,
  STORY_PREPARED: eb,
  STORY_RENDER_PHASE_CHANGED: jt,
  STORY_RENDERED: uo,
  STORY_FINISHED: Da,
  STORY_SPECIFIED: tb,
  STORY_THREW_EXCEPTION: rb,
  STORY_UNCHANGED: nb,
  STORY_HOT_UPDATED: ob,
  UPDATE_GLOBALS: Ci,
  UPDATE_QUERY_PARAMS: ib,
  UPDATE_STORY_ARGS: Pi,
  REQUEST_WHATS_NEW_DATA: y3,
  RESULT_WHATS_NEW_DATA: b3,
  SET_WHATS_NEW_CACHE: g3,
  TOGGLE_WHATS_NEW_NOTIFICATIONS: v3,
  TELEMETRY_ERROR: sb,
  SAVE_STORY_REQUEST: E3,
  SAVE_STORY_RESPONSE: x3,
  ARGTYPES_INFO_REQUEST: ab,
  ARGTYPES_INFO_RESPONSE: $a
} = By;
var lb = {};
st$1(lb, {
  global: () => k
});
var k = (() => {
  let e;
  return typeof window < "u" ? e = window : typeof globalThis < "u" ? e = globalThis : typeof global < "u" ? e = global : typeof self < "u" ? e = self : e = {}, e;
})();
var ub = {
  "@storybook/global": "__STORYBOOK_MODULE_GLOBAL__",
  "storybook/test": "__STORYBOOK_MODULE_TEST__",
  "storybook/actions": "__STORYBOOK_MODULE_ACTIONS__",
  "storybook/preview-api": "__STORYBOOK_MODULE_PREVIEW_API__",
  "storybook/internal/channels": "__STORYBOOK_MODULE_CHANNELS__",
  "storybook/internal/client-logger": "__STORYBOOK_MODULE_CLIENT_LOGGER__",
  "storybook/internal/core-events": "__STORYBOOK_MODULE_CORE_EVENTS__",
  "storybook/internal/preview-errors": "__STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS__",
  "storybook/internal/types": "__STORYBOOK_MODULE_TYPES__",
  // @deprecated TODO: Remove in 9.1
  "storybook/internal/preview-api": "__STORYBOOK_MODULE_PREVIEW_API__"
}, fS = Object.keys(ub);
var qb = {};
st$1(qb, {
  Channel: () => Ar$1,
  HEARTBEAT_INTERVAL: () => Pb,
  HEARTBEAT_MAX_LATENCY: () => Ab,
  PostMessageTransport: () => go,
  WebsocketTransport: () => vo,
  createBrowserChannel: () => NG,
  default: () => MG
});
function Q(e) {
  for (var t = [], r7 = 1; r7 < arguments.length; r7++)
    t[r7 - 1] = arguments[r7];
  var n = Array.from(typeof e == "string" ? [e] : e);
  n[n.length - 1] = n[n.length - 1].replace(/\r?\n([\t ]*)$/, "");
  var i = n.reduce(function(l, u) {
    var c = u.match(/\n([\t ]+|(?!\s).)/g);
    return c ? l.concat(c.map(function(d) {
      var p5, f;
      return (f = (p5 = d.match(/[\t ]/g)) === null || p5 === void 0 ? void 0 : p5.length) !== null && f !== void 0 ? f : 0;
    })) : l;
  }, []);
  if (i.length) {
    var s = new RegExp(`
[	 ]{` + Math.min.apply(Math, i) + "}", "g");
    n = n.map(function(l) {
      return l.replace(s, `
`);
    });
  }
  n[0] = n[0].replace(/^\r?\n/, "");
  var a = n[0];
  return t.forEach(function(l, u) {
    var c = a.match(/(?:^|\n)( *)$/), d = c ? c[1] : "", p5 = l;
    typeof l == "string" && l.includes(`
`) && (p5 = String(l).split(`
`).map(function(f, m) {
      return m === 0 ? f : "" + d + f;
    }).join(`
`)), a += p5 + n[u + 1];
  }), a;
}
o(Q, "dedent");
var mS = Q;
var cb = /* @__PURE__ */ new Map();
var w3 = "UNIVERSAL_STORE:", Rt = {
  PENDING: "PENDING",
  RESOLVED: "RESOLVED",
  REJECTED: "REJECTED"
}, J = class J2 {
  constructor(t, r7) {
    this.debugging = false;
    this.listeners = /* @__PURE__ */ new Map([["*", /* @__PURE__ */ new Set()]]);
    this.getState = /* @__PURE__ */ o(() => (this.debug("getState", { state: this.state }), this.state), "getState");
    this.subscribe = /* @__PURE__ */ o((t7, r72) => {
      let n = typeof t7 == "function", i = n ? "*" : t7, s = n ? t7 : r72;
      if (this.debug("subscribe", { eventType: i, listener: s }), !s)
        throw new TypeError(
          `Missing first subscribe argument, or second if first is the event type, when subscribing to a UniversalStore with id '${this.id}'`
        );
      return this.listeners.has(i) || this.listeners.set(i, /* @__PURE__ */ new Set()), this.listeners.get(i).add(s), () => {
        this.debug("unsubscribe", { eventType: i, listener: s }), this.listeners.has(i) && (this.listeners.get(i).delete(s), this.listeners.get(i)?.size === 0 && this.listeners.delete(i));
      };
    }, "subscribe");
    this.send = /* @__PURE__ */ o((t7) => {
      if (this.debug("send", { event: t7 }), this.status !== J2.Status.READY)
        throw new TypeError(
          Q`Cannot send event before store is ready. You can get the current status with store.status,
        or await store.readyPromise to wait for the store to be ready before sending events.
        ${JSON.stringify(
            {
              event: t7,
              id: this.id,
              actor: this.actor,
              environment: this.environment
            },
            null,
            2
          )}`
        );
      this.emitToListeners(t7, { actor: this.actor }), this.emitToChannel(t7, { actor: this.actor });
    }, "send");
    if (this.debugging = t.debug ?? false, !J2.isInternalConstructing)
      throw new TypeError(
        "UniversalStore is not constructable - use UniversalStore.create() instead"
      );
    if (J2.isInternalConstructing = false, this.id = t.id, this.actorId = Date.now().toString(36) + Math.random().toString(36).substring(2), this.actorType = t.leader ? J2.ActorType.LEADER : J2.ActorType.FOLLOWER, this.state = t.initialState, this.channelEventName = `${w3}${this.id}`, this.debug("constructor", {
      options: t,
      environmentOverrides: r7,
      channelEventName: this.channelEventName
    }), this.actor.type === J2.ActorType.LEADER)
      this.syncing = {
        state: Rt.RESOLVED,
        promise: Promise.resolve()
      };
    else {
      let n, i, s = new Promise((a, l) => {
        n = /* @__PURE__ */ o(() => {
          this.syncing.state === Rt.PENDING && (this.syncing.state = Rt.RESOLVED, a());
        }, "syncingResolve"), i = /* @__PURE__ */ o((u) => {
          this.syncing.state === Rt.PENDING && (this.syncing.state = Rt.REJECTED, l(u));
        }, "syncingReject");
      });
      this.syncing = {
        state: Rt.PENDING,
        promise: s,
        resolve: n,
        reject: i
      };
    }
    this.getState = this.getState.bind(this), this.setState = this.setState.bind(this), this.subscribe = this.subscribe.bind(this), this.onStateChange = this.onStateChange.bind(this), this.send = this.send.bind(this), this.emitToChannel = this.emitToChannel.bind(this), this.prepareThis = this.prepareThis.bind(this), this.emitToListeners = this.emitToListeners.bind(this), this.handleChannelEvents = this.handleChannelEvents.bind(
      this
    ), this.debug = this.debug.bind(this), this.channel = r7?.channel ?? J2.preparation.channel, this.environment = r7?.environment ?? J2.preparation.environment, this.channel && this.environment ? (J2.preparation.resolve({ channel: this.channel, environment: this.environment }), this.prepareThis(
      { channel: this.channel, environment: this.environment }
    )) : J2.preparation.promise.then(this.prepareThis);
  }
  static setupPreparationPromise() {
    let t, r7, n = new Promise(
      (i, s) => {
        t = /* @__PURE__ */ o((a) => {
          i(a);
        }, "resolveRef"), r7 = /* @__PURE__ */ o((...a) => {
          s(a);
        }, "rejectRef");
      }
    );
    J2.preparation = {
      resolve: t,
      reject: r7,
      promise: n
    };
  }
  /** The actor object representing the store instance with a unique ID and a type */
  get actor() {
    return Object.freeze({
      id: this.actorId,
      type: this.actorType,
      environment: this.environment ?? J2.Environment.UNKNOWN
    });
  }
  /**
   * The current state of the store, that signals both if the store is prepared by Storybook and
   * also - in the case of a follower - if the state has been synced with the leader's state.
   */
  get status() {
    if (!this.channel || !this.environment)
      return J2.Status.UNPREPARED;
    switch (this.syncing?.state) {
      case Rt.PENDING:
      case void 0:
        return J2.Status.SYNCING;
      case Rt.REJECTED:
        return J2.Status.ERROR;
      case Rt.RESOLVED:
      default:
        return J2.Status.READY;
    }
  }
  /**
   * A promise that resolves when the store is fully ready. A leader will be ready when the store
   * has been prepared by Storybook, which is almost instantly.
   *
   * A follower will be ready when the state has been synced with the leader's state, within a few
   * hundred milliseconds.
   */
  untilReady() {
    return Promise.all([J2.preparation.promise, this.syncing?.promise]);
  }
  /** Creates a new instance of UniversalStore */
  static create(t) {
    if (!t || typeof t?.id != "string")
      throw new TypeError("id is required and must be a string, when creating a UniversalStore");
    t.debug && console.debug(
      Q`[UniversalStore]
        create`,
      { options: t }
    );
    let r7 = cb.get(t.id);
    if (r7)
      return console.warn(Q`UniversalStore with id "${t.id}" already exists in this environment, re-using existing.
        You should reuse the existing instance instead of trying to create a new one.`), r7;
    J2.isInternalConstructing = true;
    let n = new J2(t);
    return cb.set(t.id, n), n;
  }
  /**
   * Used by Storybook to set the channel for all instances of UniversalStore in the given
   * environment.
   *
   * @internal
   */
  static __prepare(t, r7) {
    J2.preparation.channel = t, J2.preparation.environment = r7, J2.preparation.resolve({ channel: t, environment: r7 });
  }
  /**
   * Updates the store's state
   *
   * Either a new state or a state updater function can be passed to the method.
   */
  setState(t) {
    let r7 = this.state, n = typeof t == "function" ? t(r7) : t;
    if (this.debug("setState", { newState: n, previousState: r7, updater: t }), this.status !== J2.Status.READY)
      throw new TypeError(
        Q`Cannot set state before store is ready. You can get the current status with store.status,
        or await store.readyPromise to wait for the store to be ready before sending events.
        ${JSON.stringify(
          {
            newState: n,
            id: this.id,
            actor: this.actor,
            environment: this.environment
          },
          null,
          2
        )}`
      );
    this.state = n;
    let i = {
      type: J2.InternalEventType.SET_STATE,
      payload: {
        state: n,
        previousState: r7
      }
    };
    this.emitToChannel(i, { actor: this.actor }), this.emitToListeners(i, { actor: this.actor });
  }
  /**
   * Subscribes to state changes
   *
   * @returns Unsubscribe function
   */
  onStateChange(t) {
    return this.debug("onStateChange", { listener: t }), this.subscribe(
      J2.InternalEventType.SET_STATE,
      ({ payload: r7 }, n) => {
        t(r7.state, r7.previousState, n);
      }
    );
  }
  emitToChannel(t, r7) {
    this.debug("emitToChannel", { event: t, eventInfo: r7, channel: !!this.channel }), this.channel?.emit(this.channelEventName, {
      event: t,
      eventInfo: r7
    });
  }
  prepareThis({
    channel: t,
    environment: r7
  }) {
    this.channel = t, this.environment = r7, this.debug("prepared", { channel: !!t, environment: r7 }), this.channel.on(
      this.channelEventName,
      this.handleChannelEvents
    ), this.actor.type === J2.ActorType.LEADER ? this.emitToChannel(
      { type: J2.InternalEventType.LEADER_CREATED },
      { actor: this.actor }
    ) : (this.emitToChannel(
      { type: J2.InternalEventType.FOLLOWER_CREATED },
      { actor: this.actor }
    ), this.emitToChannel(
      { type: J2.InternalEventType.EXISTING_STATE_REQUEST },
      { actor: this.actor }
    ), setTimeout(() => {
      this.syncing.reject(
        new TypeError(
          `No existing state found for follower with id: '${this.id}'. Make sure a leader with the same id exists before creating a follower.`
        )
      );
    }, 1e3));
  }
  emitToListeners(t, r7) {
    let n = this.listeners.get(t.type), i = this.listeners.get("*");
    this.debug("emitToListeners", {
      event: t,
      eventInfo: r7,
      eventTypeListeners: n,
      everythingListeners: i
    }), [...n ?? [], ...i ?? []].forEach(
      (s) => s(t, r7)
    );
  }
  handleChannelEvents(t) {
    let { event: r7, eventInfo: n } = t;
    if ([n.actor.id, n.forwardingActor?.id].includes(this.actor.id)) {
      this.debug("handleChannelEvents: Ignoring event from self", { channelEvent: t });
      return;
    } else if (this.syncing?.state === Rt.PENDING && r7.type !== J2.InternalEventType.EXISTING_STATE_RESPONSE) {
      this.debug("handleChannelEvents: Ignoring event while syncing", { channelEvent: t });
      return;
    }
    if (this.debug("handleChannelEvents", { channelEvent: t }), this.actor.type === J2.ActorType.LEADER) {
      let i = true;
      switch (r7.type) {
        case J2.InternalEventType.EXISTING_STATE_REQUEST:
          i = false;
          let s = {
            type: J2.InternalEventType.EXISTING_STATE_RESPONSE,
            payload: this.state
          };
          this.debug("handleChannelEvents: responding to existing state request", {
            responseEvent: s
          }), this.emitToChannel(s, { actor: this.actor }), this.emitToListeners(s, { actor: this.actor });
          break;
        case J2.InternalEventType.LEADER_CREATED:
          i = false, this.syncing.state = Rt.REJECTED, this.debug("handleChannelEvents: erroring due to second leader being created", {
            event: r7
          }), console.error(
            Q`Detected multiple UniversalStore leaders created with the same id "${this.id}".
            Only one leader can exists at a time, your stores are now in an invalid state.
            Leaders detected:
            this: ${JSON.stringify(this.actor, null, 2)}
            other: ${JSON.stringify(n.actor, null, 2)}`
          );
          break;
      }
      i && (this.debug("handleChannelEvents: forwarding event", { channelEvent: t }), this.emitToChannel(r7, { actor: n.actor, forwardingActor: this.actor }));
    }
    if (this.actor.type === J2.ActorType.FOLLOWER)
      switch (r7.type) {
        case J2.InternalEventType.EXISTING_STATE_RESPONSE:
          if (this.debug("handleChannelEvents: Setting state from leader's existing state response", {
            event: r7
          }), this.syncing?.state !== Rt.PENDING)
            break;
          this.syncing.resolve?.();
          let i = {
            type: J2.InternalEventType.SET_STATE,
            payload: {
              state: r7.payload,
              previousState: this.state
            }
          };
          this.state = r7.payload, this.emitToListeners(i, n);
          break;
      }
    switch (r7.type) {
      case J2.InternalEventType.SET_STATE:
        this.debug("handleChannelEvents: Setting state", { event: r7 }), this.state = r7.payload.state;
        break;
    }
    this.emitToListeners(r7, { actor: n.actor });
  }
  debug(t, r7) {
    this.debugging && console.debug(
      Q`[UniversalStore::${this.id}::${this.environment ?? J2.Environment.UNKNOWN}]
        ${t}`,
      JSON.stringify(
        {
          data: r7,
          actor: this.actor,
          state: this.state,
          status: this.status
        },
        null,
        2
      )
    );
  }
  /**
   * Used to reset the static fields of the UniversalStore class when cleaning up tests
   *
   * @internal
   */
  static __reset() {
    J2.preparation.reject(new Error("reset")), J2.setupPreparationPromise(), J2.isInternalConstructing = false;
  }
};
o(J, "UniversalStore"), /**
* Defines the possible actor types in the store system
*
* @readonly
*/
J.ActorType = {
  LEADER: "LEADER",
  FOLLOWER: "FOLLOWER"
}, /**
* Defines the possible environments the store can run in
*
* @readonly
*/
J.Environment = {
  SERVER: "SERVER",
  MANAGER: "MANAGER",
  PREVIEW: "PREVIEW",
  UNKNOWN: "UNKNOWN",
  MOCK: "MOCK"
}, /**
* Internal event types used for store synchronization
*
* @readonly
*/
J.InternalEventType = {
  EXISTING_STATE_REQUEST: "__EXISTING_STATE_REQUEST",
  EXISTING_STATE_RESPONSE: "__EXISTING_STATE_RESPONSE",
  SET_STATE: "__SET_STATE",
  LEADER_CREATED: "__LEADER_CREATED",
  FOLLOWER_CREATED: "__FOLLOWER_CREATED"
}, J.Status = {
  UNPREPARED: "UNPREPARED",
  SYNCING: "SYNCING",
  READY: "READY",
  ERROR: "ERROR"
}, // This is used to check if constructor was called from the static factory create()
J.isInternalConstructing = false, J.setupPreparationPromise();
var po = J;
var T3 = /* @__PURE__ */ o((e) => e.transports !== void 0, "isMulti"), R3 = /* @__PURE__ */ o(() => Math.random().toString(16).slice(2), "generateRandomId"), db = class db2 {
  constructor(t = {}) {
    this.sender = R3();
    this.events = {};
    this.data = {};
    this.transports = [];
    this.isAsync = t.async || false, T3(t) ? (this.transports = t.transports || [], this.transports.forEach((r7) => {
      r7.setHandler((n) => this.handleEvent(n));
    })) : this.transports = t.transport ? [t.transport] : [], this.transports.forEach((r7) => {
      r7.setHandler((n) => this.handleEvent(n));
    });
  }
  get hasTransport() {
    return this.transports.length > 0;
  }
  addListener(t, r7) {
    this.events[t] = this.events[t] || [], this.events[t].push(r7);
  }
  emit(t, ...r7) {
    let n = { type: t, args: r7, from: this.sender }, i = {};
    r7.length >= 1 && r7[0] && r7[0].options && (i = r7[0].options);
    let s = /* @__PURE__ */ o(() => {
      this.transports.forEach((a) => {
        a.send(n, i);
      }), this.handleEvent(n);
    }, "handler");
    this.isAsync ? setImmediate(s) : s();
  }
  last(t) {
    return this.data[t];
  }
  eventNames() {
    return Object.keys(this.events);
  }
  listenerCount(t) {
    let r7 = this.listeners(t);
    return r7 ? r7.length : 0;
  }
  listeners(t) {
    return this.events[t] || void 0;
  }
  once(t, r7) {
    let n = this.onceListener(t, r7);
    this.addListener(t, n);
  }
  removeAllListeners(t) {
    t ? this.events[t] && delete this.events[t] : this.events = {};
  }
  removeListener(t, r7) {
    let n = this.listeners(t);
    n && (this.events[t] = n.filter((i) => i !== r7));
  }
  on(t, r7) {
    this.addListener(t, r7);
  }
  off(t, r7) {
    this.removeListener(t, r7);
  }
  handleEvent(t) {
    let r7 = this.listeners(t.type);
    r7 && r7.length && r7.forEach((n) => {
      n.apply(t, t.args);
    }), this.data[t.type] = t.args;
  }
  onceListener(t, r7) {
    let n = /* @__PURE__ */ o((...i) => (this.removeListener(t, n), r7(...i)), "onceListener");
    return n;
  }
};
o(db, "Channel");
var Ar$1 = db;
var fb = {};
st$1(fb, {
  deprecate: () => Ai,
  logger: () => se,
  once: () => be,
  pretty: () => pt$1
});
var { LOGLEVEL: S3 } = k, Or$1 = {
  trace: 1,
  debug: 2,
  info: 3,
  warn: 4,
  error: 5,
  silent: 10
}, _3 = S3, fo = Or$1[_3] || Or$1.info, se = {
  trace: /* @__PURE__ */ o((e, ...t) => {
    fo <= Or$1.trace && console.trace(e, ...t);
  }, "trace"),
  debug: /* @__PURE__ */ o((e, ...t) => {
    fo <= Or$1.debug && console.debug(e, ...t);
  }, "debug"),
  info: /* @__PURE__ */ o((e, ...t) => {
    fo <= Or$1.info && console.info(e, ...t);
  }, "info"),
  warn: /* @__PURE__ */ o((e, ...t) => {
    fo <= Or$1.warn && console.warn(e, ...t);
  }, "warn"),
  error: /* @__PURE__ */ o((e, ...t) => {
    fo <= Or$1.error && console.error(e, ...t);
  }, "error"),
  log: /* @__PURE__ */ o((e, ...t) => {
    fo < Or$1.silent && console.log(e, ...t);
  }, "log")
}, pb = /* @__PURE__ */ new Set(), be = /* @__PURE__ */ o((e) => (t, ...r7) => {
  if (!pb.has(t))
    return pb.add(t), se[e](t, ...r7);
}, "once");
be.clear = () => pb.clear();
be.trace = be("trace");
be.debug = be("debug");
be.info = be("info");
be.warn = be("warn");
be.error = be("error");
be.log = be("log");
var Ai = be("warn"), pt$1 = /* @__PURE__ */ o((e) => (...t) => {
  let r7 = [];
  if (t.length) {
    let n = /<span\s+style=(['"])([^'"]*)\1\s*>/gi, i = /<\/span>/gi, s;
    for (r7.push(t[0].replace(n, "%c").replace(i, "%c")); s = n.exec(t[0]); )
      r7.push(s[2]), r7.push("");
    for (let a = 1; a < t.length; a++)
      r7.push(t[a]);
  }
  se[e].apply(se, r7);
}, "pretty");
pt$1.trace = pt$1("trace");
pt$1.debug = pt$1("debug");
pt$1.info = pt$1("info");
pt$1.warn = pt$1("warn");
pt$1.error = pt$1("error");
var C3 = Object.create, hS = Object.defineProperty, P3 = Object.getOwnPropertyDescriptor, yS = Object.getOwnPropertyNames, A3 = Object.getPrototypeOf, O3 = Object.prototype.hasOwnProperty, te = /* @__PURE__ */ o((e, t) => /* @__PURE__ */ o(function() {
  return t || (0, e[yS(e)[0]])((t = { exports: {} }).exports, t), t.exports;
}, "__require"), "__commonJS"), q3 = /* @__PURE__ */ o((e, t, r7, n) => {
  if (t && typeof t == "object" || typeof t == "function")
    for (let i of yS(t))
      !O3.call(e, i) && i !== r7 && hS(e, i, { get: /* @__PURE__ */ o(() => t[i], "get"), enumerable: !(n = P3(t, i)) || n.enumerable });
  return e;
}, "__copyProps"), Ba = /* @__PURE__ */ o((e, t, r7) => (r7 = e != null ? C3(A3(e)) : {}, q3(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  t || !e || !e.__esModule ? hS(r7, "default", { value: e, enumerable: true }) : r7,
  e
)), "__toESM"), I3 = [
  "bubbles",
  "cancelBubble",
  "cancelable",
  "composed",
  "currentTarget",
  "defaultPrevented",
  "eventPhase",
  "isTrusted",
  "returnValue",
  "srcElement",
  "target",
  "timeStamp",
  "type"
], M3 = ["detail"];
function bS(e) {
  let t = I3.filter((r7) => e[r7] !== void 0).reduce((r7, n) => (r7[n] = e[n], r7), {});
  if (e instanceof CustomEvent)
    for (let r7 of M3.filter(
      (n) => e[n] !== void 0
    ))
      t[r7] = e[r7];
  return t;
}
o(bS, "extractEventHiddenProperties");
var TS = te({
  "node_modules/.pnpm/es-object-atoms@1.1.1/node_modules/es-object-atoms/index.js"(e, t) {
    t.exports = Object;
  }
}), N3 = te({
  "node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/index.js"(e, t) {
    t.exports = Error;
  }
}), j3 = te({
  "node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/eval.js"(e, t) {
    t.exports = EvalError;
  }
}), k3 = te({
  "node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/range.js"(e, t) {
    t.exports = RangeError;
  }
}), L3 = te({
  "node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/ref.js"(e, t) {
    t.exports = ReferenceError;
  }
}), F3 = te({
  "node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/syntax.js"(e, t) {
    t.exports = SyntaxError;
  }
}), hb = te({
  "node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/type.js"(e, t) {
    t.exports = TypeError;
  }
}), D3 = te({
  "node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/uri.js"(e, t) {
    t.exports = URIError;
  }
}), $3 = te({
  "node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/abs.js"(e, t) {
    t.exports = Math.abs;
  }
}), B3 = te({
  "node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/floor.js"(e, t) {
    t.exports = Math.floor;
  }
}), H3 = te({
  "node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/max.js"(e, t) {
    t.exports = Math.max;
  }
}), U3 = te({
  "node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/min.js"(e, t) {
    t.exports = Math.min;
  }
}), V3 = te({
  "node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/pow.js"(e, t) {
    t.exports = Math.pow;
  }
}), z3 = te({
  "node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/round.js"(e, t) {
    t.exports = Math.round;
  }
}), G3 = te({
  "node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/isNaN.js"(e, t) {
    t.exports = Number.isNaN || /* @__PURE__ */ o(function(n) {
      return n !== n;
    }, "isNaN2");
  }
}), W3 = te({
  "node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/sign.js"(e, t) {
    var r7 = G3();
    t.exports = /* @__PURE__ */ o(function(i) {
      return r7(i) || i === 0 ? i : i < 0 ? -1 : 1;
    }, "sign");
  }
}), Y3 = te({
  "node_modules/.pnpm/gopd@1.2.0/node_modules/gopd/gOPD.js"(e, t) {
    t.exports = Object.getOwnPropertyDescriptor;
  }
}), yb = te({
  "node_modules/.pnpm/gopd@1.2.0/node_modules/gopd/index.js"(e, t) {
    var r7 = Y3();
    if (r7)
      try {
        r7([], "length");
      } catch {
        r7 = null;
      }
    t.exports = r7;
  }
}), K3 = te({
  "node_modules/.pnpm/es-define-property@1.0.1/node_modules/es-define-property/index.js"(e, t) {
    var r7 = Object.defineProperty || false;
    if (r7)
      try {
        r7({}, "a", { value: 1 });
      } catch {
        r7 = false;
      }
    t.exports = r7;
  }
}), RS = te({
  "node_modules/.pnpm/has-symbols@1.1.0/node_modules/has-symbols/shams.js"(e, t) {
    t.exports = /* @__PURE__ */ o(function() {
      if (typeof Symbol != "function" || typeof Object.getOwnPropertySymbols != "function")
        return false;
      if (typeof Symbol.iterator == "symbol")
        return true;
      var n = {}, i = Symbol("test"), s = Object(i);
      if (typeof i == "string" || Object.prototype.toString.call(i) !== "[object Symbol]" || Object.prototype.toString.call(s) !== "[object Symbol]")
        return false;
      var a = 42;
      n[i] = a;
      for (var l in n)
        return false;
      if (typeof Object.keys == "function" && Object.keys(n).length !== 0 || typeof Object.getOwnPropertyNames == "function" && Object.getOwnPropertyNames(
        n
      ).length !== 0)
        return false;
      var u = Object.getOwnPropertySymbols(n);
      if (u.length !== 1 || u[0] !== i || !Object.prototype.propertyIsEnumerable.call(n, i))
        return false;
      if (typeof Object.getOwnPropertyDescriptor == "function") {
        var c = (
          /** @type {PropertyDescriptor} */
          Object.getOwnPropertyDescriptor(n, i)
        );
        if (c.value !== a || c.enumerable !== true)
          return false;
      }
      return true;
    }, "hasSymbols");
  }
}), SS = te({
  "node_modules/.pnpm/has-symbols@1.1.0/node_modules/has-symbols/index.js"(e, t) {
    var r7 = typeof Symbol < "u" && Symbol, n = RS();
    t.exports = /* @__PURE__ */ o(function() {
      return typeof r7 != "function" || typeof Symbol != "function" || typeof r7("foo") != "symbol" || typeof Symbol("bar") != "symbol" ? false : n();
    }, "hasNativeSymbols");
  }
}), _S = te({
  "node_modules/.pnpm/get-proto@1.0.1/node_modules/get-proto/Reflect.getPrototypeOf.js"(e, t) {
    t.exports = typeof Reflect < "u" && Reflect.getPrototypeOf || null;
  }
}), CS = te({
  "node_modules/.pnpm/get-proto@1.0.1/node_modules/get-proto/Object.getPrototypeOf.js"(e, t) {
    var r7 = TS();
    t.exports = r7.getPrototypeOf || null;
  }
}), X3 = te({
  "node_modules/.pnpm/function-bind@1.1.2/node_modules/function-bind/implementation.js"(e, t) {
    var r7 = "Function.prototype.bind called on incompatible ", n = Object.prototype.toString, i = Math.max, s = "[object Function]", a = /* @__PURE__ */ o(
      function(d, p5) {
        for (var f = [], m = 0; m < d.length; m += 1)
          f[m] = d[m];
        for (var h5 = 0; h5 < p5.length; h5 += 1)
          f[h5 + d.length] = p5[h5];
        return f;
      },
      "concatty2"
    ), l = /* @__PURE__ */ o(function(d, p5) {
      for (var f = [], m = p5 || 0, h5 = 0; m < d.length; m += 1, h5 += 1)
        f[h5] = d[m];
      return f;
    }, "slicy2"), u = /* @__PURE__ */ o(function(c, d) {
      for (var p5 = "", f = 0; f < c.length; f += 1)
        p5 += c[f], f + 1 < c.length && (p5 += d);
      return p5;
    }, "joiny");
    t.exports = /* @__PURE__ */ o(function(d) {
      var p5 = this;
      if (typeof p5 != "function" || n.apply(p5) !== s)
        throw new TypeError(r7 + p5);
      for (var f = l(arguments, 1), m, h5 = /* @__PURE__ */ o(function() {
        if (this instanceof m) {
          var E = p5.apply(
            this,
            a(f, arguments)
          );
          return Object(E) === E ? E : this;
        }
        return p5.apply(
          d,
          a(f, arguments)
        );
      }, "binder"), b = i(0, p5.length - f.length), v5 = [], g = 0; g < b; g++)
        v5[g] = "$" + g;
      if (m = Function("binder", "return function (" + u(v5, ",") + "){ return binder.apply(this,arguments); }")(h5), p5.prototype) {
        var w5 = /* @__PURE__ */ o(function() {
        }, "Empty2");
        w5.prototype = p5.prototype, m.prototype = new w5(), w5.prototype = null;
      }
      return m;
    }, "bind");
  }
}), Ha = te({
  "node_modules/.pnpm/function-bind@1.1.2/node_modules/function-bind/index.js"(e, t) {
    var r7 = X3();
    t.exports = Function.prototype.bind || r7;
  }
}), bb = te({
  "node_modules/.pnpm/call-bind-apply-helpers@1.0.2/node_modules/call-bind-apply-helpers/functionCall.js"(e, t) {
    t.exports = Function.prototype.call;
  }
}), PS = te({
  "node_modules/.pnpm/call-bind-apply-helpers@1.0.2/node_modules/call-bind-apply-helpers/functionApply.js"(e, t) {
    t.exports = Function.prototype.apply;
  }
}), J3 = te({
  "node_modules/.pnpm/call-bind-apply-helpers@1.0.2/node_modules/call-bind-apply-helpers/reflectApply.js"(e, t) {
    t.exports = typeof Reflect < "u" && Reflect && Reflect.apply;
  }
}), Q3 = te({
  "node_modules/.pnpm/call-bind-apply-helpers@1.0.2/node_modules/call-bind-apply-helpers/actualApply.js"(e, t) {
    var r7 = Ha(), n = PS(), i = bb(), s = J3();
    t.exports = s || r7.call(i, n);
  }
}), AS = te({
  "node_modules/.pnpm/call-bind-apply-helpers@1.0.2/node_modules/call-bind-apply-helpers/index.js"(e, t) {
    var r7 = Ha(), n = hb(), i = bb(), s = Q3();
    t.exports = /* @__PURE__ */ o(function(l) {
      if (l.length < 1 || typeof l[0] != "function")
        throw new n("a function is required");
      return s(r7, i, l);
    }, "callBindBasic");
  }
}), Z3 = te({
  "node_modules/.pnpm/dunder-proto@1.0.1/node_modules/dunder-proto/get.js"(e, t) {
    var r7 = AS(), n = yb(), i;
    try {
      i = /** @type {{ __proto__?: typeof Array.prototype }} */
      [].__proto__ === Array.prototype;
    } catch (u) {
      if (!u || typeof u != "object" || !("code" in u) || u.code !== "ERR_PROTO_ACCESS")
        throw u;
    }
    var s = !!i && n && n(
      Object.prototype,
      /** @type {keyof typeof Object.prototype} */
      "__proto__"
    ), a = Object, l = a.getPrototypeOf;
    t.exports = s && typeof s.get == "function" ? r7([s.get]) : typeof l == "function" ? (
      /** @type {import('./get')} */
      /* @__PURE__ */ o(function(c) {
        return l(c == null ? c : a(c));
      }, "getDunder")
    ) : false;
  }
}), eV = te({
  "node_modules/.pnpm/get-proto@1.0.1/node_modules/get-proto/index.js"(e, t) {
    var r7 = _S(), n = CS(), i = Z3();
    t.exports = r7 ? /* @__PURE__ */ o(function(a) {
      return r7(a);
    }, "getProto") : n ? /* @__PURE__ */ o(function(a) {
      if (!a || typeof a != "object" && typeof a != "function")
        throw new TypeError("getProto: not an object");
      return n(a);
    }, "getProto") : i ? /* @__PURE__ */ o(function(a) {
      return i(a);
    }, "getProto") : null;
  }
}), OS = te({
  "node_modules/.pnpm/hasown@2.0.2/node_modules/hasown/index.js"(e, t) {
    var r7 = Function.prototype.call, n = Object.prototype.hasOwnProperty, i = Ha();
    t.exports = i.call(r7, n);
  }
}), tV = te({
  "node_modules/.pnpm/get-intrinsic@1.3.0/node_modules/get-intrinsic/index.js"(e, t) {
    var r7, n = TS(), i = N3(), s = j3(), a = k3(), l = L3(), u = F3(), c = hb(), d = D3(), p5 = $3(), f = B3(), m = H3(), h5 = U3(), b = V3(), v5 = z3(), g = W3(), w5 = Function, E = /* @__PURE__ */ o(function(bt2) {
      try {
        return w5('"use strict"; return (' + bt2 + ").constructor;")();
      } catch {
      }
    }, "getEvalledConstructor"), R = yb(), S = K3(), P = /* @__PURE__ */ o(function() {
      throw new c();
    }, "throwTypeError"), _5 = R ? (function() {
      try {
        return arguments.callee, P;
      } catch {
        try {
          return R(arguments, "callee").get;
        } catch {
          return P;
        }
      }
    })() : P, C5 = SS()(), O = eV(), L = CS(), q = _S(), D = PS(), H = bb(), M7 = {}, U = typeof Uint8Array > "u" || !O ? r7 : O(Uint8Array), N = {
      __proto__: null,
      "%AggregateError%": typeof AggregateError > "u" ? r7 : AggregateError,
      "%Array%": Array,
      "%ArrayBuffer%": typeof ArrayBuffer > "u" ? r7 : ArrayBuffer,
      "%ArrayIteratorPrototype%": C5 && O ? O([][Symbol.iterator]()) : r7,
      "%AsyncFromSyncIteratorPrototype%": r7,
      "%AsyncFunction%": M7,
      "%AsyncGenerator%": M7,
      "%AsyncGeneratorFunction%": M7,
      "%AsyncIteratorPrototype%": M7,
      "%Atomics%": typeof Atomics > "u" ? r7 : Atomics,
      "%BigInt%": typeof BigInt > "u" ? r7 : BigInt,
      "%BigInt64Array%": typeof BigInt64Array > "u" ? r7 : BigInt64Array,
      "%BigUint64Array%": typeof BigUint64Array > "u" ? r7 : BigUint64Array,
      "%Boolean%": Boolean,
      "%DataView%": typeof DataView > "u" ? r7 : DataView,
      "%Date%": Date,
      "%decodeURI%": decodeURI,
      "%decodeURIComponent%": decodeURIComponent,
      "%encodeURI%": encodeURI,
      "%encodeURIComponent%": encodeURIComponent,
      "%Error%": i,
      "%eval%": eval,
      // eslint-disable-line no-eval
      "%EvalError%": s,
      "%Float16Array%": typeof Float16Array > "u" ? r7 : Float16Array,
      "%Float32Array%": typeof Float32Array > "u" ? r7 : Float32Array,
      "%Float64Array%": typeof Float64Array > "u" ? r7 : Float64Array,
      "%FinalizationRegistry%": typeof FinalizationRegistry > "u" ? r7 : FinalizationRegistry,
      "%Function%": w5,
      "%GeneratorFunction%": M7,
      "%Int8Array%": typeof Int8Array > "u" ? r7 : Int8Array,
      "%Int16Array%": typeof Int16Array > "u" ? r7 : Int16Array,
      "%Int32Array%": typeof Int32Array > "u" ? r7 : Int32Array,
      "%isFinite%": isFinite,
      "%isNaN%": isNaN,
      "%IteratorPrototype%": C5 && O ? O(O([][Symbol.iterator]())) : r7,
      "%JSON%": typeof JSON == "object" ? JSON : r7,
      "%Map%": typeof Map > "u" ? r7 : Map,
      "%MapIteratorPrototype%": typeof Map > "u" || !C5 || !O ? r7 : O((/* @__PURE__ */ new Map())[Symbol.iterator]()),
      "%Math%": Math,
      "%Number%": Number,
      "%Object%": n,
      "%Object.getOwnPropertyDescriptor%": R,
      "%parseFloat%": parseFloat,
      "%parseInt%": parseInt,
      "%Promise%": typeof Promise > "u" ? r7 : Promise,
      "%Proxy%": typeof Proxy > "u" ? r7 : Proxy,
      "%RangeError%": a,
      "%ReferenceError%": l,
      "%Reflect%": typeof Reflect > "u" ? r7 : Reflect,
      "%RegExp%": RegExp,
      "%Set%": typeof Set > "u" ? r7 : Set,
      "%SetIteratorPrototype%": typeof Set > "u" || !C5 || !O ? r7 : O((/* @__PURE__ */ new Set())[Symbol.iterator]()),
      "%SharedArrayBuffer%": typeof SharedArrayBuffer > "u" ? r7 : SharedArrayBuffer,
      "%String%": String,
      "%StringIteratorPrototype%": C5 && O ? O(""[Symbol.iterator]()) : r7,
      "%Symbol%": C5 ? Symbol : r7,
      "%SyntaxError%": u,
      "%ThrowTypeError%": _5,
      "%TypedArray%": U,
      "%TypeError%": c,
      "%Uint8Array%": typeof Uint8Array > "u" ? r7 : Uint8Array,
      "%Uint8ClampedArray%": typeof Uint8ClampedArray > "u" ? r7 : Uint8ClampedArray,
      "%Uint16Array%": typeof Uint16Array > "u" ? r7 : Uint16Array,
      "%Uint32Array%": typeof Uint32Array > "u" ? r7 : Uint32Array,
      "%URIError%": d,
      "%WeakMap%": typeof WeakMap > "u" ? r7 : WeakMap,
      "%WeakRef%": typeof WeakRef > "u" ? r7 : WeakRef,
      "%WeakSet%": typeof WeakSet > "u" ? r7 : WeakSet,
      "%Function.prototype.call%": H,
      "%Function.prototype.apply%": D,
      "%Object.defineProperty%": S,
      "%Object.getPrototypeOf%": L,
      "%Math.abs%": p5,
      "%Math.floor%": f,
      "%Math.max%": m,
      "%Math.min%": h5,
      "%Math.pow%": b,
      "%Math.round%": v5,
      "%Math.sign%": g,
      "%Reflect.getPrototypeOf%": q
    };
    if (O)
      try {
        null.error;
      } catch (bt2) {
        W = O(O(bt2)), N["%Error.prototype%"] = W;
      }
    var W, Y = /* @__PURE__ */ o(function bt2(we) {
      var Ze;
      if (we === "%AsyncFunction%")
        Ze = E("async function () {}");
      else if (we === "%GeneratorFunction%")
        Ze = E("function* () {}");
      else if (we === "%AsyncGeneratorFunction%")
        Ze = E("async function* () {}");
      else if (we === "%AsyncGenerator%") {
        var je2 = bt2("%AsyncGeneratorFunction%");
        je2 && (Ze = je2.prototype);
      } else if (we === "%AsyncIteratorPrototype%") {
        var it2 = bt2("%AsyncGenerator%");
        it2 && O && (Ze = O(it2.prototype));
      }
      return N[we] = Ze, Ze;
    }, "doEval2"), ae = {
      __proto__: null,
      "%ArrayBufferPrototype%": ["ArrayBuffer", "prototype"],
      "%ArrayPrototype%": ["Array", "prototype"],
      "%ArrayProto_entries%": ["Array", "prototype", "entries"],
      "%ArrayProto_forEach%": ["Array", "prototype", "forEach"],
      "%ArrayProto_keys%": ["Array", "prototype", "keys"],
      "%ArrayProto_values%": ["Array", "prototype", "values"],
      "%AsyncFunctionPrototype%": ["AsyncFunction", "prototype"],
      "%AsyncGenerator%": ["AsyncGeneratorFunction", "prototype"],
      "%AsyncGeneratorPrototype%": ["AsyncGeneratorFunction", "prototype", "prototype"],
      "%BooleanPrototype%": ["Boolean", "prototype"],
      "%DataViewPrototype%": ["DataView", "prototype"],
      "%DatePrototype%": ["Date", "prototype"],
      "%ErrorPrototype%": ["Error", "prototype"],
      "%EvalErrorPrototype%": ["EvalError", "prototype"],
      "%Float32ArrayPrototype%": ["Float32Array", "prototype"],
      "%Float64ArrayPrototype%": ["Float64Array", "prototype"],
      "%FunctionPrototype%": ["Function", "prototype"],
      "%Generator%": ["GeneratorFunction", "prototype"],
      "%GeneratorPrototype%": ["GeneratorFunction", "prototype", "prototype"],
      "%Int8ArrayPrototype%": ["Int8Array", "prototype"],
      "%Int16ArrayPrototype%": ["Int16Array", "prototype"],
      "%Int32ArrayPrototype%": ["Int32Array", "prototype"],
      "%JSONParse%": ["JSON", "parse"],
      "%JSONStringify%": ["JSON", "stringify"],
      "%MapPrototype%": ["Map", "prototype"],
      "%NumberPrototype%": ["Number", "prototype"],
      "%ObjectPrototype%": ["Object", "prototype"],
      "%ObjProto_toString%": ["Object", "prototype", "toString"],
      "%ObjProto_valueOf%": ["Object", "prototype", "valueOf"],
      "%PromisePrototype%": ["Promise", "prototype"],
      "%PromiseProto_then%": ["Promise", "prototype", "then"],
      "%Promise_all%": ["Promise", "all"],
      "%Promise_reject%": ["Promise", "reject"],
      "%Promise_resolve%": ["Promise", "resolve"],
      "%RangeErrorPrototype%": ["RangeError", "prototype"],
      "%ReferenceErrorPrototype%": ["ReferenceError", "prototype"],
      "%RegExpPrototype%": ["RegExp", "prototype"],
      "%SetPrototype%": ["Set", "prototype"],
      "%SharedArrayBufferPrototype%": ["SharedArrayBuffer", "prototype"],
      "%StringPrototype%": ["String", "prototype"],
      "%SymbolPrototype%": ["Symbol", "prototype"],
      "%SyntaxErrorPrototype%": ["SyntaxError", "prototype"],
      "%TypedArrayPrototype%": ["TypedArray", "prototype"],
      "%TypeErrorPrototype%": ["TypeError", "prototype"],
      "%Uint8ArrayPrototype%": ["Uint8Array", "prototype"],
      "%Uint8ClampedArrayPrototype%": ["Uint8ClampedArray", "prototype"],
      "%Uint16ArrayPrototype%": ["Uint16Array", "prototype"],
      "%Uint32ArrayPrototype%": ["Uint32Array", "prototype"],
      "%URIErrorPrototype%": ["URIError", "prototype"],
      "%WeakMapPrototype%": ["WeakMap", "prototype"],
      "%WeakSetPrototype%": ["WeakSet", "prototype"]
    }, pe2 = Ha(), Oe = OS(), F = pe2.call(H, Array.prototype.concat), j = pe2.call(D, Array.prototype.splice), K7 = pe2.call(H, String.prototype.replace), G = pe2.call(H, String.prototype.slice), Z = pe2.call(H, RegExp.prototype.exec), ve = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g, qe2 = /\\(\\)?/g, Qe = /* @__PURE__ */ o(function(we) {
      var Ze = G(we, 0, 1), je2 = G(we, -1);
      if (Ze === "%" && je2 !== "%")
        throw new u("invalid intrinsic syntax, expected closing `%`");
      if (je2 === "%" && Ze !== "%")
        throw new u("invalid intrinsic syntax, expected opening `%`");
      var it2 = [];
      return K7(we, ve, function(er, ao, dt2, Ma) {
        it2[it2.length] = dt2 ? K7(Ma, qe2, "$1") : ao || er;
      }), it2;
    }, "stringToPath3"), vi = /* @__PURE__ */ o(function(we, Ze) {
      var je2 = we, it2;
      if (Oe(ae, je2) && (it2 = ae[je2], je2 = "%" + it2[0] + "%"), Oe(N, je2)) {
        var er = N[je2];
        if (er === M7 && (er = Y(je2)), typeof er > "u" && !Ze)
          throw new c("intrinsic " + we + " exists, but is not available. Please file an issue!");
        return {
          alias: it2,
          name: je2,
          value: er
        };
      }
      throw new u("intrinsic " + we + " does not exist!");
    }, "getBaseIntrinsic2");
    t.exports = /* @__PURE__ */ o(function(we, Ze) {
      if (typeof we != "string" || we.length === 0)
        throw new c("intrinsic name must be a non-empty string");
      if (arguments.length > 1 && typeof Ze != "boolean")
        throw new c('"allowMissing" argument must be a boolean');
      if (Z(/^%?[^%]*%?$/, we) === null)
        throw new u("`%` may not be present anywhere but at the beginning and end of the intrinsic name");
      var je2 = Qe(we), it2 = je2.length > 0 ? je2[0] : "", er = vi("%" + it2 + "%", Ze), ao = er.name, dt2 = er.value, Ma = false, $y = er.alias;
      $y && (it2 = $y[0], j(je2, F([0, 1], $y)));
      for (var V = 1, Ei = true; V < je2.length; V += 1) {
        var dr2 = je2[V], Na = G(dr2, 0, 1), ja = G(dr2, -1);
        if ((Na === '"' || Na === "'" || Na === "`" || ja === '"' || ja === "'" || ja === "`") && Na !== ja)
          throw new u("property names with quotes must have matching quotes");
        if ((dr2 === "constructor" || !Ei) && (Ma = true), it2 += "." + dr2, ao = "%" + it2 + "%", Oe(N, ao))
          dt2 = N[ao];
        else if (dt2 != null) {
          if (!(dr2 in dt2)) {
            if (!Ze)
              throw new c("base intrinsic for " + we + " exists, but the property is not available.");
            return;
          }
          if (R && V + 1 >= je2.length) {
            var ka = R(dt2, dr2);
            Ei = !!ka, Ei && "get" in ka && !("originalValue" in ka.get) ? dt2 = ka.get : dt2 = dt2[dr2];
          } else
            Ei = Oe(dt2, dr2), dt2 = dt2[dr2];
          Ei && !Ma && (N[ao] = dt2);
        }
      }
      return dt2;
    }, "GetIntrinsic");
  }
}), gb = te({
  "node_modules/.pnpm/call-bound@1.0.4/node_modules/call-bound/index.js"(e, t) {
    var r7 = tV(), n = AS(), i = n([r7("%String.prototype.indexOf%")]);
    t.exports = /* @__PURE__ */ o(function(a, l) {
      var u = (
        /** @type {(this: unknown, ...args: unknown[]) => unknown} */
        r7(a, !!l)
      );
      return typeof u == "function" && i(a, ".prototype.") > -1 ? n(
        /** @type {const} */
        [u]
      ) : u;
    }, "callBoundIntrinsic");
  }
}), rV = te({
  "node_modules/.pnpm/has-tostringtag@1.0.2/node_modules/has-tostringtag/shams.js"(e, t) {
    var r7 = RS();
    t.exports = /* @__PURE__ */ o(function() {
      return r7() && !!Symbol.toStringTag;
    }, "hasToStringTagShams");
  }
}), qS = te({
  "node_modules/.pnpm/is-regex@1.2.1/node_modules/is-regex/index.js"(e, t) {
    var r7 = gb(), n = rV()(), i = OS(), s = yb(), a;
    n ? (l = r7("RegExp.prototype.exec"), u = {}, c = /* @__PURE__ */ o(function() {
      throw u;
    }, "throwRegexMarker"), d = {
      toString: c,
      valueOf: c
    }, typeof Symbol.toPrimitive == "symbol" && (d[Symbol.toPrimitive] = c), a = /* @__PURE__ */ o(function(h5) {
      if (!h5 || typeof h5 != "object")
        return false;
      var b = (
        /** @type {NonNullable<typeof gOPD>} */
        s(
          /** @type {{ lastIndex?: unknown }} */
          h5,
          "lastIndex"
        )
      ), v5 = b && i(b, "value");
      if (!v5)
        return false;
      try {
        l(
          h5,
          /** @type {string} */
          /** @type {unknown} */
          d
        );
      } catch (g) {
        return g === u;
      }
    }, "isRegex")) : (p5 = r7("Object.prototype.toString"), f = "[object RegExp]", a = /* @__PURE__ */ o(function(h5) {
      return !h5 || typeof h5 != "object" && typeof h5 != "function" ? false : p5(h5) === f;
    }, "isRegex"));
    var l, u, c, d, p5, f;
    t.exports = a;
  }
}), nV = te({
  "node_modules/.pnpm/is-function@1.0.2/node_modules/is-function/index.js"(e, t) {
    t.exports = n;
    var r7 = Object.prototype.toString;
    function n(i) {
      if (!i)
        return false;
      var s = r7.call(i);
      return s === "[object Function]" || typeof i == "function" && s !== "[object RegExp]" || typeof window < "u" && // IE8 and below
      (i === window.setTimeout || i === window.alert || i === window.confirm || i === window.prompt);
    }
    o(n, "isFunction3");
  }
}), oV = te({
  "node_modules/.pnpm/safe-regex-test@1.1.0/node_modules/safe-regex-test/index.js"(e, t) {
    var r7 = gb(), n = qS(), i = r7("RegExp.prototype.exec"), s = hb();
    t.exports = /* @__PURE__ */ o(function(l) {
      if (!n(l))
        throw new s("`regex` must be a RegExp");
      return /* @__PURE__ */ o(function(c) {
        return i(l, c) !== null;
      }, "test");
    }, "regexTester");
  }
}), iV = te({
  "node_modules/.pnpm/is-symbol@1.1.1/node_modules/is-symbol/index.js"(e, t) {
    var r7 = gb(), n = r7("Object.prototype.toString"), i = SS()(), s = oV();
    i ? (a = r7("Symbol.prototype.toString"), l = s(/^Symbol\(.*\)$/), u = /* @__PURE__ */ o(function(d) {
      return typeof d.valueOf() != "symbol" ? false : l(a(d));
    }, "isRealSymbolObject"), t.exports = /* @__PURE__ */ o(function(d) {
      if (typeof d == "symbol")
        return true;
      if (!d || typeof d != "object" || n(d) !== "[object Symbol]")
        return false;
      try {
        return u(d);
      } catch {
        return false;
      }
    }, "isSymbol3")) : t.exports = /* @__PURE__ */ o(function(d) {
      return false;
    }, "isSymbol3");
    var a, l, u;
  }
}), sV = Ba(qS()), aV = Ba(nV()), lV = Ba(iV());
function uV(e) {
  return e != null && typeof e == "object" && Array.isArray(e) === false;
}
o(uV, "isObject");
var cV = typeof global == "object" && global && global.Object === Object && global, dV = cV, pV = typeof self == "object" && self && self.Object === Object && self, fV = dV || pV || Function("return this")(), vb = fV, mV = vb.Symbol, mo = mV, IS = Object.prototype, hV = IS.hasOwnProperty, yV = IS.toString, Oi = mo ? mo.toStringTag : void 0;
function bV(e) {
  var t = hV.call(e, Oi), r7 = e[Oi];
  try {
    e[Oi] = void 0;
    var n = true;
  } catch {
  }
  var i = yV.call(e);
  return n && (t ? e[Oi] = r7 : delete e[Oi]), i;
}
o(bV, "getRawTag");
var gV = bV, vV = Object.prototype, EV = vV.toString;
function xV(e) {
  return EV.call(e);
}
o(xV, "objectToString");
var wV = xV, TV = "[object Null]", RV = "[object Undefined]", gS = mo ? mo.toStringTag : void 0;
function SV(e) {
  return e == null ? e === void 0 ? RV : TV : gS && gS in Object(e) ? gV(e) : wV(e);
}
o(SV, "baseGetTag");
var MS = SV;
function _V(e) {
  return e != null && typeof e == "object";
}
o(_V, "isObjectLike");
var CV = _V, PV = "[object Symbol]";
function AV(e) {
  return typeof e == "symbol" || CV(e) && MS(e) == PV;
}
o(AV, "isSymbol");
var Eb = AV;
function OV(e, t) {
  for (var r7 = -1, n = e == null ? 0 : e.length, i = Array(n); ++r7 < n; )
    i[r7] = t(e[r7], r7, e);
  return i;
}
o(OV, "arrayMap");
var qV = OV, IV = Array.isArray, xb = IV, vS = mo ? mo.prototype : void 0, ES = vS ? vS.toString : void 0;
function NS(e) {
  if (typeof e == "string")
    return e;
  if (xb(e))
    return qV(e, NS) + "";
  if (Eb(e))
    return ES ? ES.call(e) : "";
  var t = e + "";
  return t == "0" && 1 / e == -Infinity ? "-0" : t;
}
o(NS, "baseToString");
var NV = NS;
function jV(e) {
  var t = typeof e;
  return e != null && (t == "object" || t == "function");
}
o(jV, "isObject2");
var jS = jV, kV = "[object AsyncFunction]", LV = "[object Function]", FV = "[object GeneratorFunction]", DV = "[object Proxy]";
function $V(e) {
  if (!jS(e))
    return false;
  var t = MS(e);
  return t == LV || t == FV || t == kV || t == DV;
}
o($V, "isFunction");
var BV = $V, HV = vb["__core-js_shared__"], mb = HV, xS = (function() {
  var e = /[^.]+$/.exec(mb && mb.keys && mb.keys.IE_PROTO || "");
  return e ? "Symbol(src)_1." + e : "";
})();
function UV(e) {
  return !!xS && xS in e;
}
o(UV, "isMasked");
var VV = UV, zV = Function.prototype, GV = zV.toString;
function WV(e) {
  if (e != null) {
    try {
      return GV.call(e);
    } catch {
    }
    try {
      return e + "";
    } catch {
    }
  }
  return "";
}
o(WV, "toSource");
var YV = WV, KV = /[\\^$.*+?()[\]{}|]/g, XV = /^\[object .+?Constructor\]$/, JV = Function.prototype, QV = Object.prototype, ZV = JV.toString, ez = QV.hasOwnProperty, tz = RegExp(
  "^" + ZV.call(ez).replace(KV, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
);
function rz(e) {
  if (!jS(e) || VV(e))
    return false;
  var t = BV(e) ? tz : XV;
  return t.test(YV(e));
}
o(rz, "baseIsNative");
var nz = rz;
function oz(e, t) {
  return e?.[t];
}
o(oz, "getValue");
var iz = oz;
function sz(e, t) {
  var r7 = iz(e, t);
  return nz(r7) ? r7 : void 0;
}
o(sz, "getNative");
var kS = sz;
function az(e, t) {
  return e === t || e !== e && t !== t;
}
o(az, "eq");
var lz = az, uz = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, cz = /^\w*$/;
function dz(e, t) {
  if (xb(e))
    return false;
  var r7 = typeof e;
  return r7 == "number" || r7 == "symbol" || r7 == "boolean" || e == null || Eb(e) ? true : cz.test(e) || !uz.test(e) || t != null && e in Object(
    t
  );
}
o(dz, "isKey");
var pz = dz, fz = kS(Object, "create"), qi = fz;
function mz() {
  this.__data__ = qi ? qi(null) : {}, this.size = 0;
}
o(mz, "hashClear");
var hz = mz;
function yz(e) {
  var t = this.has(e) && delete this.__data__[e];
  return this.size -= t ? 1 : 0, t;
}
o(yz, "hashDelete");
var bz = yz, gz = "__lodash_hash_undefined__", vz = Object.prototype, Ez = vz.hasOwnProperty;
function xz(e) {
  var t = this.__data__;
  if (qi) {
    var r7 = t[e];
    return r7 === gz ? void 0 : r7;
  }
  return Ez.call(t, e) ? t[e] : void 0;
}
o(xz, "hashGet");
var wz = xz, Tz = Object.prototype, Rz = Tz.hasOwnProperty;
function Sz(e) {
  var t = this.__data__;
  return qi ? t[e] !== void 0 : Rz.call(t, e);
}
o(Sz, "hashHas");
var _z = Sz, Cz = "__lodash_hash_undefined__";
function Pz(e, t) {
  var r7 = this.__data__;
  return this.size += this.has(e) ? 0 : 1, r7[e] = qi && t === void 0 ? Cz : t, this;
}
o(Pz, "hashSet");
var Az = Pz;
function ho(e) {
  var t = -1, r7 = e == null ? 0 : e.length;
  for (this.clear(); ++t < r7; ) {
    var n = e[t];
    this.set(n[0], n[1]);
  }
}
o(ho, "Hash");
ho.prototype.clear = hz;
ho.prototype.delete = bz;
ho.prototype.get = wz;
ho.prototype.has = _z;
ho.prototype.set = Az;
var wS = ho;
function Oz() {
  this.__data__ = [], this.size = 0;
}
o(Oz, "listCacheClear");
var qz = Oz;
function Iz(e, t) {
  for (var r7 = e.length; r7--; )
    if (lz(e[r7][0], t))
      return r7;
  return -1;
}
o(Iz, "assocIndexOf");
var Ua = Iz, Mz = Array.prototype, Nz = Mz.splice;
function jz(e) {
  var t = this.__data__, r7 = Ua(t, e);
  if (r7 < 0)
    return false;
  var n = t.length - 1;
  return r7 == n ? t.pop() : Nz.call(t, r7, 1), --this.size, true;
}
o(jz, "listCacheDelete");
var kz = jz;
function Lz(e) {
  var t = this.__data__, r7 = Ua(t, e);
  return r7 < 0 ? void 0 : t[r7][1];
}
o(Lz, "listCacheGet");
var Fz = Lz;
function Dz(e) {
  return Ua(this.__data__, e) > -1;
}
o(Dz, "listCacheHas");
var $z = Dz;
function Bz(e, t) {
  var r7 = this.__data__, n = Ua(r7, e);
  return n < 0 ? (++this.size, r7.push([e, t])) : r7[n][1] = t, this;
}
o(Bz, "listCacheSet");
var Hz = Bz;
function yo(e) {
  var t = -1, r7 = e == null ? 0 : e.length;
  for (this.clear(); ++t < r7; ) {
    var n = e[t];
    this.set(n[0], n[1]);
  }
}
o(yo, "ListCache");
yo.prototype.clear = qz;
yo.prototype.delete = kz;
yo.prototype.get = Fz;
yo.prototype.has = $z;
yo.prototype.set = Hz;
var Uz = yo, Vz = kS(vb, "Map"), zz = Vz;
function Gz() {
  this.size = 0, this.__data__ = {
    hash: new wS(),
    map: new (zz || Uz)(),
    string: new wS()
  };
}
o(Gz, "mapCacheClear");
var Wz = Gz;
function Yz(e) {
  var t = typeof e;
  return t == "string" || t == "number" || t == "symbol" || t == "boolean" ? e !== "__proto__" : e === null;
}
o(Yz, "isKeyable");
var Kz = Yz;
function Xz(e, t) {
  var r7 = e.__data__;
  return Kz(t) ? r7[typeof t == "string" ? "string" : "hash"] : r7.map;
}
o(Xz, "getMapData");
var Va = Xz;
function Jz(e) {
  var t = Va(this, e).delete(e);
  return this.size -= t ? 1 : 0, t;
}
o(Jz, "mapCacheDelete");
var Qz = Jz;
function Zz(e) {
  return Va(this, e).get(e);
}
o(Zz, "mapCacheGet");
var eG = Zz;
function tG(e) {
  return Va(this, e).has(e);
}
o(tG, "mapCacheHas");
var rG = tG;
function nG(e, t) {
  var r7 = Va(this, e), n = r7.size;
  return r7.set(e, t), this.size += r7.size == n ? 0 : 1, this;
}
o(nG, "mapCacheSet");
var oG = nG;
function bo(e) {
  var t = -1, r7 = e == null ? 0 : e.length;
  for (this.clear(); ++t < r7; ) {
    var n = e[t];
    this.set(n[0], n[1]);
  }
}
o(bo, "MapCache");
bo.prototype.clear = Wz;
bo.prototype.delete = Qz;
bo.prototype.get = eG;
bo.prototype.has = rG;
bo.prototype.set = oG;
var LS = bo, iG = "Expected a function";
function wb(e, t) {
  if (typeof e != "function" || t != null && typeof t != "function")
    throw new TypeError(iG);
  var r7 = /* @__PURE__ */ o(function() {
    var n = arguments, i = t ? t.apply(this, n) : n[0], s = r7.cache;
    if (s.has(i))
      return s.get(i);
    var a = e.apply(this, n);
    return r7.cache = s.set(i, a) || s, a;
  }, "memoized");
  return r7.cache = new (wb.Cache || LS)(), r7;
}
o(wb, "memoize");
wb.Cache = LS;
var sG = wb, aG = 500;
function lG(e) {
  var t = sG(e, function(n) {
    return r7.size === aG && r7.clear(), n;
  }), r7 = t.cache;
  return t;
}
o(lG, "memoizeCapped");
var uG = lG, cG = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g, dG = /\\(\\)?/g, pG = uG(
  function(e) {
    var t = [];
    return e.charCodeAt(0) === 46 && t.push(""), e.replace(cG, function(r7, n, i, s) {
      t.push(i ? s.replace(dG, "$1") : n || r7);
    }), t;
  }
), fG = pG;
function mG(e) {
  return e == null ? "" : NV(e);
}
o(mG, "toString");
var hG = mG;
function yG(e, t) {
  return xb(e) ? e : pz(e, t) ? [e] : fG(hG(e));
}
o(yG, "castPath");
var bG = yG;
function vG(e) {
  if (typeof e == "string" || Eb(e))
    return e;
  var t = e + "";
  return t == "0" && 1 / e == -Infinity ? "-0" : t;
}
o(vG, "toKey");
var EG = vG;
function xG(e, t) {
  t = bG(t, e);
  for (var r7 = 0, n = t.length; e != null && r7 < n; )
    e = e[EG(t[r7++])];
  return r7 && r7 == n ? e : void 0;
}
o(xG, "baseGet");
var wG = xG;
function TG(e, t, r7) {
  var n = e == null ? void 0 : wG(e, t);
  return n === void 0 ? r7 : n;
}
o(TG, "get");
var RG = TG, Tb = uV, SG = /^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(\.\d{3})?Z$/, Ii = /* @__PURE__ */ o(
  (e) => e.match(/^[\[\{\"\}].*[\]\}\"]$/),
  "isJSON"
);
function FS(e) {
  if (!Tb(e))
    return e;
  let t = e, r7 = false;
  return typeof Event < "u" && e instanceof Event && (t = bS(t), r7 = true), t = Object.keys(t).reduce((n, i) => {
    try {
      t[i] && t[i].toJSON, n[i] = t[i];
    } catch {
      r7 = true;
    }
    return n;
  }, {}), r7 ? t : e;
}
o(FS, "convertUnconventionalData");
var _G = /* @__PURE__ */ o(function(t) {
  let r7, n, i, s;
  return /* @__PURE__ */ o(function(l, u) {
    try {
      if (l === "")
        return s = [], r7 = /* @__PURE__ */ new Map([[u, "[]"]]), n = /* @__PURE__ */ new Map(), i = [], u;
      let c = n.get(this) || this;
      for (; i.length && c !== i[0]; )
        i.shift(), s.pop();
      if (typeof u == "boolean")
        return u;
      if (u === void 0)
        return t.allowUndefined ? "_undefined_" : void 0;
      if (u === null)
        return null;
      if (typeof u == "number")
        return u === Number.NEGATIVE_INFINITY ? "_-Infinity_" : u === Number.POSITIVE_INFINITY ? "_Infinity_" : Number.isNaN(u) ? "_NaN_" : u;
      if (typeof u == "bigint")
        return `_bigint_${u.toString()}`;
      if (typeof u == "string")
        return SG.test(u) ? t.allowDate ? `_date_${u}` : void 0 : u;
      if ((0, sV.default)(u))
        return t.allowRegExp ? `_regexp_${u.flags}|${u.source}` : void 0;
      if ((0, aV.default)(u))
        return;
      if ((0, lV.default)(u)) {
        if (!t.allowSymbol)
          return;
        let p5 = Symbol.keyFor(u);
        return p5 !== void 0 ? `_gsymbol_${p5}` : `_symbol_${u.toString().slice(7, -1)}`;
      }
      if (i.length >= t.maxDepth)
        return Array.isArray(u) ? `[Array(${u.length})]` : "[Object]";
      if (u === this)
        return `_duplicate_${JSON.stringify(s)}`;
      if (u instanceof Error && t.allowError)
        return {
          __isConvertedError__: true,
          errorProperties: {
            // @ts-expect-error cause is not defined in the current tsconfig target(es2020)
            ...u.cause ? { cause: u.cause } : {},
            ...u,
            name: u.name,
            message: u.message,
            stack: u.stack,
            "_constructor-name_": u.constructor.name
          }
        };
      if (u?.constructor?.name && u.constructor.name !== "Object" && !Array.isArray(u)) {
        let p5 = r7.get(u);
        if (!p5) {
          let f = {
            __isClassInstance__: true,
            __className__: u.constructor.name,
            ...Object.getOwnPropertyNames(u).reduce(
              (m, h5) => {
                try {
                  m[h5] = u[h5];
                } catch {
                }
                return m;
              },
              {}
            )
          };
          return s.push(l), i.unshift(f), r7.set(u, JSON.stringify(s)), u !== f && n.set(u, f), f;
        }
        return `_duplicate_${p5}`;
      }
      let d = r7.get(u);
      if (!d) {
        let p5 = Array.isArray(u) ? u : FS(u);
        return s.push(l), i.unshift(p5), r7.set(u, JSON.stringify(s)), u !== p5 && n.set(u, p5), p5;
      }
      return `_duplicate_${d}`;
    } catch {
      return;
    }
  }, "replace");
}, "replacer2"), CG = /* @__PURE__ */ o(function(t) {
  let r7 = [], n;
  return /* @__PURE__ */ o(function(s, a) {
    if (s === "" && (n = a, r7.forEach(({ target: l, container: u, replacement: c }) => {
      let d = Ii(c) ? JSON.parse(c) : c.split(".");
      d.length === 0 ? u[l] = n : u[l] = RG(n, d);
    })), s === "_constructor-name_")
      return a;
    if (Tb(a) && a.__isConvertedError__) {
      let { message: l, ...u } = a.errorProperties, c = new Error(l);
      return Object.assign(c, u), c;
    }
    if (typeof a == "string" && a.startsWith("_regexp_") && t.allowRegExp) {
      let [, l, u] = a.match(/_regexp_([^|]*)\|(.*)/) || [];
      return new RegExp(u, l);
    }
    return typeof a == "string" && a.startsWith("_date_") && t.allowDate ? new Date(a.replace("_date_", "")) : typeof a == "string" && a.startsWith(
      "_duplicate_"
    ) ? (r7.push({ target: s, container: this, replacement: a.replace(/^_duplicate_/, "") }), null) : typeof a == "string" && a.startsWith("_symbol_") && t.allowSymbol ? Symbol(a.replace("_symbol_", "")) : typeof a == "string" && a.startsWith("_gsymbol_") && t.allowSymbol ? Symbol.for(a.replace("_gsymbol_", "")) : typeof a == "string" && a === "_-Infinity_" ? Number.NEGATIVE_INFINITY : typeof a == "string" && a === "_Infinity_" ? Number.POSITIVE_INFINITY : typeof a == "string" && a === "_NaN_" ? Number.NaN : typeof a == "string" && a.startsWith(
      "_bigint_"
    ) && typeof BigInt == "function" ? BigInt(a.replace("_bigint_", "")) : a;
  }, "revive");
}, "reviver2"), DS = {
  maxDepth: 10,
  space: void 0,
  allowRegExp: true,
  allowDate: true,
  allowError: true,
  allowUndefined: true,
  allowSymbol: true
}, za = /* @__PURE__ */ o((e, t = {}) => {
  let r7 = { ...DS, ...t };
  return JSON.stringify(FS(e), _G(r7), t.space);
}, "stringify"), PG = /* @__PURE__ */ o(() => {
  let e = /* @__PURE__ */ new Map();
  return /* @__PURE__ */ o(function t(r7) {
    Tb(r7) && Object.entries(r7).forEach(([n, i]) => {
      i === "_undefined_" ? r7[n] = void 0 : e.get(i) || (e.set(i, true), t(i));
    }), Array.isArray(r7) && r7.forEach((n, i) => {
      n === "_undefined_" ? (e.set(n, true), r7[i] = void 0) : e.get(n) || (e.set(n, true), t(n));
    });
  }, "mutateUndefined");
}, "mutator"), Ga = /* @__PURE__ */ o((e, t = {}) => {
  let r7 = { ...DS, ...t }, n = JSON.parse(e, CG(r7));
  return PG()(n), n;
}, "parse");
var Rb = "Invariant failed";
function gt$1(e, t) {
  if (!e) {
    throw new Error(Rb);
  }
}
o(gt$1, "invariant");
var $S = /* @__PURE__ */ o((e) => {
  let t = Array.from(
    document.querySelectorAll("iframe[data-is-storybook]")
  ), [r7, ...n] = t.filter((s) => {
    try {
      return s.contentWindow?.location.origin === e.source.location.origin && s.contentWindow?.location.pathname === e.source.location.pathname;
    } catch {
    }
    try {
      return s.contentWindow === e.source;
    } catch {
    }
    let a = s.getAttribute("src"), l;
    try {
      if (!a)
        return false;
      ({ origin: l } = new URL(a, document.location.toString()));
    } catch {
      return false;
    }
    return l === e.origin;
  }), i = r7?.getAttribute("src");
  if (i && n.length === 0) {
    let { protocol: s, host: a, pathname: l } = new URL(i, document.location.toString());
    return `${s}//${a}${l}`;
  }
  return n.length > 0 && se.error("found multiple candidates for event source"), null;
}, "getEventSourceUrl");
var { document: Sb, location: _b } = k, BS = "storybook-channel", OG = { maxDepth: 25 }, Cb = class Cb2 {
  constructor(t) {
    this.config = t;
    this.connected = false;
    if (this.buffer = [], typeof k?.addEventListener == "function" && k.addEventListener("message", this.handleEvent.bind(this), false), t.page !== "manager" && t.page !== "preview")
      throw new Error(`postmsg-channel: "config.page" cannot be "${t.page}"`);
  }
  setHandler(t) {
    this.handler = (...r7) => {
      t.apply(this, r7), !this.connected && this.getLocalFrame().length && (this.flush(), this.connected = true);
    };
  }
  /**
   * Sends `event` to the associated window. If the window does not yet exist the event will be
   * stored in a buffer and sent when the window exists.
   *
   * @param event
   */
  send(t, r7) {
    let {
      target: n,
      // telejson options
      allowRegExp: i,
      allowSymbol: s,
      allowDate: a,
      allowError: l,
      allowUndefined: u,
      maxDepth: c,
      space: d
    } = r7 || {}, p5 = Object.fromEntries(
      Object.entries({
        allowRegExp: i,
        allowSymbol: s,
        allowDate: a,
        allowError: l,
        allowUndefined: u,
        maxDepth: c,
        space: d
      }).filter(([v5, g]) => typeof g < "u")
    ), f = {
      ...OG,
      ...k.CHANNEL_OPTIONS || {},
      ...p5
    }, m = this.getFrames(n), h5 = new URLSearchParams(_b?.search || ""), b = za(
      {
        key: BS,
        event: t,
        refId: h5.get("refId")
      },
      f
    );
    return m.length ? (this.buffer.length && this.flush(), m.forEach((v5) => {
      try {
        v5.postMessage(b, "*");
      } catch {
        se.error("sending over postmessage fail");
      }
    }), Promise.resolve(null)) : new Promise((v5, g) => {
      this.buffer.push({ event: t, resolve: v5, reject: g });
    });
  }
  flush() {
    let { buffer: t } = this;
    this.buffer = [], t.forEach((r7) => {
      this.send(r7.event).then(r7.resolve).catch(r7.reject);
    });
  }
  getFrames(t) {
    if (this.config.page === "manager") {
      let n = Array.from(
        Sb.querySelectorAll("iframe[data-is-storybook][data-is-loaded]")
      ).flatMap((i) => {
        try {
          return i.contentWindow && i.dataset.isStorybook !== void 0 && i.id === t ? [i.contentWindow] : [];
        } catch {
          return [];
        }
      });
      return n?.length ? n : this.getCurrentFrames();
    }
    return k && k.parent && k.parent !== k.self ? [k.parent] : [];
  }
  getCurrentFrames() {
    return this.config.page === "manager" ? Array.from(
      Sb.querySelectorAll('[data-is-storybook="true"]')
    ).flatMap((r7) => r7.contentWindow ? [r7.contentWindow] : []) : k && k.parent ? [k.parent] : [];
  }
  getLocalFrame() {
    return this.config.page === "manager" ? Array.from(
      Sb.querySelectorAll("#storybook-preview-iframe")
    ).flatMap((r7) => r7.contentWindow ? [r7.contentWindow] : []) : k && k.parent ? [k.parent] : [];
  }
  handleEvent(t) {
    try {
      let { data: r7 } = t, { key: n, event: i, refId: s } = typeof r7 == "string" && Ii(r7) ? Ga(r7, k.CHANNEL_OPTIONS || {}) : r7;
      if (n === BS) {
        let a = this.config.page === "manager" ? '<span style="color: #37D5D3; background: black"> manager </span>' : '<span style="color: #1EA7FD; background: black"> preview </span>', l = Object.values(co).includes(i.type) ? `<span style="color: #FF4785">${i.type}</span>` : `<span style="color: #FFAE00">${i.type}</span>`;
        if (s && (i.refId = s), i.source = this.config.page === "preview" ? t.origin : $S(t), !i.source) {
          pt$1.error(
            `${a} received ${l} but was unable to determine the source of the event`
          );
          return;
        }
        let u = `${a} received ${l} (${r7.length})`;
        pt$1.debug(
          _b.origin !== i.source ? u : `${u} <span style="color: gray">(on ${_b.origin} from ${i.source})</span>`,
          ...i.args
        ), gt$1(this.handler, "ChannelHandler should be set"), this.handler(i);
      }
    } catch (r7) {
      se.error(r7);
    }
  }
};
o(Cb, "PostMessageTransport");
var go = Cb;
var { WebSocket: qG } = k, Pb = 15e3, Ab = 5e3, Ob = class Ob2 {
  constructor({ url: t, onError: r7, page: n }) {
    this.buffer = [];
    this.isReady = false;
    this.isClosed = false;
    this.pingTimeout = 0;
    this.socket = new qG(t), this.socket.onopen = () => {
      this.isReady = true, this.heartbeat(), this.flush();
    }, this.socket.onmessage = ({ data: i }) => {
      let s = typeof i == "string" && Ii(i) ? Ga(i) : i;
      gt$1(this.handler), this.handler(s), s.type === "ping" && (this.heartbeat(), this.send({ type: "pong" }));
    }, this.socket.onerror = (i) => {
      r7 && r7(i);
    }, this.socket.onclose = (i) => {
      gt$1(this.handler), this.handler({
        type: Hy,
        args: [{ reason: i.reason, code: i.code }],
        from: n || "preview"
      }), this.isClosed = true, clearTimeout(this.pingTimeout);
    };
  }
  heartbeat() {
    clearTimeout(this.pingTimeout), this.pingTimeout = setTimeout(() => {
      this.socket.close(3008, "timeout");
    }, Pb + Ab);
  }
  setHandler(t) {
    this.handler = t;
  }
  send(t) {
    this.isClosed || (this.isReady ? this.sendNow(t) : this.sendLater(t));
  }
  sendLater(t) {
    this.buffer.push(t);
  }
  sendNow(t) {
    let r7 = za(t, {
      maxDepth: 15,
      ...k.CHANNEL_OPTIONS
    });
    this.socket.send(r7);
  }
  flush() {
    let { buffer: t } = this;
    this.buffer = [], t.forEach((r7) => this.send(r7));
  }
};
o(Ob, "WebsocketTransport");
var vo = Ob;
var { CONFIG_TYPE: IG } = k, MG = Ar$1;
function NG({ page: e, extraTransports: t = [] }) {
  let r7 = [new go({ page: e }), ...t];
  if (IG === "DEVELOPMENT") {
    let i = window.location.protocol === "http:" ? "ws" : "wss", { hostname: s, port: a } = window.location, l = `${i}://${s}:${a}/storybook-server-channel`;
    r7.push(new vo({ url: l, onError: /* @__PURE__ */ o(() => {
    }, "onError"), page: e }));
  }
  let n = new Ar$1({ transports: r7 });
  return po.__prepare(
    n,
    e === "manager" ? po.Environment.MANAGER : po.Environment.PREVIEW
  ), n;
}
o(NG, "createBrowserChannel");
var Fb = {};
st$1(Fb, {
  CalledExtractOnStoreError: () => ji,
  CalledPreviewMethodBeforeInitializationError: () => We,
  Category: () => VS,
  ElementA11yParameterError: () => Lb,
  EmptyIndexError: () => Di,
  ImplicitActionsDuringRendering: () => Ni,
  MdxFileWithNoCsfReferencesError: () => Fi,
  MissingRenderToCanvasError: () => ki,
  MissingStoryAfterHmrError: () => Mi,
  MissingStoryFromCsfFileError: () => Bi,
  MountMustBeDestructuredError: () => gn,
  NextJsSharpError: () => Mb,
  NextjsRouterMocksNotAvailable: () => Nb,
  NoRenderFunctionError: () => Ui,
  NoStoryMatchError: () => $i,
  NoStoryMountedError: () => Vi,
  StatusTypeIdMismatchError: () => Ib,
  StoryIndexFetchError: () => Li,
  StoryStoreAccessedBeforeInitializationError: () => Hi,
  UnknownArgTypesError: () => jb,
  UnsupportedViewportDimensionError: () => kb
});
function HS({
  code: e,
  category: t
}) {
  let r7 = String(e).padStart(4, "0");
  return `SB_${t}_${r7}`;
}
o(HS, "parseErrorCode");
function US(e) {
  if (/^(?!.*storybook\.js\.org)|[?&]ref=error\b/.test(e))
    return e;
  try {
    let t = new URL(e);
    return t.searchParams.set("ref", "error"), t.toString();
  } catch {
    return e;
  }
}
o(US, "appendErrorRef");
var Wa = class Wa2 extends Error {
  constructor(r7) {
    super(Wa2.getFullMessage(r7));
    this.data = {};
    this.fromStorybook = true;
    this.category = r7.category, this.documentation = r7.documentation ?? false, this.code = r7.code;
  }
  get fullErrorCode() {
    return HS({ code: this.code, category: this.category });
  }
  /** Overrides the default `Error.name` property in the format: SB_<CATEGORY>_<CODE>. */
  get name() {
    let r7 = this.constructor.name;
    return `${this.fullErrorCode} (${r7})`;
  }
  /** Generates the error message along with additional documentation link (if applicable). */
  static getFullMessage({
    documentation: r7,
    code: n,
    category: i,
    message: s
  }) {
    let a;
    return r7 === true ? a = `https://storybook.js.org/error/${HS({ code: n, category: i })}?ref=error` : typeof r7 == "string" ? a = US(r7) : Array.isArray(r7) && (a = `
${r7.map((l) => `	- ${US(l)}`).join(`
`)}`), `${s}${a != null ? `

More info: ${a}
` : ""}`;
  }
};
o(Wa, "StorybookError");
var Pe = Wa;
var VS = /* @__PURE__ */ ((S) => (S.BLOCKS = "BLOCKS", S.DOCS_TOOLS = "DOCS-TOOLS", S.PREVIEW_CLIENT_LOGGER = "PREVIEW_CLIENT-LOGGER", S.PREVIEW_CHANNELS = "PREVIEW_CHANNELS", S.PREVIEW_CORE_EVENTS = "PREVIEW_CORE-EVENTS", S.PREVIEW_INSTRUMENTER = "PREVIEW_INSTRUMENTER", S.PREVIEW_API = "PREVIEW_API", S.PREVIEW_REACT_DOM_SHIM = "PREVIEW_REACT-DOM-SHIM", S.PREVIEW_ROUTER = "PREVIEW_ROUTER", S.PREVIEW_THEMING = "PREVIEW_THEMING", S.RENDERER_HTML = "RENDERER_HTML", S.RENDERER_PREACT = "RENDERER_PREACT", S.RENDERER_REACT = "RENDERER_REACT", S.RENDERER_SERVER = "RENDERER_SERVER", S.RENDERER_SVELTE = "RENDERER_SVELTE", S.RENDERER_VUE = "RENDERER_VUE", S.RENDERER_VUE3 = "RENDERER_VUE3", S.RENDERER_WEB_COMPONENTS = "RENDERER_WEB-COMPONENTS", S.FRAMEWORK_NEXTJS = "FRAMEWORK_NEXTJS", S.ADDON_VITEST = "ADDON_VITEST", S.ADDON_A11Y = "ADDON_A11Y", S))(VS || {}), Db = class Db2 extends Pe {
  constructor(r7) {
    super({
      category: "PREVIEW_API",
      code: 1,
      message: Q`
        Couldn't find story matching id '${r7.storyId}' after HMR.
        - Did you just rename a story?
        - Did you remove it from your CSF file?
        - Are you sure a story with the id '${r7.storyId}' exists?
        - Please check the values in the stories field of your main.js config and see if they would match your CSF File.
        - Also check the browser console and terminal for potential error messages.`
    });
    this.data = r7;
  }
};
o(Db, "MissingStoryAfterHmrError");
var Mi = Db, $b = class $b2 extends Pe {
  constructor(r7) {
    super({
      category: "PREVIEW_API",
      code: 2,
      documentation: "https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#using-implicit-actions-during-rendering-is-deprecated-for-example-in-the-play-function",
      message: Q`
        We detected that you use an implicit action arg while ${r7.phase} of your story.  
        ${r7.deprecated ? `
This is deprecated and won't work in Storybook 8 anymore.
` : ""}
        Please provide an explicit spy to your args like this:
          import { fn } from 'storybook/test';
          ... 
          args: {
           ${r7.name}: fn()
          }`
    });
    this.data = r7;
  }
};
o($b, "ImplicitActionsDuringRendering");
var Ni = $b, Bb = class Bb2 extends Pe {
  constructor() {
    super({
      category: "PREVIEW_API",
      code: 3,
      message: Q`
        Cannot call \`storyStore.extract()\` without calling \`storyStore.cacheAllCsfFiles()\` first.

        You probably meant to call \`await preview.extract()\` which does the above for you.`
    });
  }
};
o(Bb, "CalledExtractOnStoreError");
var ji = Bb, Hb = class Hb2 extends Pe {
  constructor() {
    super({
      category: "PREVIEW_API",
      code: 4,
      message: Q`
        Expected your framework's preset to export a \`renderToCanvas\` field.

        Perhaps it needs to be upgraded for Storybook 7.0?`,
      documentation: "https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#mainjs-framework-field"
    });
  }
};
o(Hb, "MissingRenderToCanvasError");
var ki = Hb, Ub = class Ub2 extends Pe {
  constructor(r7) {
    super({
      category: "PREVIEW_API",
      code: 5,
      message: Q`
        Called \`Preview.${r7.methodName}()\` before initialization.
        
        The preview needs to load the story index before most methods can be called. If you want
        to call \`${r7.methodName}\`, try \`await preview.initializationPromise;\` first.
        
        If you didn't call the above code, then likely it was called by an addon that needs to
        do the above.`
    });
    this.data = r7;
  }
};
o(Ub, "CalledPreviewMethodBeforeInitializationError");
var We = Ub, Vb = class Vb2 extends Pe {
  constructor(r7) {
    super({
      category: "PREVIEW_API",
      code: 6,
      message: Q`
        Error fetching \`/index.json\`:
        
        ${r7.text}

        If you are in development, this likely indicates a problem with your Storybook process,
        check the terminal for errors.

        If you are in a deployed Storybook, there may have been an issue deploying the full Storybook
        build.`
    });
    this.data = r7;
  }
};
o(Vb, "StoryIndexFetchError");
var Li = Vb, zb = class zb2 extends Pe {
  constructor(r7) {
    super({
      category: "PREVIEW_API",
      code: 7,
      message: Q`
        Tried to render docs entry ${r7.storyId} but it is a MDX file that has no CSF
        references, or autodocs for a CSF file that some doesn't refer to itself.
        
        This likely is an internal error in Storybook's indexing, or you've attached the
        \`attached-mdx\` tag to an MDX file that is not attached.`
    });
    this.data = r7;
  }
};
o(zb, "MdxFileWithNoCsfReferencesError");
var Fi = zb, Gb = class Gb2 extends Pe {
  constructor() {
    super({
      category: "PREVIEW_API",
      code: 8,
      message: Q`
        Couldn't find any stories in your Storybook.

        - Please check your stories field of your main.js config: does it match correctly?
        - Also check the browser console and terminal for error messages.`
    });
  }
};
o(Gb, "EmptyIndexError");
var Di = Gb, Wb = class Wb2 extends Pe {
  constructor(r7) {
    super({
      category: "PREVIEW_API",
      code: 9,
      message: Q`
        Couldn't find story matching '${r7.storySpecifier}'.

        - Are you sure a story with that id exists?
        - Please check your stories field of your main.js config.
        - Also check the browser console and terminal for error messages.`
    });
    this.data = r7;
  }
};
o(Wb, "NoStoryMatchError");
var $i = Wb, Yb = class Yb2 extends Pe {
  constructor(r7) {
    super({
      category: "PREVIEW_API",
      code: 10,
      message: Q`
        Couldn't find story matching id '${r7.storyId}' after importing a CSF file.

        The file was indexed as if the story was there, but then after importing the file in the browser
        we didn't find the story. Possible reasons:
        - You are using a custom story indexer that is misbehaving.
        - You have a custom file loader that is removing or renaming exports.

        Please check your browser console and terminal for errors that may explain the issue.`
    });
    this.data = r7;
  }
};
o(Yb, "MissingStoryFromCsfFileError");
var Bi = Yb, Kb = class Kb2 extends Pe {
  constructor() {
    super({
      category: "PREVIEW_API",
      code: 11,
      message: Q`
        Cannot access the Story Store until the index is ready.

        It is not recommended to use methods directly on the Story Store anyway, in Storybook 9 we will
        remove access to the store entirely`
    });
  }
};
o(Kb, "StoryStoreAccessedBeforeInitializationError");
var Hi = Kb, Xb = class Xb2 extends Pe {
  constructor(r7) {
    super({
      category: "PREVIEW_API",
      code: 12,
      message: Q`
      Incorrect use of mount in the play function.
      
      To use mount in the play function, you must satisfy the following two requirements: 
      
      1. You *must* destructure the mount property from the \`context\` (the argument passed to your play function). 
         This makes sure that Storybook does not start rendering the story before the play function begins.
      
      2. Your Storybook framework or builder must be configured to transpile to ES2017 or newer. 
         This is because destructuring statements and async/await usages are otherwise transpiled away, 
         which prevents Storybook from recognizing your usage of \`mount\`.
      
      Note that Angular is not supported. As async/await is transpiled to support the zone.js polyfill. 
      
      More info: https://storybook.js.org/docs/writing-tests/interaction-testing?ref=error#run-code-before-the-component-gets-rendered
      
      Received the following play function:
      ${r7.playFunction}`
    });
    this.data = r7;
  }
};
o(Xb, "MountMustBeDestructuredError");
var gn = Xb, Jb = class Jb2 extends Pe {
  constructor(r7) {
    super({
      category: "PREVIEW_API",
      code: 14,
      message: Q`
        No render function available for storyId '${r7.id}'
      `
    });
    this.data = r7;
  }
};
o(Jb, "NoRenderFunctionError");
var Ui = Jb, Qb = class Qb2 extends Pe {
  constructor() {
    super({
      category: "PREVIEW_API",
      code: 15,
      message: Q`
        No component is mounted in your story.
        
        This usually occurs when you destructure mount in the play function, but forget to call it.
        
        For example:

        async play({ mount, canvasElement }) {
          // 👈 mount should be called: await mount(); 
          const canvas = within(canvasElement);
          const button = await canvas.findByRole('button');
          await userEvent.click(button);
        };

        Make sure to either remove it or call mount in your play function.
      `
    });
  }
};
o(Qb, "NoStoryMountedError");
var Vi = Qb, Zb = class Zb2 extends Pe {
  constructor(r7) {
    super({
      category: "PREVIEW_API",
      code: 16,
      message: `Status has typeId "${r7.status.typeId}" but was added to store with typeId "${r7.typeId}". Full status: ${JSON.stringify(
        r7.status,
        null,
        2
      )}`
    });
    this.data = r7;
  }
};
o(Zb, "StatusTypeIdMismatchError");
var Ib = Zb, eg = class eg2 extends Pe {
  constructor() {
    super({
      category: "FRAMEWORK_NEXTJS",
      code: 1,
      documentation: "https://storybook.js.org/docs/get-started/nextjs#faq",
      message: Q`
      You are importing avif images, but you don't have sharp installed.

      You have to install sharp in order to use image optimization features in Next.js.
      `
    });
  }
};
o(eg, "NextJsSharpError");
var Mb = eg, tg = class tg2 extends Pe {
  constructor(r7) {
    super({
      category: "FRAMEWORK_NEXTJS",
      code: 2,
      message: Q`
        Tried to access router mocks from "${r7.importType}" but they were not created yet. You might be running code in an unsupported environment.
      `
    });
    this.data = r7;
  }
};
o(tg, "NextjsRouterMocksNotAvailable");
var Nb = tg, rg = class rg2 extends Pe {
  constructor(r7) {
    super({
      category: "DOCS-TOOLS",
      code: 1,
      documentation: "https://github.com/storybookjs/storybook/issues/26606",
      message: Q`
        There was a failure when generating detailed ArgTypes in ${r7.language} for:
        ${JSON.stringify(r7.type, null, 2)} 
        
        Storybook will fall back to use a generic type description instead.

        This type is either not supported or it is a bug in the docgen generation in Storybook.
        If you think this is a bug, please detail it as much as possible in the Github issue.
      `
    });
    this.data = r7;
  }
};
o(rg, "UnknownArgTypesError");
var jb = rg, ng = class ng2 extends Pe {
  constructor(r7) {
    super({
      category: "ADDON_VITEST",
      code: 1,
      // TODO: Add documentation about viewports support
      // documentation: '',
      message: Q`
        Encountered an unsupported value "${r7.value}" when setting the viewport ${r7.dimension} dimension.
        
        The Storybook plugin only supports values in the following units:
        - px, vh, vw, em, rem and %.
        
        You can either change the viewport for this story to use one of the supported units or skip the test by adding '!test' to the story's tags per https://storybook.js.org/docs/writing-stories/tags
      `
    });
    this.data = r7;
  }
};
o(ng, "UnsupportedViewportDimensionError");
var kb = ng, og = class og2 extends Pe {
  constructor() {
    super({
      category: "ADDON_A11Y",
      code: 1,
      documentation: "https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#a11y-addon-replace-element-parameter-with-context-parameter",
      message: 'The "element" parameter in parameters.a11y has been removed. Use "context" instead.'
    });
  }
};
o(og, "ElementA11yParameterError");
var Lb = og;
var ig = {};
st$1(ig, {
  Addon_TypesEnum: () => zS
});
var zS = /* @__PURE__ */ ((l) => (l.TAB = "tab", l.PANEL = "panel", l.TOOL = "tool", l.TOOLEXTRA = "toolextra", l.PREVIEW = "preview", l.experimental_PAGE = "page", l.experimental_TEST_PROVIDER = "test-provider", l))(zS || {});
var lS = {};
st$1(lS, {
  ADDON_ID: () => Ya,
  CLEAR_ID: () => LG,
  CYCLIC_KEY: () => FG,
  EVENT_ID: () => sg,
  PANEL_ID: () => kG,
  PARAM_KEY: () => jG,
  action: () => Ir,
  actions: () => Twe,
  config: () => so,
  configureActions: () => Ewe
});
var jG = "actions", Ya = "storybook/actions", kG = `${Ya}/panel`, sg = `${Ya}/action-event`, LG = `${Ya}/action-clear`, FG = "$___storybook.isCyclic";
var Dy = {};
st$1(Dy, {
  DocsContext: () => Cr$1,
  HooksContext: () => qr$1,
  Preview: () => Qn,
  PreviewWeb: () => qa,
  PreviewWithSelection: () => Zn,
  ReporterAPI: () => dn$1,
  StoryStore: () => Xn,
  UrlStore: () => ro,
  WebView: () => oo,
  addons: () => He,
  applyHooks: () => Xa,
  combineArgs: () => hi,
  combineParameters: () => Tt$1,
  composeConfigs: () => _r$1,
  composeStepRunners: () => wy,
  composeStories: () => CU,
  composeStory: () => OR,
  createPlaywrightTest: () => PU,
  decorateStory: () => SR,
  defaultDecorateStory: () => vy,
  emitTransformCode: () => aS,
  filterArgTypes: () => Ta,
  getCsfFactoryAnnotations: () => Sy,
  inferControls: () => gi,
  makeDecorator: () => n_,
  mockChannel: () => Ka,
  normalizeArrays: () => de,
  normalizeProjectAnnotations: () => Wn,
  normalizeStory: () => Gn,
  pauseAnimations: () => Yn,
  prepareMeta: () => Ey,
  prepareStory: () => bi,
  sanitizeStoryContextUpdate: () => _R,
  setDefaultProjectAnnotations: () => SU,
  setProjectAnnotations: () => _U,
  simulateDOMContentLoaded: () => Ia,
  simulatePageLoad: () => sS,
  sortStoriesV7: () => NU,
  useArgs: () => t_,
  useCallback: () => Eo,
  useChannel: () => ZS,
  useEffect: () => kt$1,
  useGlobals: () => r_,
  useMemo: () => Qa,
  useParameter: () => e_,
  useReducer: () => QS,
  useRef: () => KS,
  useState: () => JS,
  useStoryContext: () => zi,
  userOrAutoTitle: () => qU,
  userOrAutoTitleFromSpecifier: () => MR,
  waitForAnimations: () => Kn
});
function Ka() {
  let e = {
    setHandler: /* @__PURE__ */ o(() => {
    }, "setHandler"),
    send: /* @__PURE__ */ o(() => {
    }, "send")
  };
  return new Ar$1({ transport: e });
}
o(Ka, "mockChannel");
var ug = class ug2 {
  constructor() {
    this.getChannel = /* @__PURE__ */ o(() => {
      if (!this.channel) {
        let t = Ka();
        return this.setChannel(t), t;
      }
      return this.channel;
    }, "getChannel");
    this.ready = /* @__PURE__ */ o(() => this.promise, "ready");
    this.hasChannel = /* @__PURE__ */ o(() => !!this.channel, "hasChannel");
    this.setChannel = /* @__PURE__ */ o((t) => {
      this.channel = t, this.resolve();
    }, "setChannel");
    this.promise = new Promise((t) => {
      this.resolve = () => t(this.getChannel());
    });
  }
};
o(ug, "AddonStore");
var lg = ug, ag = "__STORYBOOK_ADDONS_PREVIEW";
function DG() {
  return k[ag] || (k[ag] = new lg()), k[ag];
}
o(DG, "getAddonsStore");
var He = DG();
var fg = class fg2 {
  constructor() {
    this.hookListsMap = void 0;
    this.mountedDecorators = void 0;
    this.prevMountedDecorators = void 0;
    this.currentHooks = void 0;
    this.nextHookIndex = void 0;
    this.currentPhase = void 0;
    this.currentEffects = void 0;
    this.prevEffects = void 0;
    this.currentDecoratorName = void 0;
    this.hasUpdates = void 0;
    this.currentContext = void 0;
    this.renderListener = /* @__PURE__ */ o((t) => {
      t === this.currentContext?.id && (this.triggerEffects(), this.currentContext = null, this.removeRenderListeners());
    }, "renderListener");
    this.init();
  }
  init() {
    this.hookListsMap = /* @__PURE__ */ new WeakMap(), this.mountedDecorators = /* @__PURE__ */ new Set(), this.prevMountedDecorators = /* @__PURE__ */ new Set(), this.currentHooks = [], this.nextHookIndex = 0, this.currentPhase = "NONE", this.currentEffects = [], this.prevEffects = [], this.currentDecoratorName = null, this.hasUpdates = false, this.currentContext = null;
  }
  clean() {
    this.prevEffects.forEach((t) => {
      t.destroy && t.destroy();
    }), this.init(), this.removeRenderListeners();
  }
  getNextHook() {
    let t = this.currentHooks[this.nextHookIndex];
    return this.nextHookIndex += 1, t;
  }
  triggerEffects() {
    this.prevEffects.forEach((t) => {
      !this.currentEffects.includes(t) && t.destroy && t.destroy();
    }), this.currentEffects.forEach((t) => {
      this.prevEffects.includes(t) || (t.destroy = t.create());
    }), this.prevEffects = this.currentEffects, this.currentEffects = [];
  }
  addRenderListeners() {
    this.removeRenderListeners(), He.getChannel().on(uo, this.renderListener);
  }
  removeRenderListeners() {
    He.getChannel().removeListener(uo, this.renderListener);
  }
};
o(fg, "HooksContext");
var qr$1 = fg;
function GS(e) {
  let t = /* @__PURE__ */ o((...r7) => {
    let { hooks: n } = typeof r7[0] == "function" ? r7[1] : r7[0], i = n.currentPhase, s = n.currentHooks, a = n.nextHookIndex, l = n.currentDecoratorName;
    n.currentDecoratorName = e.name, n.prevMountedDecorators.has(e) ? (n.currentPhase = "UPDATE", n.currentHooks = n.hookListsMap.get(e) || []) : (n.currentPhase = "MOUNT", n.currentHooks = [], n.hookListsMap.set(e, n.currentHooks), n.prevMountedDecorators.add(e)), n.nextHookIndex = 0;
    let u = k.STORYBOOK_HOOKS_CONTEXT;
    k.STORYBOOK_HOOKS_CONTEXT = n;
    let c = e(...r7);
    if (k.STORYBOOK_HOOKS_CONTEXT = u, n.currentPhase === "UPDATE" && n.getNextHook() != null)
      throw new Error(
        "Rendered fewer hooks than expected. This may be caused by an accidental early return statement."
      );
    return n.currentPhase = i, n.currentHooks = s, n.nextHookIndex = a, n.currentDecoratorName = l, c;
  }, "hookified");
  return t.originalFn = e, t;
}
o(GS, "hookify");
var cg = 0, $G = 25, Xa = /* @__PURE__ */ o((e) => (t, r7) => {
  let n = e(
    GS(t),
    r7.map((i) => GS(i))
  );
  return (i) => {
    let { hooks: s } = i;
    s.prevMountedDecorators ?? (s.prevMountedDecorators = /* @__PURE__ */ new Set()), s.mountedDecorators = /* @__PURE__ */ new Set([t, ...r7]), s.currentContext = i, s.hasUpdates = false;
    let a = n(i);
    for (cg = 1; s.hasUpdates; )
      if (s.hasUpdates = false, s.currentEffects = [], a = n(i), cg += 1, cg > $G)
        throw new Error(
          "Too many re-renders. Storybook limits the number of renders to prevent an infinite loop."
        );
    return s.addRenderListeners(), a;
  };
}, "applyHooks"), BG = /* @__PURE__ */ o((e, t) => e.length === t.length && e.every((r7, n) => r7 === t[n]), "areDepsEqual"), dg = /* @__PURE__ */ o(
  () => new Error("Storybook preview hooks can only be called inside decorators and story functions."),
  "invalidHooksError"
);
function WS() {
  return k.STORYBOOK_HOOKS_CONTEXT || null;
}
o(WS, "getHooksContextOrNull");
function pg() {
  let e = WS();
  if (e == null)
    throw dg();
  return e;
}
o(pg, "getHooksContextOrThrow");
function HG(e, t, r7) {
  let n = pg();
  if (n.currentPhase === "MOUNT") {
    r7 != null && !Array.isArray(r7) && se.warn(
      `${e} received a final argument that is not an array (instead, received ${r7}). When specified, the final argument must be an array.`
    );
    let i = { name: e, deps: r7 };
    return n.currentHooks.push(i), t(i), i;
  }
  if (n.currentPhase === "UPDATE") {
    let i = n.getNextHook();
    if (i == null)
      throw new Error("Rendered more hooks than during the previous render.");
    return i.name !== e && se.warn(
      `Storybook has detected a change in the order of Hooks${n.currentDecoratorName ? ` called by ${n.currentDecoratorName}` : ""}. This will lead to bugs and errors if not fixed.`
    ), r7 != null && i.deps == null && se.warn(
      `${e} received a final argument during this render, but not during the previous render. Even though the final argument is optional, its type cannot change between renders.`
    ), r7 != null && i.deps != null && r7.length !== i.deps.length && se.warn(`The final argument passed to ${e} changed size between renders. The order and size of this array must remain constant.
Previous: ${i.deps}
Incoming: ${r7}`), (r7 == null || i.deps == null || !BG(r7, i.deps)) && (t(i), i.deps = r7), i;
  }
  throw dg();
}
o(HG, "useHook");
function Ja(e, t, r7) {
  let { memoizedState: n } = HG(
    e,
    (i) => {
      i.memoizedState = t();
    },
    r7
  );
  return n;
}
o(Ja, "useMemoLike");
function Qa(e, t) {
  return Ja("useMemo", e, t);
}
o(Qa, "useMemo");
function Eo(e, t) {
  return Ja("useCallback", () => e, t);
}
o(Eo, "useCallback");
function YS(e, t) {
  return Ja(e, () => ({ current: t }), []);
}
o(YS, "useRefLike");
function KS(e) {
  return YS("useRef", e);
}
o(KS, "useRef");
function UG() {
  let e = WS();
  if (e != null && e.currentPhase !== "NONE")
    e.hasUpdates = true;
  else
    try {
      He.getChannel().emit(Ri);
    } catch {
      se.warn("State updates of Storybook preview hooks work only in browser");
    }
}
o(UG, "triggerUpdate");
function XS(e, t) {
  let r7 = YS(
    e,
    // @ts-expect-error S type should never be function, but there's no way to tell that to TypeScript
    typeof t == "function" ? t() : t
  ), n = /* @__PURE__ */ o((i) => {
    r7.current = typeof i == "function" ? i(r7.current) : i, UG();
  }, "setState");
  return [r7.current, n];
}
o(XS, "useStateLike");
function JS(e) {
  return XS("useState", e);
}
o(JS, "useState");
function QS(e, t, r7) {
  let n = r7 != null ? () => r7(t) : t, [i, s] = XS("useReducer", n);
  return [i, /* @__PURE__ */ o((l) => s((u) => e(u, l)), "dispatch")];
}
o(QS, "useReducer");
function kt$1(e, t) {
  let r7 = pg(), n = Ja("useEffect", () => ({ create: e }), t);
  r7.currentEffects.includes(n) || r7.currentEffects.push(n);
}
o(kt$1, "useEffect");
function ZS(e, t = []) {
  let r7 = He.getChannel();
  return kt$1(() => (Object.entries(e).forEach(([n, i]) => r7.on(n, i)), () => {
    Object.entries(e).forEach(
      ([n, i]) => r7.removeListener(n, i)
    );
  }), [...Object.keys(e), ...t]), Eo(r7.emit.bind(r7), [r7]);
}
o(ZS, "useChannel");
function zi() {
  let { currentContext: e } = pg();
  if (e == null)
    throw dg();
  return e;
}
o(zi, "useStoryContext");
function e_(e, t) {
  let { parameters: r7 } = zi();
  if (e)
    return r7[e] ?? t;
}
o(e_, "useParameter");
function t_() {
  let e = He.getChannel(), { id: t, args: r7 } = zi(), n = Eo(
    (s) => e.emit(Pi, { storyId: t, updatedArgs: s }),
    [e, t]
  ), i = Eo(
    (s) => e.emit(Si, { storyId: t, argNames: s }),
    [e, t]
  );
  return [r7, n, i];
}
o(t_, "useArgs");
function r_() {
  let e = He.getChannel(), { globals: t } = zi(), r7 = Eo(
    (n) => e.emit(Ci, { globals: n }),
    [e]
  );
  return [t, r7];
}
o(r_, "useGlobals");
var n_ = /* @__PURE__ */ o(({
  name: e,
  parameterName: t,
  wrapper: r7,
  skipIfNoParametersOrOptions: n = false
}) => {
  let i = /* @__PURE__ */ o((s) => (a, l) => {
    let u = l.parameters && l.parameters[t];
    return u && u.disable || n && !s && !u ? a(l) : r7(a, l, {
      options: s,
      parameters: u
    });
  }, "decorator");
  return (...s) => typeof s[0] == "function" ? i()(...s) : (...a) => {
    if (a.length > 1)
      return s.length > 1 ? i(s)(...a) : i(...s)(...a);
    throw new Error(
      `Passing stories directly into ${e}() is not allowed,
        instead use addDecorator(${e}) and pass options with the '${t}' parameter`
    );
  };
}, "makeDecorator");
function o_(e) {
  return e.replace(/_/g, " ").replace(/-/g, " ").replace(/\./g, " ").replace(/([^\n])([A-Z])([a-z])/g, (t, r7, n, i) => `${r7} ${n}${i}`).replace(
    /([a-z])([A-Z])/g,
    (t, r7, n) => `${r7} ${n}`
  ).replace(/([a-z])([0-9])/gi, (t, r7, n) => `${r7} ${n}`).replace(/([0-9])([a-z])/gi, (t, r7, n) => `${r7} ${n}`).replace(/(\s|^)(\w)/g, (t, r7, n) => `${r7}${n.toUpperCase()}`).replace(/ +/g, " ").trim();
}
o(o_, "toStartCaseStr");
var hg = Ne(i_(), 1);
var s_ = /* @__PURE__ */ o((e) => e.map((t) => typeof t < "u").filter(Boolean).length, "count"), VG = /* @__PURE__ */ o((e, t) => {
  let { exists: r7, eq: n, neq: i, truthy: s } = e;
  if (s_([r7, n, i, s]) > 1)
    throw new Error(`Invalid conditional test ${JSON.stringify({ exists: r7, eq: n, neq: i })}`);
  if (typeof n < "u")
    return (0, hg.isEqual)(t, n);
  if (typeof i < "u")
    return !(0, hg.isEqual)(t, i);
  if (typeof r7 < "u") {
    let l = typeof t < "u";
    return r7 ? l : !l;
  }
  return (typeof s > "u" ? true : s) ? !!t : !t;
}, "testValue"), yg = /* @__PURE__ */ o((e, t, r7) => {
  if (!e.if)
    return true;
  let { arg: n, global: i } = e.if;
  if (s_([n, i]) !== 1)
    throw new Error(`Invalid conditional value ${JSON.stringify({ arg: n, global: i })}`);
  let s = n ? t[n] : r7[i];
  return VG(e.if, s);
}, "includeConditionalArg");
var bg = {};
st$1(bg, {
  argsEnhancers: () => zG
});
var a_ = /* @__PURE__ */ o((e, t) => typeof t[e] > "u" && !(e in t), "isInInitialArgs"), l_ = /* @__PURE__ */ o((e) => {
  let {
    initialArgs: t,
    argTypes: r7,
    id: n,
    parameters: { actions: i }
  } = e;
  if (!i || i.disable || !i.argTypesRegex || !r7)
    return {};
  let s = new RegExp(i.argTypesRegex);
  return Object.entries(r7).filter(
    ([l]) => !!s.test(l)
  ).reduce((l, [u, c]) => (a_(u, t) && (l[u] = Ir(u, { implicit: true, id: n })), l), {});
}, "inferActionsFromArgTypesRegex"), u_ = /* @__PURE__ */ o((e) => {
  let {
    initialArgs: t,
    argTypes: r7,
    parameters: { actions: n }
  } = e;
  return n?.disable || !r7 ? {} : Object.entries(r7).filter(([s, a]) => !!a.action).reduce((s, [a, l]) => (a_(a, t) && (s[a] = Ir(typeof l.action == "string" ? l.action : a)), s), {});
}, "addActionsFromArgTypes");
var zG = [
  u_,
  l_
];
var zT = {};
st$1(zT, {
  loaders: () => Jve
});
var VT = {};
st$1(VT, {
  buildQueries: () => Oge,
  clearAllMocks: () => cw,
  configure: () => qge,
  createEvent: () => Ige,
  expect: () => Yve,
  findAllByAltText: () => Nge,
  findAllByDisplayValue: () => jge,
  findAllByLabelText: () => kge,
  findAllByPlaceholderText: () => Lge,
  findAllByRole: () => Fge,
  findAllByTestId: () => Dge,
  findAllByText: () => $ge,
  findAllByTitle: () => Bge,
  findByAltText: () => Hge,
  findByDisplayValue: () => Uge,
  findByLabelText: () => Vge,
  findByPlaceholderText: () => zge,
  findByRole: () => Gge,
  findByTestId: () => Wge,
  findByText: () => Yge,
  findByTitle: () => Kge,
  fireEvent: () => Mge,
  fn: () => uw,
  getAllByAltText: () => Xge,
  getAllByDisplayValue: () => Jge,
  getAllByLabelText: () => Qge,
  getAllByPlaceholderText: () => Zge,
  getAllByRole: () => eve,
  getAllByTestId: () => tve,
  getAllByText: () => rve,
  getAllByTitle: () => nve,
  getByAltText: () => ove,
  getByDisplayValue: () => ive,
  getByLabelText: () => sve,
  getByPlaceholderText: () => ave,
  getByRole: () => lve,
  getByTestId: () => uve,
  getByText: () => cve,
  getByTitle: () => dve,
  getConfig: () => pve,
  getDefaultNormalizer: () => fve,
  getElementError: () => mve,
  getNodeText: () => hve,
  getQueriesForElement: () => yve,
  getRoles: () => bve,
  getSuggestedQuery: () => gve,
  isInaccessible: () => vve,
  isMockFunction: () => hr$1,
  logDOM: () => Eve,
  logRoles: () => xve,
  mocked: () => lie,
  mocks: () => Go,
  onMockCall: () => lw,
  prettyDOM: () => wve,
  prettyFormat: () => Gve,
  queries: () => Tve,
  queryAllByAltText: () => Rve,
  queryAllByAttribute: () => Sve,
  queryAllByDisplayValue: () => _ve,
  queryAllByLabelText: () => Cve,
  queryAllByPlaceholderText: () => Pve,
  queryAllByRole: () => Ave,
  queryAllByTestId: () => Ove,
  queryAllByText: () => qve,
  queryAllByTitle: () => Ive,
  queryByAltText: () => Mve,
  queryByAttribute: () => Nve,
  queryByDisplayValue: () => jve,
  queryByLabelText: () => kve,
  queryByPlaceholderText: () => Lve,
  queryByRole: () => Fve,
  queryByTestId: () => Dve,
  queryByText: () => $ve,
  queryByTitle: () => Bve,
  queryHelpers: () => Hve,
  resetAllMocks: () => dw,
  restoreAllMocks: () => pw,
  sb: () => Kve,
  screen: () => Uve,
  spyOn: () => aie,
  uninstrumentedUserEvent: () => UT,
  userEvent: () => Wve,
  waitFor: () => Vve,
  waitForElementToBeRemoved: () => zve,
  within: () => HT
});
var GG = {
  reset: [0, 0],
  bold: [1, 22, "\x1B[22m\x1B[1m"],
  dim: [2, 22, "\x1B[22m\x1B[2m"],
  italic: [3, 23],
  underline: [4, 24],
  inverse: [7, 27],
  hidden: [8, 28],
  strikethrough: [9, 29],
  black: [30, 39],
  red: [31, 39],
  green: [32, 39],
  yellow: [33, 39],
  blue: [34, 39],
  magenta: [35, 39],
  cyan: [36, 39],
  white: [37, 39],
  gray: [90, 39],
  bgBlack: [40, 49],
  bgRed: [41, 49],
  bgGreen: [42, 49],
  bgYellow: [43, 49],
  bgBlue: [44, 49],
  bgMagenta: [45, 49],
  bgCyan: [46, 49],
  bgWhite: [47, 49],
  blackBright: [90, 39],
  redBright: [91, 39],
  greenBright: [92, 39],
  yellowBright: [93, 39],
  blueBright: [94, 39],
  magentaBright: [95, 39],
  cyanBright: [96, 39],
  whiteBright: [97, 39],
  bgBlackBright: [100, 49],
  bgRedBright: [101, 49],
  bgGreenBright: [102, 49],
  bgYellowBright: [103, 49],
  bgBlueBright: [104, 49],
  bgMagentaBright: [105, 49],
  bgCyanBright: [106, 49],
  bgWhiteBright: [107, 49]
}, WG = Object.entries(GG);
function gg(e) {
  return String(e);
}
o(gg, "a");
gg.open = "";
gg.close = "";
function c_(e = false) {
  let t = typeof process < "u" ? process : void 0, r7 = t?.env || {}, n = t?.argv || [];
  return !("NO_COLOR" in r7 || n.includes("--no-color")) && ("FORCE_COLOR" in r7 || n.includes("--color") || t?.platform === "win32" || e && r7.TERM !== "dumb" || "CI" in r7) || typeof window < "u" && !!window.chrome;
}
o(c_, "C");
function d_(e = false) {
  let t = c_(e), r7 = /* @__PURE__ */ o((a, l, u, c) => {
    let d = "", p5 = 0;
    do
      d += a.substring(p5, c) + u, p5 = c + l.length, c = a.indexOf(l, p5);
    while (~c);
    return d + a.substring(p5);
  }, "i"), n = /* @__PURE__ */ o((a, l, u = a) => {
    let c = /* @__PURE__ */ o((d) => {
      let p5 = String(d), f = p5.indexOf(l, a.length);
      return ~f ? a + r7(p5, l, u, f) + l : a + p5 + l;
    }, "o");
    return c.open = a, c.close = l, c;
  }, "g"), i = {
    isColorSupported: t
  }, s = /* @__PURE__ */ o((a) => `\x1B[${a}m`, "d");
  for (let [a, l] of WG)
    i[a] = t ? n(
      s(l[0]),
      s(l[1]),
      l[2]
    ) : gg;
  return i;
}
o(d_, "p");
var Ee = d_();
function R_(e, t) {
  return t.forEach(function(r7) {
    r7 && typeof r7 != "string" && !Array.isArray(r7) && Object.keys(r7).forEach(function(n) {
      if (n !== "default" && !(n in e)) {
        var i = Object.getOwnPropertyDescriptor(r7, n);
        Object.defineProperty(e, n, i.get ? i : {
          enumerable: true,
          get: /* @__PURE__ */ o(function() {
            return r7[n];
          }, "get")
        });
      }
    });
  }), Object.freeze(e);
}
o(R_, "_mergeNamespaces");
function YG(e, t) {
  let r7 = Object.keys(e), n = t === null ? r7 : r7.sort(t);
  if (Object.getOwnPropertySymbols)
    for (let i of Object.getOwnPropertySymbols(e))
      Object.getOwnPropertyDescriptor(e, i).enumerable && n.push(i);
  return n;
}
o(YG, "getKeysOfEnumerableProperties");
function Wi(e, t, r7, n, i, s, a = ": ") {
  let l = "", u = 0, c = e.next();
  if (!c.done) {
    l += t.spacingOuter;
    let d = r7 + t.indent;
    for (; !c.done; ) {
      if (l += d, u++ === t.maxWidth) {
        l += "…";
        break;
      }
      let p5 = s(c.value[0], t, d, n, i), f = s(c.value[1], t, d, n, i);
      l += p5 + a + f, c = e.next(), c.done ? t.min || (l += ",") : l += `,${t.spacingInner}`;
    }
    l += t.spacingOuter + r7;
  }
  return l;
}
o(Wi, "printIteratorEntries");
function Tg(e, t, r7, n, i, s) {
  let a = "", l = 0, u = e.next();
  if (!u.done) {
    a += t.spacingOuter;
    let c = r7 + t.indent;
    for (; !u.done; ) {
      if (a += c, l++ === t.maxWidth) {
        a += "…";
        break;
      }
      a += s(u.value, t, c, n, i), u = e.next(), u.done ? t.min || (a += ",") : a += `,${t.spacingInner}`;
    }
    a += t.spacingOuter + r7;
  }
  return a;
}
o(Tg, "printIteratorValues");
function tl(e, t, r7, n, i, s) {
  let a = "";
  e = e instanceof ArrayBuffer ? new DataView(e) : e;
  let l = /* @__PURE__ */ o((c) => c instanceof DataView, "isDataView"), u = l(e) ? e.byteLength : e.length;
  if (u > 0) {
    a += t.spacingOuter;
    let c = r7 + t.indent;
    for (let d = 0; d < u; d++) {
      if (a += c, d === t.maxWidth) {
        a += "…";
        break;
      }
      (l(e) || d in e) && (a += s(l(e) ? e.getInt8(d) : e[d], t, c, n, i)), d < u - 1 ? a += `,${t.spacingInner}` : t.min || (a += ",");
    }
    a += t.spacingOuter + r7;
  }
  return a;
}
o(tl, "printListItems");
function Rg(e, t, r7, n, i, s) {
  let a = "", l = YG(e, t.compareKeys);
  if (l.length > 0) {
    a += t.spacingOuter;
    let u = r7 + t.indent;
    for (let c = 0; c < l.length; c++) {
      let d = l[c], p5 = s(d, t, u, n, i), f = s(e[d], t, u, n, i);
      a += `${u + p5}: ${f}`, c < l.length - 1 ? a += `,${t.spacingInner}` : t.min || (a += ",");
    }
    a += t.spacingOuter + r7;
  }
  return a;
}
o(Rg, "printObjectProperties");
var KG = typeof Symbol == "function" && Symbol.for ? Symbol.for("jest.asymmetricMatcher") : 1267621, Za = " ", XG = /* @__PURE__ */ o((e, t, r7, n, i, s) => {
  let a = e.toString();
  if (a === "ArrayContaining" || a === "ArrayNotContaining")
    return ++n > t.maxDepth ? `[${a}]` : `${a + Za}[${tl(e.sample, t, r7, n, i, s)}]`;
  if (a === "ObjectContaining" || a === "ObjectNotContaining")
    return ++n > t.maxDepth ? `[${a}]` : `${a + Za}{${Rg(e.sample, t, r7, n, i, s)}}`;
  if (a === "StringMatching" || a === "StringNotMatching" || a === "StringContaining" || a === "StringNotContaining")
    return a + Za + s(e.sample, t, r7, n, i);
  if (typeof e.toAsymmetricMatcher != "function")
    throw new TypeError(`Asymmetric matcher ${e.constructor.name} does not implement toAsymmetricMatcher()`);
  return e.toAsymmetricMatcher();
}, "serialize$5"), JG = /* @__PURE__ */ o((e) => e && e.$$typeof === KG, "test$5"), QG = {
  serialize: XG,
  test: JG
}, ZG = " ", S_ = /* @__PURE__ */ new Set(["DOMStringMap", "NamedNodeMap"]), e4 = /^(?:HTML\w*Collection|NodeList)$/;
function t4(e) {
  return S_.has(e) || e4.test(e);
}
o(t4, "testName");
var r4 = /* @__PURE__ */ o((e) => e && e.constructor && !!e.constructor.name && t4(e.constructor.name), "test$4");
function n4(e) {
  return e.constructor.name === "NamedNodeMap";
}
o(n4, "isNamedNodeMap");
var o4 = /* @__PURE__ */ o((e, t, r7, n, i, s) => {
  let a = e.constructor.name;
  return ++n > t.maxDepth ? `[${a}]` : (t.min ? "" : a + ZG) + (S_.has(a) ? `{${Rg(n4(e) ? [...e].reduce(
    (l, u) => (l[u.name] = u.value, l),
    {}
  ) : { ...e }, t, r7, n, i, s)}}` : `[${tl([...e], t, r7, n, i, s)}]`);
}, "serialize$4"), i4 = {
  serialize: o4,
  test: r4
};
function __(e) {
  return e.replaceAll("<", "&lt;").replaceAll(">", "&gt;");
}
o(__, "escapeHTML");
function Sg(e, t, r7, n, i, s, a) {
  let l = n + r7.indent, u = r7.colors;
  return e.map((c) => {
    let d = t[c], p5 = a(d, r7, l, i, s);
    return typeof d != "string" && (p5.includes(`
`) && (p5 = r7.spacingOuter + l + p5 + r7.spacingOuter + n), p5 = `{${p5}}`), `${r7.spacingInner + n + u.prop.open + c + u.prop.close}=${u.value.open}${p5}${u.value.close}`;
  }).join("");
}
o(Sg, "printProps");
function _g(e, t, r7, n, i, s) {
  return e.map((a) => t.spacingOuter + r7 + (typeof a == "string" ? C_(a, t) : s(a, t, r7, n, i))).join("");
}
o(_g, "printChildren");
function C_(e, t) {
  let r7 = t.colors.content;
  return r7.open + __(e) + r7.close;
}
o(C_, "printText");
function s4(e, t) {
  let r7 = t.colors.comment;
  return `${r7.open}<!--${__(e)}-->${r7.close}`;
}
o(s4, "printComment");
function Cg(e, t, r7, n, i) {
  let s = n.colors.tag;
  return `${s.open}<${e}${t && s.close + t + n.spacingOuter + i + s.open}${r7 ? `>${s.close}${r7}${n.spacingOuter}${i}${s.open}</${e}` : `${t && !n.min ? "" : " "}/`}>${s.close}`;
}
o(Cg, "printElement");
function Pg(e, t) {
  let r7 = t.colors.tag;
  return `${r7.open}<${e}${r7.close} …${r7.open} />${r7.close}`;
}
o(Pg, "printElementAsLeaf");
var a4 = 1, P_ = 3, A_ = 8, O_ = 11, l4 = /^(?:(?:HTML|SVG)\w*)?Element$/;
function u4(e) {
  try {
    return typeof e.hasAttribute == "function" && e.hasAttribute("is");
  } catch {
    return false;
  }
}
o(u4, "testHasAttribute");
function c4(e) {
  let t = e.constructor.name, { nodeType: r7, tagName: n } = e, i = typeof n == "string" && n.includes("-") || u4(e);
  return r7 === a4 && (l4.test(t) || i) || r7 === P_ && t === "Text" || r7 === A_ && t === "Comment" || r7 === O_ && t === "DocumentFragment";
}
o(c4, "testNode");
var d4 = /* @__PURE__ */ o((e) => {
  var t;
  return (e == null || (t = e.constructor) === null || t === void 0 ? void 0 : t.name) && c4(e);
}, "test$3");
function p4(e) {
  return e.nodeType === P_;
}
o(p4, "nodeIsText");
function f4(e) {
  return e.nodeType === A_;
}
o(f4, "nodeIsComment");
function vg(e) {
  return e.nodeType === O_;
}
o(vg, "nodeIsFragment");
var m4 = /* @__PURE__ */ o((e, t, r7, n, i, s) => {
  if (p4(e))
    return C_(e.data, t);
  if (f4(e))
    return s4(e.data, t);
  let a = vg(e) ? "DocumentFragment" : e.tagName.toLowerCase();
  return ++n > t.maxDepth ? Pg(a, t) : Cg(a, Sg(vg(e) ? [] : Array.from(e.attributes, (l) => l.name).sort(), vg(e) ? {} : [...e.attributes].reduce((l, u) => (l[u.name] = u.value, l), {}), t, r7 + t.indent, n, i, s), _g(Array.prototype.slice.call(e.childNodes || e.children), t, r7 + t.indent, n, i, s), t, r7);
}, "serialize$3"), h4 = {
  serialize: m4,
  test: d4
}, y4 = "@@__IMMUTABLE_ITERABLE__@@", b4 = "@@__IMMUTABLE_LIST__@@", g4 = "@@__IMMUTABLE_KEYED__@@", v4 = "@@__IMMUTABLE_MAP__@@", p_ = "@@__IMMUTABLE_ORDERED__@@", E4 = "@@__IMMUTABLE_RECORD__@@", x4 = "@@__IMMUTABLE_SEQ__@@", w4 = "@@__IMMUTABLE_SET__@@", T4 = "@@__IMMUTABLE_STACK__@@", xo = /* @__PURE__ */ o((e) => `Immutable.${e}`, "getImmutableName"), nl = /* @__PURE__ */ o((e) => `[${e}]`, "printAsLeaf"), Gi = " ", f_ = "…";
function R4(e, t, r7, n, i, s, a) {
  return ++n > t.maxDepth ? nl(xo(a)) : `${xo(a) + Gi}{${Wi(e.entries(), t, r7, n, i, s)}}`;
}
o(R4, "printImmutableEntries");
function S4(e) {
  let t = 0;
  return { next() {
    if (t < e._keys.length) {
      let r7 = e._keys[t++];
      return {
        done: false,
        value: [r7, e.get(r7)]
      };
    }
    return {
      done: true,
      value: void 0
    };
  } };
}
o(S4, "getRecordEntries");
function _4(e, t, r7, n, i, s) {
  let a = xo(e._name || "Record");
  return ++n > t.maxDepth ? nl(a) : `${a + Gi}{${Wi(S4(e), t, r7, n, i, s)}}`;
}
o(_4, "printImmutableRecord");
function C4(e, t, r7, n, i, s) {
  let a = xo("Seq");
  return ++n > t.maxDepth ? nl(a) : e[g4] ? `${a + Gi}{${e._iter || e._object ? Wi(e.entries(), t, r7, n, i, s) : f_}}` : `${a + Gi}[${e._iter || e._array || e._collection || e._iterable ? Tg(e.values(), t, r7, n, i, s) : f_}]`;
}
o(C4, "printImmutableSeq");
function Eg(e, t, r7, n, i, s, a) {
  return ++n > t.maxDepth ? nl(xo(a)) : `${xo(a) + Gi}[${Tg(e.values(), t, r7, n, i, s)}]`;
}
o(Eg, "printImmutableValues");
var P4 = /* @__PURE__ */ o((e, t, r7, n, i, s) => e[v4] ? R4(e, t, r7, n, i, s, e[p_] ? "OrderedMap" : "Map") : e[b4] ? Eg(e, t, r7, n, i, s, "List") : e[w4] ? Eg(e, t, r7, n, i, s, e[p_] ? "OrderedSet" : "Set") : e[T4] ? Eg(e, t, r7, n, i, s, "Stack") : e[x4] ? C4(e, t, r7, n, i, s) : _4(e, t, r7, n, i, s), "serialize$2"), A4 = /* @__PURE__ */ o((e) => e && (e[y4] === true || e[E4] === true), "test$2"), O4 = {
  serialize: P4,
  test: A4
};
function q_(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
o(q_, "getDefaultExportFromCjs");
var xg = { exports: {} }, he = {};
var m_;
function q4() {
  if (m_) return he;
  m_ = 1;
  var e = Symbol.for("react.transitional.element"), t = Symbol.for("react.portal"), r7 = Symbol.for("react.fragment"), n = Symbol.for("react.strict_mode"), i = Symbol.for("react.profiler"), s = Symbol.for("react.consumer"), a = Symbol.for("react.context"), l = Symbol.for("react.forward_ref"), u = Symbol.for("react.suspense"), c = Symbol.for("react.suspense_list"), d = Symbol.for("react.memo"), p5 = Symbol.for("react.lazy"), f = Symbol.for("react.view_transition"), m = Symbol.for("react.client.reference");
  function h5(b) {
    if (typeof b == "object" && b !== null) {
      var v5 = b.$$typeof;
      switch (v5) {
        case e:
          switch (b = b.type, b) {
            case r7:
            case i:
            case n:
            case u:
            case c:
            case f:
              return b;
            default:
              switch (b = b && b.$$typeof, b) {
                case a:
                case l:
                case p5:
                case d:
                  return b;
                case s:
                  return b;
                default:
                  return v5;
              }
          }
        case t:
          return v5;
      }
    }
  }
  return o(h5, "typeOf"), he.ContextConsumer = s, he.ContextProvider = a, he.Element = e, he.ForwardRef = l, he.Fragment = r7, he.Lazy = p5, he.Memo = d, he.Portal = t, he.Profiler = i, he.StrictMode = n, he.Suspense = u, he.SuspenseList = c, he.isContextConsumer = function(b) {
    return h5(b) === s;
  }, he.isContextProvider = function(b) {
    return h5(b) === a;
  }, he.isElement = function(b) {
    return typeof b == "object" && b !== null && b.$$typeof === e;
  }, he.isForwardRef = function(b) {
    return h5(b) === l;
  }, he.isFragment = function(b) {
    return h5(b) === r7;
  }, he.isLazy = function(b) {
    return h5(b) === p5;
  }, he.isMemo = function(b) {
    return h5(b) === d;
  }, he.isPortal = function(b) {
    return h5(b) === t;
  }, he.isProfiler = function(b) {
    return h5(b) === i;
  }, he.isStrictMode = function(b) {
    return h5(b) === n;
  }, he.isSuspense = function(b) {
    return h5(b) === u;
  }, he.isSuspenseList = function(b) {
    return h5(b) === c;
  }, he.isValidElementType = function(b) {
    return typeof b == "string" || typeof b == "function" || b === r7 || b === i || b === n || b === u || b === c || typeof b == "object" && b !== null && (b.$$typeof === p5 || b.$$typeof === d || b.$$typeof === a || b.$$typeof === s || b.$$typeof === l || b.$$typeof === m || b.getModuleId !== void 0);
  }, he.typeOf = h5, he;
}
o(q4, "requireReactIs_production");
var h_;
function I4() {
  return h_ || (h_ = 1, xg.exports = q4()), xg.exports;
}
o(I4, "requireReactIs$1");
var I_ = I4(), M4 = /* @__PURE__ */ q_(I_), N4 = /* @__PURE__ */ R_({
  __proto__: null,
  default: M4
}, [I_]), wg = { exports: {} }, fe = {};
var y_;
function j4() {
  if (y_) return fe;
  y_ = 1;
  var e = Symbol.for("react.element"), t = Symbol.for("react.portal"), r7 = Symbol.for("react.fragment"), n = Symbol.for("react.strict_mode"), i = Symbol.for("react.profiler"), s = Symbol.for("react.provider"), a = Symbol.for("react.context"), l = Symbol.for("react.server_context"), u = Symbol.for("react.forward_ref"), c = Symbol.for("react.suspense"), d = Symbol.for("react.suspense_list"), p5 = Symbol.for("react.memo"), f = Symbol.for("react.lazy"), m = Symbol.for("react.offscreen"), h5;
  h5 = Symbol.for("react.module.reference");
  function b(v5) {
    if (typeof v5 == "object" && v5 !== null) {
      var g = v5.$$typeof;
      switch (g) {
        case e:
          switch (v5 = v5.type, v5) {
            case r7:
            case i:
            case n:
            case c:
            case d:
              return v5;
            default:
              switch (v5 = v5 && v5.$$typeof, v5) {
                case l:
                case a:
                case u:
                case f:
                case p5:
                case s:
                  return v5;
                default:
                  return g;
              }
          }
        case t:
          return g;
      }
    }
  }
  return o(b, "v"), fe.ContextConsumer = a, fe.ContextProvider = s, fe.Element = e, fe.ForwardRef = u, fe.Fragment = r7, fe.Lazy = f, fe.Memo = p5, fe.Portal = t, fe.Profiler = i, fe.StrictMode = n, fe.Suspense = c, fe.SuspenseList = d, fe.isAsyncMode = function() {
    return false;
  }, fe.isConcurrentMode = function() {
    return false;
  }, fe.isContextConsumer = function(v5) {
    return b(v5) === a;
  }, fe.isContextProvider = function(v5) {
    return b(v5) === s;
  }, fe.isElement = function(v5) {
    return typeof v5 == "object" && v5 !== null && v5.$$typeof === e;
  }, fe.isForwardRef = function(v5) {
    return b(v5) === u;
  }, fe.isFragment = function(v5) {
    return b(v5) === r7;
  }, fe.isLazy = function(v5) {
    return b(v5) === f;
  }, fe.isMemo = function(v5) {
    return b(v5) === p5;
  }, fe.isPortal = function(v5) {
    return b(v5) === t;
  }, fe.isProfiler = function(v5) {
    return b(v5) === i;
  }, fe.isStrictMode = function(v5) {
    return b(v5) === n;
  }, fe.isSuspense = function(v5) {
    return b(v5) === c;
  }, fe.isSuspenseList = function(v5) {
    return b(v5) === d;
  }, fe.isValidElementType = function(v5) {
    return typeof v5 == "string" || typeof v5 == "function" || v5 === r7 || v5 === i || v5 === n || v5 === c || v5 === d || v5 === m || typeof v5 == "object" && v5 !== null && (v5.$$typeof === f || v5.$$typeof === p5 || v5.$$typeof === s || v5.$$typeof === a || v5.$$typeof === u || v5.$$typeof === h5 || v5.getModuleId !== void 0);
  }, fe.typeOf = b, fe;
}
o(j4, "requireReactIs_production_min");
var b_;
function k4() {
  return b_ || (b_ = 1, wg.exports = j4()), wg.exports;
}
o(k4, "requireReactIs");
var M_ = k4(), L4 = /* @__PURE__ */ q_(M_), F4 = /* @__PURE__ */ R_({
  __proto__: null,
  default: L4
}, [M_]), D4 = [
  "isAsyncMode",
  "isConcurrentMode",
  "isContextConsumer",
  "isContextProvider",
  "isElement",
  "isForwardRef",
  "isFragment",
  "isLazy",
  "isMemo",
  "isPortal",
  "isProfiler",
  "isStrictMode",
  "isSuspense",
  "isSuspenseList",
  "isValidElementType"
], vn = Object.fromEntries(D4.map((e) => [e, (t) => F4[e](t) || N4[e](t)]));
function N_(e, t = []) {
  if (Array.isArray(e))
    for (let r7 of e)
      N_(r7, t);
  else e != null && e !== false && e !== "" && t.push(e);
  return t;
}
o(N_, "getChildren");
function g_(e) {
  let t = e.type;
  if (typeof t == "string")
    return t;
  if (typeof t == "function")
    return t.displayName || t.name || "Unknown";
  if (vn.isFragment(e))
    return "React.Fragment";
  if (vn.isSuspense(e))
    return "React.Suspense";
  if (typeof t == "object" && t !== null) {
    if (vn.isContextProvider(e))
      return "Context.Provider";
    if (vn.isContextConsumer(e))
      return "Context.Consumer";
    if (vn.isForwardRef(e)) {
      if (t.displayName)
        return t.displayName;
      let r7 = t.render.displayName || t.render.name || "";
      return r7 === "" ? "ForwardRef" : `ForwardRef(${r7})`;
    }
    if (vn.isMemo(e)) {
      let r7 = t.displayName || t.type.displayName || t.type.name || "";
      return r7 === "" ? "Memo" : `Memo(${r7})`;
    }
  }
  return "UNDEFINED";
}
o(g_, "getType");
function $4(e) {
  let { props: t } = e;
  return Object.keys(t).filter((r7) => r7 !== "children" && t[r7] !== void 0).sort();
}
o($4, "getPropKeys$1");
var B4 = /* @__PURE__ */ o((e, t, r7, n, i, s) => ++n > t.maxDepth ? Pg(g_(e), t) : Cg(g_(e), Sg($4(e), e.props, t, r7 + t.indent, n, i, s), _g(
  N_(e.props.children),
  t,
  r7 + t.indent,
  n,
  i,
  s
), t, r7), "serialize$1"), H4 = /* @__PURE__ */ o((e) => e != null && vn.isElement(e), "test$1"), U4 = {
  serialize: B4,
  test: H4
}, V4 = typeof Symbol == "function" && Symbol.for ? Symbol.for("react.test.json") : 245830487;
function z4(e) {
  let { props: t } = e;
  return t ? Object.keys(t).filter((r7) => t[r7] !== void 0).sort() : [];
}
o(z4, "getPropKeys");
var G4 = /* @__PURE__ */ o((e, t, r7, n, i, s) => ++n > t.maxDepth ? Pg(e.type, t) : Cg(e.type, e.props ? Sg(
  z4(e),
  e.props,
  t,
  r7 + t.indent,
  n,
  i,
  s
) : "", e.children ? _g(e.children, t, r7 + t.indent, n, i, s) : "", t, r7), "serialize"), W4 = /* @__PURE__ */ o((e) => e && e.$$typeof === V4, "test"), Y4 = {
  serialize: G4,
  test: W4
}, j_ = Object.prototype.toString, K4 = Date.prototype.toISOString, X4 = Error.prototype.toString, v_ = RegExp.prototype.toString;
function el(e) {
  return typeof e.constructor == "function" && e.constructor.name || "Object";
}
o(el, "getConstructorName");
function J4(e) {
  return typeof window < "u" && e === window;
}
o(J4, "isWindow");
var Q4 = /^Symbol\((.*)\)(.*)$/, Z4 = /\n/g, Og = class Og2 extends Error {
  constructor(t, r7) {
    super(t), this.stack = r7, this.name = this.constructor.name;
  }
};
o(Og, "PrettyFormatPluginError");
var rl = Og;
function e6(e) {
  return e === "[object Array]" || e === "[object ArrayBuffer]" || e === "[object DataView]" || e === "[object Float32Array]" || e === "[object Float64Array]" || e === "[object Int8Array]" || e === "[object Int16Array]" || e === "[object Int32Array]" || e === "[object Uint8Array]" || e === "[object Uint8ClampedArray]" || e === "[object Uint16Array]" || e === "[object Uint32Array]";
}
o(e6, "isToStringedArrayType");
function t6(e) {
  return Object.is(e, -0) ? "-0" : String(e);
}
o(t6, "printNumber");
function r6(e) {
  return `${e}n`;
}
o(r6, "printBigInt");
function E_(e, t) {
  return t ? `[Function ${e.name || "anonymous"}]` : "[Function]";
}
o(E_, "printFunction");
function x_(e) {
  return String(e).replace(Q4, "Symbol($1)");
}
o(x_, "printSymbol");
function w_(e) {
  return `[${X4.call(e)}]`;
}
o(w_, "printError");
function k_(e, t, r7, n) {
  if (e === true || e === false)
    return `${e}`;
  if (e === void 0)
    return "undefined";
  if (e === null)
    return "null";
  let i = typeof e;
  if (i === "number")
    return t6(e);
  if (i === "bigint")
    return r6(e);
  if (i === "string")
    return n ? `"${e.replaceAll(/"|\\/g, "\\$&")}"` : `"${e}"`;
  if (i === "function")
    return E_(e, t);
  if (i === "symbol")
    return x_(e);
  let s = j_.call(e);
  return s === "[object WeakMap]" ? "WeakMap {}" : s === "[object WeakSet]" ? "WeakSet {}" : s === "[object Function]" || s === "[object GeneratorFunction]" ? E_(e, t) : s === "[object Symbol]" ? x_(e) : s === "[object Date]" ? Number.isNaN(+e) ? "Date { NaN }" : K4.call(e) : s === "[object Error]" ? w_(e) : s === "[object RegExp]" ? r7 ? v_.call(e).replaceAll(/[$()*+.?[\\\]^{|}]/g, "\\$&") : v_.call(e) : e instanceof Error ? w_(e) : null;
}
o(k_, "printBasicValue");
function L_(e, t, r7, n, i, s) {
  if (i.includes(e))
    return "[Circular]";
  i = [...i], i.push(e);
  let a = ++n > t.maxDepth, l = t.min;
  if (t.callToJSON && !a && e.toJSON && typeof e.toJSON == "function" && !s)
    return Mr$1(e.toJSON(), t, r7, n, i, true);
  let u = j_.call(e);
  return u === "[object Arguments]" ? a ? "[Arguments]" : `${l ? "" : "Arguments "}[${tl(e, t, r7, n, i, Mr$1)}]` : e6(u) ? a ? `[${e.constructor.name}]` : `${l || !t.printBasicPrototype && e.constructor.name === "Array" ? "" : `${e.constructor.name} `}[${tl(e, t, r7, n, i, Mr$1)}]` : u === "[object Map]" ? a ? "[Map]" : `Map {${Wi(e.entries(), t, r7, n, i, Mr$1, " => ")}}` : u === "[object Set]" ? a ? "[Set]" : `Set {${Tg(
    e.values(),
    t,
    r7,
    n,
    i,
    Mr$1
  )}}` : a || J4(e) ? `[${el(e)}]` : `${l || !t.printBasicPrototype && el(e) === "Object" ? "" : `${el(e)} `}{${Rg(
    e,
    t,
    r7,
    n,
    i,
    Mr$1
  )}}`;
}
o(L_, "printComplexValue");
var n6 = {
  test: /* @__PURE__ */ o((e) => e && e instanceof Error, "test"),
  serialize(e, t, r7, n, i, s) {
    if (i.includes(e))
      return "[Circular]";
    i = [...i, e];
    let a = ++n > t.maxDepth, { message: l, cause: u, ...c } = e, d = {
      message: l,
      ...typeof u < "u" ? { cause: u } : {},
      ...e instanceof AggregateError ? { errors: e.errors } : {},
      ...c
    }, p5 = e.name !== "Error" ? e.name : el(e);
    return a ? `[${p5}]` : `${p5} {${Wi(Object.entries(d).values(), t, r7, n, i, s)}}`;
  }
};
function o6(e) {
  return e.serialize != null;
}
o(o6, "isNewPlugin");
function F_(e, t, r7, n, i, s) {
  let a;
  try {
    a = o6(e) ? e.serialize(t, r7, n, i, s, Mr$1) : e.print(t, (l) => Mr$1(l, r7, n, i, s), (l) => {
      let u = n + r7.indent;
      return u + l.replaceAll(Z4, `
${u}`);
    }, {
      edgeSpacing: r7.spacingOuter,
      min: r7.min,
      spacing: r7.spacingInner
    }, r7.colors);
  } catch (l) {
    throw new rl(l.message, l.stack);
  }
  if (typeof a != "string")
    throw new TypeError(`pretty-format: Plugin must return type "string" but instead returned "${typeof a}".`);
  return a;
}
o(F_, "printPlugin");
function D_(e, t) {
  for (let r7 of e)
    try {
      if (r7.test(t))
        return r7;
    } catch (n) {
      throw new rl(n.message, n.stack);
    }
  return null;
}
o(D_, "findPlugin");
function Mr$1(e, t, r7, n, i, s) {
  let a = D_(t.plugins, e);
  if (a !== null)
    return F_(a, e, t, r7, n, i);
  let l = k_(e, t.printFunctionName, t.escapeRegex, t.escapeString);
  return l !== null ? l : L_(e, t, r7, n, i, s);
}
o(Mr$1, "printer");
var Ag = {
  comment: "gray",
  content: "reset",
  prop: "yellow",
  tag: "cyan",
  value: "green"
}, $_ = Object.keys(Ag), Lt = {
  callToJSON: true,
  compareKeys: void 0,
  escapeRegex: false,
  escapeString: true,
  highlight: false,
  indent: 2,
  maxDepth: Number.POSITIVE_INFINITY,
  maxWidth: Number.POSITIVE_INFINITY,
  min: false,
  plugins: [],
  printBasicPrototype: true,
  printFunctionName: true,
  theme: Ag
};
function i6(e) {
  for (let t of Object.keys(e))
    if (!Object.prototype.hasOwnProperty.call(Lt, t))
      throw new Error(`pretty-format: Unknown option "${t}".`);
  if (e.min && e.indent !== void 0 && e.indent !== 0)
    throw new Error('pretty-format: Options "min" and "indent" cannot be used together.');
}
o(i6, "validateOptions");
function s6() {
  return $_.reduce((e, t) => {
    let r7 = Ag[t], n = r7 && Ee[r7];
    if (n && typeof n.close == "string" && typeof n.open == "string")
      e[t] = n;
    else
      throw new Error(`pretty-format: Option "theme" has a key "${t}" whose value "${r7}" is undefined in ansi-styles.`);
    return e;
  }, /* @__PURE__ */ Object.create(null));
}
o(s6, "getColorsHighlight");
function a6() {
  return $_.reduce((e, t) => (e[t] = {
    close: "",
    open: ""
  }, e), /* @__PURE__ */ Object.create(null));
}
o(a6, "getColorsEmpty");
function B_(e) {
  return e?.printFunctionName ?? Lt.printFunctionName;
}
o(B_, "getPrintFunctionName");
function H_(e) {
  return e?.escapeRegex ?? Lt.escapeRegex;
}
o(H_, "getEscapeRegex");
function U_(e) {
  return e?.escapeString ?? Lt.escapeString;
}
o(U_, "getEscapeString");
function T_(e) {
  return {
    callToJSON: e?.callToJSON ?? Lt.callToJSON,
    colors: e?.highlight ? s6() : a6(),
    compareKeys: typeof e?.compareKeys == "function" || e?.compareKeys === null ? e.compareKeys : Lt.compareKeys,
    escapeRegex: H_(e),
    escapeString: U_(e),
    indent: e?.min ? "" : l6(e?.indent ?? Lt.indent),
    maxDepth: e?.maxDepth ?? Lt.maxDepth,
    maxWidth: e?.maxWidth ?? Lt.maxWidth,
    min: e?.min ?? Lt.min,
    plugins: e?.plugins ?? Lt.plugins,
    printBasicPrototype: e?.printBasicPrototype ?? true,
    printFunctionName: B_(e),
    spacingInner: e?.min ? " " : `
`,
    spacingOuter: e?.min ? "" : `
`
  };
}
o(T_, "getConfig");
function l6(e) {
  return Array.from({ length: e + 1 }).join(" ");
}
o(l6, "createIndent");
function St$1(e, t) {
  if (t && (i6(t), t.plugins)) {
    let n = D_(t.plugins, e);
    if (n !== null)
      return F_(n, e, T_(t), "", 0, []);
  }
  let r7 = k_(e, B_(t), H_(t), U_(t));
  return r7 !== null ? r7 : L_(e, T_(t), "", 0, []);
}
o(St$1, "format");
var Yi = {
  AsymmetricMatcher: QG,
  DOMCollection: i4,
  DOMElement: h4,
  Immutable: O4,
  ReactElement: U4,
  ReactTestComponent: Y4,
  Error: n6
};
var V_ = {
  bold: ["1", "22"],
  dim: ["2", "22"],
  italic: ["3", "23"],
  underline: ["4", "24"],
  // 5 & 6 are blinking
  inverse: ["7", "27"],
  hidden: ["8", "28"],
  strike: ["9", "29"],
  // 10-20 are fonts
  // 21-29 are resets for 1-9
  black: ["30", "39"],
  red: ["31", "39"],
  green: ["32", "39"],
  yellow: ["33", "39"],
  blue: ["34", "39"],
  magenta: ["35", "39"],
  cyan: ["36", "39"],
  white: ["37", "39"],
  brightblack: ["30;1", "39"],
  brightred: ["31;1", "39"],
  brightgreen: ["32;1", "39"],
  brightyellow: ["33;1", "39"],
  brightblue: ["34;1", "39"],
  brightmagenta: ["35;1", "39"],
  brightcyan: ["36;1", "39"],
  brightwhite: ["37;1", "39"],
  grey: ["90", "39"]
}, u6 = {
  special: "cyan",
  number: "yellow",
  bigint: "yellow",
  boolean: "yellow",
  undefined: "grey",
  null: "bold",
  string: "green",
  symbol: "green",
  date: "magenta",
  regexp: "red"
}, pr = "…";
function c6(e, t) {
  let r7 = V_[u6[t]] || V_[t] || "";
  return r7 ? `\x1B[${r7[0]}m${String(e)}\x1B[${r7[1]}m` : String(e);
}
o(c6, "colorise");
function z_({
  showHidden: e = false,
  depth: t = 2,
  colors: r7 = false,
  customInspect: n = true,
  showProxy: i = false,
  maxArrayLength: s = 1 / 0,
  breakLength: a = 1 / 0,
  seen: l = [],
  // eslint-disable-next-line no-shadow
  truncate: u = 1 / 0,
  stylize: c = String
} = {}, d) {
  let p5 = {
    showHidden: !!e,
    depth: Number(t),
    colors: !!r7,
    customInspect: !!n,
    showProxy: !!i,
    maxArrayLength: Number(s),
    breakLength: Number(a),
    truncate: Number(u),
    seen: l,
    inspect: d,
    stylize: c
  };
  return p5.colors && (p5.stylize = c6), p5;
}
o(z_, "normaliseOptions");
function d6(e) {
  return e >= "\uD800" && e <= "\uDBFF";
}
o(d6, "isHighSurrogate");
function et(e, t, r7 = pr) {
  e = String(e);
  let n = r7.length, i = e.length;
  if (n > t && i > n)
    return r7;
  if (i > t && i > n) {
    let s = t - n;
    return s > 0 && d6(e[s - 1]) && (s = s - 1), `${e.slice(0, s)}${r7}`;
  }
  return e;
}
o(et, "truncate");
function Fe$1(e, t, r7, n = ", ") {
  r7 = r7 || t.inspect;
  let i = e.length;
  if (i === 0)
    return "";
  let s = t.truncate, a = "", l = "", u = "";
  for (let c = 0; c < i; c += 1) {
    let d = c + 1 === e.length, p5 = c + 2 === e.length;
    u = `${pr}(${e.length - c})`;
    let f = e[c];
    t.truncate = s - a.length - (d ? 0 : n.length);
    let m = l || r7(f, t) + (d ? "" : n), h5 = a.length + m.length, b = h5 + u.length;
    if (d && h5 > s && a.length + u.length <= s || !d && !p5 && b > s || (l = d ? "" : r7(e[c + 1], t) + (p5 ? "" : n), !d && p5 && b > s && h5 + l.length > s))
      break;
    if (a += m, !d && !p5 && h5 + l.length >= s) {
      u = `${pr}(${e.length - c - 1})`;
      break;
    }
    u = "";
  }
  return `${a}${u}`;
}
o(Fe$1, "inspectList");
function p6(e) {
  return e.match(/^[a-zA-Z_][a-zA-Z_0-9]*$/) ? e : JSON.stringify(e).replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'");
}
o(p6, "quoteComplexKey");
function fr([e, t], r7) {
  return r7.truncate -= 2, typeof e == "string" ? e = p6(e) : typeof e != "number" && (e = `[${r7.inspect(e, r7)}]`), r7.truncate -= e.length, t = r7.inspect(t, r7), `${e}: ${t}`;
}
o(fr, "inspectProperty");
function qg(e, t) {
  let r7 = Object.keys(e).slice(e.length);
  if (!e.length && !r7.length)
    return "[]";
  t.truncate -= 4;
  let n = Fe$1(e, t);
  t.truncate -= n.length;
  let i = "";
  return r7.length && (i = Fe$1(r7.map((s) => [s, e[s]]), t, fr)), `[ ${n}${i ? `, ${i}` : ""} ]`;
}
o(qg, "inspectArray");
var f6 = /* @__PURE__ */ o((e) => typeof Buffer == "function" && e instanceof Buffer ? "Buffer" : e[Symbol.toStringTag] ? e[Symbol.toStringTag] : e.constructor.name, "getArrayName");
function Ft(e, t) {
  let r7 = f6(e);
  t.truncate -= r7.length + 4;
  let n = Object.keys(e).slice(e.length);
  if (!e.length && !n.length)
    return `${r7}[]`;
  let i = "";
  for (let a = 0; a < e.length; a++) {
    let l = `${t.stylize(et(e[a], t.truncate), "number")}${a === e.length - 1 ? "" : ", "}`;
    if (t.truncate -= l.length, e[a] !== e.length && t.truncate <= 3) {
      i += `${pr}(${e.length - e[a] + 1})`;
      break;
    }
    i += l;
  }
  let s = "";
  return n.length && (s = Fe$1(n.map((a) => [a, e[a]]), t, fr)), `${r7}[ ${i}${s ? `, ${s}` : ""} ]`;
}
o(Ft, "inspectTypedArray");
function Ig(e, t) {
  let r7 = e.toJSON();
  if (r7 === null)
    return "Invalid Date";
  let n = r7.split("T"), i = n[0];
  return t.stylize(`${i}T${et(n[1], t.truncate - i.length - 1)}`, "date");
}
o(Ig, "inspectDate");
function ol(e, t) {
  let r7 = e[Symbol.toStringTag] || "Function", n = e.name;
  return n ? t.stylize(`[${r7} ${et(n, t.truncate - 11)}]`, "special") : t.stylize(`[${r7}]`, "special");
}
o(ol, "inspectFunction");
function m6([e, t], r7) {
  return r7.truncate -= 4, e = r7.inspect(e, r7), r7.truncate -= e.length, t = r7.inspect(t, r7), `${e} => ${t}`;
}
o(m6, "inspectMapEntry");
function h6(e) {
  let t = [];
  return e.forEach((r7, n) => {
    t.push([n, r7]);
  }), t;
}
o(h6, "mapToEntries");
function Mg(e, t) {
  return e.size === 0 ? "Map{}" : (t.truncate -= 7, `Map{ ${Fe$1(h6(e), t, m6)} }`);
}
o(Mg, "inspectMap");
var y6 = Number.isNaN || ((e) => e !== e);
function il(e, t) {
  return y6(e) ? t.stylize("NaN", "number") : e === 1 / 0 ? t.stylize("Infinity", "number") : e === -1 / 0 ? t.stylize("-Infinity", "number") : e === 0 ? t.stylize(1 / e === 1 / 0 ? "+0" : "-0", "number") : t.stylize(et(String(e), t.truncate), "number");
}
o(il, "inspectNumber");
function sl(e, t) {
  let r7 = et(e.toString(), t.truncate - 1);
  return r7 !== pr && (r7 += "n"), t.stylize(r7, "bigint");
}
o(sl, "inspectBigInt");
function Ng(e, t) {
  let r7 = e.toString().split("/")[2], n = t.truncate - (2 + r7.length), i = e.source;
  return t.stylize(`/${et(i, n)}/${r7}`, "regexp");
}
o(Ng, "inspectRegExp");
function b6(e) {
  let t = [];
  return e.forEach((r7) => {
    t.push(r7);
  }), t;
}
o(b6, "arrayFromSet");
function jg(e, t) {
  return e.size === 0 ? "Set{}" : (t.truncate -= 7, `Set{ ${Fe$1(b6(e), t)} }`);
}
o(jg, "inspectSet");
var G_ = new RegExp("['\\u0000-\\u001f\\u007f-\\u009f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]", "g"), g6 = {
  "\b": "\\b",
  "	": "\\t",
  "\n": "\\n",
  "\f": "\\f",
  "\r": "\\r",
  "'": "\\'",
  "\\": "\\\\"
}, v6 = 16;
function x6(e) {
  return g6[e] || `\\u${`0000${e.charCodeAt(0).toString(v6)}`.slice(-4)}`;
}
o(x6, "escape");
function al(e, t) {
  return G_.test(e) && (e = e.replace(G_, x6)), t.stylize(`'${et(e, t.truncate - 2)}'`, "string");
}
o(al, "inspectString");
function ll(e) {
  return "description" in Symbol.prototype ? e.description ? `Symbol(${e.description})` : "Symbol()" : e.toString();
}
o(ll, "inspectSymbol");
var W_ = /* @__PURE__ */ o(() => "Promise{…}", "getPromiseValue");
try {
  let { getPromiseDetails: e, kPending: t, kRejected: r7 } = process.binding("util");
  Array.isArray(e(Promise.resolve())) && (W_ = /* @__PURE__ */ o((n, i) => {
    let [s, a] = e(n);
    return s === t ? "Promise{<pending>}" : `Promise${s === r7 ? "!" : ""}{${i.inspect(a, i)}}`;
  }, "getPromiseValue"));
} catch {
}
var Y_ = W_;
function En(e, t) {
  let r7 = Object.getOwnPropertyNames(e), n = Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols(e) : [];
  if (r7.length === 0 && n.length === 0)
    return "{}";
  if (t.truncate -= 4, t.seen = t.seen || [], t.seen.includes(e))
    return "[Circular]";
  t.seen.push(e);
  let i = Fe$1(r7.map((l) => [l, e[l]]), t, fr), s = Fe$1(n.map((l) => [l, e[l]]), t, fr);
  t.seen.pop();
  let a = "";
  return i && s && (a = ", "), `{ ${i}${a}${s} }`;
}
o(En, "inspectObject");
var kg = typeof Symbol < "u" && Symbol.toStringTag ? Symbol.toStringTag : false;
function Lg(e, t) {
  let r7 = "";
  return kg && kg in e && (r7 = e[kg]), r7 = r7 || e.constructor.name, (!r7 || r7 === "_class") && (r7 = "<Anonymous Class>"), t.truncate -= r7.length, `${r7}${En(e, t)}`;
}
o(Lg, "inspectClass");
function Fg(e, t) {
  return e.length === 0 ? "Arguments[]" : (t.truncate -= 13, `Arguments[ ${Fe$1(e, t)} ]`);
}
o(Fg, "inspectArguments");
var w6 = [
  "stack",
  "line",
  "column",
  "name",
  "message",
  "fileName",
  "lineNumber",
  "columnNumber",
  "number",
  "description",
  "cause"
];
function Dg(e, t) {
  let r7 = Object.getOwnPropertyNames(e).filter((a) => w6.indexOf(a) === -1), n = e.name;
  t.truncate -= n.length;
  let i = "";
  if (typeof e.message == "string" ? i = et(e.message, t.truncate) : r7.unshift("message"), i = i ? `: ${i}` : "", t.truncate -= i.length + 5, t.seen = t.seen || [], t.seen.includes(e))
    return "[Circular]";
  t.seen.push(e);
  let s = Fe$1(r7.map((a) => [a, e[a]]), t, fr);
  return `${n}${i}${s ? ` { ${s} }` : ""}`;
}
o(Dg, "inspectObject");
function T6([e, t], r7) {
  return r7.truncate -= 3, t ? `${r7.stylize(String(e), "yellow")}=${r7.stylize(`"${t}"`, "string")}` : `${r7.stylize(String(e), "yellow")}`;
}
o(T6, "inspectAttribute");
function ul(e, t) {
  return Fe$1(e, t, R6, `
`);
}
o(ul, "inspectNodeCollection");
function R6(e, t) {
  switch (e.nodeType) {
    case 1:
      return cl(e, t);
    case 3:
      return t.inspect(e.data, t);
    default:
      return t.inspect(e, t);
  }
}
o(R6, "inspectNode");
function cl(e, t) {
  let r7 = e.getAttributeNames(), n = e.tagName.toLowerCase(), i = t.stylize(`<${n}`, "special"), s = t.stylize(">", "special"), a = t.stylize(
    `</${n}>`,
    "special"
  );
  t.truncate -= n.length * 2 + 5;
  let l = "";
  r7.length > 0 && (l += " ", l += Fe$1(r7.map((d) => [d, e.getAttribute(d)]), t, T6, " ")), t.truncate -= l.length;
  let u = t.truncate, c = ul(e.children, t);
  return c && c.length > u && (c = `${pr}(${e.children.length})`), `${i}${l}${s}${c}${a}`;
}
o(cl, "inspectHTML");
var S6 = typeof Symbol == "function" && typeof Symbol.for == "function", $g = S6 ? Symbol.for("chai/inspect") : "@@chai/inspect", Bg = Symbol.for("nodejs.util.inspect.custom"), K_ = /* @__PURE__ */ new WeakMap(), X_ = {}, J_ = {
  undefined: /* @__PURE__ */ o((e, t) => t.stylize("undefined", "undefined"), "undefined"),
  null: /* @__PURE__ */ o((e, t) => t.stylize("null", "null"), "null"),
  boolean: /* @__PURE__ */ o((e, t) => t.stylize(String(e), "boolean"), "boolean"),
  Boolean: /* @__PURE__ */ o((e, t) => t.stylize(String(e), "boolean"), "Boolean"),
  number: il,
  Number: il,
  bigint: sl,
  BigInt: sl,
  string: al,
  String: al,
  function: ol,
  Function: ol,
  symbol: ll,
  // A Symbol polyfill will return `Symbol` not `symbol` from typedetect
  Symbol: ll,
  Array: qg,
  Date: Ig,
  Map: Mg,
  Set: jg,
  RegExp: Ng,
  Promise: Y_,
  // WeakSet, WeakMap are totally opaque to us
  WeakSet: /* @__PURE__ */ o((e, t) => t.stylize("WeakSet{…}", "special"), "WeakSet"),
  WeakMap: /* @__PURE__ */ o((e, t) => t.stylize("WeakMap{…}", "special"), "WeakMap"),
  Arguments: Fg,
  Int8Array: Ft,
  Uint8Array: Ft,
  Uint8ClampedArray: Ft,
  Int16Array: Ft,
  Uint16Array: Ft,
  Int32Array: Ft,
  Uint32Array: Ft,
  Float32Array: Ft,
  Float64Array: Ft,
  Generator: /* @__PURE__ */ o(() => "", "Generator"),
  DataView: /* @__PURE__ */ o(() => "", "DataView"),
  ArrayBuffer: /* @__PURE__ */ o(() => "", "ArrayBuffer"),
  Error: Dg,
  HTMLCollection: ul,
  NodeList: ul
}, _6 = /* @__PURE__ */ o((e, t, r7) => $g in e && typeof e[$g] == "function" ? e[$g](t) : Bg in e && typeof e[Bg] == "function" ? e[Bg](
  t.depth,
  t
) : "inspect" in e && typeof e.inspect == "function" ? e.inspect(t.depth, t) : "constructor" in e && K_.has(e.constructor) ? K_.get(e.constructor)(
  e,
  t
) : X_[r7] ? X_[r7](e, t) : "", "inspectCustom"), C6 = Object.prototype.toString;
function dl(e, t = {}) {
  let r7 = z_(t, dl), { customInspect: n } = r7, i = e === null ? "null" : typeof e;
  if (i === "object" && (i = C6.call(e).slice(8, -1)), i in J_)
    return J_[i](e, r7);
  if (n && e) {
    let a = _6(e, r7, i);
    if (a)
      return typeof a == "string" ? a : dl(a, r7);
  }
  let s = e ? Object.getPrototypeOf(e) : false;
  return s === Object.prototype || s === null ? En(e, r7) : e && typeof HTMLElement == "function" && e instanceof HTMLElement ? cl(e, r7) : "constructor" in e ? e.constructor !== Object ? Lg(e, r7) : En(e, r7) : e === Object(e) ? En(e, r7) : r7.stylize(String(e), i);
}
o(dl, "inspect");
var { AsymmetricMatcher: A6, DOMCollection: O6, DOMElement: q6, Immutable: I6, ReactElement: M6, ReactTestComponent: N6 } = Yi, Q_ = [
  N6,
  M6,
  q6,
  O6,
  I6,
  A6
];
function Ye(e, t = 10, { maxLength: r7, ...n } = {}) {
  let i = r7 ?? 1e4, s;
  try {
    s = St$1(e, {
      maxDepth: t,
      escapeString: false,
      plugins: Q_,
      ...n
    });
  } catch {
    s = St$1(e, {
      callToJSON: false,
      maxDepth: t,
      escapeString: false,
      plugins: Q_,
      ...n
    });
  }
  return s.length >= i && t > 1 ? Ye(e, Math.floor(Math.min(t, Number.MAX_SAFE_INTEGER) / 2), {
    maxLength: r7,
    ...n
  }) : s;
}
o(Ye, "stringify");
var j6 = /%[sdjifoOc%]/g;
function Hg(...e) {
  if (typeof e[0] != "string") {
    let s = [];
    for (let a = 0; a < e.length; a++)
      s.push(wo(e[a], {
        depth: 0,
        colors: false
      }));
    return s.join(" ");
  }
  let t = e.length, r7 = 1, n = e[0], i = String(n).replace(j6, (s) => {
    if (s === "%%")
      return "%";
    if (r7 >= t)
      return s;
    switch (s) {
      case "%s": {
        let a = e[r7++];
        return typeof a == "bigint" ? `${a.toString()}n` : typeof a == "number" && a === 0 && 1 / a < 0 ? "-0" : typeof a == "object" && a !== null ? typeof a.toString == "function" && a.toString !== Object.prototype.toString ? a.toString() : wo(a, {
          depth: 0,
          colors: false
        }) : String(a);
      }
      case "%d": {
        let a = e[r7++];
        return typeof a == "bigint" ? `${a.toString()}n` : Number(a).toString();
      }
      case "%i": {
        let a = e[r7++];
        return typeof a == "bigint" ? `${a.toString()}n` : Number.parseInt(String(a)).toString();
      }
      case "%f":
        return Number.parseFloat(String(e[r7++])).toString();
      case "%o":
        return wo(e[r7++], {
          showHidden: true,
          showProxy: true
        });
      case "%O":
        return wo(e[r7++]);
      case "%c":
        return r7++, "";
      case "%j":
        try {
          return JSON.stringify(e[r7++]);
        } catch (a) {
          let l = a.message;
          if (l.includes("circular structure") || l.includes("cyclic structures") || l.includes("cyclic object"))
            return "[Circular]";
          throw a;
        }
      default:
        return s;
    }
  });
  for (let s = e[r7]; r7 < t; s = e[++r7])
    s === null || typeof s != "object" ? i += ` ${s}` : i += ` ${wo(s)}`;
  return i;
}
o(Hg, "format");
function wo(e, t = {}) {
  return t.truncate === 0 && (t.truncate = Number.POSITIVE_INFINITY), dl(e, t);
}
o(wo, "inspect");
function Z_(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
o(Z_, "getDefaultExportFromCjs");
function Dt$1(e, t, r7) {
  let n = typeof e;
  if (!r7.includes(n))
    throw new TypeError(`${t} value must be ${r7.join(" or ")}, received "${n}"`);
}
o(Dt$1, "assertTypes");
function To(e) {
  return e != null && typeof e == "object" && !Array.isArray(e);
}
o(To, "isObject");
function k6(e) {
  return e === Object.prototype || e === Function.prototype || e === RegExp.prototype;
}
o(k6, "isFinalObj");
function xn(e) {
  return Object.prototype.toString.apply(e).slice(8, -1);
}
o(xn, "getType");
function L6(e, t) {
  let r7 = typeof t == "function" ? t : (n) => t.add(n);
  Object.getOwnPropertyNames(e).forEach(r7), Object.getOwnPropertySymbols(e).forEach(r7);
}
o(L6, "collectOwnProperties");
function fl(e) {
  let t = /* @__PURE__ */ new Set();
  return k6(e) ? [] : (L6(e, t), Array.from(t));
}
o(fl, "getOwnProperties");
var eC = { forceWritable: false };
function ml(e, t = eC) {
  return pl(e, /* @__PURE__ */ new WeakMap(), t);
}
o(ml, "deepClone");
function pl(e, t, r7 = eC) {
  let n, i;
  if (t.has(e))
    return t.get(e);
  if (Array.isArray(e)) {
    for (i = Array.from({ length: n = e.length }), t.set(e, i); n--; )
      i[n] = pl(e[n], t, r7);
    return i;
  }
  if (Object.prototype.toString.call(e) === "[object Object]") {
    i = Object.create(Object.getPrototypeOf(e)), t.set(e, i);
    let s = fl(e);
    for (let a of s) {
      let l = Object.getOwnPropertyDescriptor(e, a);
      if (!l)
        continue;
      let u = pl(e[a], t, r7);
      r7.forceWritable ? Object.defineProperty(i, a, {
        enumerable: l.enumerable,
        configurable: true,
        writable: true,
        value: u
      }) : "get" in l ? Object.defineProperty(i, a, {
        ...l,
        get() {
          return u;
        }
      }) : Object.defineProperty(i, a, {
        ...l,
        value: u
      });
    }
    return i;
  }
  return e;
}
o(pl, "clone");
function Ug() {
}
o(Ug, "noop");
var tt$1 = -1, Ke$1 = 1, Ie$1 = 0, Qg = class Qg2 {
  constructor(t, r7) {
    __publicField(this, 0);
    __publicField(this, 1);
    this[0] = t, this[1] = r7;
  }
};
o(Qg, "Diff");
var Te = Qg;
function F6(e, t) {
  if (!e || !t || e.charAt(0) !== t.charAt(0))
    return 0;
  let r7 = 0, n = Math.min(e.length, t.length), i = n, s = 0;
  for (; r7 < i; )
    e.substring(s, i) === t.substring(s, i) ? (r7 = i, s = r7) : n = i, i = Math.floor((n - r7) / 2 + r7);
  return i;
}
o(F6, "diff_commonPrefix");
function yC(e, t) {
  if (!e || !t || e.charAt(e.length - 1) !== t.charAt(t.length - 1))
    return 0;
  let r7 = 0, n = Math.min(e.length, t.length), i = n, s = 0;
  for (; r7 < i; )
    e.substring(e.length - i, e.length - s) === t.substring(t.length - i, t.length - s) ? (r7 = i, s = r7) : n = i, i = Math.floor((n - r7) / 2 + r7);
  return i;
}
o(yC, "diff_commonSuffix");
function tC(e, t) {
  let r7 = e.length, n = t.length;
  if (r7 === 0 || n === 0)
    return 0;
  r7 > n ? e = e.substring(r7 - n) : r7 < n && (t = t.substring(0, r7));
  let i = Math.min(r7, n);
  if (e === t)
    return i;
  let s = 0, a = 1;
  for (; ; ) {
    let l = e.substring(i - a), u = t.indexOf(l);
    if (u === -1)
      return s;
    a += u, (u === 0 || e.substring(i - a) === t.substring(0, a)) && (s = a, a++);
  }
}
o(tC, "diff_commonOverlap_");
function D6(e) {
  let t = false, r7 = [], n = 0, i = null, s = 0, a = 0, l = 0, u = 0, c = 0;
  for (; s < e.length; )
    e[s][0] === Ie$1 ? (r7[n++] = s, a = u, l = c, u = 0, c = 0, i = e[s][1]) : (e[s][0] === Ke$1 ? u += e[s][1].length : c += e[s][1].length, i && i.length <= Math.max(a, l) && i.length <= Math.max(u, c) && (e.splice(r7[n - 1], 0, new Te(tt$1, i)), e[r7[n - 1] + 1][0] = Ke$1, n--, n--, s = n > 0 ? r7[n - 1] : -1, a = 0, l = 0, u = 0, c = 0, i = null, t = true)), s++;
  for (t && bC(e), H6(e), s = 1; s < e.length; ) {
    if (e[s - 1][0] === tt$1 && e[s][0] === Ke$1) {
      let d = e[s - 1][1], p5 = e[s][1], f = tC(d, p5), m = tC(p5, d);
      f >= m ? (f >= d.length / 2 || f >= p5.length / 2) && (e.splice(s, 0, new Te(Ie$1, p5.substring(0, f))), e[s - 1][1] = d.substring(0, d.length - f), e[s + 1][1] = p5.substring(f), s++) : (m >= d.length / 2 || m >= p5.length / 2) && (e.splice(s, 0, new Te(Ie$1, d.substring(0, m))), e[s - 1][0] = Ke$1, e[s - 1][1] = p5.substring(0, p5.length - m), e[s + 1][0] = tt$1, e[s + 1][1] = d.substring(m), s++), s++;
    }
    s++;
  }
}
o(D6, "diff_cleanupSemantic");
var rC = /[^a-z0-9]/i, nC = /\s/, oC = /[\r\n]/, $6 = /\n\r?\n$/, B6 = /^\r?\n\r?\n/;
function H6(e) {
  let t = 1;
  for (; t < e.length - 1; ) {
    if (e[t - 1][0] === Ie$1 && e[t + 1][0] === Ie$1) {
      let r7 = e[t - 1][1], n = e[t][1], i = e[t + 1][1], s = yC(r7, n);
      if (s) {
        let d = n.substring(n.length - s);
        r7 = r7.substring(0, r7.length - s), n = d + n.substring(0, n.length - s), i = d + i;
      }
      let a = r7, l = n, u = i, c = hl(r7, n) + hl(n, i);
      for (; n.charAt(0) === i.charAt(0); ) {
        r7 += n.charAt(0), n = n.substring(1) + i.charAt(0), i = i.substring(1);
        let d = hl(r7, n) + hl(n, i);
        d >= c && (c = d, a = r7, l = n, u = i);
      }
      e[t - 1][1] !== a && (a ? e[t - 1][1] = a : (e.splice(t - 1, 1), t--), e[t][1] = l, u ? e[t + 1][1] = u : (e.splice(t + 1, 1), t--));
    }
    t++;
  }
}
o(H6, "diff_cleanupSemanticLossless");
function bC(e) {
  e.push(new Te(Ie$1, ""));
  let t = 0, r7 = 0, n = 0, i = "", s = "", a;
  for (; t < e.length; )
    switch (e[t][0]) {
      case Ke$1:
        n++, s += e[t][1], t++;
        break;
      case tt$1:
        r7++, i += e[t][1], t++;
        break;
      case Ie$1:
        r7 + n > 1 ? (r7 !== 0 && n !== 0 && (a = F6(s, i), a !== 0 && (t - r7 - n > 0 && e[t - r7 - n - 1][0] === Ie$1 ? e[t - r7 - n - 1][1] += s.substring(0, a) : (e.splice(0, 0, new Te(Ie$1, s.substring(0, a))), t++), s = s.substring(a), i = i.substring(a)), a = yC(s, i), a !== 0 && (e[t][1] = s.substring(s.length - a) + e[t][1], s = s.substring(0, s.length - a), i = i.substring(0, i.length - a))), t -= r7 + n, e.splice(t, r7 + n), i.length && (e.splice(t, 0, new Te(tt$1, i)), t++), s.length && (e.splice(t, 0, new Te(Ke$1, s)), t++), t++) : t !== 0 && e[t - 1][0] === Ie$1 ? (e[t - 1][1] += e[t][1], e.splice(t, 1)) : t++, n = 0, r7 = 0, i = "", s = "";
        break;
    }
  e[e.length - 1][1] === "" && e.pop();
  let l = false;
  for (t = 1; t < e.length - 1; )
    e[t - 1][0] === Ie$1 && e[t + 1][0] === Ie$1 && (e[t][1].substring(e[t][1].length - e[t - 1][1].length) === e[t - 1][1] ? (e[t][1] = e[t - 1][1] + e[t][1].substring(0, e[t][1].length - e[t - 1][1].length), e[t + 1][1] = e[t - 1][1] + e[t + 1][1], e.splice(t - 1, 1), l = true) : e[t][1].substring(0, e[t + 1][1].length) === e[t + 1][1] && (e[t - 1][1] += e[t + 1][1], e[t][1] = e[t][1].substring(e[t + 1][1].length) + e[t + 1][1], e.splice(t + 1, 1), l = true)), t++;
  l && bC(e);
}
o(bC, "diff_cleanupMerge");
function hl(e, t) {
  if (!e || !t)
    return 6;
  let r7 = e.charAt(e.length - 1), n = t.charAt(0), i = r7.match(rC), s = n.match(rC), a = i && r7.match(nC), l = s && n.match(nC), u = a && r7.match(oC), c = l && n.match(oC), d = u && e.match($6), p5 = c && t.match(B6);
  return d || p5 ? 5 : u || c ? 4 : i && !a && l ? 3 : a || l ? 2 : i || s ? 1 : 0;
}
o(hl, "diff_cleanupSemanticScore_");
var gC = "Compared values have no visual difference.", U6 = "Compared values serialize to the same structure.\nPrinting internal object structure without calling `toJSON` instead.", yl = {}, iC;
function V6() {
  if (iC) return yl;
  iC = 1, Object.defineProperty(yl, "__esModule", {
    value: true
  }), yl.default = f;
  let e = "diff-sequences", t = 0, r7 = /* @__PURE__ */ o((m, h5, b, v5, g) => {
    let w5 = 0;
    for (; m < h5 && b < v5 && g(m, b); )
      m += 1, b += 1, w5 += 1;
    return w5;
  }, "countCommonItemsF"), n = /* @__PURE__ */ o((m, h5, b, v5, g) => {
    let w5 = 0;
    for (; m <= h5 && b <= v5 && g(h5, v5); )
      h5 -= 1, v5 -= 1, w5 += 1;
    return w5;
  }, "countCommonItemsR"), i = /* @__PURE__ */ o((m, h5, b, v5, g, w5, E) => {
    let R = 0, S = -m, P = w5[R], _5 = P;
    w5[R] += r7(
      P + 1,
      h5,
      v5 + P - S + 1,
      b,
      g
    );
    let C5 = m < E ? m : E;
    for (R += 1, S += 2; R <= C5; R += 1, S += 2) {
      if (R !== m && _5 < w5[R])
        P = w5[R];
      else if (P = _5 + 1, h5 <= P)
        return R - 1;
      _5 = w5[R], w5[R] = P + r7(P + 1, h5, v5 + P - S + 1, b, g);
    }
    return E;
  }, "extendPathsF"), s = /* @__PURE__ */ o((m, h5, b, v5, g, w5, E) => {
    let R = 0, S = m, P = w5[R], _5 = P;
    w5[R] -= n(
      h5,
      P - 1,
      b,
      v5 + P - S - 1,
      g
    );
    let C5 = m < E ? m : E;
    for (R += 1, S -= 2; R <= C5; R += 1, S -= 2) {
      if (R !== m && w5[R] < _5)
        P = w5[R];
      else if (P = _5 - 1, P < h5)
        return R - 1;
      _5 = w5[R], w5[R] = P - n(
        h5,
        P - 1,
        b,
        v5 + P - S - 1,
        g
      );
    }
    return E;
  }, "extendPathsR"), a = /* @__PURE__ */ o((m, h5, b, v5, g, w5, E, R, S, P, _5) => {
    let C5 = v5 - h5, O = b - h5, q = g - v5 - O, D = -q - (m - 1), H = -q + (m - 1), M7 = t, U = m < R ? m : R;
    for (let N = 0, W = -m; N <= U; N += 1, W += 2) {
      let Y = N === 0 || N !== m && M7 < E[N], ae = Y ? E[N] : M7, pe2 = Y ? ae : ae + 1, Oe = C5 + pe2 - W, F = r7(
        pe2 + 1,
        b,
        Oe + 1,
        g,
        w5
      ), j = pe2 + F;
      if (M7 = E[N], E[N] = j, D <= W && W <= H) {
        let K7 = (m - 1 - (W + q)) / 2;
        if (K7 <= P && S[K7] - 1 <= j) {
          let G = C5 + ae - (Y ? W + 1 : W - 1), Z = n(
            h5,
            ae,
            v5,
            G,
            w5
          ), ve = ae - Z, qe2 = G - Z, Qe = ve + 1, vi = qe2 + 1;
          _5.nChangePreceding = m - 1, m - 1 === Qe + vi - h5 - v5 ? (_5.aEndPreceding = h5, _5.bEndPreceding = v5) : (_5.aEndPreceding = Qe, _5.bEndPreceding = vi), _5.nCommonPreceding = Z, Z !== 0 && (_5.aCommonPreceding = Qe, _5.bCommonPreceding = vi), _5.nCommonFollowing = F, F !== 0 && (_5.aCommonFollowing = pe2 + 1, _5.bCommonFollowing = Oe + 1);
          let bt2 = j + 1, we = Oe + F + 1;
          return _5.nChangeFollowing = m - 1, m - 1 === b + g - bt2 - we ? (_5.aStartFollowing = b, _5.bStartFollowing = g) : (_5.aStartFollowing = bt2, _5.bStartFollowing = we), true;
        }
      }
    }
    return false;
  }, "extendOverlappablePathsF"), l = /* @__PURE__ */ o((m, h5, b, v5, g, w5, E, R, S, P, _5) => {
    let C5 = g - b, O = b - h5, q = g - v5 - O, D = q - m, H = q + m, M7 = t, U = m < P ? m : P;
    for (let N = 0, W = m; N <= U; N += 1, W -= 2) {
      let Y = N === 0 || N !== m && S[N] < M7, ae = Y ? S[N] : M7, pe2 = Y ? ae : ae - 1, Oe = C5 + pe2 - W, F = n(
        h5,
        pe2 - 1,
        v5,
        Oe - 1,
        w5
      ), j = pe2 - F;
      if (M7 = S[N], S[N] = j, D <= W && W <= H) {
        let K7 = (m + (W - q)) / 2;
        if (K7 <= R && j - 1 <= E[K7]) {
          let G = Oe - F;
          if (_5.nChangePreceding = m, m === j + G - h5 - v5 ? (_5.aEndPreceding = h5, _5.bEndPreceding = v5) : (_5.aEndPreceding = j, _5.bEndPreceding = G), _5.nCommonPreceding = F, F !== 0 && (_5.aCommonPreceding = j, _5.bCommonPreceding = G), _5.nChangeFollowing = m - 1, m === 1)
            _5.nCommonFollowing = 0, _5.aStartFollowing = b, _5.bStartFollowing = g;
          else {
            let Z = C5 + ae - (Y ? W - 1 : W + 1), ve = r7(
              ae,
              b,
              Z,
              g,
              w5
            );
            _5.nCommonFollowing = ve, ve !== 0 && (_5.aCommonFollowing = ae, _5.bCommonFollowing = Z);
            let qe2 = ae + ve, Qe = Z + ve;
            m - 1 === b + g - qe2 - Qe ? (_5.aStartFollowing = b, _5.bStartFollowing = g) : (_5.aStartFollowing = qe2, _5.bStartFollowing = Qe);
          }
          return true;
        }
      }
    }
    return false;
  }, "extendOverlappablePathsR"), u = /* @__PURE__ */ o((m, h5, b, v5, g, w5, E, R, S) => {
    let P = v5 - h5, _5 = g - b, C5 = b - h5, O = g - v5, L = O - C5, q = C5, D = C5;
    if (E[0] = h5 - 1, R[0] = b, L % 2 === 0) {
      let H = (m || L) / 2, M7 = (C5 + O) / 2;
      for (let U = 1; U <= M7; U += 1)
        if (q = i(U, b, g, P, w5, E, q), U < H)
          D = s(U, h5, v5, _5, w5, R, D);
        else if (
          // If a reverse path overlaps a forward path in the same diagonal,
          // return a division of the index intervals at the middle change.
          l(
            U,
            h5,
            b,
            v5,
            g,
            w5,
            E,
            q,
            R,
            D,
            S
          )
        )
          return;
    } else {
      let H = ((m || L) + 1) / 2, M7 = (C5 + O + 1) / 2, U = 1;
      for (q = i(U, b, g, P, w5, E, q), U += 1; U <= M7; U += 1)
        if (D = s(
          U - 1,
          h5,
          v5,
          _5,
          w5,
          R,
          D
        ), U < H)
          q = i(U, b, g, P, w5, E, q);
        else if (
          // If a forward path overlaps a reverse path in the same diagonal,
          // return a division of the index intervals at the middle change.
          a(
            U,
            h5,
            b,
            v5,
            g,
            w5,
            E,
            q,
            R,
            D,
            S
          )
        )
          return;
    }
    throw new Error(
      `${e}: no overlap aStart=${h5} aEnd=${b} bStart=${v5} bEnd=${g}`
    );
  }, "divide"), c = /* @__PURE__ */ o((m, h5, b, v5, g, w5, E, R, S, P) => {
    if (g - v5 < b - h5) {
      if (w5 = !w5, w5 && E.length === 1) {
        let { foundSubsequence: j, isCommon: K7 } = E[0];
        E[1] = {
          foundSubsequence: /* @__PURE__ */ o((G, Z, ve) => {
            j(G, ve, Z);
          }, "foundSubsequence"),
          isCommon: /* @__PURE__ */ o((G, Z) => K7(Z, G), "isCommon")
        };
      }
      let Oe = h5, F = b;
      h5 = v5, b = g, v5 = Oe, g = F;
    }
    let { foundSubsequence: _5, isCommon: C5 } = E[w5 ? 1 : 0];
    u(
      m,
      h5,
      b,
      v5,
      g,
      C5,
      R,
      S,
      P
    );
    let {
      nChangePreceding: O,
      aEndPreceding: L,
      bEndPreceding: q,
      nCommonPreceding: D,
      aCommonPreceding: H,
      bCommonPreceding: M7,
      nCommonFollowing: U,
      aCommonFollowing: N,
      bCommonFollowing: W,
      nChangeFollowing: Y,
      aStartFollowing: ae,
      bStartFollowing: pe2
    } = P;
    h5 < L && v5 < q && c(
      O,
      h5,
      L,
      v5,
      q,
      w5,
      E,
      R,
      S,
      P
    ), D !== 0 && _5(D, H, M7), U !== 0 && _5(U, N, W), ae < b && pe2 < g && c(
      Y,
      ae,
      b,
      pe2,
      g,
      w5,
      E,
      R,
      S,
      P
    );
  }, "findSubsequences"), d = /* @__PURE__ */ o((m, h5) => {
    if (typeof h5 != "number")
      throw new TypeError(`${e}: ${m} typeof ${typeof h5} is not a number`);
    if (!Number.isSafeInteger(h5))
      throw new RangeError(`${e}: ${m} value ${h5} is not a safe integer`);
    if (h5 < 0)
      throw new RangeError(`${e}: ${m} value ${h5} is a negative integer`);
  }, "validateLength"), p5 = /* @__PURE__ */ o((m, h5) => {
    let b = typeof h5;
    if (b !== "function")
      throw new TypeError(`${e}: ${m} typeof ${b} is not a function`);
  }, "validateCallback");
  function f(m, h5, b, v5) {
    d("aLength", m), d("bLength", h5), p5("isCommon", b), p5("foundSubsequence", v5);
    let g = r7(0, m, 0, h5, b);
    if (g !== 0 && v5(g, 0, 0), m !== g || h5 !== g) {
      let w5 = g, E = g, R = n(
        w5,
        m - 1,
        E,
        h5 - 1,
        b
      ), S = m - R, P = h5 - R, _5 = g + R;
      m !== _5 && h5 !== _5 && c(
        0,
        w5,
        S,
        E,
        P,
        false,
        [
          {
            foundSubsequence: v5,
            isCommon: b
          }
        ],
        [t],
        [t],
        {
          aCommonFollowing: t,
          aCommonPreceding: t,
          aEndPreceding: t,
          aStartFollowing: t,
          bCommonFollowing: t,
          bCommonPreceding: t,
          bEndPreceding: t,
          bStartFollowing: t,
          nChangeFollowing: t,
          nChangePreceding: t,
          nCommonFollowing: t,
          nCommonPreceding: t
        }
      ), R !== 0 && v5(R, S, P);
    }
  }
  return o(f, "diffSequence"), yl;
}
o(V6, "requireBuild");
var z6 = V6(), vC = /* @__PURE__ */ Z_(z6);
function G6(e, t) {
  return e.replace(/\s+$/, (r7) => t(r7));
}
o(G6, "formatTrailingSpaces");
function Xg(e, t, r7, n, i, s) {
  return e.length !== 0 ? r7(`${n} ${G6(e, i)}`) : n !== " " ? r7(n) : t && s.length !== 0 ? r7(`${n} ${s}`) : "";
}
o(Xg, "printDiffLine");
function EC(e, t, { aColor: r7, aIndicator: n, changeLineTrailingSpaceColor: i, emptyFirstOrLastLinePlaceholder: s }) {
  return Xg(e, t, r7, n, i, s);
}
o(EC, "printDeleteLine");
function xC(e, t, { bColor: r7, bIndicator: n, changeLineTrailingSpaceColor: i, emptyFirstOrLastLinePlaceholder: s }) {
  return Xg(e, t, r7, n, i, s);
}
o(xC, "printInsertLine");
function wC(e, t, { commonColor: r7, commonIndicator: n, commonLineTrailingSpaceColor: i, emptyFirstOrLastLinePlaceholder: s }) {
  return Xg(e, t, r7, n, i, s);
}
o(wC, "printCommonLine");
function sC(e, t, r7, n, { patchColor: i }) {
  return i(`@@ -${e + 1},${t - e} +${r7 + 1},${n - r7} @@`);
}
o(sC, "createPatchMark");
function W6(e, t) {
  let r7 = e.length, n = t.contextLines, i = n + n, s = r7, a = false, l = 0, u = 0;
  for (; u !== r7; ) {
    let R = u;
    for (; u !== r7 && e[u][0] === Ie$1; )
      u += 1;
    if (R !== u)
      if (R === 0)
        u > n && (s -= u - n, a = true);
      else if (u === r7) {
        let S = u - R;
        S > n && (s -= S - n, a = true);
      } else {
        let S = u - R;
        S > i && (s -= S - i, l += 1);
      }
    for (; u !== r7 && e[u][0] !== Ie$1; )
      u += 1;
  }
  let c = l !== 0 || a;
  l !== 0 ? s += l + 1 : a && (s += 1);
  let d = s - 1, p5 = [], f = 0;
  c && p5.push("");
  let m = 0, h5 = 0, b = 0, v5 = 0, g = /* @__PURE__ */ o((R) => {
    let S = p5.length;
    p5.push(wC(R, S === 0 || S === d, t)), b += 1, v5 += 1;
  }, "pushCommonLine"), w5 = /* @__PURE__ */ o((R) => {
    let S = p5.length;
    p5.push(EC(R, S === 0 || S === d, t)), b += 1;
  }, "pushDeleteLine"), E = /* @__PURE__ */ o((R) => {
    let S = p5.length;
    p5.push(xC(R, S === 0 || S === d, t)), v5 += 1;
  }, "pushInsertLine");
  for (u = 0; u !== r7; ) {
    let R = u;
    for (; u !== r7 && e[u][0] === Ie$1; )
      u += 1;
    if (R !== u)
      if (R === 0) {
        u > n && (R = u - n, m = R, h5 = R, b = m, v5 = h5);
        for (let S = R; S !== u; S += 1)
          g(e[S][1]);
      } else if (u === r7) {
        let S = u - R > n ? R + n : u;
        for (let P = R; P !== S; P += 1)
          g(e[P][1]);
      } else {
        let S = u - R;
        if (S > i) {
          let P = R + n;
          for (let C5 = R; C5 !== P; C5 += 1)
            g(e[C5][1]);
          p5[f] = sC(m, b, h5, v5, t), f = p5.length, p5.push("");
          let _5 = S - i;
          m = b + _5, h5 = v5 + _5, b = m, v5 = h5;
          for (let C5 = u - n; C5 !== u; C5 += 1)
            g(e[C5][1]);
        } else
          for (let P = R; P !== u; P += 1)
            g(e[P][1]);
      }
    for (; u !== r7 && e[u][0] === tt$1; )
      w5(e[u][1]), u += 1;
    for (; u !== r7 && e[u][0] === Ke$1; )
      E(e[u][1]), u += 1;
  }
  return c && (p5[f] = sC(m, b, h5, v5, t)), p5.join(`
`);
}
o(W6, "joinAlignedDiffsNoExpand");
function Y6(e, t) {
  return e.map((r7, n, i) => {
    let s = r7[1], a = n === 0 || n === i.length - 1;
    switch (r7[0]) {
      case tt$1:
        return EC(s, a, t);
      case Ke$1:
        return xC(s, a, t);
      default:
        return wC(s, a, t);
    }
  }).join(`
`);
}
o(Y6, "joinAlignedDiffsExpand");
var Vg = /* @__PURE__ */ o((e) => e, "noColor"), TC = 5, K6 = 0;
function X6() {
  return {
    aAnnotation: "Expected",
    aColor: Ee.green,
    aIndicator: "-",
    bAnnotation: "Received",
    bColor: Ee.red,
    bIndicator: "+",
    changeColor: Ee.inverse,
    changeLineTrailingSpaceColor: Vg,
    commonColor: Ee.dim,
    commonIndicator: " ",
    commonLineTrailingSpaceColor: Vg,
    compareKeys: void 0,
    contextLines: TC,
    emptyFirstOrLastLinePlaceholder: "",
    expand: false,
    includeChangeCounts: false,
    omitAnnotationLines: false,
    patchColor: Ee.yellow,
    printBasicPrototype: false,
    truncateThreshold: K6,
    truncateAnnotation: "... Diff result is truncated",
    truncateAnnotationColor: Vg
  };
}
o(X6, "getDefaultOptions");
function J6(e) {
  return e && typeof e == "function" ? e : void 0;
}
o(J6, "getCompareKeys");
function Q6(e) {
  return typeof e == "number" && Number.isSafeInteger(e) && e >= 0 ? e : TC;
}
o(Q6, "getContextLines");
function wn(e = {}) {
  return {
    ...X6(),
    ...e,
    compareKeys: J6(e.compareKeys),
    contextLines: Q6(e.contextLines)
  };
}
o(wn, "normalizeDiffOptions");
function Ro(e) {
  return e.length === 1 && e[0].length === 0;
}
o(Ro, "isEmptyString");
function Z6(e) {
  let t = 0, r7 = 0;
  return e.forEach((n) => {
    switch (n[0]) {
      case tt$1:
        t += 1;
        break;
      case Ke$1:
        r7 += 1;
        break;
    }
  }), {
    a: t,
    b: r7
  };
}
o(Z6, "countChanges");
function eW({ aAnnotation: e, aColor: t, aIndicator: r7, bAnnotation: n, bColor: i, bIndicator: s, includeChangeCounts: a, omitAnnotationLines: l }, u) {
  if (l)
    return "";
  let c = "", d = "";
  if (a) {
    let m = String(u.a), h5 = String(u.b), b = n.length - e.length, v5 = " ".repeat(Math.max(0, b)), g = " ".repeat(Math.max(0, -b)), w5 = h5.length - m.length, E = " ".repeat(Math.max(0, w5)), R = " ".repeat(Math.max(0, -w5));
    c = `${v5}  ${r7} ${E}${m}`, d = `${g}  ${s} ${R}${h5}`;
  }
  let p5 = `${r7} ${e}${c}`, f = `${s} ${n}${d}`;
  return `${t(p5)}
${i(f)}

`;
}
o(eW, "printAnnotation");
function Jg(e, t, r7) {
  return eW(r7, Z6(e)) + (r7.expand ? Y6(e, r7) : W6(e, r7)) + (t ? r7.truncateAnnotationColor(`
${r7.truncateAnnotation}`) : "");
}
o(Jg, "printDiffLines");
function gl(e, t, r7) {
  let n = wn(r7), [i, s] = RC(Ro(e) ? [] : e, Ro(t) ? [] : t, n);
  return Jg(i, s, n);
}
o(gl, "diffLinesUnified");
function tW(e, t, r7, n, i) {
  if (Ro(e) && Ro(r7) && (e = [], r7 = []), Ro(t) && Ro(n) && (t = [], n = []), e.length !== r7.length || t.length !== n.length)
    return gl(e, t, i);
  let [s, a] = RC(r7, n, i), l = 0, u = 0;
  return s.forEach((c) => {
    switch (c[0]) {
      case tt$1:
        c[1] = e[l], l += 1;
        break;
      case Ke$1:
        c[1] = t[u], u += 1;
        break;
      default:
        c[1] = t[u], l += 1, u += 1;
    }
  }), Jg(s, a, wn(i));
}
o(tW, "diffLinesUnified2");
function RC(e, t, r7) {
  let n = r7?.truncateThreshold ?? false, i = Math.max(Math.floor(r7?.truncateThreshold ?? 0), 0), s = n ? Math.min(e.length, i) : e.length, a = n ? Math.min(t.length, i) : t.length, l = s !== e.length || a !== t.length, u = /* @__PURE__ */ o((m, h5) => e[m] === t[h5], "isCommon"), c = [], d = 0, p5 = 0;
  for (vC(s, a, u, /* @__PURE__ */ o((m, h5, b) => {
    for (; d !== h5; d += 1)
      c.push(new Te(tt$1, e[d]));
    for (; p5 !== b; p5 += 1)
      c.push(new Te(Ke$1, t[p5]));
    for (; m !== 0; m -= 1, d += 1, p5 += 1)
      c.push(new Te(Ie$1, t[p5]));
  }, "foundSubsequence")); d !== s; d += 1)
    c.push(new Te(tt$1, e[d]));
  for (; p5 !== a; p5 += 1)
    c.push(new Te(Ke$1, t[p5]));
  return [c, l];
}
o(RC, "diffLinesRaw");
function aC(e) {
  if (e === void 0)
    return "undefined";
  if (e === null)
    return "null";
  if (Array.isArray(e))
    return "array";
  if (typeof e == "boolean")
    return "boolean";
  if (typeof e == "function")
    return "function";
  if (typeof e == "number")
    return "number";
  if (typeof e == "string")
    return "string";
  if (typeof e == "bigint")
    return "bigint";
  if (typeof e == "object") {
    if (e != null) {
      if (e.constructor === RegExp)
        return "regexp";
      if (e.constructor === Map)
        return "map";
      if (e.constructor === Set)
        return "set";
      if (e.constructor === Date)
        return "date";
    }
    return "object";
  } else if (typeof e == "symbol")
    return "symbol";
  throw new Error(`value of unknown type: ${e}`);
}
o(aC, "getType");
function lC(e) {
  return e.includes(`\r
`) ? `\r
` : `
`;
}
o(lC, "getNewLineSymbol");
function rW(e, t, r7) {
  let n = r7?.truncateThreshold ?? false, i = Math.max(Math.floor(r7?.truncateThreshold ?? 0), 0), s = e.length, a = t.length;
  if (n) {
    let m = e.includes(`
`), h5 = t.includes(`
`), b = lC(e), v5 = lC(t), g = m ? `${e.split(b, i).join(b)}
` : e, w5 = h5 ? `${t.split(v5, i).join(v5)}
` : t;
    s = g.length, a = w5.length;
  }
  let l = s !== e.length || a !== t.length, u = /* @__PURE__ */ o((m, h5) => e[m] === t[h5], "isCommon"), c = 0, d = 0, p5 = [];
  return vC(s, a, u, /* @__PURE__ */ o((m, h5, b) => {
    c !== h5 && p5.push(new Te(tt$1, e.slice(c, h5))), d !== b && p5.push(new Te(Ke$1, t.slice(d, b))), c = h5 + m, d = b + m, p5.push(new Te(Ie$1, t.slice(
      b,
      d
    )));
  }, "foundSubsequence")), c !== s && p5.push(new Te(tt$1, e.slice(c))), d !== a && p5.push(new Te(Ke$1, t.slice(d))), [p5, l];
}
o(rW, "diffStrings");
function nW(e, t, r7) {
  return t.reduce((n, i) => n + (i[0] === Ie$1 ? i[1] : i[0] === e && i[1].length !== 0 ? r7(i[1]) : ""), "");
}
o(nW, "concatenateRelevantDiffs");
var Zg = class Zg2 {
  constructor(t, r7) {
    __publicField(this, "op");
    __publicField(this, "line");
    __publicField(this, "lines");
    __publicField(this, "changeColor");
    this.op = t, this.line = [], this.lines = [], this.changeColor = r7;
  }
  pushSubstring(t) {
    this.pushDiff(new Te(this.op, t));
  }
  pushLine() {
    this.lines.push(this.line.length !== 1 ? new Te(this.op, nW(this.op, this.line, this.changeColor)) : this.line[0][0] === this.op ? this.line[0] : new Te(this.op, this.line[0][1])), this.line.length = 0;
  }
  isLineEmpty() {
    return this.line.length === 0;
  }
  // Minor input to buffer.
  pushDiff(t) {
    this.line.push(t);
  }
  // Main input to buffer.
  align(t) {
    let r7 = t[1];
    if (r7.includes(`
`)) {
      let n = r7.split(`
`), i = n.length - 1;
      n.forEach((s, a) => {
        a < i ? (this.pushSubstring(s), this.pushLine()) : s.length !== 0 && this.pushSubstring(s);
      });
    } else
      this.pushDiff(t);
  }
  // Output from buffer.
  moveLinesTo(t) {
    this.isLineEmpty() || this.pushLine(), t.push(...this.lines), this.lines.length = 0;
  }
};
o(Zg, "ChangeBuffer");
var bl = Zg, ev = class ev2 {
  constructor(t, r7) {
    __publicField(this, "deleteBuffer");
    __publicField(this, "insertBuffer");
    __publicField(this, "lines");
    this.deleteBuffer = t, this.insertBuffer = r7, this.lines = [];
  }
  pushDiffCommonLine(t) {
    this.lines.push(t);
  }
  pushDiffChangeLines(t) {
    let r7 = t[1].length === 0;
    (!r7 || this.deleteBuffer.isLineEmpty()) && this.deleteBuffer.pushDiff(t), (!r7 || this.insertBuffer.isLineEmpty()) && this.insertBuffer.pushDiff(
      t
    );
  }
  flushChangeLines() {
    this.deleteBuffer.moveLinesTo(this.lines), this.insertBuffer.moveLinesTo(this.lines);
  }
  // Input to buffer.
  align(t) {
    let r7 = t[0], n = t[1];
    if (n.includes(`
`)) {
      let i = n.split(`
`), s = i.length - 1;
      i.forEach((a, l) => {
        if (l === 0) {
          let u = new Te(r7, a);
          this.deleteBuffer.isLineEmpty() && this.insertBuffer.isLineEmpty() ? (this.flushChangeLines(), this.pushDiffCommonLine(u)) : (this.pushDiffChangeLines(u), this.flushChangeLines());
        } else l < s ? this.pushDiffCommonLine(new Te(r7, a)) : a.length !== 0 && this.pushDiffChangeLines(new Te(r7, a));
      });
    } else
      this.pushDiffChangeLines(t);
  }
  // Output from buffer.
  getLines() {
    return this.flushChangeLines(), this.lines;
  }
};
o(ev, "CommonBuffer");
var Gg = ev;
function oW(e, t) {
  let r7 = new bl(tt$1, t), n = new bl(Ke$1, t), i = new Gg(r7, n);
  return e.forEach((s) => {
    switch (s[0]) {
      case tt$1:
        r7.align(s);
        break;
      case Ke$1:
        n.align(s);
        break;
      default:
        i.align(s);
    }
  }), i.getLines();
}
o(oW, "getAlignedDiffs");
function iW(e, t) {
  if (t) {
    let r7 = e.length - 1;
    return e.some((n, i) => n[0] === Ie$1 && (i !== r7 || n[1] !== `
`));
  }
  return e.some((r7) => r7[0] === Ie$1);
}
o(iW, "hasCommonDiff");
function sW(e, t, r7) {
  if (e !== t && e.length !== 0 && t.length !== 0) {
    let n = e.includes(`
`) || t.includes(`
`), [i, s] = SC(n ? `${e}
` : e, n ? `${t}
` : t, true, r7);
    if (iW(i, n)) {
      let a = wn(r7), l = oW(i, a.changeColor);
      return Jg(l, s, a);
    }
  }
  return gl(e.split(`
`), t.split(`
`), r7);
}
o(sW, "diffStringsUnified");
function SC(e, t, r7, n) {
  let [i, s] = rW(e, t, n);
  return r7 && D6(i), [i, s];
}
o(SC, "diffStringsRaw");
function Wg(e, t) {
  let { commonColor: r7 } = wn(t);
  return r7(e);
}
o(Wg, "getCommonMessage");
var { AsymmetricMatcher: aW, DOMCollection: lW, DOMElement: uW, Immutable: cW, ReactElement: dW, ReactTestComponent: pW } = Yi, _C = [
  pW,
  dW,
  uW,
  lW,
  cW,
  aW,
  Yi.Error
], Yg = {
  maxDepth: 20,
  plugins: _C
}, CC = {
  callToJSON: false,
  maxDepth: 8,
  plugins: _C
};
function Tn$1(e, t, r7) {
  if (Object.is(e, t))
    return "";
  let n = aC(e), i = n, s = false;
  if (n === "object" && typeof e.asymmetricMatch == "function") {
    if (e.$$typeof !== Symbol.for("jest.asymmetricMatcher") || typeof e.getExpectedType != "function")
      return;
    i = e.getExpectedType(), s = i === "string";
  }
  if (i !== aC(t)) {
    let v5 = function(E) {
      return E.length <= b ? E : `${E.slice(0, b)}...`;
    };
    o(v5, "truncate");
    let { aAnnotation: a, aColor: l, aIndicator: u, bAnnotation: c, bColor: d, bIndicator: p5 } = wn(r7), f = Kg(CC, r7), m = St$1(e, f), h5 = St$1(
      t,
      f
    ), b = 1e5;
    m = v5(m), h5 = v5(h5);
    let g = `${l(`${u} ${a}:`)} 
${m}`, w5 = `${d(`${p5} ${c}:`)} 
${h5}`;
    return `${g}

${w5}`;
  }
  if (!s)
    switch (n) {
      case "string":
        return gl(e.split(`
`), t.split(`
`), r7);
      case "boolean":
      case "number":
        return fW(e, t, r7);
      case "map":
        return zg(uC(e), uC(t), r7);
      case "set":
        return zg(cC(e), cC(t), r7);
      default:
        return zg(e, t, r7);
    }
}
o(Tn$1, "diff");
function fW(e, t, r7) {
  let n = St$1(e, Yg), i = St$1(t, Yg);
  return n === i ? "" : gl(n.split(`
`), i.split(`
`), r7);
}
o(fW, "comparePrimitive");
function uC(e) {
  return new Map(Array.from(e.entries()).sort());
}
o(uC, "sortMap");
function cC(e) {
  return new Set(Array.from(e.values()).sort());
}
o(cC, "sortSet");
function zg(e, t, r7) {
  let n, i = false;
  try {
    let a = Kg(Yg, r7);
    n = dC(e, t, a, r7);
  } catch {
    i = true;
  }
  let s = Wg(gC, r7);
  if (n === void 0 || n === s) {
    let a = Kg(CC, r7);
    n = dC(e, t, a, r7), n !== s && !i && (n = `${Wg(U6, r7)}

${n}`);
  }
  return n;
}
o(zg, "compareObjects");
function Kg(e, t) {
  let { compareKeys: r7, printBasicPrototype: n, maxDepth: i } = wn(t);
  return {
    ...e,
    compareKeys: r7,
    printBasicPrototype: n,
    maxDepth: i ?? e.maxDepth
  };
}
o(Kg, "getFormatOptions");
function dC(e, t, r7, n) {
  let i = {
    ...r7,
    indent: 0
  }, s = St$1(e, i), a = St$1(t, i);
  if (s === a)
    return Wg(gC, n);
  {
    let l = St$1(e, r7), u = St$1(t, r7);
    return tW(l.split(`
`), u.split(`
`), s.split(`
`), a.split(`
`), n);
  }
}
o(dC, "getObjectsDifference");
var pC = 2e4;
function fC(e) {
  return xn(e) === "Object" && typeof e.asymmetricMatch == "function";
}
o(fC, "isAsymmetricMatcher");
function mC(e, t) {
  let r7 = xn(e), n = xn(t);
  return r7 === n && (r7 === "Object" || r7 === "Array");
}
o(mC, "isReplaceable");
function vl(e, t, r7) {
  let { aAnnotation: n, bAnnotation: i } = wn(r7);
  if (typeof t == "string" && typeof e == "string" && t.length > 0 && e.length > 0 && t.length <= pC && e.length <= pC && t !== e) {
    if (t.includes(`
`) || e.includes(`
`))
      return sW(t, e, r7);
    let [d] = SC(t, e, true), p5 = d.some((b) => b[0] === Ie$1), f = mW(n, i), m = f(n) + bW(hC(d, tt$1, p5)), h5 = f(i) + yW(hC(d, Ke$1, p5));
    return `${m}
${h5}`;
  }
  let s = ml(t, { forceWritable: true }), a = ml(e, { forceWritable: true }), { replacedExpected: l, replacedActual: u } = PC(a, s);
  return Tn$1(l, u, r7);
}
o(vl, "printDiffOrStringify");
function PC(e, t, r7 = /* @__PURE__ */ new WeakSet(), n = /* @__PURE__ */ new WeakSet()) {
  return e instanceof Error && t instanceof Error && typeof e.cause < "u" && typeof t.cause > "u" ? (delete e.cause, {
    replacedActual: e,
    replacedExpected: t
  }) : mC(e, t) ? r7.has(e) || n.has(t) ? {
    replacedActual: e,
    replacedExpected: t
  } : (r7.add(e), n.add(t), fl(t).forEach((i) => {
    let s = t[i], a = e[i];
    if (fC(s))
      s.asymmetricMatch(a) && (e[i] = s);
    else if (fC(a))
      a.asymmetricMatch(s) && (t[i] = a);
    else if (mC(a, s)) {
      let l = PC(a, s, r7, n);
      e[i] = l.replacedActual, t[i] = l.replacedExpected;
    }
  }), {
    replacedActual: e,
    replacedExpected: t
  }) : {
    replacedActual: e,
    replacedExpected: t
  };
}
o(PC, "replaceAsymmetricMatcher");
function mW(...e) {
  let t = e.reduce((r7, n) => n.length > r7 ? n.length : r7, 0);
  return (r7) => `${r7}: ${" ".repeat(t - r7.length)}`;
}
o(mW, "getLabelPrinter");
var hW = "·";
function AC(e) {
  return e.replace(/\s+$/gm, (t) => hW.repeat(t.length));
}
o(AC, "replaceTrailingSpaces");
function yW(e) {
  return Ee.red(AC(Ye(e)));
}
o(yW, "printReceived");
function bW(e) {
  return Ee.green(AC(Ye(e)));
}
o(bW, "printExpected");
function hC(e, t, r7) {
  return e.reduce((n, i) => n + (i[0] === Ie$1 ? i[1] : i[0] === t ? r7 ? Ee.inverse(i[1]) : i[1] : ""), "");
}
o(hC, "getCommonAndChangedSubstrings");
var gW = "@@__IMMUTABLE_RECORD__@@", vW = "@@__IMMUTABLE_ITERABLE__@@";
function EW(e) {
  return e && (e[vW] || e[gW]);
}
o(EW, "isImmutable");
var xW = Object.getPrototypeOf({});
function OC(e) {
  return e instanceof Error ? `<unserializable>: ${e.message}` : typeof e == "string" ? `<unserializable>: ${e}` : "<unserializable>";
}
o(OC, "getUnserializableMessage");
function Nr$1(e, t = /* @__PURE__ */ new WeakMap()) {
  if (!e || typeof e == "string")
    return e;
  if (e instanceof Error && "toJSON" in e && typeof e.toJSON == "function") {
    let r7 = e.toJSON();
    return r7 && r7 !== e && typeof r7 == "object" && (typeof e.message == "string" && El(() => r7.message ?? (r7.message = e.message)), typeof e.stack == "string" && El(() => r7.stack ?? (r7.stack = e.stack)), typeof e.name == "string" && El(() => r7.name ?? (r7.name = e.name)), e.cause != null && El(() => r7.cause ?? (r7.cause = Nr$1(e.cause, t)))), Nr$1(r7, t);
  }
  if (typeof e == "function")
    return `Function<${e.name || "anonymous"}>`;
  if (typeof e == "symbol")
    return e.toString();
  if (typeof e != "object")
    return e;
  if (typeof Buffer < "u" && e instanceof Buffer)
    return `<Buffer(${e.length}) ...>`;
  if (typeof Uint8Array < "u" && e instanceof Uint8Array)
    return `<Uint8Array(${e.length}) ...>`;
  if (EW(e))
    return Nr$1(e.toJSON(), t);
  if (e instanceof Promise || e.constructor && e.constructor.prototype === "AsyncFunction")
    return "Promise";
  if (typeof Element < "u" && e instanceof Element)
    return e.tagName;
  if (typeof e.asymmetricMatch == "function")
    return `${e.toString()} ${Hg(e.sample)}`;
  if (typeof e.toJSON == "function")
    return Nr$1(e.toJSON(), t);
  if (t.has(e))
    return t.get(e);
  if (Array.isArray(e)) {
    let r7 = new Array(e.length);
    return t.set(e, r7), e.forEach((n, i) => {
      try {
        r7[i] = Nr$1(n, t);
      } catch (s) {
        r7[i] = OC(s);
      }
    }), r7;
  } else {
    let r7 = /* @__PURE__ */ Object.create(null);
    t.set(e, r7);
    let n = e;
    for (; n && n !== xW; )
      Object.getOwnPropertyNames(n).forEach((i) => {
        if (!(i in r7))
          try {
            r7[i] = Nr$1(e[i], t);
          } catch (s) {
            delete r7[i], r7[i] = OC(s);
          }
      }), n = Object.getPrototypeOf(n);
    return r7;
  }
}
o(Nr$1, "serializeValue");
function El(e) {
  try {
    return e();
  } catch {
  }
}
o(El, "safe");
function wW(e) {
  return e.replace(/__(vite_ssr_import|vi_import)_\d+__\./g, "");
}
o(wW, "normalizeErrorMessage");
function Ki(e, t, r7 = /* @__PURE__ */ new WeakSet()) {
  if (!e || typeof e != "object")
    return { message: String(e) };
  let n = e;
  (n.showDiff || n.showDiff === void 0 && n.expected !== void 0 && n.actual !== void 0) && (n.diff = vl(n.actual, n.expected, {
    ...t,
    ...n.diffOptions
  })), "expected" in n && typeof n.expected != "string" && (n.expected = Ye(n.expected, 10)), "actual" in n && typeof n.actual != "string" && (n.actual = Ye(n.actual, 10));
  try {
    typeof n.message == "string" && (n.message = wW(n.message));
  } catch {
  }
  try {
    !r7.has(n) && typeof n.cause == "object" && (r7.add(n), n.cause = Ki(n.cause, t, r7));
  } catch {
  }
  try {
    return Nr$1(n);
  } catch (i) {
    return Nr$1(new Error(`Failed to fully serialize error: ${i?.message}
Inner error message: ${n?.message}`));
  }
}
o(Ki, "processError");
var tr = {
  CALL: "storybook/instrumenter/call",
  SYNC: "storybook/instrumenter/sync",
  START: "storybook/instrumenter/start",
  BACK: "storybook/instrumenter/back",
  GOTO: "storybook/instrumenter/goto",
  NEXT: "storybook/instrumenter/next",
  END: "storybook/instrumenter/end"
};
var xl = globalThis.__STORYBOOK_ADDONS_PREVIEW;
var TW = new Error(
  "This function ran after the play function completed. Did you forget to `await` it?"
), qC = /* @__PURE__ */ o((e) => Object.prototype.toString.call(e) === "[object Object]", "isObject"), RW = /* @__PURE__ */ o((e) => Object.prototype.toString.call(e) === "[object Module]", "isModule"), SW = /* @__PURE__ */ o((e) => {
  if (!qC(e) && !RW(e))
    return false;
  if (e.constructor === void 0)
    return true;
  let t = e.constructor.prototype;
  return !!qC(t);
}, "isInstrumentable"), _W = /* @__PURE__ */ o((e) => {
  try {
    return new e.constructor();
  } catch {
    return {};
  }
}, "construct"), tv = /* @__PURE__ */ o(() => ({
  renderPhase: "preparing",
  isDebugging: false,
  isPlaying: false,
  isLocked: false,
  cursor: 0,
  calls: [],
  shadowCalls: [],
  callRefsByResult: /* @__PURE__ */ new Map(),
  chainedCallIds: /* @__PURE__ */ new Set(),
  ancestors: [],
  playUntil: void 0,
  resolvers: {},
  syncTimeout: void 0
}), "getInitialState"), IC = /* @__PURE__ */ o((e, t = false) => {
  let r7 = (t ? e.shadowCalls : e.calls).filter((i) => i.retain);
  if (!r7.length)
    return;
  let n = new Map(
    Array.from(e.callRefsByResult.entries()).filter(([, i]) => i.retain)
  );
  return { cursor: r7.length, calls: r7, callRefsByResult: n };
}, "getRetainedState"), nv = class nv2 {
  constructor() {
    this.detached = false;
    this.initialized = false;
    this.state = {};
    this.loadParentWindowState = /* @__PURE__ */ o(() => {
      try {
        this.state = k.window?.parent?.__STORYBOOK_ADDON_INTERACTIONS_INSTRUMENTER_STATE__ || {};
      } catch {
        this.detached = true;
      }
    }, "loadParentWindowState");
    this.updateParentWindowState = /* @__PURE__ */ o(() => {
      try {
        k.window.parent.__STORYBOOK_ADDON_INTERACTIONS_INSTRUMENTER_STATE__ = this.state;
      } catch {
        this.detached = true;
      }
    }, "updateParentWindowState");
    this.loadParentWindowState();
    let t = /* @__PURE__ */ o(({
      storyId: u,
      renderPhase: c,
      isPlaying: d = true,
      isDebugging: p5 = false
    }) => {
      let f = this.getState(u);
      this.setState(u, {
        ...tv(),
        ...IC(f, p5),
        renderPhase: c || f.renderPhase,
        shadowCalls: p5 ? f.shadowCalls : [],
        chainedCallIds: p5 ? f.chainedCallIds : /* @__PURE__ */ new Set(),
        playUntil: p5 ? f.playUntil : void 0,
        isPlaying: d,
        isDebugging: p5
      }), this.sync(u);
    }, "resetState"), r7 = /* @__PURE__ */ o((u) => ({ storyId: c, playUntil: d }) => {
      this.getState(c).isDebugging || this.setState(c, ({ calls: f }) => ({
        calls: [],
        shadowCalls: f.map((m) => ({ ...m, status: "waiting" })),
        isDebugging: true
      }));
      let p5 = this.getLog(c);
      this.setState(c, ({ shadowCalls: f }) => {
        if (d || !p5.length)
          return { playUntil: d };
        let m = f.findIndex((h5) => h5.id === p5[0].callId);
        return {
          playUntil: f.slice(0, m).filter((h5) => h5.interceptable && !h5.ancestors?.length).slice(-1)[0]?.id
        };
      }), u.emit(lo, { storyId: c, isDebugging: true });
    }, "start"), n = /* @__PURE__ */ o((u) => ({ storyId: c }) => {
      let d = this.getLog(c).filter((f) => !f.ancestors?.length), p5 = d.reduceRight((f, m, h5) => f >= 0 || m.status === "waiting" ? f : h5, -1);
      r7(u)({ storyId: c, playUntil: d[p5 - 1]?.callId });
    }, "back"), i = /* @__PURE__ */ o((u) => ({ storyId: c, callId: d }) => {
      let { calls: p5, shadowCalls: f, resolvers: m } = this.getState(c), h5 = p5.find(({ id: v5 }) => v5 === d), b = f.find(({ id: v5 }) => v5 === d);
      if (!h5 && b && Object.values(m).length > 0) {
        let v5 = this.getLog(c).find((g) => g.status === "waiting")?.callId;
        b.id !== v5 && this.setState(c, { playUntil: b.id }), Object.values(m).forEach((g) => g());
      } else
        r7(u)({ storyId: c, playUntil: d });
    }, "goto"), s = /* @__PURE__ */ o((u) => ({ storyId: c }) => {
      let { resolvers: d } = this.getState(c);
      if (Object.values(d).length > 0)
        Object.values(d).forEach((p5) => p5());
      else {
        let p5 = this.getLog(c).find((f) => f.status === "waiting")?.callId;
        p5 ? r7(u)({ storyId: c, playUntil: p5 }) : a({ storyId: c });
      }
    }, "next"), a = /* @__PURE__ */ o(({ storyId: u }) => {
      this.setState(u, { playUntil: void 0, isDebugging: false }), Object.values(this.getState(u).resolvers).forEach((c) => c());
    }, "end"), l = /* @__PURE__ */ o(({
      storyId: u,
      newPhase: c
    }) => {
      let { isDebugging: d } = this.getState(u);
      if (c === "preparing" && d)
        return t({ storyId: u, renderPhase: c });
      if (c === "playing")
        return t({ storyId: u, renderPhase: c, isDebugging: d });
      c === "played" ? this.setState(u, {
        renderPhase: c,
        isLocked: false,
        isPlaying: false,
        isDebugging: false
      }) : c === "errored" ? this.setState(u, {
        renderPhase: c,
        isLocked: false,
        isPlaying: false
      }) : c === "aborted" ? this.setState(u, {
        renderPhase: c,
        isLocked: true,
        isPlaying: false
      }) : this.setState(u, {
        renderPhase: c
      }), this.sync(u);
    }, "renderPhaseChanged");
    xl && xl.ready().then(() => {
      this.channel = xl.getChannel(), this.channel.on(lo, t), this.channel.on(jt, l), this.channel.on(_i, () => {
        this.initialized ? this.cleanup() : this.initialized = true;
      }), this.channel.on(tr.START, r7(this.channel)), this.channel.on(tr.BACK, n(this.channel)), this.channel.on(tr.GOTO, i(this.channel)), this.channel.on(tr.NEXT, s(this.channel)), this.channel.on(tr.END, a);
    });
  }
  getState(t) {
    return this.state[t] || tv();
  }
  setState(t, r7) {
    if (t) {
      let n = this.getState(t), i = typeof r7 == "function" ? r7(n) : r7;
      this.state = { ...this.state, [t]: { ...n, ...i } }, this.updateParentWindowState();
    }
  }
  cleanup() {
    this.state = Object.entries(this.state).reduce(
      (n, [i, s]) => {
        let a = IC(s);
        return a && (n[i] = Object.assign(tv(), a)), n;
      },
      {}
    );
    let r7 = { controlStates: {
      detached: this.detached,
      start: false,
      back: false,
      goto: false,
      next: false,
      end: false
    }, logItems: [] };
    this.channel?.emit(tr.SYNC, r7), this.updateParentWindowState();
  }
  getLog(t) {
    let { calls: r7, shadowCalls: n } = this.getState(t), i = [...n];
    r7.forEach((a, l) => {
      i[l] = a;
    });
    let s = /* @__PURE__ */ new Set();
    return i.reduceRight((a, l) => (l.args.forEach((u) => {
      u?.__callId__ && s.add(u.__callId__);
    }), l.path.forEach((u) => {
      u.__callId__ && s.add(u.__callId__);
    }), (l.interceptable || l.exception) && !s.has(l.id) && (a.unshift({ callId: l.id, status: l.status, ancestors: l.ancestors }), s.add(l.id)), a), []);
  }
  // Traverses the object structure to recursively patch all function properties.
  // Returns the original object, or a new object with the same constructor,
  // depending on whether it should mutate.
  instrument(t, r7, n = 0) {
    if (!SW(t))
      return t;
    let { mutate: i = false, path: s = [] } = r7, a = r7.getKeys ? r7.getKeys(t, n) : Object.keys(t);
    return n += 1, a.reduce(
      (l, u) => {
        let c = CW(t, u);
        if (typeof c?.get == "function") {
          if (c.configurable) {
            let p5 = /* @__PURE__ */ o(() => c?.get?.bind(t)?.(), "getter");
            Object.defineProperty(l, u, {
              get: /* @__PURE__ */ o(() => this.instrument(p5(), { ...r7, path: s.concat(u) }, n), "get")
            });
          }
          return l;
        }
        let d = t[u];
        return typeof d != "function" ? (l[u] = this.instrument(d, { ...r7, path: s.concat(u) }, n), l) : "__originalFn__" in d && typeof d.__originalFn__ == "function" ? (l[u] = d, l) : (l[u] = (...p5) => this.track(u, d, t, p5, r7), l[u].__originalFn__ = d, Object.defineProperty(
          l[u],
          "name",
          { value: u, writable: false }
        ), Object.keys(d).length > 0 && Object.assign(
          l[u],
          this.instrument({ ...d }, { ...r7, path: s.concat(u) }, n)
        ), l);
      },
      i ? t : _W(t)
    );
  }
  // Monkey patch an object method to record calls.
  // Returns a function that invokes the original function, records the invocation ("call") and
  // returns the original result.
  track(t, r7, n, i, s) {
    let a = i?.[0]?.__storyId__ || k.__STORYBOOK_PREVIEW__?.selectionStore?.selection?.storyId, { cursor: l, ancestors: u } = this.getState(
      a
    );
    this.setState(a, { cursor: l + 1 });
    let c = `${u.slice(-1)[0] || a} [${l}] ${t}`, { path: d = [], intercept: p5 = false, retain: f = false } = s, m = typeof p5 == "function" ? p5(
      t,
      d
    ) : p5, h5 = { id: c, cursor: l, storyId: a, ancestors: u, path: d, method: t, args: i, interceptable: m, retain: f }, v5 = (m && !u.length ? this.intercept : this.invoke).call(this, r7, n, h5, s);
    return this.instrument(v5, { ...s, mutate: true, path: [{ __callId__: h5.id }] });
  }
  intercept(t, r7, n, i) {
    let { chainedCallIds: s, isDebugging: a, playUntil: l } = this.getState(n.storyId), u = s.has(n.id);
    return !a || u || l ? (l === n.id && this.setState(n.storyId, { playUntil: void 0 }), this.invoke(t, r7, n, i)) : new Promise((c) => {
      this.setState(n.storyId, ({ resolvers: d }) => ({
        isLocked: false,
        resolvers: { ...d, [n.id]: c }
      }));
    }).then(() => (this.setState(n.storyId, (c) => {
      let { [n.id]: d, ...p5 } = c.resolvers;
      return { isLocked: true, resolvers: p5 };
    }), this.invoke(t, r7, n, i)));
  }
  invoke(t, r7, n, i) {
    let { callRefsByResult: s, renderPhase: a } = this.getState(n.storyId), l = 25, u = /* @__PURE__ */ o((p5, f, m) => {
      if (m.includes(p5))
        return "[Circular]";
      if (m = [...m, p5], f > l)
        return "...";
      if (s.has(p5))
        return s.get(p5);
      if (p5 instanceof Array)
        return p5.map((h5) => u(h5, ++f, m));
      if (p5 instanceof Date)
        return { __date__: { value: p5.toISOString() } };
      if (p5 instanceof Error) {
        let { name: h5, message: b, stack: v5 } = p5;
        return { __error__: { name: h5, message: b, stack: v5 } };
      }
      if (p5 instanceof RegExp) {
        let { flags: h5, source: b } = p5;
        return { __regexp__: { flags: h5, source: b } };
      }
      if (p5 instanceof k.window?.HTMLElement) {
        let { prefix: h5, localName: b, id: v5, classList: g, innerText: w5 } = p5, E = Array.from(g);
        return { __element__: { prefix: h5, localName: b, id: v5, classNames: E, innerText: w5 } };
      }
      return typeof p5 == "function" ? {
        __function__: { name: "getMockName" in p5 ? p5.getMockName() : p5.name }
      } : typeof p5 == "symbol" ? { __symbol__: { description: p5.description } } : typeof p5 == "object" && p5?.constructor?.name && p5?.constructor?.name !== "Object" ? { __class__: { name: p5.constructor.name } } : Object.prototype.toString.call(p5) === "[object Object]" ? Object.fromEntries(
        Object.entries(p5).map(([h5, b]) => [h5, u(b, ++f, m)])
      ) : p5;
    }, "serializeValues"), c = {
      ...n,
      args: n.args.map((p5) => u(p5, 0, []))
    };
    n.path.forEach((p5) => {
      p5?.__callId__ && this.setState(n.storyId, ({ chainedCallIds: f }) => ({
        chainedCallIds: new Set(Array.from(f).concat(p5.__callId__))
      }));
    });
    let d = /* @__PURE__ */ o((p5) => {
      if (p5 instanceof Error) {
        let { name: f, message: m, stack: h5, callId: b = n.id } = p5, {
          showDiff: v5 = void 0,
          diff: g = void 0,
          actual: w5 = void 0,
          expected: E = void 0
        } = p5.name === "AssertionError" ? Ki(p5) : p5, R = { name: f, message: m, stack: h5, callId: b, showDiff: v5, diff: g, actual: w5, expected: E };
        if (this.update({ ...c, status: "error", exception: R }), this.setState(n.storyId, (S) => ({
          callRefsByResult: new Map([
            ...Array.from(S.callRefsByResult.entries()),
            [p5, { __callId__: n.id, retain: n.retain }]
          ])
        })), n.ancestors?.length)
          throw Object.prototype.hasOwnProperty.call(p5, "callId") || Object.defineProperty(p5, "callId", { value: n.id }), p5;
      }
      throw p5;
    }, "handleException");
    try {
      if (a === "played" && !n.retain)
        throw TW;
      let f = (i.getArgs ? i.getArgs(n, this.getState(n.storyId)) : n.args).map((h5) => typeof h5 != "function" || PW(h5) || Object.keys(h5).length ? h5 : (...b) => {
        let { cursor: v5, ancestors: g } = this.getState(n.storyId);
        this.setState(n.storyId, { cursor: 0, ancestors: [...g, n.id] });
        let w5 = /* @__PURE__ */ o(() => this.setState(n.storyId, { cursor: v5, ancestors: g }), "restore"), E = false;
        try {
          let R = h5(...b);
          return R instanceof Promise ? (E = true, R.finally(w5)) : R;
        } finally {
          E || w5();
        }
      }), m = t.apply(r7, f);
      return m && ["object", "function", "symbol"].includes(typeof m) && this.setState(n.storyId, (h5) => ({
        callRefsByResult: new Map([
          ...Array.from(h5.callRefsByResult.entries()),
          [m, { __callId__: n.id, retain: n.retain }]
        ])
      })), this.update({
        ...c,
        status: m instanceof Promise ? "active" : "done"
      }), m instanceof Promise ? m.then((h5) => (this.update({ ...c, status: "done" }), h5), d) : m;
    } catch (p5) {
      return d(p5);
    }
  }
  // Sends the call info to the manager and synchronizes the log.
  update(t) {
    this.channel?.emit(tr.CALL, t), this.setState(t.storyId, ({ calls: r7 }) => {
      let n = r7.concat(t).reduce((i, s) => Object.assign(i, { [s.id]: s }), {});
      return {
        // Calls are sorted to ensure parent calls always come before calls in their callback.
        calls: Object.values(n).sort(
          (i, s) => i.id.localeCompare(s.id, void 0, { numeric: true })
        )
      };
    }), this.sync(t.storyId);
  }
  // Builds a log of interceptable calls and control states and sends it to the manager.
  // Uses a 0ms debounce because this might get called many times in one tick.
  sync(t) {
    let r7 = /* @__PURE__ */ o(() => {
      let { isLocked: n, isPlaying: i } = this.getState(t), s = this.getLog(t), a = s.filter(({ ancestors: p5 }) => !p5.length).find((p5) => p5.status === "waiting")?.callId, l = s.some((p5) => p5.status === "active");
      if (this.detached || n || l || s.length === 0) {
        let f = { controlStates: {
          detached: this.detached,
          start: false,
          back: false,
          goto: false,
          next: false,
          end: false
        }, logItems: s };
        this.channel?.emit(tr.SYNC, f);
        return;
      }
      let u = s.some(
        (p5) => p5.status === "done" || p5.status === "error"
      ), d = { controlStates: {
        detached: this.detached,
        start: u,
        back: u,
        goto: true,
        next: i,
        end: i
      }, logItems: s, pausedAt: a };
      this.channel?.emit(tr.SYNC, d);
    }, "synchronize");
    this.setState(t, ({ syncTimeout: n }) => (clearTimeout(n), { syncTimeout: setTimeout(r7, 0) }));
  }
};
o(nv, "Instrumenter");
var rv = nv;
function rr(e, t = {}) {
  try {
    let r7 = false, n = false;
    return k.window?.location?.search?.includes("instrument=true") ? r7 = true : k.window?.location?.search?.includes("instrument=false") && (n = true), k.window?.parent === k.window && !r7 || n ? e : (k.window && !k.window.__STORYBOOK_ADDON_INTERACTIONS_INSTRUMENTER__ && (k.window.__STORYBOOK_ADDON_INTERACTIONS_INSTRUMENTER__ = new rv()), (k.window?.__STORYBOOK_ADDON_INTERACTIONS_INSTRUMENTER__).instrument(e, t));
  } catch (r7) {
    return be.warn(r7), e;
  }
}
o(rr, "instrument");
function CW(e, t) {
  let r7 = e;
  for (; r7 != null; ) {
    let n = Object.getOwnPropertyDescriptor(r7, t);
    if (n)
      return n;
    r7 = Object.getPrototypeOf(r7);
  }
}
o(CW, "getPropertyDescriptor");
function PW(e) {
  if (typeof e != "function")
    return false;
  let t = Object.getOwnPropertyDescriptor(e, "prototype");
  return t ? !t.writable : false;
}
o(PW, "isClass");
var HC = Object.defineProperty, AW = Object.getOwnPropertyNames, I = /* @__PURE__ */ o(
  (e, t) => HC(e, "name", { value: t, configurable: true }),
  "__name"
), OW = /* @__PURE__ */ o((e, t) => /* @__PURE__ */ o(function() {
  return t || (0, e[AW(e)[0]])((t = { exports: {} }).exports, t), t.exports;
}, "__require"), "__commonJS"), Ev = /* @__PURE__ */ o((e, t) => {
  for (var r7 in t)
    HC(e, r7, { get: t[r7], enumerable: true });
}, "__export"), qW = OW({
  "(disabled):util"() {
  }
}), _t = {};
Ev(_t, {
  addChainableMethod: /* @__PURE__ */ o(() => Iv, "addChainableMethod"),
  addLengthGuard: /* @__PURE__ */ o(() => es, "addLengthGuard"),
  addMethod: /* @__PURE__ */ o(() => Av, "addMethod"),
  addProperty: /* @__PURE__ */ o(() => Pv, "addProperty"),
  checkError: /* @__PURE__ */ o(() => vt$1, "checkError"),
  compareByInspect: /* @__PURE__ */ o(() => Sl, "compareByInspect"),
  eql: /* @__PURE__ */ o(() => hP, "eql"),
  expectTypes: /* @__PURE__ */ o(() => KC, "expectTypes"),
  flag: /* @__PURE__ */ o(() => ee, "flag"),
  getActual: /* @__PURE__ */ o(() => Ol, "getActual"),
  getMessage: /* @__PURE__ */ o(() => Tv, "getMessage"),
  getName: /* @__PURE__ */ o(() => Il, "getName"),
  getOperator: /* @__PURE__ */ o(() => kv, "getOperator"),
  getOwnEnumerableProperties: /* @__PURE__ */ o(() => jv, "getOwnEnumerableProperties"),
  getOwnEnumerablePropertySymbols: /* @__PURE__ */ o(() => Nv, "getOwnEnumerablePropertySymbols"),
  getPathInfo: /* @__PURE__ */ o(() => Cv, "getPathInfo"),
  hasProperty: /* @__PURE__ */ o(() => ql, "hasProperty"),
  inspect: /* @__PURE__ */ o(() => le$1, "inspect"),
  isNaN: /* @__PURE__ */ o(() => _l, "isNaN"),
  isNumeric: /* @__PURE__ */ o(() => Ue$1, "isNumeric"),
  isProxyEnabled: /* @__PURE__ */ o(() => Zi, "isProxyEnabled"),
  isRegExp: /* @__PURE__ */ o(() => Cl, "isRegExp"),
  objDisplay: /* @__PURE__ */ o(() => Rn, "objDisplay"),
  overwriteChainableMethod: /* @__PURE__ */ o(() => Mv, "overwriteChainableMethod"),
  overwriteMethod: /* @__PURE__ */ o(() => qv, "overwriteMethod"),
  overwriteProperty: /* @__PURE__ */ o(() => Ov, "overwriteProperty"),
  proxify: /* @__PURE__ */ o(() => Po, "proxify"),
  test: /* @__PURE__ */ o(() => xv, "test"),
  transferFlags: /* @__PURE__ */ o(() => $t, "transferFlags"),
  type: /* @__PURE__ */ o(() => ye$1, "type")
});
var vt$1 = {};
Ev(vt$1, {
  compatibleConstructor: /* @__PURE__ */ o(() => zC, "compatibleConstructor"),
  compatibleInstance: /* @__PURE__ */ o(() => VC, "compatibleInstance"),
  compatibleMessage: /* @__PURE__ */ o(() => GC, "compatibleMessage"),
  getConstructorName: /* @__PURE__ */ o(() => WC, "getConstructorName"),
  getMessage: /* @__PURE__ */ o(() => YC, "getMessage")
});
function Al(e) {
  return e instanceof Error || Object.prototype.toString.call(e) === "[object Error]";
}
o(Al, "isErrorInstance");
I(Al, "isErrorInstance");
function UC(e) {
  return Object.prototype.toString.call(e) === "[object RegExp]";
}
o(UC, "isRegExp");
I(UC, "isRegExp");
function VC(e, t) {
  return Al(t) && e === t;
}
o(VC, "compatibleInstance");
I(VC, "compatibleInstance");
function zC(e, t) {
  return Al(t) ? e.constructor === t.constructor || e instanceof t.constructor : (typeof t == "object" || typeof t == "function") && t.prototype ? e.constructor === t || e instanceof t : false;
}
o(zC, "compatibleConstructor");
I(zC, "compatibleConstructor");
function GC(e, t) {
  let r7 = typeof e == "string" ? e : e.message;
  return UC(t) ? t.test(r7) : typeof t == "string" ? r7.indexOf(t) !== -1 : false;
}
o(GC, "compatibleMessage");
I(GC, "compatibleMessage");
function WC(e) {
  let t = e;
  return Al(e) ? t = e.constructor.name : typeof e == "function" && (t = e.name, t === "" && (t = new e().name || t)), t;
}
o(WC, "getConstructorName");
I(WC, "getConstructorName");
function YC(e) {
  let t = "";
  return e && e.message ? t = e.message : typeof e == "string" && (t = e), t;
}
o(YC, "getMessage");
I(YC, "getMessage");
function ee(e, t, r7) {
  var n = e.__flags || (e.__flags = /* @__PURE__ */ Object.create(null));
  if (arguments.length === 3)
    n[t] = r7;
  else
    return n[t];
}
o(ee, "flag");
I(ee, "flag");
function xv(e, t) {
  var r7 = ee(e, "negate"), n = t[0];
  return r7 ? !n : n;
}
o(xv, "test");
I(xv, "test");
function ye$1(e) {
  if (typeof e > "u")
    return "undefined";
  if (e === null)
    return "null";
  let t = e[Symbol.toStringTag];
  return typeof t == "string" ? t : Object.prototype.toString.call(e).slice(8, -1);
}
o(ye$1, "type");
I(ye$1, "type");
var IW = "captureStackTrace" in Error, kr$1, ue$1 = (kr$1 = class extends Error {
  constructor(t = "Unspecified AssertionError", r7, n) {
    super(t);
    __publicField(this, "message");
    this.message = t, IW && Error.captureStackTrace(this, n || kr$1);
    for (let i in r7)
      i in this || (this[i] = r7[i]);
  }
  get name() {
    return "AssertionError";
  }
  get ok() {
    return false;
  }
  toJSON(t) {
    return {
      ...this,
      name: this.name,
      message: this.message,
      ok: false,
      stack: t !== false ? this.stack : void 0
    };
  }
}, o(kr$1, "_AssertionError"), I(kr$1, "AssertionError"), kr$1);
function KC(e, t) {
  var r7 = ee(e, "message"), n = ee(e, "ssfi");
  r7 = r7 ? r7 + ": " : "", e = ee(e, "object"), t = t.map(function(a) {
    return a.toLowerCase();
  }), t.sort();
  var i = t.map(function(a, l) {
    var u = ~["a", "e", "i", "o", "u"].indexOf(a.charAt(0)) ? "an" : "a", c = t.length > 1 && l === t.length - 1 ? "or " : "";
    return c + u + " " + a;
  }).join(", "), s = ye$1(e).toLowerCase();
  if (!t.some(function(a) {
    return s === a;
  }))
    throw new ue$1(
      r7 + "object tested must be " + i + ", but " + s + " given",
      void 0,
      n
    );
}
o(KC, "expectTypes");
I(KC, "expectTypes");
function Ol(e, t) {
  return t.length > 4 ? t[4] : e._obj;
}
o(Ol, "getActual");
I(Ol, "getActual");
var MC = {
  bold: ["1", "22"],
  dim: ["2", "22"],
  italic: ["3", "23"],
  underline: ["4", "24"],
  // 5 & 6 are blinking
  inverse: ["7", "27"],
  hidden: ["8", "28"],
  strike: ["9", "29"],
  // 10-20 are fonts
  // 21-29 are resets for 1-9
  black: ["30", "39"],
  red: ["31", "39"],
  green: ["32", "39"],
  yellow: ["33", "39"],
  blue: ["34", "39"],
  magenta: ["35", "39"],
  cyan: ["36", "39"],
  white: ["37", "39"],
  brightblack: ["30;1", "39"],
  brightred: ["31;1", "39"],
  brightgreen: ["32;1", "39"],
  brightyellow: ["33;1", "39"],
  brightblue: ["34;1", "39"],
  brightmagenta: ["35;1", "39"],
  brightcyan: ["36;1", "39"],
  brightwhite: ["37;1", "39"],
  grey: ["90", "39"]
}, MW = {
  special: "cyan",
  number: "yellow",
  bigint: "yellow",
  boolean: "yellow",
  undefined: "grey",
  null: "bold",
  string: "green",
  symbol: "green",
  date: "magenta",
  regexp: "red"
}, _o = "…";
function XC(e, t) {
  let r7 = MC[MW[t]] || MC[t] || "";
  return r7 ? `\x1B[${r7[0]}m${String(e)}\x1B[${r7[1]}m` : String(e);
}
o(XC, "colorise");
I(XC, "colorise");
function JC({
  showHidden: e = false,
  depth: t = 2,
  colors: r7 = false,
  customInspect: n = true,
  showProxy: i = false,
  maxArrayLength: s = 1 / 0,
  breakLength: a = 1 / 0,
  seen: l = [],
  // eslint-disable-next-line no-shadow
  truncate: u = 1 / 0,
  stylize: c = String
} = {}, d) {
  let p5 = {
    showHidden: !!e,
    depth: Number(t),
    colors: !!r7,
    customInspect: !!n,
    showProxy: !!i,
    maxArrayLength: Number(s),
    breakLength: Number(a),
    truncate: Number(u),
    seen: l,
    inspect: d,
    stylize: c
  };
  return p5.colors && (p5.stylize = XC), p5;
}
o(JC, "normaliseOptions");
I(JC, "normaliseOptions");
function QC(e) {
  return e >= "\uD800" && e <= "\uDBFF";
}
o(QC, "isHighSurrogate");
I(QC, "isHighSurrogate");
function mr(e, t, r7 = _o) {
  e = String(e);
  let n = r7.length, i = e.length;
  if (n > t && i > n)
    return r7;
  if (i > t && i > n) {
    let s = t - n;
    return s > 0 && QC(e[s - 1]) && (s = s - 1), `${e.slice(0, s)}${r7}`;
  }
  return e;
}
o(mr, "truncate");
I(mr, "truncate");
function Ct(e, t, r7, n = ", ") {
  r7 = r7 || t.inspect;
  let i = e.length;
  if (i === 0)
    return "";
  let s = t.truncate, a = "", l = "", u = "";
  for (let c = 0; c < i; c += 1) {
    let d = c + 1 === e.length, p5 = c + 2 === e.length;
    u = `${_o}(${e.length - c})`;
    let f = e[c];
    t.truncate = s - a.length - (d ? 0 : n.length);
    let m = l || r7(f, t) + (d ? "" : n), h5 = a.length + m.length, b = h5 + u.length;
    if (d && h5 > s && a.length + u.length <= s || !d && !p5 && b > s || (l = d ? "" : r7(e[c + 1], t) + (p5 ? "" : n), !d && p5 && b > s && h5 + l.length > s))
      break;
    if (a += m, !d && !p5 && h5 + l.length >= s) {
      u = `${_o}(${e.length - c - 1})`;
      break;
    }
    u = "";
  }
  return `${a}${u}`;
}
o(Ct, "inspectList");
I(Ct, "inspectList");
function ZC(e) {
  return e.match(/^[a-zA-Z_][a-zA-Z_0-9]*$/) ? e : JSON.stringify(e).replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'");
}
o(ZC, "quoteComplexKey");
I(ZC, "quoteComplexKey");
function Co([e, t], r7) {
  return r7.truncate -= 2, typeof e == "string" ? e = ZC(e) : typeof e != "number" && (e = `[${r7.inspect(e, r7)}]`), r7.truncate -= e.length, t = r7.inspect(t, r7), `${e}: ${t}`;
}
o(Co, "inspectProperty");
I(Co, "inspectProperty");
function eP(e, t) {
  let r7 = Object.keys(e).slice(e.length);
  if (!e.length && !r7.length)
    return "[]";
  t.truncate -= 4;
  let n = Ct(e, t);
  t.truncate -= n.length;
  let i = "";
  return r7.length && (i = Ct(r7.map((s) => [s, e[s]]), t, Co)), `[ ${n}${i ? `, ${i}` : ""} ]`;
}
o(eP, "inspectArray");
I(eP, "inspectArray");
var NW = /* @__PURE__ */ I((e) => typeof Buffer == "function" && e instanceof Buffer ? "Buffer" : e[Symbol.toStringTag] ? e[Symbol.toStringTag] : e.constructor.name, "getArrayName");
function nr(e, t) {
  let r7 = NW(e);
  t.truncate -= r7.length + 4;
  let n = Object.keys(e).slice(e.length);
  if (!e.length && !n.length)
    return `${r7}[]`;
  let i = "";
  for (let a = 0; a < e.length; a++) {
    let l = `${t.stylize(mr(e[a], t.truncate), "number")}${a === e.length - 1 ? "" : ", "}`;
    if (t.truncate -= l.length, e[a] !== e.length && t.truncate <= 3) {
      i += `${_o}(${e.length - e[a] + 1})`;
      break;
    }
    i += l;
  }
  let s = "";
  return n.length && (s = Ct(n.map((a) => [a, e[a]]), t, Co)), `${r7}[ ${i}${s ? `, ${s}` : ""} ]`;
}
o(nr, "inspectTypedArray");
I(nr, "inspectTypedArray");
function tP(e, t) {
  let r7 = e.toJSON();
  if (r7 === null)
    return "Invalid Date";
  let n = r7.split("T"), i = n[0];
  return t.stylize(`${i}T${mr(n[1], t.truncate - i.length - 1)}`, "date");
}
o(tP, "inspectDate");
I(tP, "inspectDate");
function sv(e, t) {
  let r7 = e[Symbol.toStringTag] || "Function", n = e.name;
  return n ? t.stylize(`[${r7} ${mr(n, t.truncate - 11)}]`, "special") : t.stylize(`[${r7}]`, "special");
}
o(sv, "inspectFunction");
I(sv, "inspectFunction");
function rP([e, t], r7) {
  return r7.truncate -= 4, e = r7.inspect(e, r7), r7.truncate -= e.length, t = r7.inspect(t, r7), `${e} => ${t}`;
}
o(rP, "inspectMapEntry");
I(rP, "inspectMapEntry");
function nP(e) {
  let t = [];
  return e.forEach((r7, n) => {
    t.push([n, r7]);
  }), t;
}
o(nP, "mapToEntries");
I(nP, "mapToEntries");
function oP(e, t) {
  return e.size - 1 <= 0 ? "Map{}" : (t.truncate -= 7, `Map{ ${Ct(nP(e), t, rP)} }`);
}
o(oP, "inspectMap");
I(oP, "inspectMap");
var jW = Number.isNaN || ((e) => e !== e);
function av(e, t) {
  return jW(e) ? t.stylize("NaN", "number") : e === 1 / 0 ? t.stylize("Infinity", "number") : e === -1 / 0 ? t.stylize("-Infinity", "number") : e === 0 ? t.stylize(1 / e === 1 / 0 ? "+0" : "-0", "number") : t.stylize(mr(String(e), t.truncate), "number");
}
o(av, "inspectNumber");
I(av, "inspectNumber");
function lv(e, t) {
  let r7 = mr(e.toString(), t.truncate - 1);
  return r7 !== _o && (r7 += "n"), t.stylize(r7, "bigint");
}
o(lv, "inspectBigInt");
I(lv, "inspectBigInt");
function iP(e, t) {
  let r7 = e.toString().split("/")[2], n = t.truncate - (2 + r7.length), i = e.source;
  return t.stylize(`/${mr(i, n)}/${r7}`, "regexp");
}
o(iP, "inspectRegExp");
I(iP, "inspectRegExp");
function sP(e) {
  let t = [];
  return e.forEach((r7) => {
    t.push(r7);
  }), t;
}
o(sP, "arrayFromSet");
I(sP, "arrayFromSet");
function aP(e, t) {
  return e.size === 0 ? "Set{}" : (t.truncate -= 7, `Set{ ${Ct(sP(e), t)} }`);
}
o(aP, "inspectSet");
I(aP, "inspectSet");
var NC = new RegExp("['\\u0000-\\u001f\\u007f-\\u009f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]", "g"), kW = {
  "\b": "\\b",
  "	": "\\t",
  "\n": "\\n",
  "\f": "\\f",
  "\r": "\\r",
  "'": "\\'",
  "\\": "\\\\"
}, LW = 16;
function lP(e) {
  return kW[e] || `\\u${`0000${e.charCodeAt(0).toString(LW)}`.slice(-4)}`;
}
o(lP, "escape");
I(lP, "escape");
function uv(e, t) {
  return NC.test(e) && (e = e.replace(NC, lP)), t.stylize(`'${mr(e, t.truncate - 2)}'`, "string");
}
o(uv, "inspectString");
I(uv, "inspectString");
function cv(e) {
  return "description" in Symbol.prototype ? e.description ? `Symbol(${e.description})` : "Symbol()" : e.toString();
}
o(cv, "inspectSymbol");
I(cv, "inspectSymbol");
var uP = /* @__PURE__ */ I(() => "Promise{…}", "getPromiseValue");
try {
  let { getPromiseDetails: e, kPending: t, kRejected: r7 } = process.binding("util");
  Array.isArray(e(Promise.resolve())) && (uP = /* @__PURE__ */ I((n, i) => {
    let [s, a] = e(n);
    return s === t ? "Promise{<pending>}" : `Promise${s === r7 ? "!" : ""}{${i.inspect(a, i)}}`;
  }, "getPromiseValue"));
} catch {
}
var DW = uP;
function Ji(e, t) {
  let r7 = Object.getOwnPropertyNames(e), n = Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols(e) : [];
  if (r7.length === 0 && n.length === 0)
    return "{}";
  if (t.truncate -= 4, t.seen = t.seen || [], t.seen.includes(e))
    return "[Circular]";
  t.seen.push(e);
  let i = Ct(r7.map((l) => [l, e[l]]), t, Co), s = Ct(n.map((l) => [l, e[l]]), t, Co);
  t.seen.pop();
  let a = "";
  return i && s && (a = ", "), `{ ${i}${a}${s} }`;
}
o(Ji, "inspectObject");
I(Ji, "inspectObject");
var ov = typeof Symbol < "u" && Symbol.toStringTag ? Symbol.toStringTag : false;
function cP(e, t) {
  let r7 = "";
  return ov && ov in e && (r7 = e[ov]), r7 = r7 || e.constructor.name, (!r7 || r7 === "_class") && (r7 = "<Anonymous Class>"), t.truncate -= r7.length, `${r7}${Ji(e, t)}`;
}
o(cP, "inspectClass");
I(cP, "inspectClass");
function dP(e, t) {
  return e.length === 0 ? "Arguments[]" : (t.truncate -= 13, `Arguments[ ${Ct(e, t)} ]`);
}
o(dP, "inspectArguments");
I(dP, "inspectArguments");
var $W = [
  "stack",
  "line",
  "column",
  "name",
  "message",
  "fileName",
  "lineNumber",
  "columnNumber",
  "number",
  "description",
  "cause"
];
function pP(e, t) {
  let r7 = Object.getOwnPropertyNames(e).filter((a) => $W.indexOf(a) === -1), n = e.name;
  t.truncate -= n.length;
  let i = "";
  if (typeof e.message == "string" ? i = mr(e.message, t.truncate) : r7.unshift("message"), i = i ? `: ${i}` : "", t.truncate -= i.length + 5, t.seen = t.seen || [], t.seen.includes(e))
    return "[Circular]";
  t.seen.push(e);
  let s = Ct(r7.map((a) => [a, e[a]]), t, Co);
  return `${n}${i}${s ? ` { ${s} }` : ""}`;
}
o(pP, "inspectObject2");
I(pP, "inspectObject");
function fP([e, t], r7) {
  return r7.truncate -= 3, t ? `${r7.stylize(String(e), "yellow")}=${r7.stylize(`"${t}"`, "string")}` : `${r7.stylize(String(e), "yellow")}`;
}
o(fP, "inspectAttribute");
I(fP, "inspectAttribute");
function wl(e, t) {
  return Ct(e, t, wv, `
`);
}
o(wl, "inspectHTMLCollection");
I(wl, "inspectHTMLCollection");
function wv(e, t) {
  let r7 = e.getAttributeNames(), n = e.tagName.toLowerCase(), i = t.stylize(`<${n}`, "special"), s = t.stylize(">", "special"), a = t.stylize(
    `</${n}>`,
    "special"
  );
  t.truncate -= n.length * 2 + 5;
  let l = "";
  r7.length > 0 && (l += " ", l += Ct(r7.map((d) => [d, e.getAttribute(d)]), t, fP, " ")), t.truncate -= l.length;
  let u = t.truncate, c = wl(e.children, t);
  return c && c.length > u && (c = `${_o}(${e.children.length})`), `${i}${l}${s}${c}${a}`;
}
o(wv, "inspectHTML");
I(wv, "inspectHTML");
var BW = typeof Symbol == "function" && typeof Symbol.for == "function", iv = BW ? Symbol.for("chai/inspect") : "@@chai/inspect", So = false;
try {
  let e = qW();
  So = e.inspect ? e.inspect.custom : false;
} catch {
  So = false;
}
var jC = /* @__PURE__ */ new WeakMap(), kC = {}, LC = {
  undefined: /* @__PURE__ */ o((e, t) => t.stylize("undefined", "undefined"), "undefined"),
  null: /* @__PURE__ */ o((e, t) => t.stylize("null", "null"), "null"),
  boolean: /* @__PURE__ */ o((e, t) => t.stylize(String(e), "boolean"), "boolean"),
  Boolean: /* @__PURE__ */ o((e, t) => t.stylize(String(e), "boolean"), "Boolean"),
  number: av,
  Number: av,
  bigint: lv,
  BigInt: lv,
  string: uv,
  String: uv,
  function: sv,
  Function: sv,
  symbol: cv,
  // A Symbol polyfill will return `Symbol` not `symbol` from typedetect
  Symbol: cv,
  Array: eP,
  Date: tP,
  Map: oP,
  Set: aP,
  RegExp: iP,
  Promise: DW,
  // WeakSet, WeakMap are totally opaque to us
  WeakSet: /* @__PURE__ */ o((e, t) => t.stylize("WeakSet{…}", "special"), "WeakSet"),
  WeakMap: /* @__PURE__ */ o((e, t) => t.stylize("WeakMap{…}", "special"), "WeakMap"),
  Arguments: dP,
  Int8Array: nr,
  Uint8Array: nr,
  Uint8ClampedArray: nr,
  Int16Array: nr,
  Uint16Array: nr,
  Int32Array: nr,
  Uint32Array: nr,
  Float32Array: nr,
  Float64Array: nr,
  Generator: /* @__PURE__ */ o(() => "", "Generator"),
  DataView: /* @__PURE__ */ o(() => "", "DataView"),
  ArrayBuffer: /* @__PURE__ */ o(() => "", "ArrayBuffer"),
  Error: pP,
  HTMLCollection: wl,
  NodeList: wl
}, HW = /* @__PURE__ */ I((e, t, r7) => iv in e && typeof e[iv] == "function" ? e[iv](t) : So && So in e && typeof e[So] == "function" ? e[So](
  t.depth,
  t
) : "inspect" in e && typeof e.inspect == "function" ? e.inspect(t.depth, t) : "constructor" in e && jC.has(e.constructor) ? jC.get(
  e.constructor
)(e, t) : kC[r7] ? kC[r7](e, t) : "", "inspectCustom"), UW = Object.prototype.toString;
function Tl(e, t = {}) {
  let r7 = JC(t, Tl), { customInspect: n } = r7, i = e === null ? "null" : typeof e;
  if (i === "object" && (i = UW.call(e).slice(8, -1)), i in LC)
    return LC[i](e, r7);
  if (n && e) {
    let a = HW(e, r7, i);
    if (a)
      return typeof a == "string" ? a : Tl(a, r7);
  }
  let s = e ? Object.getPrototypeOf(e) : false;
  return s === Object.prototype || s === null ? Ji(e, r7) : e && typeof HTMLElement == "function" && e instanceof HTMLElement ? wv(e, r7) : "constructor" in e ? e.constructor !== Object ? cP(e, r7) : Ji(e, r7) : e === Object(e) ? Ji(e, r7) : r7.stylize(String(e), i);
}
o(Tl, "inspect");
I(Tl, "inspect");
var at$1 = {
  /**
   * ### config.includeStack
   *
   * User configurable property, influences whether stack trace
   * is included in Assertion error message. Default of false
   * suppresses stack trace in the error message.
   *
   *     chai.config.includeStack = true;  // enable stack on error
   *
   * @param {boolean}
   * @public
   */
  includeStack: false,
  /**
   * ### config.showDiff
   *
   * User configurable property, influences whether or not
   * the `showDiff` flag should be included in the thrown
   * AssertionErrors. `false` will always be `false`; `true`
   * will be true when the assertion has requested a diff
   * be shown.
   *
   * @param {boolean}
   * @public
   */
  showDiff: true,
  /**
   * ### config.truncateThreshold
   *
   * User configurable property, sets length threshold for actual and
   * expected values in assertion errors. If this threshold is exceeded, for
   * example for large data structures, the value is replaced with something
   * like `[ Array(3) ]` or `{ Object (prop1, prop2) }`.
   *
   * Set it to zero if you want to disable truncating altogether.
   *
   * This is especially userful when doing assertions on arrays: having this
   * set to a reasonable large value makes the failure messages readily
   * inspectable.
   *
   *     chai.config.truncateThreshold = 0;  // disable truncating
   *
   * @param {number}
   * @public
   */
  truncateThreshold: 40,
  /**
   * ### config.useProxy
   *
   * User configurable property, defines if chai will use a Proxy to throw
   * an error when a non-existent property is read, which protects users
   * from typos when using property-based assertions.
   *
   * Set it to false if you want to disable this feature.
   *
   *     chai.config.useProxy = false;  // disable use of Proxy
   *
   * This feature is automatically disabled regardless of this config value
   * in environments that don't support proxies.
   *
   * @param {boolean}
   * @public
   */
  useProxy: true,
  /**
   * ### config.proxyExcludedKeys
   *
   * User configurable property, defines which properties should be ignored
   * instead of throwing an error if they do not exist on the assertion.
   * This is only applied if the environment Chai is running in supports proxies and
   * if the `useProxy` configuration setting is enabled.
   * By default, `then` and `inspect` will not throw an error if they do not exist on the
   * assertion object because the `.inspect` property is read by `util.inspect` (for example, when
   * using `console.log` on the assertion object) and `.then` is necessary for promise type-checking.
   *
   *     // By default these keys will not throw an error if they do not exist on the assertion object
   *     chai.config.proxyExcludedKeys = ['then', 'inspect'];
   *
   * @param {Array}
   * @public
   */
  proxyExcludedKeys: ["then", "catch", "inspect", "toJSON"],
  /**
   * ### config.deepEqual
   *
   * User configurable property, defines which a custom function to use for deepEqual
   * comparisons.
   * By default, the function used is the one from the `deep-eql` package without custom comparator.
   *
   *     // use a custom comparator
   *     chai.config.deepEqual = (expected, actual) => {
   *         return chai.util.eql(expected, actual, {
   *             comparator: (expected, actual) => {
   *                 // for non number comparison, use the default behavior
   *                 if(typeof expected !== 'number') return null;
   *                 // allow a difference of 10 between compared numbers
   *                 return typeof actual === 'number' && Math.abs(actual - expected) < 10
   *             }
   *         })
   *     };
   *
   * @param {Function}
   * @public
   */
  deepEqual: null
};
function le$1(e, t, r7, n) {
  var i = {
    colors: n,
    depth: typeof r7 > "u" ? 2 : r7,
    showHidden: t,
    truncate: at$1.truncateThreshold ? at$1.truncateThreshold : 1 / 0
  };
  return Tl(e, i);
}
o(le$1, "inspect2");
I(le$1, "inspect");
function Rn(e) {
  var t = le$1(e), r7 = Object.prototype.toString.call(e);
  if (at$1.truncateThreshold && t.length >= at$1.truncateThreshold) {
    if (r7 === "[object Function]")
      return !e.name || e.name === "" ? "[Function]" : "[Function: " + e.name + "]";
    if (r7 === "[object Array]")
      return "[ Array(" + e.length + ") ]";
    if (r7 === "[object Object]") {
      var n = Object.keys(e), i = n.length > 2 ? n.splice(0, 2).join(", ") + ", ..." : n.join(", ");
      return "{ Object (" + i + ") }";
    } else
      return t;
  } else
    return t;
}
o(Rn, "objDisplay");
I(Rn, "objDisplay");
function Tv(e, t) {
  var r7 = ee(e, "negate"), n = ee(e, "object"), i = t[3], s = Ol(e, t), a = r7 ? t[2] : t[1], l = ee(e, "message");
  return typeof a == "function" && (a = a()), a = a || "", a = a.replace(/#\{this\}/g, function() {
    return Rn(n);
  }).replace(/#\{act\}/g, function() {
    return Rn(s);
  }).replace(/#\{exp\}/g, function() {
    return Rn(i);
  }), l ? l + ": " + a : a;
}
o(Tv, "getMessage2");
I(Tv, "getMessage");
function $t(e, t, r7) {
  var n = e.__flags || (e.__flags = /* @__PURE__ */ Object.create(null));
  t.__flags || (t.__flags = /* @__PURE__ */ Object.create(null)), r7 = arguments.length === 3 ? r7 : true;
  for (var i in n)
    (r7 || i !== "object" && i !== "ssfi" && i !== "lockSsfi" && i != "message") && (t.__flags[i] = n[i]);
}
o($t, "transferFlags");
I($t, "transferFlags");
function dv(e) {
  if (typeof e > "u")
    return "undefined";
  if (e === null)
    return "null";
  let t = e[Symbol.toStringTag];
  return typeof t == "string" ? t : Object.prototype.toString.call(e).slice(8, -1);
}
o(dv, "type2");
I(dv, "type");
function Rv() {
  this._key = "chai/deep-eql__" + Math.random() + Date.now();
}
o(Rv, "FakeMap");
I(Rv, "FakeMap");
Rv.prototype = {
  get: /* @__PURE__ */ I(/* @__PURE__ */ o(function(t) {
    return t[this._key];
  }, "get"), "get"),
  set: /* @__PURE__ */ I(/* @__PURE__ */ o(function(t, r7) {
    Object.isExtensible(t) && Object.defineProperty(t, this._key, {
      value: r7,
      configurable: true
    });
  }, "set"), "set")
};
var mP = typeof WeakMap == "function" ? WeakMap : Rv;
function pv(e, t, r7) {
  if (!r7 || Sn(e) || Sn(t))
    return null;
  var n = r7.get(e);
  if (n) {
    var i = n.get(t);
    if (typeof i == "boolean")
      return i;
  }
  return null;
}
o(pv, "memoizeCompare");
I(pv, "memoizeCompare");
function Xi(e, t, r7, n) {
  if (!(!r7 || Sn(e) || Sn(t))) {
    var i = r7.get(e);
    i ? i.set(t, n) : (i = new mP(), i.set(t, n), r7.set(e, i));
  }
}
o(Xi, "memoizeSet");
I(Xi, "memoizeSet");
var hP = Qi;
function Qi(e, t, r7) {
  if (r7 && r7.comparator)
    return fv(e, t, r7);
  var n = Sv(e, t);
  return n !== null ? n : fv(e, t, r7);
}
o(Qi, "deepEqual");
I(Qi, "deepEqual");
function Sv(e, t) {
  return e === t ? e !== 0 || 1 / e === 1 / t : e !== e && // eslint-disable-line no-self-compare
  t !== t ? true : Sn(e) || Sn(t) ? false : null;
}
o(Sv, "simpleEqual");
I(Sv, "simpleEqual");
function fv(e, t, r7) {
  r7 = r7 || {}, r7.memoize = r7.memoize === false ? false : r7.memoize || new mP();
  var n = r7 && r7.comparator, i = pv(e, t, r7.memoize);
  if (i !== null)
    return i;
  var s = pv(t, e, r7.memoize);
  if (s !== null)
    return s;
  if (n) {
    var a = n(e, t);
    if (a === false || a === true)
      return Xi(e, t, r7.memoize, a), a;
    var l = Sv(e, t);
    if (l !== null)
      return l;
  }
  var u = dv(e);
  if (u !== dv(t))
    return Xi(e, t, r7.memoize, false), false;
  Xi(e, t, r7.memoize, true);
  var c = yP(e, t, u, r7);
  return Xi(e, t, r7.memoize, c), c;
}
o(fv, "extensiveDeepEqual");
I(fv, "extensiveDeepEqual");
function yP(e, t, r7, n) {
  switch (r7) {
    case "String":
    case "Number":
    case "Boolean":
    case "Date":
      return Qi(e.valueOf(), t.valueOf());
    case "Promise":
    case "Symbol":
    case "function":
    case "WeakMap":
    case "WeakSet":
      return e === t;
    case "Error":
      return _v(e, t, ["name", "message", "code"], n);
    case "Arguments":
    case "Int8Array":
    case "Uint8Array":
    case "Uint8ClampedArray":
    case "Int16Array":
    case "Uint16Array":
    case "Int32Array":
    case "Uint32Array":
    case "Float32Array":
    case "Float64Array":
    case "Array":
      return jr$1(e, t, n);
    case "RegExp":
      return bP(e, t);
    case "Generator":
      return gP(e, t, n);
    case "DataView":
      return jr$1(new Uint8Array(e.buffer), new Uint8Array(t.buffer), n);
    case "ArrayBuffer":
      return jr$1(new Uint8Array(e), new Uint8Array(t), n);
    case "Set":
      return mv(e, t, n);
    case "Map":
      return mv(e, t, n);
    case "Temporal.PlainDate":
    case "Temporal.PlainTime":
    case "Temporal.PlainDateTime":
    case "Temporal.Instant":
    case "Temporal.ZonedDateTime":
    case "Temporal.PlainYearMonth":
    case "Temporal.PlainMonthDay":
      return e.equals(t);
    case "Temporal.Duration":
      return e.total("nanoseconds") === t.total("nanoseconds");
    case "Temporal.TimeZone":
    case "Temporal.Calendar":
      return e.toString() === t.toString();
    default:
      return EP(e, t, n);
  }
}
o(yP, "extensiveDeepEqualByType");
I(yP, "extensiveDeepEqualByType");
function bP(e, t) {
  return e.toString() === t.toString();
}
o(bP, "regexpEqual");
I(bP, "regexpEqual");
function mv(e, t, r7) {
  try {
    if (e.size !== t.size)
      return false;
    if (e.size === 0)
      return true;
  } catch {
    return false;
  }
  var n = [], i = [];
  return e.forEach(/* @__PURE__ */ I(/* @__PURE__ */ o(function(a, l) {
    n.push([a, l]);
  }, "gatherEntries"), "gatherEntries")), t.forEach(/* @__PURE__ */ I(/* @__PURE__ */ o(function(a, l) {
    i.push([a, l]);
  }, "gatherEntries"), "gatherEntries")), jr$1(n.sort(), i.sort(), r7);
}
o(mv, "entriesEqual");
I(mv, "entriesEqual");
function jr$1(e, t, r7) {
  var n = e.length;
  if (n !== t.length)
    return false;
  if (n === 0)
    return true;
  for (var i = -1; ++i < n; )
    if (Qi(e[i], t[i], r7) === false)
      return false;
  return true;
}
o(jr$1, "iterableEqual");
I(jr$1, "iterableEqual");
function gP(e, t, r7) {
  return jr$1(Rl(e), Rl(t), r7);
}
o(gP, "generatorEqual");
I(gP, "generatorEqual");
function vP(e) {
  return typeof Symbol < "u" && typeof e == "object" && typeof Symbol.iterator < "u" && typeof e[Symbol.iterator] == "function";
}
o(vP, "hasIteratorFunction");
I(vP, "hasIteratorFunction");
function hv(e) {
  if (vP(e))
    try {
      return Rl(e[Symbol.iterator]());
    } catch {
      return [];
    }
  return [];
}
o(hv, "getIteratorEntries");
I(hv, "getIteratorEntries");
function Rl(e) {
  for (var t = e.next(), r7 = [t.value]; t.done === false; )
    t = e.next(), r7.push(t.value);
  return r7;
}
o(Rl, "getGeneratorEntries");
I(Rl, "getGeneratorEntries");
function yv(e) {
  var t = [];
  for (var r7 in e)
    t.push(r7);
  return t;
}
o(yv, "getEnumerableKeys");
I(yv, "getEnumerableKeys");
function bv(e) {
  for (var t = [], r7 = Object.getOwnPropertySymbols(e), n = 0; n < r7.length; n += 1) {
    var i = r7[n];
    Object.getOwnPropertyDescriptor(e, i).enumerable && t.push(i);
  }
  return t;
}
o(bv, "getEnumerableSymbols");
I(bv, "getEnumerableSymbols");
function _v(e, t, r7, n) {
  var i = r7.length;
  if (i === 0)
    return true;
  for (var s = 0; s < i; s += 1)
    if (Qi(e[r7[s]], t[r7[s]], n) === false)
      return false;
  return true;
}
o(_v, "keysEqual");
I(_v, "keysEqual");
function EP(e, t, r7) {
  var n = yv(e), i = yv(t), s = bv(e), a = bv(t);
  if (n = n.concat(s), i = i.concat(a), n.length && n.length === i.length)
    return jr$1(gv(n).sort(), gv(i).sort()) === false ? false : _v(e, t, n, r7);
  var l = hv(e), u = hv(t);
  return l.length && l.length === u.length ? (l.sort(), u.sort(), jr$1(l, u, r7)) : n.length === 0 && l.length === 0 && i.length === 0 && u.length === 0;
}
o(EP, "objectEqual");
I(EP, "objectEqual");
function Sn(e) {
  return e === null || typeof e != "object";
}
o(Sn, "isPrimitive");
I(Sn, "isPrimitive");
function gv(e) {
  return e.map(/* @__PURE__ */ I(/* @__PURE__ */ o(function(r7) {
    return typeof r7 == "symbol" ? r7.toString() : r7;
  }, "mapSymbol"), "mapSymbol"));
}
o(gv, "mapSymbols");
I(gv, "mapSymbols");
function ql(e, t) {
  return typeof e > "u" || e === null ? false : t in Object(e);
}
o(ql, "hasProperty");
I(ql, "hasProperty");
function xP(e) {
  return e.replace(/([^\\])\[/g, "$1.[").match(/(\\\.|[^.]+?)+/g).map((n) => {
    if (n === "constructor" || n === "__proto__" || n === "prototype")
      return {};
    let s = /^\[(\d+)\]$/.exec(n), a = null;
    return s ? a = { i: parseFloat(s[1]) } : a = { p: n.replace(/\\([.[\]])/g, "$1") }, a;
  });
}
o(xP, "parsePath");
I(xP, "parsePath");
function vv(e, t, r7) {
  let n = e, i = null;
  r7 = typeof r7 > "u" ? t.length : r7;
  for (let s = 0; s < r7; s++) {
    let a = t[s];
    n && (typeof a.p > "u" ? n = n[a.i] : n = n[a.p], s === r7 - 1 && (i = n));
  }
  return i;
}
o(vv, "internalGetPathValue");
I(vv, "internalGetPathValue");
function Cv(e, t) {
  let r7 = xP(t), n = r7[r7.length - 1], i = {
    parent: r7.length > 1 ? vv(e, r7, r7.length - 1) : e,
    name: n.p || n.i,
    value: vv(e, r7)
  };
  return i.exists = ql(i.parent, i.name), i;
}
o(Cv, "getPathInfo");
I(Cv, "getPathInfo");
function T(e, t, r7, n) {
  return ee(this, "ssfi", r7 || T), ee(this, "lockSsfi", n), ee(this, "object", e), ee(this, "message", t), ee(this, "eql", at$1.deepEqual || hP), Po(this);
}
o(T, "Assertion");
I(T, "Assertion");
Object.defineProperty(T, "includeStack", {
  get: /* @__PURE__ */ o(function() {
    return console.warn(
      "Assertion.includeStack is deprecated, use chai.config.includeStack instead."
    ), at$1.includeStack;
  }, "get"),
  set: /* @__PURE__ */ o(function(e) {
    console.warn(
      "Assertion.includeStack is deprecated, use chai.config.includeStack instead."
    ), at$1.includeStack = e;
  }, "set")
});
Object.defineProperty(T, "showDiff", {
  get: /* @__PURE__ */ o(function() {
    return console.warn(
      "Assertion.showDiff is deprecated, use chai.config.showDiff instead."
    ), at$1.showDiff;
  }, "get"),
  set: /* @__PURE__ */ o(function(e) {
    console.warn(
      "Assertion.showDiff is deprecated, use chai.config.showDiff instead."
    ), at$1.showDiff = e;
  }, "set")
});
T.addProperty = function(e, t) {
  Pv(this.prototype, e, t);
};
T.addMethod = function(e, t) {
  Av(this.prototype, e, t);
};
T.addChainableMethod = function(e, t, r7) {
  Iv(this.prototype, e, t, r7);
};
T.overwriteProperty = function(e, t) {
  Ov(this.prototype, e, t);
};
T.overwriteMethod = function(e, t) {
  qv(this.prototype, e, t);
};
T.overwriteChainableMethod = function(e, t, r7) {
  Mv(this.prototype, e, t, r7);
};
T.prototype.assert = function(e, t, r7, n, i, s) {
  var a = xv(this, arguments);
  if (s !== false && (s = true), n === void 0 && i === void 0 && (s = false), at$1.showDiff !== true && (s = false), !a) {
    t = Tv(this, arguments);
    var l = Ol(this, arguments), u = {
      actual: l,
      expected: n,
      showDiff: s
    }, c = kv(this, arguments);
    throw c && (u.operator = c), new ue$1(
      t,
      u,
      at$1.includeStack ? this.assert : ee(this, "ssfi")
    );
  }
};
Object.defineProperty(T.prototype, "_obj", {
  get: /* @__PURE__ */ o(function() {
    return ee(this, "object");
  }, "get"),
  set: /* @__PURE__ */ o(function(e) {
    ee(this, "object", e);
  }, "set")
});
function Zi() {
  return at$1.useProxy && typeof Proxy < "u" && typeof Reflect < "u";
}
o(Zi, "isProxyEnabled");
I(Zi, "isProxyEnabled");
function Pv(e, t, r7) {
  r7 = r7 === void 0 ? function() {
  } : r7, Object.defineProperty(e, t, {
    get: /* @__PURE__ */ I(/* @__PURE__ */ o(function n() {
      !Zi() && !ee(this, "lockSsfi") && ee(this, "ssfi", n);
      var i = r7.call(this);
      if (i !== void 0)
        return i;
      var s = new T();
      return $t(this, s), s;
    }, "propertyGetter"), "propertyGetter"),
    configurable: true
  });
}
o(Pv, "addProperty");
I(Pv, "addProperty");
var VW = Object.getOwnPropertyDescriptor(function() {
}, "length");
function es(e, t, r7) {
  return VW.configurable && Object.defineProperty(e, "length", {
    get: /* @__PURE__ */ o(function() {
      throw Error(
        r7 ? "Invalid Chai property: " + t + '.length. Due to a compatibility issue, "length" cannot directly follow "' + t + '". Use "' + t + '.lengthOf" instead.' : "Invalid Chai property: " + t + '.length. See docs for proper usage of "' + t + '".'
      );
    }, "get")
  }), e;
}
o(es, "addLengthGuard");
I(es, "addLengthGuard");
function wP(e) {
  var t = Object.getOwnPropertyNames(e);
  function r7(i) {
    t.indexOf(i) === -1 && t.push(i);
  }
  o(r7, "addProperty2"), I(r7, "addProperty");
  for (var n = Object.getPrototypeOf(e); n !== null; )
    Object.getOwnPropertyNames(n).forEach(r7), n = Object.getPrototypeOf(n);
  return t;
}
o(wP, "getProperties");
I(wP, "getProperties");
var FC = ["__flags", "__methods", "_obj", "assert"];
function Po(e, t) {
  return Zi() ? new Proxy(e, {
    get: /* @__PURE__ */ I(/* @__PURE__ */ o(function r7(n, i) {
      if (typeof i == "string" && at$1.proxyExcludedKeys.indexOf(i) === -1 && !Reflect.has(n, i)) {
        if (t)
          throw Error(
            "Invalid Chai property: " + t + "." + i + '. See docs for proper usage of "' + t + '".'
          );
        var s = null, a = 4;
        throw wP(n).forEach(function(l) {
          if (
            // we actually mean to check `Object.prototype` here
            // eslint-disable-next-line no-prototype-builtins
            !Object.prototype.hasOwnProperty(l) && FC.indexOf(l) === -1
          ) {
            var u = TP(i, l, a);
            u < a && (s = l, a = u);
          }
        }), Error(
          s !== null ? "Invalid Chai property: " + i + '. Did you mean "' + s + '"?' : "Invalid Chai property: " + i
        );
      }
      return FC.indexOf(i) === -1 && !ee(n, "lockSsfi") && ee(n, "ssfi", r7), Reflect.get(n, i);
    }, "proxyGetter"), "proxyGetter")
  }) : e;
}
o(Po, "proxify");
I(Po, "proxify");
function TP(e, t, r7) {
  if (Math.abs(e.length - t.length) >= r7)
    return r7;
  var n = [];
  for (let s = 0; s <= e.length; s++)
    n[s] = Array(t.length + 1).fill(0), n[s][0] = s;
  for (let s = 0; s < t.length; s++)
    n[0][s] = s;
  for (let s = 1; s <= e.length; s++) {
    var i = e.charCodeAt(s - 1);
    for (let a = 1; a <= t.length; a++) {
      if (Math.abs(s - a) >= r7) {
        n[s][a] = r7;
        continue;
      }
      n[s][a] = Math.min(
        n[s - 1][a] + 1,
        n[s][a - 1] + 1,
        n[s - 1][a - 1] + (i === t.charCodeAt(a - 1) ? 0 : 1)
      );
    }
  }
  return n[e.length][t.length];
}
o(TP, "stringDistanceCapped");
I(TP, "stringDistanceCapped");
function Av(e, t, r7) {
  var n = /* @__PURE__ */ I(function() {
    ee(this, "lockSsfi") || ee(this, "ssfi", n);
    var i = r7.apply(this, arguments);
    if (i !== void 0)
      return i;
    var s = new T();
    return $t(this, s), s;
  }, "methodWrapper");
  es(n, t, false), e[t] = Po(n, t);
}
o(Av, "addMethod");
I(Av, "addMethod");
function Ov(e, t, r7) {
  var n = Object.getOwnPropertyDescriptor(e, t), i = /* @__PURE__ */ I(function() {
  }, "_super");
  n && typeof n.get == "function" && (i = n.get), Object.defineProperty(e, t, {
    get: /* @__PURE__ */ I(/* @__PURE__ */ o(function s() {
      !Zi() && !ee(this, "lockSsfi") && ee(this, "ssfi", s);
      var a = ee(this, "lockSsfi");
      ee(this, "lockSsfi", true);
      var l = r7(i).call(this);
      if (ee(this, "lockSsfi", a), l !== void 0)
        return l;
      var u = new T();
      return $t(this, u), u;
    }, "overwritingPropertyGetter"), "overwritingPropertyGetter"),
    configurable: true
  });
}
o(Ov, "overwriteProperty");
I(Ov, "overwriteProperty");
function qv(e, t, r7) {
  var n = e[t], i = /* @__PURE__ */ I(function() {
    throw new Error(t + " is not a function");
  }, "_super");
  n && typeof n == "function" && (i = n);
  var s = /* @__PURE__ */ I(function() {
    ee(this, "lockSsfi") || ee(this, "ssfi", s);
    var a = ee(this, "lockSsfi");
    ee(this, "lockSsfi", true);
    var l = r7(i).apply(this, arguments);
    if (ee(this, "lockSsfi", a), l !== void 0)
      return l;
    var u = new T();
    return $t(this, u), u;
  }, "overwritingMethodWrapper");
  es(s, t, false), e[t] = Po(s, t);
}
o(qv, "overwriteMethod");
I(qv, "overwriteMethod");
var zW = typeof Object.setPrototypeOf == "function", DC = /* @__PURE__ */ I(function() {
}, "testFn"), GW = Object.getOwnPropertyNames(DC).filter(function(e) {
  var t = Object.getOwnPropertyDescriptor(DC, e);
  return typeof t != "object" ? true : !t.configurable;
}), WW = Function.prototype.call, YW = Function.prototype.apply;
function Iv(e, t, r7, n) {
  typeof n != "function" && (n = /* @__PURE__ */ I(function() {
  }, "chainingBehavior"));
  var i = {
    method: r7,
    chainingBehavior: n
  };
  e.__methods || (e.__methods = {}), e.__methods[t] = i, Object.defineProperty(e, t, {
    get: /* @__PURE__ */ I(/* @__PURE__ */ o(function() {
      i.chainingBehavior.call(this);
      var a = /* @__PURE__ */ I(function() {
        ee(this, "lockSsfi") || ee(this, "ssfi", a);
        var c = i.method.apply(this, arguments);
        if (c !== void 0)
          return c;
        var d = new T();
        return $t(this, d), d;
      }, "chainableMethodWrapper");
      if (es(a, t, true), zW) {
        var l = Object.create(this);
        l.call = WW, l.apply = YW, Object.setPrototypeOf(a, l);
      } else {
        var u = Object.getOwnPropertyNames(e);
        u.forEach(function(c) {
          if (GW.indexOf(c) === -1) {
            var d = Object.getOwnPropertyDescriptor(e, c);
            Object.defineProperty(a, c, d);
          }
        });
      }
      return $t(this, a), Po(a);
    }, "chainableMethodGetter"), "chainableMethodGetter"),
    configurable: true
  });
}
o(Iv, "addChainableMethod");
I(Iv, "addChainableMethod");
function Mv(e, t, r7, n) {
  var i = e.__methods[t], s = i.chainingBehavior;
  i.chainingBehavior = /* @__PURE__ */ I(/* @__PURE__ */ o(function() {
    var u = n(s).call(this);
    if (u !== void 0)
      return u;
    var c = new T();
    return $t(this, c), c;
  }, "overwritingChainableMethodGetter"), "overwritingChainableMethodGetter");
  var a = i.method;
  i.method = /* @__PURE__ */ I(/* @__PURE__ */ o(function() {
    var u = r7(a).apply(this, arguments);
    if (u !== void 0)
      return u;
    var c = new T();
    return $t(this, c), c;
  }, "overwritingChainableMethodWrapper"), "overwritingChainableMethodWrapper");
}
o(Mv, "overwriteChainableMethod");
I(Mv, "overwriteChainableMethod");
function Sl(e, t) {
  return le$1(e) < le$1(t) ? -1 : 1;
}
o(Sl, "compareByInspect");
I(Sl, "compareByInspect");
function Nv(e) {
  return typeof Object.getOwnPropertySymbols != "function" ? [] : Object.getOwnPropertySymbols(e).filter(function(t) {
    return Object.getOwnPropertyDescriptor(e, t).enumerable;
  });
}
o(Nv, "getOwnEnumerablePropertySymbols");
I(Nv, "getOwnEnumerablePropertySymbols");
function jv(e) {
  return Object.keys(e).concat(Nv(e));
}
o(jv, "getOwnEnumerableProperties");
I(jv, "getOwnEnumerableProperties");
var _l = Number.isNaN;
function RP(e) {
  var t = ye$1(e), r7 = ["Array", "Object", "Function"];
  return r7.indexOf(t) !== -1;
}
o(RP, "isObjectType");
I(RP, "isObjectType");
function kv(e, t) {
  var r7 = ee(e, "operator"), n = ee(e, "negate"), i = t[3], s = n ? t[2] : t[1];
  if (r7)
    return r7;
  if (typeof s == "function" && (s = s()), s = s || "", !!s && !/\shave\s/.test(s)) {
    var a = RP(i);
    return /\snot\s/.test(s) ? a ? "notDeepStrictEqual" : "notStrictEqual" : a ? "deepStrictEqual" : "strictEqual";
  }
}
o(kv, "getOperator");
I(kv, "getOperator");
function Il(e) {
  return e.name;
}
o(Il, "getName");
I(Il, "getName");
function Cl(e) {
  return Object.prototype.toString.call(e) === "[object RegExp]";
}
o(Cl, "isRegExp2");
I(Cl, "isRegExp");
function Ue$1(e) {
  return ["Number", "BigInt"].includes(ye$1(e));
}
o(Ue$1, "isNumeric");
I(Ue$1, "isNumeric");
var { flag: A$1 } = _t;
[
  "to",
  "be",
  "been",
  "is",
  "and",
  "has",
  "have",
  "with",
  "that",
  "which",
  "at",
  "of",
  "same",
  "but",
  "does",
  "still",
  "also"
].forEach(function(e) {
  T.addProperty(e);
});
T.addProperty("not", function() {
  A$1(this, "negate", true);
});
T.addProperty("deep", function() {
  A$1(this, "deep", true);
});
T.addProperty("nested", function() {
  A$1(this, "nested", true);
});
T.addProperty("own", function() {
  A$1(this, "own", true);
});
T.addProperty("ordered", function() {
  A$1(this, "ordered", true);
});
T.addProperty("any", function() {
  A$1(this, "any", true), A$1(this, "all", false);
});
T.addProperty("all", function() {
  A$1(this, "all", true), A$1(this, "any", false);
});
var $C = {
  function: [
    "function",
    "asyncfunction",
    "generatorfunction",
    "asyncgeneratorfunction"
  ],
  asyncfunction: ["asyncfunction", "asyncgeneratorfunction"],
  generatorfunction: ["generatorfunction", "asyncgeneratorfunction"],
  asyncgeneratorfunction: ["asyncgeneratorfunction"]
};
function Lv(e, t) {
  t && A$1(this, "message", t), e = e.toLowerCase();
  var r7 = A$1(this, "object"), n = ~["a", "e", "i", "o", "u"].indexOf(e.charAt(0)) ? "an " : "a ";
  let i = ye$1(r7).toLowerCase();
  $C.function.includes(e) ? this.assert(
    $C[e].includes(i),
    "expected #{this} to be " + n + e,
    "expected #{this} not to be " + n + e
  ) : this.assert(
    e === i,
    "expected #{this} to be " + n + e,
    "expected #{this} not to be " + n + e
  );
}
o(Lv, "an");
I(Lv, "an");
T.addChainableMethod("an", Lv);
T.addChainableMethod("a", Lv);
function SP(e, t) {
  return _l(e) && _l(t) || e === t;
}
o(SP, "SameValueZero");
I(SP, "SameValueZero");
function ts() {
  A$1(this, "contains", true);
}
o(ts, "includeChainingBehavior");
I(ts, "includeChainingBehavior");
function rs(e, t) {
  t && A$1(this, "message", t);
  var r7 = A$1(this, "object"), n = ye$1(r7).toLowerCase(), i = A$1(this, "message"), s = A$1(this, "negate"), a = A$1(this, "ssfi"), l = A$1(this, "deep"), u = l ? "deep " : "", c = l ? A$1(this, "eql") : SP;
  i = i ? i + ": " : "";
  var d = false;
  switch (n) {
    case "string":
      d = r7.indexOf(e) !== -1;
      break;
    case "weakset":
      if (l)
        throw new ue$1(
          i + "unable to use .deep.include with WeakSet",
          void 0,
          a
        );
      d = r7.has(e);
      break;
    case "map":
      r7.forEach(function(h5) {
        d = d || c(h5, e);
      });
      break;
    case "set":
      l ? r7.forEach(function(h5) {
        d = d || c(h5, e);
      }) : d = r7.has(e);
      break;
    case "array":
      l ? d = r7.some(function(h5) {
        return c(h5, e);
      }) : d = r7.indexOf(e) !== -1;
      break;
    default:
      if (e !== Object(e))
        throw new ue$1(
          i + "the given combination of arguments (" + n + " and " + ye$1(e).toLowerCase() + ") is invalid for this assertion. You can use an array, a map, an object, a set, a string, or a weakset instead of a " + ye$1(e).toLowerCase(),
          void 0,
          a
        );
      var p5 = Object.keys(e), f = null, m = 0;
      if (p5.forEach(function(h5) {
        var b = new T(r7);
        if ($t(this, b, true), A$1(b, "lockSsfi", true), !s || p5.length === 1) {
          b.property(h5, e[h5]);
          return;
        }
        try {
          b.property(h5, e[h5]);
        } catch (v5) {
          if (!vt$1.compatibleConstructor(v5, ue$1))
            throw v5;
          f === null && (f = v5), m++;
        }
      }, this), s && p5.length > 1 && m === p5.length)
        throw f;
      return;
  }
  this.assert(
    d,
    "expected #{this} to " + u + "include " + le$1(e),
    "expected #{this} to not " + u + "include " + le$1(e)
  );
}
o(rs, "include");
I(rs, "include");
T.addChainableMethod("include", rs, ts);
T.addChainableMethod("contain", rs, ts);
T.addChainableMethod("contains", rs, ts);
T.addChainableMethod("includes", rs, ts);
T.addProperty("ok", function() {
  this.assert(
    A$1(this, "object"),
    "expected #{this} to be truthy",
    "expected #{this} to be falsy"
  );
});
T.addProperty("true", function() {
  this.assert(
    A$1(this, "object") === true,
    "expected #{this} to be true",
    "expected #{this} to be false",
    !A$1(this, "negate")
  );
});
T.addProperty("numeric", function() {
  let e = A$1(this, "object");
  this.assert(
    ["Number", "BigInt"].includes(ye$1(e)),
    "expected #{this} to be numeric",
    "expected #{this} to not be numeric",
    !A$1(this, "negate")
  );
});
T.addProperty("callable", function() {
  let e = A$1(this, "object"), t = A$1(this, "ssfi"), r7 = A$1(this, "message"), n = r7 ? `${r7}: ` : "", i = A$1(this, "negate"), s = i ? `${n}expected ${le$1(e)} not to be a callable function` : `${n}expected ${le$1(e)} to be a callable function`, a = [
    "Function",
    "AsyncFunction",
    "GeneratorFunction",
    "AsyncGeneratorFunction"
  ].includes(ye$1(e));
  if (a && i || !a && !i)
    throw new ue$1(s, void 0, t);
});
T.addProperty("false", function() {
  this.assert(
    A$1(this, "object") === false,
    "expected #{this} to be false",
    "expected #{this} to be true",
    !!A$1(this, "negate")
  );
});
T.addProperty("null", function() {
  this.assert(
    A$1(this, "object") === null,
    "expected #{this} to be null",
    "expected #{this} not to be null"
  );
});
T.addProperty("undefined", function() {
  this.assert(
    A$1(this, "object") === void 0,
    "expected #{this} to be undefined",
    "expected #{this} not to be undefined"
  );
});
T.addProperty("NaN", function() {
  this.assert(
    _l(A$1(this, "object")),
    "expected #{this} to be NaN",
    "expected #{this} not to be NaN"
  );
});
function Fv() {
  var e = A$1(this, "object");
  this.assert(
    e != null,
    "expected #{this} to exist",
    "expected #{this} to not exist"
  );
}
o(Fv, "assertExist");
I(Fv, "assertExist");
T.addProperty("exist", Fv);
T.addProperty("exists", Fv);
T.addProperty("empty", function() {
  var e = A$1(this, "object"), t = A$1(this, "ssfi"), r7 = A$1(this, "message"), n;
  switch (r7 = r7 ? r7 + ": " : "", ye$1(e).toLowerCase()) {
    case "array":
    case "string":
      n = e.length;
      break;
    case "map":
    case "set":
      n = e.size;
      break;
    case "weakmap":
    case "weakset":
      throw new ue$1(
        r7 + ".empty was passed a weak collection",
        void 0,
        t
      );
    case "function":
      var i = r7 + ".empty was passed a function " + Il(e);
      throw new ue$1(i.trim(), void 0, t);
    default:
      if (e !== Object(e))
        throw new ue$1(
          r7 + ".empty was passed non-string primitive " + le$1(e),
          void 0,
          t
        );
      n = Object.keys(e).length;
  }
  this.assert(
    n === 0,
    "expected #{this} to be empty",
    "expected #{this} not to be empty"
  );
});
function Dv() {
  var e = A$1(this, "object"), t = ye$1(e);
  this.assert(
    t === "Arguments",
    "expected #{this} to be arguments but got " + t,
    "expected #{this} to not be arguments"
  );
}
o(Dv, "checkArguments");
I(Dv, "checkArguments");
T.addProperty("arguments", Dv);
T.addProperty("Arguments", Dv);
function Ml(e, t) {
  t && A$1(this, "message", t);
  var r7 = A$1(this, "object");
  if (A$1(this, "deep")) {
    var n = A$1(this, "lockSsfi");
    A$1(this, "lockSsfi", true), this.eql(e), A$1(this, "lockSsfi", n);
  } else
    this.assert(
      e === r7,
      "expected #{this} to equal #{exp}",
      "expected #{this} to not equal #{exp}",
      e,
      this._obj,
      true
    );
}
o(Ml, "assertEqual");
I(Ml, "assertEqual");
T.addMethod("equal", Ml);
T.addMethod("equals", Ml);
T.addMethod("eq", Ml);
function $v(e, t) {
  t && A$1(this, "message", t);
  var r7 = A$1(this, "eql");
  this.assert(
    r7(e, A$1(this, "object")),
    "expected #{this} to deeply equal #{exp}",
    "expected #{this} to not deeply equal #{exp}",
    e,
    this._obj,
    true
  );
}
o($v, "assertEql");
I($v, "assertEql");
T.addMethod("eql", $v);
T.addMethod("eqls", $v);
function Nl(e, t) {
  t && A$1(this, "message", t);
  var r7 = A$1(this, "object"), n = A$1(this, "doLength"), i = A$1(this, "message"), s = i ? i + ": " : "", a = A$1(this, "ssfi"), l = ye$1(r7).toLowerCase(), u = ye$1(e).toLowerCase();
  if (n && l !== "map" && l !== "set" && new T(r7, i, a, true).to.have.property("length"), !n && l === "date" && u !== "date")
    throw new ue$1(
      s + "the argument to above must be a date",
      void 0,
      a
    );
  if (!Ue$1(e) && (n || Ue$1(r7)))
    throw new ue$1(
      s + "the argument to above must be a number",
      void 0,
      a
    );
  if (!n && l !== "date" && !Ue$1(r7)) {
    var c = l === "string" ? "'" + r7 + "'" : r7;
    throw new ue$1(
      s + "expected " + c + " to be a number or a date",
      void 0,
      a
    );
  }
  if (n) {
    var d = "length", p5;
    l === "map" || l === "set" ? (d = "size", p5 = r7.size) : p5 = r7.length, this.assert(
      p5 > e,
      "expected #{this} to have a " + d + " above #{exp} but got #{act}",
      "expected #{this} to not have a " + d + " above #{exp}",
      e,
      p5
    );
  } else
    this.assert(
      r7 > e,
      "expected #{this} to be above #{exp}",
      "expected #{this} to be at most #{exp}",
      e
    );
}
o(Nl, "assertAbove");
I(Nl, "assertAbove");
T.addMethod("above", Nl);
T.addMethod("gt", Nl);
T.addMethod("greaterThan", Nl);
function jl(e, t) {
  t && A$1(this, "message", t);
  var r7 = A$1(this, "object"), n = A$1(this, "doLength"), i = A$1(this, "message"), s = i ? i + ": " : "", a = A$1(this, "ssfi"), l = ye$1(r7).toLowerCase(), u = ye$1(e).toLowerCase(), c, d = true;
  if (n && l !== "map" && l !== "set" && new T(r7, i, a, true).to.have.property("length"), !n && l === "date" && u !== "date")
    c = s + "the argument to least must be a date";
  else if (!Ue$1(e) && (n || Ue$1(r7)))
    c = s + "the argument to least must be a number";
  else if (!n && l !== "date" && !Ue$1(r7)) {
    var p5 = l === "string" ? "'" + r7 + "'" : r7;
    c = s + "expected " + p5 + " to be a number or a date";
  } else
    d = false;
  if (d)
    throw new ue$1(c, void 0, a);
  if (n) {
    var f = "length", m;
    l === "map" || l === "set" ? (f = "size", m = r7.size) : m = r7.length, this.assert(
      m >= e,
      "expected #{this} to have a " + f + " at least #{exp} but got #{act}",
      "expected #{this} to have a " + f + " below #{exp}",
      e,
      m
    );
  } else
    this.assert(
      r7 >= e,
      "expected #{this} to be at least #{exp}",
      "expected #{this} to be below #{exp}",
      e
    );
}
o(jl, "assertLeast");
I(jl, "assertLeast");
T.addMethod("least", jl);
T.addMethod("gte", jl);
T.addMethod("greaterThanOrEqual", jl);
function kl(e, t) {
  t && A$1(this, "message", t);
  var r7 = A$1(this, "object"), n = A$1(this, "doLength"), i = A$1(this, "message"), s = i ? i + ": " : "", a = A$1(this, "ssfi"), l = ye$1(r7).toLowerCase(), u = ye$1(e).toLowerCase(), c, d = true;
  if (n && l !== "map" && l !== "set" && new T(r7, i, a, true).to.have.property("length"), !n && l === "date" && u !== "date")
    c = s + "the argument to below must be a date";
  else if (!Ue$1(e) && (n || Ue$1(r7)))
    c = s + "the argument to below must be a number";
  else if (!n && l !== "date" && !Ue$1(r7)) {
    var p5 = l === "string" ? "'" + r7 + "'" : r7;
    c = s + "expected " + p5 + " to be a number or a date";
  } else
    d = false;
  if (d)
    throw new ue$1(c, void 0, a);
  if (n) {
    var f = "length", m;
    l === "map" || l === "set" ? (f = "size", m = r7.size) : m = r7.length, this.assert(
      m < e,
      "expected #{this} to have a " + f + " below #{exp} but got #{act}",
      "expected #{this} to not have a " + f + " below #{exp}",
      e,
      m
    );
  } else
    this.assert(
      r7 < e,
      "expected #{this} to be below #{exp}",
      "expected #{this} to be at least #{exp}",
      e
    );
}
o(kl, "assertBelow");
I(kl, "assertBelow");
T.addMethod("below", kl);
T.addMethod("lt", kl);
T.addMethod("lessThan", kl);
function Ll(e, t) {
  t && A$1(this, "message", t);
  var r7 = A$1(this, "object"), n = A$1(this, "doLength"), i = A$1(this, "message"), s = i ? i + ": " : "", a = A$1(this, "ssfi"), l = ye$1(r7).toLowerCase(), u = ye$1(e).toLowerCase(), c, d = true;
  if (n && l !== "map" && l !== "set" && new T(r7, i, a, true).to.have.property("length"), !n && l === "date" && u !== "date")
    c = s + "the argument to most must be a date";
  else if (!Ue$1(e) && (n || Ue$1(r7)))
    c = s + "the argument to most must be a number";
  else if (!n && l !== "date" && !Ue$1(r7)) {
    var p5 = l === "string" ? "'" + r7 + "'" : r7;
    c = s + "expected " + p5 + " to be a number or a date";
  } else
    d = false;
  if (d)
    throw new ue$1(c, void 0, a);
  if (n) {
    var f = "length", m;
    l === "map" || l === "set" ? (f = "size", m = r7.size) : m = r7.length, this.assert(
      m <= e,
      "expected #{this} to have a " + f + " at most #{exp} but got #{act}",
      "expected #{this} to have a " + f + " above #{exp}",
      e,
      m
    );
  } else
    this.assert(
      r7 <= e,
      "expected #{this} to be at most #{exp}",
      "expected #{this} to be above #{exp}",
      e
    );
}
o(Ll, "assertMost");
I(Ll, "assertMost");
T.addMethod("most", Ll);
T.addMethod("lte", Ll);
T.addMethod("lessThanOrEqual", Ll);
T.addMethod("within", function(e, t, r7) {
  r7 && A$1(this, "message", r7);
  var n = A$1(this, "object"), i = A$1(this, "doLength"), s = A$1(this, "message"), a = s ? s + ": " : "", l = A$1(this, "ssfi"), u = ye$1(n).toLowerCase(), c = ye$1(e).toLowerCase(), d = ye$1(t).toLowerCase(), p5, f = true, m = c === "date" && d === "date" ? e.toISOString() + ".." + t.toISOString() : e + ".." + t;
  if (i && u !== "map" && u !== "set" && new T(n, s, l, true).to.have.property("length"), !i && u === "date" && (c !== "date" || d !== "date"))
    p5 = a + "the arguments to within must be dates";
  else if ((!Ue$1(e) || !Ue$1(t)) && (i || Ue$1(n)))
    p5 = a + "the arguments to within must be numbers";
  else if (!i && u !== "date" && !Ue$1(n)) {
    var h5 = u === "string" ? "'" + n + "'" : n;
    p5 = a + "expected " + h5 + " to be a number or a date";
  } else
    f = false;
  if (f)
    throw new ue$1(p5, void 0, l);
  if (i) {
    var b = "length", v5;
    u === "map" || u === "set" ? (b = "size", v5 = n.size) : v5 = n.length, this.assert(
      v5 >= e && v5 <= t,
      "expected #{this} to have a " + b + " within " + m,
      "expected #{this} to not have a " + b + " within " + m
    );
  } else
    this.assert(
      n >= e && n <= t,
      "expected #{this} to be within " + m,
      "expected #{this} to not be within " + m
    );
});
function Bv(e, t) {
  t && A$1(this, "message", t);
  var r7 = A$1(this, "object"), n = A$1(this, "ssfi"), i = A$1(this, "message");
  try {
    var s = r7 instanceof e;
  } catch (l) {
    throw l instanceof TypeError ? (i = i ? i + ": " : "", new ue$1(
      i + "The instanceof assertion needs a constructor but " + ye$1(e) + " was given.",
      void 0,
      n
    )) : l;
  }
  var a = Il(e);
  a == null && (a = "an unnamed constructor"), this.assert(
    s,
    "expected #{this} to be an instance of " + a,
    "expected #{this} to not be an instance of " + a
  );
}
o(Bv, "assertInstanceOf");
I(Bv, "assertInstanceOf");
T.addMethod("instanceof", Bv);
T.addMethod("instanceOf", Bv);
function Hv(e, t, r7) {
  r7 && A$1(this, "message", r7);
  var n = A$1(this, "nested"), i = A$1(this, "own"), s = A$1(this, "message"), a = A$1(this, "object"), l = A$1(this, "ssfi"), u = typeof e;
  if (s = s ? s + ": " : "", n) {
    if (u !== "string")
      throw new ue$1(
        s + "the argument to property must be a string when using nested syntax",
        void 0,
        l
      );
  } else if (u !== "string" && u !== "number" && u !== "symbol")
    throw new ue$1(
      s + "the argument to property must be a string, number, or symbol",
      void 0,
      l
    );
  if (n && i)
    throw new ue$1(
      s + 'The "nested" and "own" flags cannot be combined.',
      void 0,
      l
    );
  if (a == null)
    throw new ue$1(
      s + "Target cannot be null or undefined.",
      void 0,
      l
    );
  var c = A$1(this, "deep"), d = A$1(this, "negate"), p5 = n ? Cv(a, e) : null, f = n ? p5.value : a[e], m = c ? A$1(this, "eql") : (v5, g) => v5 === g, h5 = "";
  c && (h5 += "deep "), i && (h5 += "own "), n && (h5 += "nested "), h5 += "property ";
  var b;
  i ? b = Object.prototype.hasOwnProperty.call(a, e) : n ? b = p5.exists : b = ql(a, e), (!d || arguments.length === 1) && this.assert(
    b,
    "expected #{this} to have " + h5 + le$1(e),
    "expected #{this} to not have " + h5 + le$1(e)
  ), arguments.length > 1 && this.assert(
    b && m(t, f),
    "expected #{this} to have " + h5 + le$1(e) + " of #{exp}, but got #{act}",
    "expected #{this} to not have " + h5 + le$1(e) + " of #{act}",
    t,
    f
  ), A$1(this, "object", f);
}
o(Hv, "assertProperty");
I(Hv, "assertProperty");
T.addMethod("property", Hv);
function Uv(e, t, r7) {
  A$1(this, "own", true), Hv.apply(this, arguments);
}
o(Uv, "assertOwnProperty");
I(Uv, "assertOwnProperty");
T.addMethod("ownProperty", Uv);
T.addMethod("haveOwnProperty", Uv);
function Vv(e, t, r7) {
  typeof t == "string" && (r7 = t, t = null), r7 && A$1(this, "message", r7);
  var n = A$1(this, "object"), i = Object.getOwnPropertyDescriptor(Object(n), e), s = A$1(this, "eql");
  i && t ? this.assert(
    s(t, i),
    "expected the own property descriptor for " + le$1(e) + " on #{this} to match " + le$1(t) + ", got " + le$1(i),
    "expected the own property descriptor for " + le$1(e) + " on #{this} to not match " + le$1(t),
    t,
    i,
    true
  ) : this.assert(
    i,
    "expected #{this} to have an own property descriptor for " + le$1(e),
    "expected #{this} to not have an own property descriptor for " + le$1(e)
  ), A$1(this, "object", i);
}
o(Vv, "assertOwnPropertyDescriptor");
I(Vv, "assertOwnPropertyDescriptor");
T.addMethod("ownPropertyDescriptor", Vv);
T.addMethod("haveOwnPropertyDescriptor", Vv);
function zv() {
  A$1(this, "doLength", true);
}
o(zv, "assertLengthChain");
I(zv, "assertLengthChain");
function Gv(e, t) {
  t && A$1(this, "message", t);
  var r7 = A$1(this, "object"), n = ye$1(r7).toLowerCase(), i = A$1(this, "message"), s = A$1(this, "ssfi"), a = "length", l;
  switch (n) {
    case "map":
    case "set":
      a = "size", l = r7.size;
      break;
    default:
      new T(r7, i, s, true).to.have.property("length"), l = r7.length;
  }
  this.assert(
    l == e,
    "expected #{this} to have a " + a + " of #{exp} but got #{act}",
    "expected #{this} to not have a " + a + " of #{act}",
    e,
    l
  );
}
o(Gv, "assertLength");
I(Gv, "assertLength");
T.addChainableMethod("length", Gv, zv);
T.addChainableMethod("lengthOf", Gv, zv);
function Wv(e, t) {
  t && A$1(this, "message", t);
  var r7 = A$1(this, "object");
  this.assert(
    e.exec(r7),
    "expected #{this} to match " + e,
    "expected #{this} not to match " + e
  );
}
o(Wv, "assertMatch");
I(Wv, "assertMatch");
T.addMethod("match", Wv);
T.addMethod("matches", Wv);
T.addMethod("string", function(e, t) {
  t && A$1(this, "message", t);
  var r7 = A$1(this, "object"), n = A$1(this, "message"), i = A$1(this, "ssfi");
  new T(r7, n, i, true).is.a("string"), this.assert(
    ~r7.indexOf(e),
    "expected #{this} to contain " + le$1(e),
    "expected #{this} to not contain " + le$1(e)
  );
});
function Yv(e) {
  var t = A$1(this, "object"), r7 = ye$1(t), n = ye$1(e), i = A$1(this, "ssfi"), s = A$1(this, "deep"), a, l = "", u, c = true, d = A$1(this, "message");
  d = d ? d + ": " : "";
  var p5 = d + "when testing keys against an object or an array you must give a single Array|Object|String argument or multiple String arguments";
  if (r7 === "Map" || r7 === "Set")
    l = s ? "deeply " : "", u = [], t.forEach(function(w5, E) {
      u.push(E);
    }), n !== "Array" && (e = Array.prototype.slice.call(arguments));
  else {
    switch (u = jv(t), n) {
      case "Array":
        if (arguments.length > 1)
          throw new ue$1(p5, void 0, i);
        break;
      case "Object":
        if (arguments.length > 1)
          throw new ue$1(p5, void 0, i);
        e = Object.keys(e);
        break;
      default:
        e = Array.prototype.slice.call(arguments);
    }
    e = e.map(function(w5) {
      return typeof w5 == "symbol" ? w5 : String(w5);
    });
  }
  if (!e.length)
    throw new ue$1(d + "keys required", void 0, i);
  var f = e.length, m = A$1(this, "any"), h5 = A$1(this, "all"), b = e, v5 = s ? A$1(this, "eql") : (w5, E) => w5 === E;
  if (!m && !h5 && (h5 = true), m && (c = b.some(function(w5) {
    return u.some(function(E) {
      return v5(w5, E);
    });
  })), h5 && (c = b.every(function(w5) {
    return u.some(function(E) {
      return v5(w5, E);
    });
  }), A$1(this, "contains") || (c = c && e.length == u.length)), f > 1) {
    e = e.map(function(w5) {
      return le$1(w5);
    });
    var g = e.pop();
    h5 && (a = e.join(", ") + ", and " + g), m && (a = e.join(", ") + ", or " + g);
  } else
    a = le$1(e[0]);
  a = (f > 1 ? "keys " : "key ") + a, a = (A$1(this, "contains") ? "contain " : "have ") + a, this.assert(
    c,
    "expected #{this} to " + l + a,
    "expected #{this} to not " + l + a,
    b.slice(0).sort(Sl),
    u.sort(Sl),
    true
  );
}
o(Yv, "assertKeys");
I(Yv, "assertKeys");
T.addMethod("keys", Yv);
T.addMethod("key", Yv);
function Fl(e, t, r7) {
  r7 && A$1(this, "message", r7);
  var n = A$1(this, "object"), i = A$1(this, "ssfi"), s = A$1(this, "message"), a = A$1(this, "negate") || false;
  new T(n, s, i, true).is.a("function"), (Cl(e) || typeof e == "string") && (t = e, e = null);
  let l, u = false;
  try {
    n();
  } catch (w5) {
    u = true, l = w5;
  }
  var c = e === void 0 && t === void 0, d = !!(e && t), p5 = false, f = false;
  if (c || !c && !a) {
    var m = "an error";
    e instanceof Error ? m = "#{exp}" : e && (m = vt$1.getConstructorName(e));
    let w5 = l;
    if (l instanceof Error)
      w5 = l.toString();
    else if (typeof l == "string")
      w5 = l;
    else if (l && (typeof l == "object" || typeof l == "function"))
      try {
        w5 = vt$1.getConstructorName(l);
      } catch {
      }
    this.assert(
      u,
      "expected #{this} to throw " + m,
      "expected #{this} to not throw an error but #{act} was thrown",
      e && e.toString(),
      w5
    );
  }
  if (e && l) {
    if (e instanceof Error) {
      var h5 = vt$1.compatibleInstance(
        l,
        e
      );
      h5 === a && (d && a ? p5 = true : this.assert(
        a,
        "expected #{this} to throw #{exp} but #{act} was thrown",
        "expected #{this} to not throw #{exp}" + (l && !a ? " but #{act} was thrown" : ""),
        e.toString(),
        l.toString()
      ));
    }
    var b = vt$1.compatibleConstructor(
      l,
      e
    );
    b === a && (d && a ? p5 = true : this.assert(
      a,
      "expected #{this} to throw #{exp} but #{act} was thrown",
      "expected #{this} to not throw #{exp}" + (l ? " but #{act} was thrown" : ""),
      e instanceof Error ? e.toString() : e && vt$1.getConstructorName(e),
      l instanceof Error ? l.toString() : l && vt$1.getConstructorName(l)
    ));
  }
  if (l && t !== void 0 && t !== null) {
    var v5 = "including";
    Cl(t) && (v5 = "matching");
    var g = vt$1.compatibleMessage(
      l,
      t
    );
    g === a && (d && a ? f = true : this.assert(
      a,
      "expected #{this} to throw error " + v5 + " #{exp} but got #{act}",
      "expected #{this} to throw error not " + v5 + " #{exp}",
      t,
      vt$1.getMessage(l)
    ));
  }
  p5 && f && this.assert(
    a,
    "expected #{this} to throw #{exp} but #{act} was thrown",
    "expected #{this} to not throw #{exp}" + (l ? " but #{act} was thrown" : ""),
    e instanceof Error ? e.toString() : e && vt$1.getConstructorName(e),
    l instanceof Error ? l.toString() : l && vt$1.getConstructorName(l)
  ), A$1(this, "object", l);
}
o(Fl, "assertThrows");
I(Fl, "assertThrows");
T.addMethod("throw", Fl);
T.addMethod("throws", Fl);
T.addMethod("Throw", Fl);
function Kv(e, t) {
  t && A$1(this, "message", t);
  var r7 = A$1(this, "object"), n = A$1(this, "itself"), i = typeof r7 == "function" && !n ? r7.prototype[e] : r7[e];
  this.assert(
    typeof i == "function",
    "expected #{this} to respond to " + le$1(e),
    "expected #{this} to not respond to " + le$1(e)
  );
}
o(Kv, "respondTo");
I(Kv, "respondTo");
T.addMethod("respondTo", Kv);
T.addMethod("respondsTo", Kv);
T.addProperty("itself", function() {
  A$1(this, "itself", true);
});
function Xv(e, t) {
  t && A$1(this, "message", t);
  var r7 = A$1(this, "object"), n = e(r7);
  this.assert(
    n,
    "expected #{this} to satisfy " + Rn(e),
    "expected #{this} to not satisfy" + Rn(e),
    !A$1(this, "negate"),
    n
  );
}
o(Xv, "satisfy");
I(Xv, "satisfy");
T.addMethod("satisfy", Xv);
T.addMethod("satisfies", Xv);
function Jv(e, t, r7) {
  r7 && A$1(this, "message", r7);
  var n = A$1(this, "object"), i = A$1(this, "message"), s = A$1(this, "ssfi");
  new T(n, i, s, true).is.numeric;
  let a = "A `delta` value is required for `closeTo`";
  if (t == null)
    throw new ue$1(
      i ? `${i}: ${a}` : a,
      void 0,
      s
    );
  if (new T(t, i, s, true).is.numeric, a = "A `expected` value is required for `closeTo`", e == null)
    throw new ue$1(
      i ? `${i}: ${a}` : a,
      void 0,
      s
    );
  new T(e, i, s, true).is.numeric;
  let l = /* @__PURE__ */ I((c) => c < 0n ? -c : c, "abs"), u = /* @__PURE__ */ I((c) => parseFloat(parseFloat(c).toPrecision(12)), "strip");
  this.assert(
    u(l(n - e)) <= t,
    "expected #{this} to be close to " + e + " +/- " + t,
    "expected #{this} not to be close to " + e + " +/- " + t
  );
}
o(Jv, "closeTo");
I(Jv, "closeTo");
T.addMethod("closeTo", Jv);
T.addMethod("approximately", Jv);
function _P(e, t, r7, n, i) {
  let s = Array.from(t), a = Array.from(e);
  if (!n) {
    if (a.length !== s.length)
      return false;
    s = s.slice();
  }
  return a.every(function(l, u) {
    if (i)
      return r7 ? r7(l, s[u]) : l === s[u];
    if (!r7) {
      var c = s.indexOf(l);
      return c === -1 ? false : (n || s.splice(c, 1), true);
    }
    return s.some(function(d, p5) {
      return r7(l, d) ? (n || s.splice(p5, 1), true) : false;
    });
  });
}
o(_P, "isSubsetOf");
I(_P, "isSubsetOf");
T.addMethod("members", function(e, t) {
  t && A$1(this, "message", t);
  var r7 = A$1(this, "object"), n = A$1(this, "message"), i = A$1(this, "ssfi");
  new T(r7, n, i, true).to.be.iterable, new T(e, n, i, true).to.be.iterable;
  var s = A$1(this, "contains"), a = A$1(this, "ordered"), l, u, c;
  s ? (l = a ? "an ordered superset" : "a superset", u = "expected #{this} to be " + l + " of #{exp}", c = "expected #{this} to not be " + l + " of #{exp}") : (l = a ? "ordered members" : "members", u = "expected #{this} to have the same " + l + " as #{exp}", c = "expected #{this} to not have the same " + l + " as #{exp}");
  var d = A$1(this, "deep") ? A$1(this, "eql") : void 0;
  this.assert(
    _P(e, r7, d, s, a),
    u,
    c,
    e,
    r7,
    true
  );
});
T.addProperty("iterable", function(e) {
  e && A$1(this, "message", e);
  var t = A$1(this, "object");
  this.assert(
    t != null && t[Symbol.iterator],
    "expected #{this} to be an iterable",
    "expected #{this} to not be an iterable",
    t
  );
});
function CP(e, t) {
  t && A$1(this, "message", t);
  var r7 = A$1(this, "object"), n = A$1(this, "message"), i = A$1(this, "ssfi"), s = A$1(this, "contains"), a = A$1(this, "deep"), l = A$1(this, "eql");
  new T(e, n, i, true).to.be.an("array"), s ? this.assert(
    e.some(function(u) {
      return r7.indexOf(u) > -1;
    }),
    "expected #{this} to contain one of #{exp}",
    "expected #{this} to not contain one of #{exp}",
    e,
    r7
  ) : a ? this.assert(
    e.some(function(u) {
      return l(r7, u);
    }),
    "expected #{this} to deeply equal one of #{exp}",
    "expected #{this} to deeply equal one of #{exp}",
    e,
    r7
  ) : this.assert(
    e.indexOf(r7) > -1,
    "expected #{this} to be one of #{exp}",
    "expected #{this} to not be one of #{exp}",
    e,
    r7
  );
}
o(CP, "oneOf");
I(CP, "oneOf");
T.addMethod("oneOf", CP);
function Qv(e, t, r7) {
  r7 && A$1(this, "message", r7);
  var n = A$1(this, "object"), i = A$1(this, "message"), s = A$1(this, "ssfi");
  new T(n, i, s, true).is.a("function");
  var a;
  t ? (new T(e, i, s, true).to.have.property(t), a = e[t]) : (new T(e, i, s, true).is.a("function"), a = e()), n();
  var l = t == null ? e() : e[t], u = t == null ? a : "." + t;
  A$1(this, "deltaMsgObj", u), A$1(this, "initialDeltaValue", a), A$1(this, "finalDeltaValue", l), A$1(this, "deltaBehavior", "change"), A$1(this, "realDelta", l !== a), this.assert(
    a !== l,
    "expected " + u + " to change",
    "expected " + u + " to not change"
  );
}
o(Qv, "assertChanges");
I(Qv, "assertChanges");
T.addMethod("change", Qv);
T.addMethod("changes", Qv);
function Zv(e, t, r7) {
  r7 && A$1(this, "message", r7);
  var n = A$1(this, "object"), i = A$1(this, "message"), s = A$1(this, "ssfi");
  new T(n, i, s, true).is.a("function");
  var a;
  t ? (new T(e, i, s, true).to.have.property(t), a = e[t]) : (new T(e, i, s, true).is.a("function"), a = e()), new T(a, i, s, true).is.a("number"), n();
  var l = t == null ? e() : e[t], u = t == null ? a : "." + t;
  A$1(this, "deltaMsgObj", u), A$1(this, "initialDeltaValue", a), A$1(this, "finalDeltaValue", l), A$1(this, "deltaBehavior", "increase"), A$1(this, "realDelta", l - a), this.assert(
    l - a > 0,
    "expected " + u + " to increase",
    "expected " + u + " to not increase"
  );
}
o(Zv, "assertIncreases");
I(Zv, "assertIncreases");
T.addMethod("increase", Zv);
T.addMethod("increases", Zv);
function eE(e, t, r7) {
  r7 && A$1(this, "message", r7);
  var n = A$1(this, "object"), i = A$1(this, "message"), s = A$1(this, "ssfi");
  new T(n, i, s, true).is.a("function");
  var a;
  t ? (new T(e, i, s, true).to.have.property(t), a = e[t]) : (new T(e, i, s, true).is.a("function"), a = e()), new T(a, i, s, true).is.a("number"), n();
  var l = t == null ? e() : e[t], u = t == null ? a : "." + t;
  A$1(this, "deltaMsgObj", u), A$1(this, "initialDeltaValue", a), A$1(this, "finalDeltaValue", l), A$1(this, "deltaBehavior", "decrease"), A$1(this, "realDelta", a - l), this.assert(
    l - a < 0,
    "expected " + u + " to decrease",
    "expected " + u + " to not decrease"
  );
}
o(eE, "assertDecreases");
I(eE, "assertDecreases");
T.addMethod("decrease", eE);
T.addMethod("decreases", eE);
function PP(e, t) {
  t && A$1(this, "message", t);
  var r7 = A$1(this, "deltaMsgObj"), n = A$1(this, "initialDeltaValue"), i = A$1(this, "finalDeltaValue"), s = A$1(this, "deltaBehavior"), a = A$1(
    this,
    "realDelta"
  ), l;
  s === "change" ? l = Math.abs(i - n) === Math.abs(e) : l = a === Math.abs(e), this.assert(
    l,
    "expected " + r7 + " to " + s + " by " + e,
    "expected " + r7 + " to not " + s + " by " + e
  );
}
o(PP, "assertDelta");
I(PP, "assertDelta");
T.addMethod("by", PP);
T.addProperty("extensible", function() {
  var e = A$1(this, "object"), t = e === Object(e) && Object.isExtensible(e);
  this.assert(
    t,
    "expected #{this} to be extensible",
    "expected #{this} to not be extensible"
  );
});
T.addProperty("sealed", function() {
  var e = A$1(this, "object"), t = e === Object(e) ? Object.isSealed(e) : true;
  this.assert(
    t,
    "expected #{this} to be sealed",
    "expected #{this} to not be sealed"
  );
});
T.addProperty("frozen", function() {
  var e = A$1(this, "object"), t = e === Object(e) ? Object.isFrozen(e) : true;
  this.assert(
    t,
    "expected #{this} to be frozen",
    "expected #{this} to not be frozen"
  );
});
T.addProperty("finite", function(e) {
  var t = A$1(this, "object");
  this.assert(
    typeof t == "number" && isFinite(t),
    "expected #{this} to be a finite number",
    "expected #{this} to not be a finite number"
  );
});
function Pl(e, t) {
  return e === t ? true : typeof t != typeof e ? false : typeof e != "object" || e === null ? e === t : t ? Array.isArray(e) ? Array.isArray(t) ? e.every(function(r7) {
    return t.some(function(n) {
      return Pl(r7, n);
    });
  }) : false : e instanceof Date ? t instanceof Date ? e.getTime() === t.getTime() : false : Object.keys(e).every(function(r7) {
    var n = e[r7], i = t[r7];
    return typeof n == "object" && n !== null && i !== null ? Pl(n, i) : typeof n == "function" ? n(i) : i === n;
  }) : false;
}
o(Pl, "compareSubset");
I(Pl, "compareSubset");
T.addMethod("containSubset", function(e) {
  let t = ee(this, "object"), r7 = at$1.showDiff;
  this.assert(
    Pl(e, t),
    "expected #{act} to contain subset #{exp}",
    "expected #{act} to not contain subset #{exp}",
    e,
    t,
    r7
  );
});
function Lr$1(e, t) {
  return new T(e, t);
}
o(Lr$1, "expect");
I(Lr$1, "expect");
Lr$1.fail = function(e, t, r7, n) {
  throw arguments.length < 2 && (r7 = e, e = void 0), r7 = r7 || "expect.fail()", new ue$1(
    r7,
    {
      actual: e,
      expected: t,
      operator: n
    },
    Lr$1.fail
  );
};
var AP = {};
Ev(AP, {
  Should: /* @__PURE__ */ o(() => XW, "Should"),
  should: /* @__PURE__ */ o(() => KW, "should")
});
function tE() {
  function e() {
    return this instanceof String || this instanceof Number || this instanceof Boolean || typeof Symbol == "function" && this instanceof Symbol || typeof BigInt == "function" && this instanceof BigInt ? new T(this.valueOf(), null, e) : new T(this, null, e);
  }
  o(e, "shouldGetter"), I(e, "shouldGetter");
  function t(n) {
    Object.defineProperty(this, "should", {
      value: n,
      enumerable: true,
      configurable: true,
      writable: true
    });
  }
  o(t, "shouldSetter"), I(t, "shouldSetter"), Object.defineProperty(Object.prototype, "should", {
    set: t,
    get: e,
    configurable: true
  });
  var r7 = {};
  return r7.fail = function(n, i, s, a) {
    throw arguments.length < 2 && (s = n, n = void 0), s = s || "should.fail()", new ue$1(
      s,
      {
        actual: n,
        expected: i,
        operator: a
      },
      r7.fail
    );
  }, r7.equal = function(n, i, s) {
    new T(n, s).to.equal(i);
  }, r7.Throw = function(n, i, s, a) {
    new T(n, a).to.Throw(i, s);
  }, r7.exist = function(n, i) {
    new T(n, i).to.exist;
  }, r7.not = {}, r7.not.equal = function(n, i, s) {
    new T(n, s).to.not.equal(i);
  }, r7.not.Throw = function(n, i, s, a) {
    new T(n, a).to.not.Throw(i, s);
  }, r7.not.exist = function(n, i) {
    new T(n, i).to.not.exist;
  }, r7.throw = r7.Throw, r7.not.throw = r7.not.Throw, r7;
}
o(tE, "loadShould");
I(tE, "loadShould");
var KW = tE, XW = tE;
function x(e, t) {
  var r7 = new T(null, null, x, true);
  r7.assert(e, t, "[ negation message unavailable ]");
}
o(x, "assert");
I(x, "assert");
x.fail = function(e, t, r7, n) {
  throw arguments.length < 2 && (r7 = e, e = void 0), r7 = r7 || "assert.fail()", new ue$1(
    r7,
    {
      actual: e,
      expected: t,
      operator: n
    },
    x.fail
  );
};
x.isOk = function(e, t) {
  new T(e, t, x.isOk, true).is.ok;
};
x.isNotOk = function(e, t) {
  new T(e, t, x.isNotOk, true).is.not.ok;
};
x.equal = function(e, t, r7) {
  var n = new T(e, r7, x.equal, true);
  n.assert(
    t == ee(n, "object"),
    "expected #{this} to equal #{exp}",
    "expected #{this} to not equal #{act}",
    t,
    e,
    true
  );
};
x.notEqual = function(e, t, r7) {
  var n = new T(e, r7, x.notEqual, true);
  n.assert(
    t != ee(n, "object"),
    "expected #{this} to not equal #{exp}",
    "expected #{this} to equal #{act}",
    t,
    e,
    true
  );
};
x.strictEqual = function(e, t, r7) {
  new T(e, r7, x.strictEqual, true).to.equal(t);
};
x.notStrictEqual = function(e, t, r7) {
  new T(e, r7, x.notStrictEqual, true).to.not.equal(t);
};
x.deepEqual = x.deepStrictEqual = function(e, t, r7) {
  new T(e, r7, x.deepEqual, true).to.eql(t);
};
x.notDeepEqual = function(e, t, r7) {
  new T(e, r7, x.notDeepEqual, true).to.not.eql(t);
};
x.isAbove = function(e, t, r7) {
  new T(e, r7, x.isAbove, true).to.be.above(t);
};
x.isAtLeast = function(e, t, r7) {
  new T(e, r7, x.isAtLeast, true).to.be.least(t);
};
x.isBelow = function(e, t, r7) {
  new T(e, r7, x.isBelow, true).to.be.below(t);
};
x.isAtMost = function(e, t, r7) {
  new T(e, r7, x.isAtMost, true).to.be.most(t);
};
x.isTrue = function(e, t) {
  new T(e, t, x.isTrue, true).is.true;
};
x.isNotTrue = function(e, t) {
  new T(e, t, x.isNotTrue, true).to.not.equal(true);
};
x.isFalse = function(e, t) {
  new T(e, t, x.isFalse, true).is.false;
};
x.isNotFalse = function(e, t) {
  new T(e, t, x.isNotFalse, true).to.not.equal(false);
};
x.isNull = function(e, t) {
  new T(e, t, x.isNull, true).to.equal(null);
};
x.isNotNull = function(e, t) {
  new T(e, t, x.isNotNull, true).to.not.equal(null);
};
x.isNaN = function(e, t) {
  new T(e, t, x.isNaN, true).to.be.NaN;
};
x.isNotNaN = function(e, t) {
  new T(e, t, x.isNotNaN, true).not.to.be.NaN;
};
x.exists = function(e, t) {
  new T(e, t, x.exists, true).to.exist;
};
x.notExists = function(e, t) {
  new T(e, t, x.notExists, true).to.not.exist;
};
x.isUndefined = function(e, t) {
  new T(e, t, x.isUndefined, true).to.equal(void 0);
};
x.isDefined = function(e, t) {
  new T(e, t, x.isDefined, true).to.not.equal(void 0);
};
x.isCallable = function(e, t) {
  new T(e, t, x.isCallable, true).is.callable;
};
x.isNotCallable = function(e, t) {
  new T(e, t, x.isNotCallable, true).is.not.callable;
};
x.isObject = function(e, t) {
  new T(e, t, x.isObject, true).to.be.a("object");
};
x.isNotObject = function(e, t) {
  new T(e, t, x.isNotObject, true).to.not.be.a("object");
};
x.isArray = function(e, t) {
  new T(e, t, x.isArray, true).to.be.an("array");
};
x.isNotArray = function(e, t) {
  new T(e, t, x.isNotArray, true).to.not.be.an("array");
};
x.isString = function(e, t) {
  new T(e, t, x.isString, true).to.be.a("string");
};
x.isNotString = function(e, t) {
  new T(e, t, x.isNotString, true).to.not.be.a("string");
};
x.isNumber = function(e, t) {
  new T(e, t, x.isNumber, true).to.be.a("number");
};
x.isNotNumber = function(e, t) {
  new T(e, t, x.isNotNumber, true).to.not.be.a("number");
};
x.isNumeric = function(e, t) {
  new T(e, t, x.isNumeric, true).is.numeric;
};
x.isNotNumeric = function(e, t) {
  new T(e, t, x.isNotNumeric, true).is.not.numeric;
};
x.isFinite = function(e, t) {
  new T(e, t, x.isFinite, true).to.be.finite;
};
x.isBoolean = function(e, t) {
  new T(e, t, x.isBoolean, true).to.be.a("boolean");
};
x.isNotBoolean = function(e, t) {
  new T(e, t, x.isNotBoolean, true).to.not.be.a("boolean");
};
x.typeOf = function(e, t, r7) {
  new T(e, r7, x.typeOf, true).to.be.a(t);
};
x.notTypeOf = function(e, t, r7) {
  new T(e, r7, x.notTypeOf, true).to.not.be.a(t);
};
x.instanceOf = function(e, t, r7) {
  new T(e, r7, x.instanceOf, true).to.be.instanceOf(t);
};
x.notInstanceOf = function(e, t, r7) {
  new T(e, r7, x.notInstanceOf, true).to.not.be.instanceOf(
    t
  );
};
x.include = function(e, t, r7) {
  new T(e, r7, x.include, true).include(t);
};
x.notInclude = function(e, t, r7) {
  new T(e, r7, x.notInclude, true).not.include(t);
};
x.deepInclude = function(e, t, r7) {
  new T(e, r7, x.deepInclude, true).deep.include(t);
};
x.notDeepInclude = function(e, t, r7) {
  new T(e, r7, x.notDeepInclude, true).not.deep.include(t);
};
x.nestedInclude = function(e, t, r7) {
  new T(e, r7, x.nestedInclude, true).nested.include(t);
};
x.notNestedInclude = function(e, t, r7) {
  new T(e, r7, x.notNestedInclude, true).not.nested.include(
    t
  );
};
x.deepNestedInclude = function(e, t, r7) {
  new T(e, r7, x.deepNestedInclude, true).deep.nested.include(
    t
  );
};
x.notDeepNestedInclude = function(e, t, r7) {
  new T(
    e,
    r7,
    x.notDeepNestedInclude,
    true
  ).not.deep.nested.include(t);
};
x.ownInclude = function(e, t, r7) {
  new T(e, r7, x.ownInclude, true).own.include(t);
};
x.notOwnInclude = function(e, t, r7) {
  new T(e, r7, x.notOwnInclude, true).not.own.include(t);
};
x.deepOwnInclude = function(e, t, r7) {
  new T(e, r7, x.deepOwnInclude, true).deep.own.include(t);
};
x.notDeepOwnInclude = function(e, t, r7) {
  new T(e, r7, x.notDeepOwnInclude, true).not.deep.own.include(
    t
  );
};
x.match = function(e, t, r7) {
  new T(e, r7, x.match, true).to.match(t);
};
x.notMatch = function(e, t, r7) {
  new T(e, r7, x.notMatch, true).to.not.match(t);
};
x.property = function(e, t, r7) {
  new T(e, r7, x.property, true).to.have.property(t);
};
x.notProperty = function(e, t, r7) {
  new T(e, r7, x.notProperty, true).to.not.have.property(t);
};
x.propertyVal = function(e, t, r7, n) {
  new T(e, n, x.propertyVal, true).to.have.property(t, r7);
};
x.notPropertyVal = function(e, t, r7, n) {
  new T(e, n, x.notPropertyVal, true).to.not.have.property(
    t,
    r7
  );
};
x.deepPropertyVal = function(e, t, r7, n) {
  new T(e, n, x.deepPropertyVal, true).to.have.deep.property(
    t,
    r7
  );
};
x.notDeepPropertyVal = function(e, t, r7, n) {
  new T(
    e,
    n,
    x.notDeepPropertyVal,
    true
  ).to.not.have.deep.property(t, r7);
};
x.ownProperty = function(e, t, r7) {
  new T(e, r7, x.ownProperty, true).to.have.own.property(t);
};
x.notOwnProperty = function(e, t, r7) {
  new T(e, r7, x.notOwnProperty, true).to.not.have.own.property(
    t
  );
};
x.ownPropertyVal = function(e, t, r7, n) {
  new T(e, n, x.ownPropertyVal, true).to.have.own.property(
    t,
    r7
  );
};
x.notOwnPropertyVal = function(e, t, r7, n) {
  new T(
    e,
    n,
    x.notOwnPropertyVal,
    true
  ).to.not.have.own.property(t, r7);
};
x.deepOwnPropertyVal = function(e, t, r7, n) {
  new T(
    e,
    n,
    x.deepOwnPropertyVal,
    true
  ).to.have.deep.own.property(t, r7);
};
x.notDeepOwnPropertyVal = function(e, t, r7, n) {
  new T(
    e,
    n,
    x.notDeepOwnPropertyVal,
    true
  ).to.not.have.deep.own.property(t, r7);
};
x.nestedProperty = function(e, t, r7) {
  new T(e, r7, x.nestedProperty, true).to.have.nested.property(
    t
  );
};
x.notNestedProperty = function(e, t, r7) {
  new T(
    e,
    r7,
    x.notNestedProperty,
    true
  ).to.not.have.nested.property(t);
};
x.nestedPropertyVal = function(e, t, r7, n) {
  new T(
    e,
    n,
    x.nestedPropertyVal,
    true
  ).to.have.nested.property(t, r7);
};
x.notNestedPropertyVal = function(e, t, r7, n) {
  new T(
    e,
    n,
    x.notNestedPropertyVal,
    true
  ).to.not.have.nested.property(t, r7);
};
x.deepNestedPropertyVal = function(e, t, r7, n) {
  new T(
    e,
    n,
    x.deepNestedPropertyVal,
    true
  ).to.have.deep.nested.property(t, r7);
};
x.notDeepNestedPropertyVal = function(e, t, r7, n) {
  new T(
    e,
    n,
    x.notDeepNestedPropertyVal,
    true
  ).to.not.have.deep.nested.property(t, r7);
};
x.lengthOf = function(e, t, r7) {
  new T(e, r7, x.lengthOf, true).to.have.lengthOf(t);
};
x.hasAnyKeys = function(e, t, r7) {
  new T(e, r7, x.hasAnyKeys, true).to.have.any.keys(t);
};
x.hasAllKeys = function(e, t, r7) {
  new T(e, r7, x.hasAllKeys, true).to.have.all.keys(t);
};
x.containsAllKeys = function(e, t, r7) {
  new T(e, r7, x.containsAllKeys, true).to.contain.all.keys(
    t
  );
};
x.doesNotHaveAnyKeys = function(e, t, r7) {
  new T(e, r7, x.doesNotHaveAnyKeys, true).to.not.have.any.keys(
    t
  );
};
x.doesNotHaveAllKeys = function(e, t, r7) {
  new T(e, r7, x.doesNotHaveAllKeys, true).to.not.have.all.keys(
    t
  );
};
x.hasAnyDeepKeys = function(e, t, r7) {
  new T(e, r7, x.hasAnyDeepKeys, true).to.have.any.deep.keys(
    t
  );
};
x.hasAllDeepKeys = function(e, t, r7) {
  new T(e, r7, x.hasAllDeepKeys, true).to.have.all.deep.keys(
    t
  );
};
x.containsAllDeepKeys = function(e, t, r7) {
  new T(
    e,
    r7,
    x.containsAllDeepKeys,
    true
  ).to.contain.all.deep.keys(t);
};
x.doesNotHaveAnyDeepKeys = function(e, t, r7) {
  new T(
    e,
    r7,
    x.doesNotHaveAnyDeepKeys,
    true
  ).to.not.have.any.deep.keys(t);
};
x.doesNotHaveAllDeepKeys = function(e, t, r7) {
  new T(
    e,
    r7,
    x.doesNotHaveAllDeepKeys,
    true
  ).to.not.have.all.deep.keys(t);
};
x.throws = function(e, t, r7, n) {
  (typeof t == "string" || t instanceof RegExp) && (r7 = t, t = null);
  var i = new T(e, n, x.throws, true).to.throw(
    t,
    r7
  );
  return ee(i, "object");
};
x.doesNotThrow = function(e, t, r7, n) {
  (typeof t == "string" || t instanceof RegExp) && (r7 = t, t = null), new T(e, n, x.doesNotThrow, true).to.not.throw(
    t,
    r7
  );
};
x.operator = function(e, t, r7, n) {
  var i;
  switch (t) {
    case "==":
      i = e == r7;
      break;
    case "===":
      i = e === r7;
      break;
    case ">":
      i = e > r7;
      break;
    case ">=":
      i = e >= r7;
      break;
    case "<":
      i = e < r7;
      break;
    case "<=":
      i = e <= r7;
      break;
    case "!=":
      i = e != r7;
      break;
    case "!==":
      i = e !== r7;
      break;
    default:
      throw n = n && n + ": ", new ue$1(
        n + 'Invalid operator "' + t + '"',
        void 0,
        x.operator
      );
  }
  var s = new T(i, n, x.operator, true);
  s.assert(
    ee(s, "object") === true,
    "expected " + le$1(e) + " to be " + t + " " + le$1(r7),
    "expected " + le$1(e) + " to not be " + t + " " + le$1(r7)
  );
};
x.closeTo = function(e, t, r7, n) {
  new T(e, n, x.closeTo, true).to.be.closeTo(t, r7);
};
x.approximately = function(e, t, r7, n) {
  new T(e, n, x.approximately, true).to.be.approximately(
    t,
    r7
  );
};
x.sameMembers = function(e, t, r7) {
  new T(e, r7, x.sameMembers, true).to.have.same.members(t);
};
x.notSameMembers = function(e, t, r7) {
  new T(
    e,
    r7,
    x.notSameMembers,
    true
  ).to.not.have.same.members(t);
};
x.sameDeepMembers = function(e, t, r7) {
  new T(
    e,
    r7,
    x.sameDeepMembers,
    true
  ).to.have.same.deep.members(t);
};
x.notSameDeepMembers = function(e, t, r7) {
  new T(
    e,
    r7,
    x.notSameDeepMembers,
    true
  ).to.not.have.same.deep.members(t);
};
x.sameOrderedMembers = function(e, t, r7) {
  new T(
    e,
    r7,
    x.sameOrderedMembers,
    true
  ).to.have.same.ordered.members(t);
};
x.notSameOrderedMembers = function(e, t, r7) {
  new T(
    e,
    r7,
    x.notSameOrderedMembers,
    true
  ).to.not.have.same.ordered.members(t);
};
x.sameDeepOrderedMembers = function(e, t, r7) {
  new T(
    e,
    r7,
    x.sameDeepOrderedMembers,
    true
  ).to.have.same.deep.ordered.members(t);
};
x.notSameDeepOrderedMembers = function(e, t, r7) {
  new T(
    e,
    r7,
    x.notSameDeepOrderedMembers,
    true
  ).to.not.have.same.deep.ordered.members(t);
};
x.includeMembers = function(e, t, r7) {
  new T(e, r7, x.includeMembers, true).to.include.members(
    t
  );
};
x.notIncludeMembers = function(e, t, r7) {
  new T(
    e,
    r7,
    x.notIncludeMembers,
    true
  ).to.not.include.members(t);
};
x.includeDeepMembers = function(e, t, r7) {
  new T(
    e,
    r7,
    x.includeDeepMembers,
    true
  ).to.include.deep.members(t);
};
x.notIncludeDeepMembers = function(e, t, r7) {
  new T(
    e,
    r7,
    x.notIncludeDeepMembers,
    true
  ).to.not.include.deep.members(t);
};
x.includeOrderedMembers = function(e, t, r7) {
  new T(
    e,
    r7,
    x.includeOrderedMembers,
    true
  ).to.include.ordered.members(t);
};
x.notIncludeOrderedMembers = function(e, t, r7) {
  new T(
    e,
    r7,
    x.notIncludeOrderedMembers,
    true
  ).to.not.include.ordered.members(t);
};
x.includeDeepOrderedMembers = function(e, t, r7) {
  new T(
    e,
    r7,
    x.includeDeepOrderedMembers,
    true
  ).to.include.deep.ordered.members(t);
};
x.notIncludeDeepOrderedMembers = function(e, t, r7) {
  new T(
    e,
    r7,
    x.notIncludeDeepOrderedMembers,
    true
  ).to.not.include.deep.ordered.members(t);
};
x.oneOf = function(e, t, r7) {
  new T(e, r7, x.oneOf, true).to.be.oneOf(t);
};
x.isIterable = function(e, t) {
  if (e == null || !e[Symbol.iterator])
    throw t = t ? `${t} expected ${le$1(e)} to be an iterable` : `expected ${le$1(e)} to be an iterable`, new ue$1(t, void 0, x.isIterable);
};
x.changes = function(e, t, r7, n) {
  arguments.length === 3 && typeof t == "function" && (n = r7, r7 = null), new T(e, n, x.changes, true).to.change(t, r7);
};
x.changesBy = function(e, t, r7, n, i) {
  if (arguments.length === 4 && typeof t == "function") {
    var s = n;
    n = r7, i = s;
  } else arguments.length === 3 && (n = r7, r7 = null);
  new T(e, i, x.changesBy, true).to.change(t, r7).by(n);
};
x.doesNotChange = function(e, t, r7, n) {
  return arguments.length === 3 && typeof t == "function" && (n = r7, r7 = null), new T(e, n, x.doesNotChange, true).to.not.change(
    t,
    r7
  );
};
x.changesButNotBy = function(e, t, r7, n, i) {
  if (arguments.length === 4 && typeof t == "function") {
    var s = n;
    n = r7, i = s;
  } else arguments.length === 3 && (n = r7, r7 = null);
  new T(e, i, x.changesButNotBy, true).to.change(t, r7).but.not.by(n);
};
x.increases = function(e, t, r7, n) {
  return arguments.length === 3 && typeof t == "function" && (n = r7, r7 = null), new T(e, n, x.increases, true).to.increase(t, r7);
};
x.increasesBy = function(e, t, r7, n, i) {
  if (arguments.length === 4 && typeof t == "function") {
    var s = n;
    n = r7, i = s;
  } else arguments.length === 3 && (n = r7, r7 = null);
  new T(e, i, x.increasesBy, true).to.increase(t, r7).by(n);
};
x.doesNotIncrease = function(e, t, r7, n) {
  return arguments.length === 3 && typeof t == "function" && (n = r7, r7 = null), new T(e, n, x.doesNotIncrease, true).to.not.increase(
    t,
    r7
  );
};
x.increasesButNotBy = function(e, t, r7, n, i) {
  if (arguments.length === 4 && typeof t == "function") {
    var s = n;
    n = r7, i = s;
  } else arguments.length === 3 && (n = r7, r7 = null);
  new T(e, i, x.increasesButNotBy, true).to.increase(t, r7).but.not.by(n);
};
x.decreases = function(e, t, r7, n) {
  return arguments.length === 3 && typeof t == "function" && (n = r7, r7 = null), new T(e, n, x.decreases, true).to.decrease(t, r7);
};
x.decreasesBy = function(e, t, r7, n, i) {
  if (arguments.length === 4 && typeof t == "function") {
    var s = n;
    n = r7, i = s;
  } else arguments.length === 3 && (n = r7, r7 = null);
  new T(e, i, x.decreasesBy, true).to.decrease(t, r7).by(n);
};
x.doesNotDecrease = function(e, t, r7, n) {
  return arguments.length === 3 && typeof t == "function" && (n = r7, r7 = null), new T(e, n, x.doesNotDecrease, true).to.not.decrease(
    t,
    r7
  );
};
x.doesNotDecreaseBy = function(e, t, r7, n, i) {
  if (arguments.length === 4 && typeof t == "function") {
    var s = n;
    n = r7, i = s;
  } else arguments.length === 3 && (n = r7, r7 = null);
  return new T(e, i, x.doesNotDecreaseBy, true).to.not.decrease(t, r7).by(n);
};
x.decreasesButNotBy = function(e, t, r7, n, i) {
  if (arguments.length === 4 && typeof t == "function") {
    var s = n;
    n = r7, i = s;
  } else arguments.length === 3 && (n = r7, r7 = null);
  new T(e, i, x.decreasesButNotBy, true).to.decrease(t, r7).but.not.by(n);
};
x.ifError = function(e) {
  if (e)
    throw e;
};
x.isExtensible = function(e, t) {
  new T(e, t, x.isExtensible, true).to.be.extensible;
};
x.isNotExtensible = function(e, t) {
  new T(e, t, x.isNotExtensible, true).to.not.be.extensible;
};
x.isSealed = function(e, t) {
  new T(e, t, x.isSealed, true).to.be.sealed;
};
x.isNotSealed = function(e, t) {
  new T(e, t, x.isNotSealed, true).to.not.be.sealed;
};
x.isFrozen = function(e, t) {
  new T(e, t, x.isFrozen, true).to.be.frozen;
};
x.isNotFrozen = function(e, t) {
  new T(e, t, x.isNotFrozen, true).to.not.be.frozen;
};
x.isEmpty = function(e, t) {
  new T(e, t, x.isEmpty, true).to.be.empty;
};
x.isNotEmpty = function(e, t) {
  new T(e, t, x.isNotEmpty, true).to.not.be.empty;
};
x.containsSubset = function(e, t, r7) {
  new T(e, r7).to.containSubset(t);
};
x.doesNotContainSubset = function(e, t, r7) {
  new T(e, r7).to.not.containSubset(t);
};
var JW = [
  ["isOk", "ok"],
  ["isNotOk", "notOk"],
  ["throws", "throw"],
  ["throws", "Throw"],
  ["isExtensible", "extensible"],
  ["isNotExtensible", "notExtensible"],
  ["isSealed", "sealed"],
  ["isNotSealed", "notSealed"],
  ["isFrozen", "frozen"],
  ["isNotFrozen", "notFrozen"],
  ["isEmpty", "empty"],
  ["isNotEmpty", "notEmpty"],
  ["isCallable", "isFunction"],
  ["isNotCallable", "isNotFunction"],
  ["containsSubset", "containSubset"]
];
for (let [e, t] of JW)
  x[t] = x[e];
var BC = [];
function Fr$1(e) {
  let t = {
    use: Fr$1,
    AssertionError: ue$1,
    util: _t,
    config: at$1,
    expect: Lr$1,
    assert: x,
    Assertion: T,
    ...AP
  };
  return ~BC.indexOf(e) || (e(t, _t), BC.push(e)), t;
}
o(Fr$1, "use");
I(Fr$1, "use");
var Fx = {};
st$1(Fx, {
  toBeChecked: () => Ax,
  toBeDisabled: () => wx,
  toBeEmpty: () => px,
  toBeEmptyDOMElement: () => fx,
  toBeEnabled: () => Tx,
  toBeInTheDOM: () => Jd,
  toBeInTheDocument: () => dx,
  toBeInvalid: () => Sx,
  toBePartiallyChecked: () => Ox,
  toBeRequired: () => Rx,
  toBeValid: () => _x,
  toBeVisible: () => xx,
  toContainElement: () => Qd,
  toContainHTML: () => mx,
  toHaveAccessibleDescription: () => Zd,
  toHaveAccessibleErrorMessage: () => yx,
  toHaveAccessibleName: () => tp,
  toHaveAttribute: () => bx,
  toHaveClass: () => gx,
  toHaveDescription: () => qx,
  toHaveDisplayValue: () => Px,
  toHaveErrorMessage: () => Ix,
  toHaveFocus: () => vx,
  toHaveFormValues: () => Ex,
  toHaveRole: () => ep,
  toHaveSelection: () => Mx,
  toHaveStyle: () => rp,
  toHaveTextContent: () => hx,
  toHaveValue: () => Cx
});
var lx = Ne(rE(), 1);
function LP(e) {
  Object.defineProperty(e, "__esModule", { value: true, configurable: true });
}
o(LP, "$parcel$defineInteropFlag");
function iE(e, t, r7, n) {
  Object.defineProperty(e, t, { get: r7, set: n, enumerable: true, configurable: true });
}
o(iE, "$parcel$export");
var FP = {};
LP(FP);
iE(FP, "default", () => Dl);
var sE = class sE2 extends Error {
  constructor(t, r7, n, i, s) {
    super(t + ":" + n + ":" + i + ": " + r7), this.reason = r7, this.filename = t, this.line = n, this.column = i, this.source = s;
  }
};
o(sE, "$009ddb00d3ec72b8$export$2e2bcd8739ae039");
var Dl = sE, DP = {};
LP(DP);
iE(DP, "default", () => $l);
var aE = class aE2 {
  constructor(t, r7, n) {
    this.start = t, this.end = r7, this.source = n;
  }
};
o(aE, "$0865a9fb4cc365fe$export$2e2bcd8739ae039");
var $l = aE, r8 = {};
iE(r8, "CssTypes", () => Ve$1);
var Ve$1 = /* @__PURE__ */ (function(e) {
  return e.stylesheet = "stylesheet", e.rule = "rule", e.declaration = "declaration", e.comment = "comment", e.container = "container", e.charset = "charset", e.document = "document", e.customMedia = "custom-media", e.fontFace = "font-face", e.host = "host", e.import = "import", e.keyframes = "keyframes", e.keyframe = "keyframe", e.layer = "layer", e.media = "media", e.namespace = "namespace", e.page = "page", e.startingStyle = "starting-style", e.supports = "supports", e;
})({}), nE = /\/\*[^]*?(?:\*\/|$)/g, n8 = /* @__PURE__ */ o((e, t) => {
  t = t || {};
  let r7 = 1, n = 1;
  function i(F) {
    let j = F.match(/\n/g);
    j && (r7 += j.length);
    let K7 = F.lastIndexOf(`
`);
    n = ~K7 ? F.length - K7 : n + F.length;
  }
  o(i, "updatePosition");
  function s() {
    let F = {
      line: r7,
      column: n
    };
    return function(j) {
      return j.position = new $l(F, {
        line: r7,
        column: n
      }, t?.source || ""), m(), j;
    };
  }
  o(s, "position");
  let a = [];
  function l(F) {
    let j = new Dl(t?.source || "", F, r7, n, e);
    if (t?.silent) a.push(j);
    else throw j;
  }
  o(l, "error");
  function u() {
    let F = p5();
    return {
      type: Ve$1.stylesheet,
      stylesheet: {
        source: t?.source,
        rules: F,
        parsingErrors: a
      }
    };
  }
  o(u, "stylesheet");
  function c() {
    return f(/^{\s*/);
  }
  o(c, "open");
  function d() {
    return f(/^}/);
  }
  o(d, "close");
  function p5() {
    let F, j = [];
    for (m(), h5(j); e.length && e.charAt(0) !== "}" && (F = pe2() || Oe()); ) F && (j.push(F), h5(j));
    return j;
  }
  o(p5, "rules");
  function f(F) {
    let j = F.exec(e);
    if (!j) return;
    let K7 = j[0];
    return i(K7), e = e.slice(K7.length), j;
  }
  o(f, "match");
  function m() {
    f(/^\s*/);
  }
  o(m, "whitespace");
  function h5(F) {
    let j;
    for (F = F || []; j = b(); ) j && F.push(j);
    return F;
  }
  o(h5, "comments");
  function b() {
    let F = s();
    if (e.charAt(0) !== "/" || e.charAt(1) !== "*") return;
    let j = f(/^\/\*[^]*?\*\//);
    return j ? F({
      type: Ve$1.comment,
      comment: j[0].slice(2, -2)
    }) : l("End of comment missing");
  }
  o(b, "comment");
  function v5(F, j, K7) {
    let G = j + 1, Z = false, ve = F.indexOf(")", G);
    for (; !Z && ve !== -1; ) {
      let qe2 = F.indexOf("(", G);
      qe2 !== -1 && qe2 < ve ? (G = v5(F, qe2 + 1) + 1, ve = F.indexOf(")", G)) : Z = true;
    }
    return Z && ve !== -1 ? ve : -1;
  }
  o(v5, "findClosingParenthese");
  function g() {
    let F = f(/^([^{]+)/);
    if (!F) return;
    let j = Pt$1(F[0]).replace(nE, "");
    if (j.indexOf(",") === -1) return [
      j
    ];
    let K7 = 0, G = j.indexOf("(", K7);
    for (; G !== -1; ) {
      let Z = v5(j, G);
      if (Z === -1) break;
      K7 = Z + 1, j = j.substring(0, G) + j.substring(G, Z).replace(/,/g, "‌") + j.substring(Z), G = j.indexOf("(", K7);
    }
    return j = j.replace(/("|')(?:\\\1|.)*?\1/g, (Z) => Z.replace(/,/g, "‌")), j.split(",").map((Z) => Pt$1(Z.replace(/\u200C/g, ",")));
  }
  o(g, "selector");
  function w5() {
    let F = s(), j = f(/^(\*?[-#/*\\\w]+(\[[0-9a-z_-]+\])?)\s*/);
    if (!j) return;
    let K7 = Pt$1(j[0]);
    if (!f(/^:\s*/)) return l("property missing ':'");
    let G = f(/^((?:'(?:\\'|.)*?'|"(?:\\"|.)*?"|\((?:'(?:\\'|.)*?'|"(?:\\"|.)*?"|[^)])*?\)|[^};])+)/), Z = F({
      type: Ve$1.declaration,
      property: K7.replace(nE, ""),
      value: G ? Pt$1(G[0]).replace(nE, "") : ""
    });
    return f(/^[;\s]*/), Z;
  }
  o(w5, "declaration");
  function E() {
    let F = [];
    if (!c()) return l("missing '{'");
    h5(F);
    let j;
    for (; j = w5(); ) j && (F.push(j), h5(F));
    return d() ? F : l("missing '}'");
  }
  o(E, "declarations");
  function R() {
    let F, j = [], K7 = s();
    for (; F = f(/^((\d+\.\d+|\.\d+|\d+)%?|[a-z]+)\s*/); )
      j.push(F[1]), f(/^,\s*/);
    if (j.length)
      return K7({
        type: Ve$1.keyframe,
        values: j,
        declarations: E() || []
      });
  }
  o(R, "keyframe");
  function S() {
    let F = s(), j = f(/^@([-\w]+)?keyframes\s*/);
    if (!j) return;
    let K7 = j[1], G = f(/^([-\w]+)\s*/);
    if (!G) return l("@keyframes missing name");
    let Z = G[1];
    if (!c()) return l("@keyframes missing '{'");
    let ve, qe2 = h5();
    for (; ve = R(); )
      qe2.push(ve), qe2 = qe2.concat(h5());
    return d() ? F({
      type: Ve$1.keyframes,
      name: Z,
      vendor: K7,
      keyframes: qe2
    }) : l("@keyframes missing '}'");
  }
  o(S, "atkeyframes");
  function P() {
    let F = s(), j = f(/^@supports *([^{]+)/);
    if (!j) return;
    let K7 = Pt$1(j[1]);
    if (!c()) return l("@supports missing '{'");
    let G = h5().concat(p5());
    return d() ? F({
      type: Ve$1.supports,
      supports: K7,
      rules: G
    }) : l("@supports missing '}'");
  }
  o(P, "atsupports");
  function _5() {
    let F = s();
    if (!f(/^@host\s*/)) return;
    if (!c()) return l("@host missing '{'");
    let K7 = h5().concat(p5());
    return d() ? F({
      type: Ve$1.host,
      rules: K7
    }) : l("@host missing '}'");
  }
  o(_5, "athost");
  function C5() {
    let F = s(), j = f(/^@container *([^{]+)/);
    if (!j) return;
    let K7 = Pt$1(j[1]);
    if (!c()) return l("@container missing '{'");
    let G = h5().concat(p5());
    return d() ? F({
      type: Ve$1.container,
      container: K7,
      rules: G
    }) : l("@container missing '}'");
  }
  o(C5, "atcontainer");
  function O() {
    let F = s(), j = f(/^@layer *([^{;@]+)/);
    if (!j) return;
    let K7 = Pt$1(j[1]);
    if (!c())
      return f(/^[;\s]*/), F({
        type: Ve$1.layer,
        layer: K7
      });
    let G = h5().concat(p5());
    return d() ? F({
      type: Ve$1.layer,
      layer: K7,
      rules: G
    }) : l("@layer missing '}'");
  }
  o(O, "atlayer");
  function L() {
    let F = s(), j = f(/^@media *([^{]+)/);
    if (!j) return;
    let K7 = Pt$1(j[1]);
    if (!c()) return l("@media missing '{'");
    let G = h5().concat(p5());
    return d() ? F({
      type: Ve$1.media,
      media: K7,
      rules: G
    }) : l("@media missing '}'");
  }
  o(L, "atmedia");
  function q() {
    let F = s(), j = f(/^@custom-media\s+(--\S+)\s*([^{;\s][^{;]*);/);
    if (j)
      return F({
        type: Ve$1.customMedia,
        name: Pt$1(j[1]),
        media: Pt$1(j[2])
      });
  }
  o(q, "atcustommedia");
  function D() {
    let F = s();
    if (!f(/^@page */)) return;
    let K7 = g() || [];
    if (!c()) return l("@page missing '{'");
    let G = h5(), Z;
    for (; Z = w5(); )
      G.push(Z), G = G.concat(h5());
    return d() ? F({
      type: Ve$1.page,
      selectors: K7,
      declarations: G
    }) : l("@page missing '}'");
  }
  o(D, "atpage");
  function H() {
    let F = s(), j = f(/^@([-\w]+)?document *([^{]+)/);
    if (!j) return;
    let K7 = Pt$1(j[1]), G = Pt$1(j[2]);
    if (!c()) return l("@document missing '{'");
    let Z = h5().concat(p5());
    return d() ? F({
      type: Ve$1.document,
      document: G,
      vendor: K7,
      rules: Z
    }) : l("@document missing '}'");
  }
  o(H, "atdocument");
  function M7() {
    let F = s();
    if (!f(/^@font-face\s*/)) return;
    if (!c()) return l("@font-face missing '{'");
    let K7 = h5(), G;
    for (; G = w5(); )
      K7.push(G), K7 = K7.concat(h5());
    return d() ? F({
      type: Ve$1.fontFace,
      declarations: K7
    }) : l("@font-face missing '}'");
  }
  o(M7, "atfontface");
  function U() {
    let F = s();
    if (!f(/^@starting-style\s*/)) return;
    if (!c()) return l("@starting-style missing '{'");
    let K7 = h5().concat(p5());
    return d() ? F({
      type: Ve$1.startingStyle,
      rules: K7
    }) : l("@starting-style missing '}'");
  }
  o(U, "atstartingstyle");
  let N = ae("import"), W = ae("charset"), Y = ae("namespace");
  function ae(F) {
    let j = new RegExp("^@" + F + `\\s*((?::?[^;'"]|"(?:\\\\"|[^"])*?"|'(?:\\\\'|[^'])*?')+)(?:;|$)`);
    return function() {
      let K7 = s(), G = f(j);
      if (!G) return;
      let Z = {
        type: F
      };
      return Z[F] = G[1].trim(), K7(Z);
    };
  }
  o(ae, "_compileAtrule");
  function pe2() {
    if (e[0] === "@")
      return S() || L() || q() || P() || N() || W() || Y() || H() || D() || _5() || M7() || C5() || U() || O();
  }
  o(pe2, "atrule");
  function Oe() {
    let F = s(), j = g();
    return j ? (h5(), F({
      type: Ve$1.rule,
      selectors: j,
      declarations: E() || []
    })) : l("selector missing");
  }
  return o(Oe, "rule"), oE(u());
}, "$d708735ed1303b43$export$98e6a39c04603d36");
function Pt$1(e) {
  return e ? e.trim() : "";
}
o(Pt$1, "$d708735ed1303b43$var$trim");
function oE(e, t) {
  let r7 = e && typeof e.type == "string", n = r7 ? e : t;
  for (let i in e) {
    let s = e[i];
    Array.isArray(s) ? s.forEach((a) => {
      oE(a, n);
    }) : s && typeof s == "object" && oE(s, n);
  }
  return r7 && Object.defineProperty(e, "parent", {
    configurable: true,
    writable: true,
    enumerable: false,
    value: t || null
  }), e;
}
o(oE, "$d708735ed1303b43$var$addParent");
var o8 = n8;
var $P = o8;
var i8 = Object.prototype.toString;
function BP(e) {
  return typeof e == "function" || i8.call(e) === "[object Function]";
}
o(BP, "isCallable");
function s8(e) {
  var t = Number(e);
  return isNaN(t) ? 0 : t === 0 || !isFinite(t) ? t : (t > 0 ? 1 : -1) * Math.floor(Math.abs(t));
}
o(s8, "toInteger");
var a8 = Math.pow(2, 53) - 1;
function l8(e) {
  var t = s8(e);
  return Math.min(Math.max(t, 0), a8);
}
o(l8, "toLength");
function Et$1(e, t) {
  var r7 = Array, n = Object(e);
  if (e == null)
    throw new TypeError("Array.from requires an array-like object - not null or undefined");
  if (typeof t < "u" && !BP(t))
    throw new TypeError("Array.from: when provided, the second argument must be a function");
  for (var i = l8(n.length), s = BP(r7) ? Object(new r7(i)) : new Array(i), a = 0, l; a < i; )
    l = n[a], t ? s[a] = t(l, a) : s[a] = l, a += 1;
  return s.length = i, s;
}
o(Et$1, "arrayFrom");
function ns(e) {
  "@babel/helpers - typeof";
  return ns = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t) {
    return typeof t;
  } : function(t) {
    return t && typeof Symbol == "function" && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
  }, ns(e);
}
o(ns, "_typeof");
function u8(e, t) {
  if (!(e instanceof t))
    throw new TypeError("Cannot call a class as a function");
}
o(u8, "_classCallCheck");
function HP(e, t) {
  for (var r7 = 0; r7 < t.length; r7++) {
    var n = t[r7];
    n.enumerable = n.enumerable || false, n.configurable = true, "value" in n && (n.writable = true), Object.defineProperty(e, UP(n.key), n);
  }
}
o(HP, "_defineProperties");
function c8(e, t, r7) {
  return t && HP(e.prototype, t), r7 && HP(e, r7), Object.defineProperty(e, "prototype", { writable: false }), e;
}
o(c8, "_createClass");
function d8(e, t, r7) {
  return t = UP(t), t in e ? Object.defineProperty(e, t, { value: r7, enumerable: true, configurable: true, writable: true }) : e[t] = r7, e;
}
o(d8, "_defineProperty");
function UP(e) {
  var t = p8(e, "string");
  return ns(t) === "symbol" ? t : String(t);
}
o(UP, "_toPropertyKey");
function p8(e, t) {
  if (ns(e) !== "object" || e === null) return e;
  var r7 = e[Symbol.toPrimitive];
  if (r7 !== void 0) {
    var n = r7.call(e, t || "default");
    if (ns(n) !== "object") return n;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (t === "string" ? String : Number)(e);
}
o(p8, "_toPrimitive");
var f8 = /* @__PURE__ */ (function() {
  function e() {
    var t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
    u8(this, e), d8(this, "items", void 0), this.items = t;
  }
  return o(e, "SetLike"), c8(e, [{
    key: "add",
    value: /* @__PURE__ */ o(function(r7) {
      return this.has(r7) === false && this.items.push(r7), this;
    }, "add")
  }, {
    key: "clear",
    value: /* @__PURE__ */ o(function() {
      this.items = [];
    }, "clear")
  }, {
    key: "delete",
    value: /* @__PURE__ */ o(function(r7) {
      var n = this.items.length;
      return this.items = this.items.filter(function(i) {
        return i !== r7;
      }), n !== this.items.length;
    }, "_delete")
  }, {
    key: "forEach",
    value: /* @__PURE__ */ o(function(r7) {
      var n = this;
      this.items.forEach(function(i) {
        r7(i, i, n);
      });
    }, "forEach")
  }, {
    key: "has",
    value: /* @__PURE__ */ o(function(r7) {
      return this.items.indexOf(r7) !== -1;
    }, "has")
  }, {
    key: "size",
    get: /* @__PURE__ */ o(function() {
      return this.items.length;
    }, "get")
  }]), e;
})(), VP = typeof Set > "u" ? Set : f8;
function ke(e) {
  var t;
  return (
    // eslint-disable-next-line no-restricted-properties -- actual guard for environments without localName
    (t = e.localName) !== null && t !== void 0 ? t : (
      // eslint-disable-next-line no-restricted-properties -- required for the fallback
      e.tagName.toLowerCase()
    )
  );
}
o(ke, "getLocalName");
var m8 = {
  article: "article",
  aside: "complementary",
  button: "button",
  datalist: "listbox",
  dd: "definition",
  details: "group",
  dialog: "dialog",
  dt: "term",
  fieldset: "group",
  figure: "figure",
  // WARNING: Only with an accessible name
  form: "form",
  footer: "contentinfo",
  h1: "heading",
  h2: "heading",
  h3: "heading",
  h4: "heading",
  h5: "heading",
  h6: "heading",
  header: "banner",
  hr: "separator",
  html: "document",
  legend: "legend",
  li: "listitem",
  math: "math",
  main: "main",
  menu: "list",
  nav: "navigation",
  ol: "list",
  optgroup: "group",
  // WARNING: Only in certain context
  option: "option",
  output: "status",
  progress: "progressbar",
  // WARNING: Only with an accessible name
  section: "region",
  summary: "button",
  table: "table",
  tbody: "rowgroup",
  textarea: "textbox",
  tfoot: "rowgroup",
  // WARNING: Only in certain context
  td: "cell",
  th: "columnheader",
  thead: "rowgroup",
  tr: "row",
  ul: "list"
}, h8 = {
  caption: /* @__PURE__ */ new Set(["aria-label", "aria-labelledby"]),
  code: /* @__PURE__ */ new Set(["aria-label", "aria-labelledby"]),
  deletion: /* @__PURE__ */ new Set(["aria-label", "aria-labelledby"]),
  emphasis: /* @__PURE__ */ new Set(["aria-label", "aria-labelledby"]),
  generic: /* @__PURE__ */ new Set(["aria-label", "aria-labelledby", "aria-roledescription"]),
  insertion: /* @__PURE__ */ new Set(["aria-label", "aria-labelledby"]),
  none: /* @__PURE__ */ new Set(["aria-label", "aria-labelledby"]),
  paragraph: /* @__PURE__ */ new Set(["aria-label", "aria-labelledby"]),
  presentation: /* @__PURE__ */ new Set(["aria-label", "aria-labelledby"]),
  strong: /* @__PURE__ */ new Set(["aria-label", "aria-labelledby"]),
  subscript: /* @__PURE__ */ new Set(["aria-label", "aria-labelledby"]),
  superscript: /* @__PURE__ */ new Set(["aria-label", "aria-labelledby"])
};
function y8(e, t) {
  return [
    "aria-atomic",
    "aria-busy",
    "aria-controls",
    "aria-current",
    "aria-description",
    "aria-describedby",
    "aria-details",
    // "disabled",
    "aria-dropeffect",
    // "errormessage",
    "aria-flowto",
    "aria-grabbed",
    // "haspopup",
    "aria-hidden",
    // "invalid",
    "aria-keyshortcuts",
    "aria-label",
    "aria-labelledby",
    "aria-live",
    "aria-owns",
    "aria-relevant",
    "aria-roledescription"
  ].some(function(r7) {
    var n;
    return e.hasAttribute(r7) && !((n = h8[t]) !== null && n !== void 0 && n.has(r7));
  });
}
o(y8, "hasGlobalAriaAttributes");
function zP(e, t) {
  return y8(e, t);
}
o(zP, "ignorePresentationalRole");
function Bl(e) {
  var t = g8(e);
  if (t === null || os.indexOf(t) !== -1) {
    var r7 = b8(e);
    if (os.indexOf(t || "") === -1 || zP(e, r7 || ""))
      return r7;
  }
  return t;
}
o(Bl, "getRole");
function b8(e) {
  var t = m8[ke(e)];
  if (t !== void 0)
    return t;
  switch (ke(e)) {
    case "a":
    case "area":
    case "link":
      if (e.hasAttribute("href"))
        return "link";
      break;
    case "img":
      return e.getAttribute("alt") === "" && !zP(e, "img") ? "presentation" : "img";
    case "input": {
      var r7 = e, n = r7.type;
      switch (n) {
        case "button":
        case "image":
        case "reset":
        case "submit":
          return "button";
        case "checkbox":
        case "radio":
          return n;
        case "range":
          return "slider";
        case "email":
        case "tel":
        case "text":
        case "url":
          return e.hasAttribute("list") ? "combobox" : "textbox";
        case "search":
          return e.hasAttribute("list") ? "combobox" : "searchbox";
        case "number":
          return "spinbutton";
        default:
          return null;
      }
    }
    case "select":
      return e.hasAttribute("multiple") || e.size > 1 ? "listbox" : "combobox";
  }
  return null;
}
o(b8, "getImplicitRole");
function g8(e) {
  var t = e.getAttribute("role");
  if (t !== null) {
    var r7 = t.trim().split(" ")[0];
    if (r7.length > 0)
      return r7;
  }
  return null;
}
o(g8, "getExplicitRole");
var os = ["presentation", "none"];
function Re$1(e) {
  return e !== null && e.nodeType === e.ELEMENT_NODE;
}
o(Re$1, "isElement");
function lE(e) {
  return Re$1(e) && ke(e) === "caption";
}
o(lE, "isHTMLTableCaptionElement");
function is(e) {
  return Re$1(e) && ke(e) === "input";
}
o(is, "isHTMLInputElement");
function GP(e) {
  return Re$1(e) && ke(e) === "optgroup";
}
o(GP, "isHTMLOptGroupElement");
function WP(e) {
  return Re$1(e) && ke(e) === "select";
}
o(WP, "isHTMLSelectElement");
function YP(e) {
  return Re$1(e) && ke(e) === "table";
}
o(YP, "isHTMLTableElement");
function KP(e) {
  return Re$1(e) && ke(e) === "textarea";
}
o(KP, "isHTMLTextAreaElement");
function XP(e) {
  var t = e.ownerDocument === null ? e : e.ownerDocument, r7 = t.defaultView;
  if (r7 === null)
    throw new TypeError("no window available");
  return r7;
}
o(XP, "safeWindow");
function JP(e) {
  return Re$1(e) && ke(e) === "fieldset";
}
o(JP, "isHTMLFieldSetElement");
function QP(e) {
  return Re$1(e) && ke(e) === "legend";
}
o(QP, "isHTMLLegendElement");
function ZP(e) {
  return Re$1(e) && ke(e) === "slot";
}
o(ZP, "isHTMLSlotElement");
function v8(e) {
  return Re$1(e) && e.ownerSVGElement !== void 0;
}
o(v8, "isSVGElement");
function e0(e) {
  return Re$1(e) && ke(e) === "svg";
}
o(e0, "isSVGSVGElement");
function t0(e) {
  return v8(e) && ke(e) === "title";
}
o(t0, "isSVGTitleElement");
function Ao(e, t) {
  if (Re$1(e) && e.hasAttribute(t)) {
    var r7 = e.getAttribute(t).split(" "), n = e.getRootNode ? e.getRootNode() : e.ownerDocument;
    return r7.map(function(i) {
      return n.getElementById(i);
    }).filter(
      function(i) {
        return i !== null;
      }
      // TODO: why does this not narrow?
    );
  }
  return [];
}
o(Ao, "queryIdRefs");
function Bt(e, t) {
  return Re$1(e) ? t.indexOf(Bl(e)) !== -1 : false;
}
o(Bt, "hasAnyConcreteRoles");
function E8(e) {
  return e.trim().replace(/\s\s+/g, " ");
}
o(E8, "asFlatString");
function x8(e, t) {
  if (!Re$1(e))
    return false;
  if (e.hasAttribute("hidden") || e.getAttribute("aria-hidden") === "true")
    return true;
  var r7 = t(e);
  return r7.getPropertyValue("display") === "none" || r7.getPropertyValue("visibility") === "hidden";
}
o(x8, "isHidden");
function w8(e) {
  return Bt(e, ["button", "combobox", "listbox", "textbox"]) || o0(e, "range");
}
o(w8, "isControl");
function o0(e, t) {
  if (!Re$1(e))
    return false;
  switch (t) {
    case "range":
      return Bt(e, ["meter", "progressbar", "scrollbar", "slider", "spinbutton"]);
    default:
      throw new TypeError("No knowledge about abstract role '".concat(t, "'. This is likely a bug :("));
  }
}
o(o0, "hasAbstractRole");
function r0(e, t) {
  var r7 = Et$1(e.querySelectorAll(t));
  return Ao(e, "aria-owns").forEach(function(n) {
    r7.push.apply(r7, Et$1(n.querySelectorAll(t)));
  }), r7;
}
o(r0, "querySelectorAllSubtree");
function T8(e) {
  return WP(e) ? e.selectedOptions || r0(e, "[selected]") : r0(e, '[aria-selected="true"]');
}
o(T8, "querySelectedOptions");
function R8(e) {
  return Bt(e, os);
}
o(R8, "isMarkedPresentational");
function S8(e) {
  return lE(e);
}
o(S8, "isNativeHostLanguageTextAlternativeElement");
function _8(e) {
  return Bt(e, ["button", "cell", "checkbox", "columnheader", "gridcell", "heading", "label", "legend", "link", "menuitem", "menuitemcheckbox", "menuitemradio", "option", "radio", "row", "rowheader", "switch", "tab", "tooltip", "treeitem"]);
}
o(_8, "allowsNameFromContent");
function C8(e) {
  return false;
}
o(C8, "isDescendantOfNativeHostLanguageTextAlternativeElement");
function P8(e) {
  return is(e) || KP(e) ? e.value : e.textContent || "";
}
o(P8, "getValueOfTextbox");
function n0(e) {
  var t = e.getPropertyValue("content");
  return /^["'].*["']$/.test(t) ? t.slice(1, -1) : "";
}
o(n0, "getTextualContent");
function i0(e) {
  var t = ke(e);
  return t === "button" || t === "input" && e.getAttribute("type") !== "hidden" || t === "meter" || t === "output" || t === "progress" || t === "select" || t === "textarea";
}
o(i0, "isLabelableElement");
function s0(e) {
  if (i0(e))
    return e;
  var t = null;
  return e.childNodes.forEach(function(r7) {
    if (t === null && Re$1(r7)) {
      var n = s0(r7);
      n !== null && (t = n);
    }
  }), t;
}
o(s0, "findLabelableElement");
function A8(e) {
  if (e.control !== void 0)
    return e.control;
  var t = e.getAttribute("for");
  return t !== null ? e.ownerDocument.getElementById(t) : s0(e);
}
o(A8, "getControlOfLabel");
function O8(e) {
  var t = e.labels;
  if (t === null)
    return t;
  if (t !== void 0)
    return Et$1(t);
  if (!i0(e))
    return null;
  var r7 = e.ownerDocument;
  return Et$1(r7.querySelectorAll("label")).filter(function(n) {
    return A8(n) === e;
  });
}
o(O8, "getLabels");
function q8(e) {
  var t = e.assignedNodes();
  return t.length === 0 ? Et$1(e.childNodes) : t;
}
o(q8, "getSlotContents");
function Hl(e) {
  var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, r7 = new VP(), n = XP(e), i = t.compute, s = i === void 0 ? "name" : i, a = t.computedStyleSupportsPseudoElements, l = a === void 0 ? t.getComputedStyle !== void 0 : a, u = t.getComputedStyle, c = u === void 0 ? n.getComputedStyle.bind(n) : u, d = t.hidden, p5 = d === void 0 ? false : d;
  function f(g, w5) {
    var E = "";
    if (Re$1(g) && l) {
      var R = c(g, "::before"), S = n0(R);
      E = "".concat(S, " ").concat(E);
    }
    var P = ZP(g) ? q8(g) : Et$1(g.childNodes).concat(Ao(g, "aria-owns"));
    if (P.forEach(function(O) {
      var L = v5(O, {
        isEmbeddedInLabel: w5.isEmbeddedInLabel,
        isReferenced: false,
        recursion: true
      }), q = Re$1(O) ? c(O).getPropertyValue("display") : "inline", D = q !== "inline" ? " " : "";
      E += "".concat(D).concat(L).concat(D);
    }), Re$1(g) && l) {
      var _5 = c(g, "::after"), C5 = n0(_5);
      E = "".concat(E, " ").concat(C5);
    }
    return E.trim();
  }
  o(f, "computeMiscTextAlternative");
  function m(g, w5) {
    var E = g.getAttributeNode(w5);
    return E !== null && !r7.has(E) && E.value.trim() !== "" ? (r7.add(E), E.value) : null;
  }
  o(m, "useAttribute");
  function h5(g) {
    return Re$1(g) ? m(g, "title") : null;
  }
  o(h5, "computeTooltipAttributeValue");
  function b(g) {
    if (!Re$1(g))
      return null;
    if (JP(g)) {
      r7.add(g);
      for (var w5 = Et$1(g.childNodes), E = 0; E < w5.length; E += 1) {
        var R = w5[E];
        if (QP(R))
          return v5(R, {
            isEmbeddedInLabel: false,
            isReferenced: false,
            recursion: false
          });
      }
    } else if (YP(g)) {
      r7.add(g);
      for (var S = Et$1(g.childNodes), P = 0; P < S.length; P += 1) {
        var _5 = S[P];
        if (lE(_5))
          return v5(_5, {
            isEmbeddedInLabel: false,
            isReferenced: false,
            recursion: false
          });
      }
    } else if (e0(g)) {
      r7.add(g);
      for (var C5 = Et$1(g.childNodes), O = 0; O < C5.length; O += 1) {
        var L = C5[O];
        if (t0(L))
          return L.textContent;
      }
      return null;
    } else if (ke(g) === "img" || ke(g) === "area") {
      var q = m(g, "alt");
      if (q !== null)
        return q;
    } else if (GP(g)) {
      var D = m(g, "label");
      if (D !== null)
        return D;
    }
    if (is(g) && (g.type === "button" || g.type === "submit" || g.type === "reset")) {
      var H = m(g, "value");
      if (H !== null)
        return H;
      if (g.type === "submit")
        return "Submit";
      if (g.type === "reset")
        return "Reset";
    }
    var M7 = O8(g);
    if (M7 !== null && M7.length !== 0)
      return r7.add(g), Et$1(M7).map(function(Y) {
        return v5(Y, {
          isEmbeddedInLabel: true,
          isReferenced: false,
          recursion: true
        });
      }).filter(function(Y) {
        return Y.length > 0;
      }).join(" ");
    if (is(g) && g.type === "image") {
      var U = m(g, "alt");
      if (U !== null)
        return U;
      var N = m(g, "title");
      return N !== null ? N : "Submit Query";
    }
    if (Bt(g, ["button"])) {
      var W = f(g, {
        isEmbeddedInLabel: false
      });
      if (W !== "")
        return W;
    }
    return null;
  }
  o(b, "computeElementTextAlternative");
  function v5(g, w5) {
    if (r7.has(g))
      return "";
    if (!p5 && x8(g, c) && !w5.isReferenced)
      return r7.add(g), "";
    var E = Re$1(g) ? g.getAttributeNode("aria-labelledby") : null, R = E !== null && !r7.has(E) ? Ao(g, "aria-labelledby") : [];
    if (s === "name" && !w5.isReferenced && R.length > 0)
      return r7.add(E), R.map(function(q) {
        return v5(q, {
          isEmbeddedInLabel: w5.isEmbeddedInLabel,
          isReferenced: true,
          // this isn't recursion as specified, otherwise we would skip
          // `aria-label` in
          // <input id="myself" aria-label="foo" aria-labelledby="myself"
          recursion: false
        });
      }).join(" ");
    var S = w5.recursion && w8(g) && s === "name";
    if (!S) {
      var P = (Re$1(g) && g.getAttribute("aria-label") || "").trim();
      if (P !== "" && s === "name")
        return r7.add(g), P;
      if (!R8(g)) {
        var _5 = b(g);
        if (_5 !== null)
          return r7.add(g), _5;
      }
    }
    if (Bt(g, ["menu"]))
      return r7.add(g), "";
    if (S || w5.isEmbeddedInLabel || w5.isReferenced) {
      if (Bt(g, ["combobox", "listbox"])) {
        r7.add(g);
        var C5 = T8(g);
        return C5.length === 0 ? is(g) ? g.value : "" : Et$1(C5).map(function(q) {
          return v5(q, {
            isEmbeddedInLabel: w5.isEmbeddedInLabel,
            isReferenced: false,
            recursion: true
          });
        }).join(" ");
      }
      if (o0(g, "range"))
        return r7.add(g), g.hasAttribute("aria-valuetext") ? g.getAttribute("aria-valuetext") : g.hasAttribute("aria-valuenow") ? g.getAttribute(
          "aria-valuenow"
        ) : g.getAttribute("value") || "";
      if (Bt(g, ["textbox"]))
        return r7.add(g), P8(g);
    }
    if (_8(g) || Re$1(g) && w5.isReferenced || S8(g) || C8()) {
      var O = f(g, {
        isEmbeddedInLabel: w5.isEmbeddedInLabel
      });
      if (O !== "")
        return r7.add(g), O;
    }
    if (g.nodeType === g.TEXT_NODE)
      return r7.add(g), g.textContent || "";
    if (w5.recursion)
      return r7.add(g), f(g, {
        isEmbeddedInLabel: w5.isEmbeddedInLabel
      });
    var L = h5(g);
    return L !== null ? (r7.add(g), L) : (r7.add(g), "");
  }
  return o(v5, "computeTextAlternative"), E8(v5(e, {
    isEmbeddedInLabel: false,
    // by spec computeAccessibleDescription starts with the referenced elements as roots
    isReferenced: s === "description",
    recursion: false
  }));
}
o(Hl, "computeTextAlternative");
function ss(e) {
  "@babel/helpers - typeof";
  return ss = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t) {
    return typeof t;
  } : function(t) {
    return t && typeof Symbol == "function" && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
  }, ss(e);
}
o(ss, "_typeof");
function a0(e, t) {
  var r7 = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var n = Object.getOwnPropertySymbols(e);
    t && (n = n.filter(function(i) {
      return Object.getOwnPropertyDescriptor(e, i).enumerable;
    })), r7.push.apply(r7, n);
  }
  return r7;
}
o(a0, "ownKeys");
function l0(e) {
  for (var t = 1; t < arguments.length; t++) {
    var r7 = arguments[t] != null ? arguments[t] : {};
    t % 2 ? a0(Object(r7), true).forEach(function(n) {
      I8(e, n, r7[n]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r7)) : a0(Object(r7)).forEach(function(n) {
      Object.defineProperty(e, n, Object.getOwnPropertyDescriptor(r7, n));
    });
  }
  return e;
}
o(l0, "_objectSpread");
function I8(e, t, r7) {
  return t = M8(t), t in e ? Object.defineProperty(e, t, { value: r7, enumerable: true, configurable: true, writable: true }) : e[t] = r7, e;
}
o(I8, "_defineProperty");
function M8(e) {
  var t = N8(e, "string");
  return ss(t) === "symbol" ? t : String(t);
}
o(M8, "_toPropertyKey");
function N8(e, t) {
  if (ss(e) !== "object" || e === null) return e;
  var r7 = e[Symbol.toPrimitive];
  if (r7 !== void 0) {
    var n = r7.call(e, t || "default");
    if (ss(n) !== "object") return n;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (t === "string" ? String : Number)(e);
}
o(N8, "_toPrimitive");
function uE(e) {
  var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, r7 = Ao(e, "aria-describedby").map(function(s) {
    return Hl(s, l0(l0({}, t), {}, {
      compute: "description"
    }));
  }).join(" ");
  if (r7 === "") {
    var n = e.getAttribute("aria-description");
    r7 = n === null ? "" : n;
  }
  if (r7 === "") {
    var i = e.getAttribute("title");
    r7 = i === null ? "" : i;
  }
  return r7;
}
o(uE, "computeAccessibleDescription");
function j8(e) {
  return Bt(e, [
    "caption",
    "code",
    "deletion",
    "emphasis",
    "generic",
    "insertion",
    "none",
    "paragraph",
    "presentation",
    "strong",
    "subscript",
    "superscript"
  ]);
}
o(j8, "prohibitsNaming");
function cE(e) {
  var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  return j8(e) ? "" : Hl(e, t);
}
o(cE, "computeAccessibleName");
var Rs = Ne(AE(), 1), mN = Ne(DE(), 1), np = Ne(ix(), 1), hN = Ne(ax(), 1);
var Nx = class Nx2 extends Error {
  constructor(t, r7, n, i) {
    super(), Error.captureStackTrace && Error.captureStackTrace(this, n);
    let s = "";
    try {
      s = i.utils.printWithType(
        "Received",
        r7,
        i.utils.printReceived
      );
    } catch {
    }
    this.message = [
      i.utils.matcherHint(
        `${i.isNot ? ".not" : ""}.${n.name}`,
        "received",
        ""
      ),
      "",
      // eslint-disable-next-line new-cap
      `${i.utils.RECEIVED_COLOR(
        "received"
      )} value must ${t}.`,
      s
    ].join(`
`);
  }
};
o(Nx, "GenericTypeError");
var Yd = Nx, jx = class jx2 extends Yd {
  constructor(...t) {
    super("be an HTMLElement or an SVGElement", ...t);
  }
};
o(jx, "HtmlElementTypeError");
var Kd = jx, kx = class kx2 extends Yd {
  constructor(...t) {
    super("be a Node", ...t);
  }
};
o(kx, "NodeTypeError");
var Xd = kx;
function yN(e, t, ...r7) {
  if (!e || !e.ownerDocument || !e.ownerDocument.defaultView)
    throw new t(e, ...r7);
}
o(yN, "checkHasWindow");
function _ne(e, ...t) {
  yN(e, Xd, ...t);
  let r7 = e.ownerDocument.defaultView;
  if (!(e instanceof r7.Node))
    throw new Xd(e, ...t);
}
o(_ne, "checkNode");
function me$1(e, ...t) {
  yN(e, Kd, ...t);
  let r7 = e.ownerDocument.defaultView;
  if (!(e instanceof r7.HTMLElement) && !(e instanceof r7.SVGElement))
    throw new Kd(e, ...t);
}
o(me$1, "checkHtmlElement");
var Lx = class Lx2 extends Error {
  constructor(t, r7, n) {
    super(), Error.captureStackTrace && Error.captureStackTrace(this, r7), this.message = [
      t.message,
      "",
      // eslint-disable-next-line new-cap
      n.utils.RECEIVED_COLOR("Failing css:"),
      // eslint-disable-next-line new-cap
      n.utils.RECEIVED_COLOR(`${t.css}`)
    ].join(`
`);
  }
};
o(Lx, "InvalidCSSError");
var ux = Lx;
function Cne(e, ...t) {
  let r7 = $P(`selector { ${e} }`, { silent: true }).stylesheet;
  if (r7.parsingErrors && r7.parsingErrors.length > 0) {
    let { reason: i, line: s } = r7.parsingErrors[0];
    throw new ux(
      {
        css: e,
        message: `Syntax error parsing expected css: ${i} on line: ${s}`
      },
      ...t
    );
  }
  return r7.rules[0].declarations.filter((i) => i.type === "declaration").reduce(
    (i, { property: s, value: a }) => Object.assign(i, { [s]: a }),
    {}
  );
}
o(Cne, "parseCSS");
function uN(e, t) {
  return typeof t == "string" ? t : e.utils.stringify(t);
}
o(uN, "display");
function Xe(e, t, r7, n, i, s) {
  return [
    `${t}
`,
    // eslint-disable-next-line new-cap
    `${r7}:
${e.utils.EXPECTED_COLOR(
      (0, lx.default)(uN(e, n), 2)
    )}`,
    // eslint-disable-next-line new-cap
    `${i}:
${e.utils.RECEIVED_COLOR(
      (0, lx.default)(uN(e, s), 2)
    )}`
  ].join(`
`);
}
o(Xe, "getMessage");
function Pne(e, t) {
  return t instanceof RegExp ? t.test(e) : e.includes(String(t));
}
o(Pne, "matches");
function op(e, t) {
  console.warn(
    `Warning: ${e} has been deprecated and will be removed in future updates.`,
    t
  );
}
o(op, "deprecate");
function ip(e) {
  return e.replace(/\s+/g, " ").trim();
}
o(ip, "normalize");
function Br$1(e) {
  return e.tagName && e.tagName.toLowerCase();
}
o(Br$1, "getTag");
function Ane({ multiple: e, options: t }) {
  let r7 = [...t].filter((n) => n.selected);
  if (e)
    return [...r7].map((n) => n.value);
  if (r7.length !== 0)
    return r7[0].value;
}
o(Ane, "getSelectValue");
function One(e) {
  switch (e.type) {
    case "number":
      return e.value === "" ? null : Number(e.value);
    case "checkbox":
      return e.checked;
    default:
      return e.value;
  }
}
o(One, "getInputValue");
var qne = ["meter", "progressbar", "slider", "spinbutton"];
function Ine(e) {
  if (qne.includes(e.getAttribute("role")))
    return Number(e.getAttribute("aria-valuenow"));
}
o(Ine, "getAccessibleValue");
function bN(e) {
  if (e)
    switch (e.tagName.toLowerCase()) {
      case "input":
        return One(e);
      case "select":
        return Ane(e);
      default:
        return e.value ?? Ine(e);
    }
}
o(bN, "getSingleElementValue");
function Mne(e, { wordConnector: t = ", ", lastWordConnector: r7 = " and " } = {}) {
  return [e.slice(0, -1).join(t), e[e.length - 1]].join(
    e.length > 1 ? r7 : ""
  );
}
o(Mne, "toSentence");
function cx(e, t) {
  if (Array.isArray(e) && Array.isArray(t))
    return [...new Set(e)].every((r7) => new Set(t).has(r7));
}
o(cx, "compareArraysAsSet");
function Jd(e, t) {
  return op(
    "toBeInTheDOM",
    "Please use toBeInTheDocument for searching the entire document and toContainElement for searching a specific container."
  ), e && me$1(e, Jd, this), t && me$1(t, Jd, this), {
    pass: t ? t.contains(e) : !!e,
    message: /* @__PURE__ */ o(() => [
      this.utils.matcherHint(
        `${this.isNot ? ".not" : ""}.toBeInTheDOM`,
        "element",
        ""
      ),
      "",
      "Received:",
      `  ${this.utils.printReceived(
        e && e.cloneNode(false)
      )}`
    ].join(`
`), "message")
  };
}
o(Jd, "toBeInTheDOM");
function dx(e) {
  (e !== null || !this.isNot) && me$1(e, dx, this);
  let t = e === null ? false : e.ownerDocument === e.getRootNode({ composed: true }), r7 = /* @__PURE__ */ o(() => `expected document not to contain element, found ${this.utils.stringify(
    e.cloneNode(true)
  )} instead`, "errorFound"), n = /* @__PURE__ */ o(() => "element could not be found in the document", "errorNotFound");
  return {
    pass: t,
    message: /* @__PURE__ */ o(() => [
      this.utils.matcherHint(
        `${this.isNot ? ".not" : ""}.toBeInTheDocument`,
        "element",
        ""
      ),
      "",
      // eslint-disable-next-line new-cap
      this.utils.RECEIVED_COLOR(this.isNot ? r7() : n())
    ].join(`
`), "message")
  };
}
o(dx, "toBeInTheDocument");
function px(e) {
  return op(
    "toBeEmpty",
    "Please use instead toBeEmptyDOMElement for finding empty nodes in the DOM."
  ), me$1(e, px, this), {
    pass: e.innerHTML === "",
    message: /* @__PURE__ */ o(() => [
      this.utils.matcherHint(
        `${this.isNot ? ".not" : ""}.toBeEmpty`,
        "element",
        ""
      ),
      "",
      "Received:",
      `  ${this.utils.printReceived(e.innerHTML)}`
    ].join(`
`), "message")
  };
}
o(px, "toBeEmpty");
function fx(e) {
  return me$1(e, fx, this), {
    pass: Nne(e),
    message: /* @__PURE__ */ o(() => [
      this.utils.matcherHint(
        `${this.isNot ? ".not" : ""}.toBeEmptyDOMElement`,
        "element",
        ""
      ),
      "",
      "Received:",
      `  ${this.utils.printReceived(e.innerHTML)}`
    ].join(`
`), "message")
  };
}
o(fx, "toBeEmptyDOMElement");
function Nne(e) {
  return [...e.childNodes].filter((r7) => r7.nodeType !== 8).length === 0;
}
o(Nne, "isEmptyElement");
function Qd(e, t) {
  return me$1(e, Qd, this), t !== null && me$1(t, Qd, this), {
    pass: e.contains(t),
    message: /* @__PURE__ */ o(() => [
      this.utils.matcherHint(
        `${this.isNot ? ".not" : ""}.toContainElement`,
        "element",
        "element"
      ),
      "",
      // eslint-disable-next-line new-cap
      this.utils.RECEIVED_COLOR(`${this.utils.stringify(
        e.cloneNode(false)
      )} ${this.isNot ? "contains:" : "does not contain:"} ${this.utils.stringify(t && t.cloneNode(false))}
        `)
    ].join(`
`), "message")
  };
}
o(Qd, "toContainElement");
function jne(e, t) {
  let r7 = e.ownerDocument.createElement("div");
  return r7.innerHTML = t, r7.innerHTML;
}
o(jne, "getNormalizedHtml");
function mx(e, t) {
  if (me$1(e, mx, this), typeof t != "string")
    throw new Error(`.toContainHTML() expects a string value, got ${t}`);
  return {
    pass: e.outerHTML.includes(jne(e, t)),
    message: /* @__PURE__ */ o(() => [
      this.utils.matcherHint(
        `${this.isNot ? ".not" : ""}.toContainHTML`,
        "element",
        ""
      ),
      "Expected:",
      // eslint-disable-next-line new-cap
      `  ${this.utils.EXPECTED_COLOR(t)}`,
      "Received:",
      `  ${this.utils.printReceived(e.cloneNode(true))}`
    ].join(`
`), "message")
  };
}
o(mx, "toContainHTML");
function hx(e, t, r7 = { normalizeWhitespace: true }) {
  _ne(e, hx, this);
  let n = r7.normalizeWhitespace ? ip(e.textContent) : e.textContent.replace(/\u00a0/g, " "), i = n !== "" && t === "";
  return {
    pass: !i && Pne(n, t),
    message: /* @__PURE__ */ o(() => {
      let s = this.isNot ? "not to" : "to";
      return Xe(
        this,
        this.utils.matcherHint(
          `${this.isNot ? ".not" : ""}.toHaveTextContent`,
          "element",
          ""
        ),
        i ? "Checking with empty string will always match, use .toBeEmptyDOMElement() instead" : `Expected element ${s} have text content`,
        t,
        "Received",
        n
      );
    }, "message")
  };
}
o(hx, "toHaveTextContent");
function Zd(e, t) {
  me$1(e, Zd, this);
  let r7 = uE(e), n = arguments.length === 1, i = false;
  return n ? i = r7 !== "" : i = t instanceof RegExp ? t.test(r7) : this.equals(
    r7,
    t
  ), {
    pass: i,
    message: /* @__PURE__ */ o(() => {
      let s = this.isNot ? "not to" : "to";
      return Xe(
        this,
        this.utils.matcherHint(
          `${this.isNot ? ".not" : ""}.${Zd.name}`,
          "element",
          ""
        ),
        `Expected element ${s} have accessible description`,
        t,
        "Received",
        r7
      );
    }, "message")
  };
}
o(Zd, "toHaveAccessibleDescription");
var Ts = "aria-invalid", kne = ["false"];
function yx(e, t) {
  me$1(e, yx, this);
  let r7 = this.isNot ? "not to" : "to", n = this.isNot ? ".not.toHaveAccessibleErrorMessage" : ".toHaveAccessibleErrorMessage", i = e.getAttribute(
    "aria-errormessage"
  );
  if (!!i && /\s+/.test(i))
    return {
      pass: false,
      message: /* @__PURE__ */ o(() => Xe(
        this,
        this.utils.matcherHint(n, "element"),
        "Expected element's `aria-errormessage` attribute to be empty or a single, valid ID",
        "",
        "Received",
        `aria-errormessage="${i}"`
      ), "message")
    };
  let a = e.getAttribute(Ts);
  if (!e.hasAttribute(Ts) || kne.includes(a))
    return {
      pass: false,
      message: /* @__PURE__ */ o(() => Xe(
        this,
        this.utils.matcherHint(n, "element"),
        "Expected element to be marked as invalid with attribute",
        `${Ts}="${String(true)}"`,
        "Received",
        e.hasAttribute("aria-invalid") ? `${Ts}="${e.getAttribute(Ts)}` : null
      ), "message")
    };
  let u = ip(
    e.ownerDocument.getElementById(i)?.textContent ?? ""
  );
  return {
    pass: t === void 0 ? !!u : t instanceof RegExp ? t.test(u) : this.equals(u, t),
    message: /* @__PURE__ */ o(() => Xe(
      this,
      this.utils.matcherHint(n, "element"),
      `Expected element ${r7} have accessible error message`,
      t ?? "",
      "Received",
      u
    ), "message")
  };
}
o(yx, "toHaveAccessibleErrorMessage");
var Lne = $ne(Rs.elementRoles);
function ep(e, t) {
  me$1(e, ep, this);
  let r7 = Fne(e);
  return {
    pass: r7.some((i) => i === t),
    message: /* @__PURE__ */ o(() => {
      let i = this.isNot ? "not to" : "to";
      return Xe(
        this,
        this.utils.matcherHint(
          `${this.isNot ? ".not" : ""}.${ep.name}`,
          "element",
          ""
        ),
        `Expected element ${i} have role`,
        t,
        "Received",
        r7.join(", ")
      );
    }, "message")
  };
}
o(ep, "toHaveRole");
function Fne(e) {
  return e.hasAttribute("role") ? e.getAttribute("role").split(" ").filter(Boolean) : Dne(e);
}
o(Fne, "getExplicitOrImplicitRoles");
function Dne(e) {
  for (let { match: t, roles: r7 } of Lne)
    if (t(e))
      return [...r7];
  return [];
}
o(Dne, "getImplicitAriaRoles");
function $ne(e) {
  function t({ name: a, attributes: l }) {
    return `${a}${l.map(({ name: u, value: c, constraints: d = [] }) => d.indexOf("undefined") !== -1 ? `:not([${u}])` : c ? `[${u}="${c}"]` : `[${u}]`).join("")}`;
  }
  o(t, "makeElementSelector");
  function r7({ attributes: a = [] }) {
    return a.length;
  }
  o(r7, "getSelectorSpecificity");
  function n({ specificity: a }, { specificity: l }) {
    return l - a;
  }
  o(n, "bySelectorSpecificity");
  function i(a) {
    let { attributes: l = [] } = a, u = l.findIndex(
      (d) => d.value && d.name === "type" && d.value === "text"
    );
    u >= 0 && (l = [
      ...l.slice(0, u),
      ...l.slice(u + 1)
    ]);
    let c = t({ ...a, attributes: l });
    return (d) => u >= 0 && d.type !== "text" ? false : d.matches(c);
  }
  o(i, "match");
  let s = [];
  for (let [a, l] of e.entries())
    s = [
      ...s,
      {
        match: i(a),
        roles: Array.from(l),
        specificity: r7(a)
      }
    ];
  return s.sort(n);
}
o($ne, "buildElementRoleList");
function tp(e, t) {
  me$1(e, tp, this);
  let r7 = cE(e), n = arguments.length === 1, i = false;
  return n ? i = r7 !== "" : i = t instanceof RegExp ? t.test(r7) : this.equals(r7, t), {
    pass: i,
    message: /* @__PURE__ */ o(() => {
      let s = this.isNot ? "not to" : "to";
      return Xe(
        this,
        this.utils.matcherHint(
          `${this.isNot ? ".not" : ""}.${tp.name}`,
          "element",
          ""
        ),
        `Expected element ${s} have accessible name`,
        t,
        "Received",
        r7
      );
    }, "message")
  };
}
o(tp, "toHaveAccessibleName");
function cN(e, t, r7) {
  return r7 === void 0 ? t : `${t}=${e(r7)}`;
}
o(cN, "printAttribute");
function Bne(e, t, r7) {
  return r7 === void 0 ? `element.hasAttribute(${e(t)})` : `element.getAttribute(${e(t)}) === ${e(r7)}`;
}
o(Bne, "getAttributeComment");
function bx(e, t, r7) {
  me$1(e, bx, this);
  let n = r7 !== void 0, i = e.hasAttribute(t), s = e.getAttribute(t);
  return {
    pass: n ? i && this.equals(s, r7) : i,
    message: /* @__PURE__ */ o(() => {
      let a = this.isNot ? "not to" : "to", l = i ? cN(this.utils.stringify, t, s) : null, u = this.utils.matcherHint(
        `${this.isNot ? ".not" : ""}.toHaveAttribute`,
        "element",
        this.utils.printExpected(t),
        {
          secondArgument: n ? this.utils.printExpected(r7) : void 0,
          comment: Bne(
            this.utils.stringify,
            t,
            r7
          )
        }
      );
      return Xe(
        this,
        u,
        `Expected the element ${a} have attribute`,
        cN(this.utils.stringify, t, r7),
        "Received",
        l
      );
    }, "message")
  };
}
o(bx, "toHaveAttribute");
function Hne(e) {
  let t = e.pop(), r7, n;
  return typeof t == "object" && !(t instanceof RegExp) ? (r7 = e, n = t) : (r7 = e.concat(t), n = { exact: false }), { expectedClassNames: r7, options: n };
}
o(Hne, "getExpectedClassNamesAndOptions");
function dN(e) {
  return e ? e.split(/\s+/).filter((t) => t.length > 0) : [];
}
o(dN, "splitClassNames");
function pN(e, t) {
  return e.every(
    (r7) => typeof r7 == "string" ? t.includes(r7) : t.some((n) => r7.test(n))
  );
}
o(pN, "isSubset$1");
function gx(e, ...t) {
  me$1(e, gx, this);
  let { expectedClassNames: r7, options: n } = Hne(t), i = dN(e.getAttribute("class")), s = r7.reduce(
    (l, u) => l.concat(
      typeof u == "string" || !u ? dN(u) : u
    ),
    []
  ), a = s.some((l) => l instanceof RegExp);
  if (n.exact && a)
    throw new Error("Exact option does not support RegExp expected class names");
  return n.exact ? {
    pass: pN(s, i) && s.length === i.length,
    message: /* @__PURE__ */ o(() => {
      let l = this.isNot ? "not to" : "to";
      return Xe(
        this,
        this.utils.matcherHint(
          `${this.isNot ? ".not" : ""}.toHaveClass`,
          "element",
          this.utils.printExpected(s.join(" "))
        ),
        `Expected the element ${l} have EXACTLY defined classes`,
        s.join(" "),
        "Received",
        i.join(" ")
      );
    }, "message")
  } : s.length > 0 ? {
    pass: pN(s, i),
    message: /* @__PURE__ */ o(() => {
      let l = this.isNot ? "not to" : "to";
      return Xe(
        this,
        this.utils.matcherHint(
          `${this.isNot ? ".not" : ""}.toHaveClass`,
          "element",
          this.utils.printExpected(s.join(" "))
        ),
        `Expected the element ${l} have class`,
        s.join(" "),
        "Received",
        i.join(" ")
      );
    }, "message")
  } : {
    pass: this.isNot ? i.length > 0 : false,
    message: /* @__PURE__ */ o(() => this.isNot ? Xe(
      this,
      this.utils.matcherHint(".not.toHaveClass", "element", ""),
      "Expected the element to have classes",
      "(none)",
      "Received",
      i.join(" ")
    ) : [
      this.utils.matcherHint(".toHaveClass", "element"),
      "At least one expected class must be provided."
    ].join(`
`), "message")
  };
}
o(gx, "toHaveClass");
function Une(e, t) {
  let r7 = {}, n = e.createElement("div");
  return Object.keys(t).forEach((i) => {
    n.style[i] = t[i], r7[i] = n.style[i];
  }), r7;
}
o(Une, "getStyleDeclaration");
function Vne(e, t) {
  return !!Object.keys(e).length && Object.entries(e).every(([r7, n]) => {
    let i = r7.startsWith("--"), s = [r7];
    return i || s.push(r7.toLowerCase()), s.some(
      (a) => t[a] === n || t.getPropertyValue(a) === n
    );
  });
}
o(Vne, "isSubset");
function fN(e) {
  return Object.keys(e).sort().map((t) => `${t}: ${e[t]};`).join(`
`);
}
o(fN, "printoutStyles");
function zne(e, t, r7) {
  let n = Array.from(r7).filter((s) => t[s] !== void 0).reduce(
    (s, a) => Object.assign(s, { [a]: r7.getPropertyValue(a) }),
    {}
  );
  return e(fN(t), fN(n)).replace(`${mN.default.red("+ Received")}
`, "");
}
o(zne, "expectedDiff");
function rp(e, t) {
  me$1(e, rp, this);
  let r7 = typeof t == "object" ? t : Cne(t, rp, this), { getComputedStyle: n } = e.ownerDocument.defaultView, i = Une(e.ownerDocument, r7), s = n(
    e
  );
  return {
    pass: Vne(i, s),
    message: /* @__PURE__ */ o(() => {
      let a = `${this.isNot ? ".not" : ""}.toHaveStyle`;
      return [
        this.utils.matcherHint(a, "element", ""),
        zne(this.utils.diff, i, s)
      ].join(`

`);
    }, "message")
  };
}
o(rp, "toHaveStyle");
function vx(e) {
  return me$1(e, vx, this), {
    pass: e.ownerDocument.activeElement === e,
    message: /* @__PURE__ */ o(() => [
      this.utils.matcherHint(
        `${this.isNot ? ".not" : ""}.toHaveFocus`,
        "element",
        ""
      ),
      "",
      ...this.isNot ? [
        "Received element is focused:",
        `  ${this.utils.printReceived(e)}`
      ] : [
        "Expected element with focus:",
        `  ${this.utils.printExpected(e)}`,
        "Received element with focus:",
        `  ${this.utils.printReceived(
          e.ownerDocument.activeElement
        )}`
      ]
    ].join(`
`), "message")
  };
}
o(vx, "toHaveFocus");
function Gne(e) {
  let t = [...new Set(e.map((r7) => r7.type))];
  if (t.length !== 1)
    throw new Error(
      "Multiple form elements with the same name must be of the same type"
    );
  switch (t[0]) {
    case "radio": {
      let r7 = e.find((n) => n.checked);
      return r7 ? r7.value : void 0;
    }
    case "checkbox":
      return e.filter((r7) => r7.checked).map((r7) => r7.value);
    default:
      return e.map((r7) => r7.value);
  }
}
o(Gne, "getMultiElementValue");
function Wne(e, t) {
  let r7 = [...e.querySelectorAll(`[name="${(0, hN.default)(t)}"]`)];
  if (r7.length !== 0)
    switch (r7.length) {
      case 1:
        return bN(r7[0]);
      default:
        return Gne(r7);
    }
}
o(Wne, "getFormValue");
function Yne(e) {
  return /\[\]$/.test(e) ? e.slice(0, -2) : e;
}
o(Yne, "getPureName");
function Kne(e) {
  return Array.from(e.elements).map((r7) => r7.name).reduce(
    (r7, n) => ({
      ...r7,
      [Yne(n)]: Wne(e, n)
    }),
    {}
  );
}
o(Kne, "getAllFormValues");
function Ex(e, t) {
  if (me$1(e, Ex, this), !e.elements)
    throw new Error("toHaveFormValues must be called on a form or a fieldset");
  let r7 = Kne(e);
  return {
    pass: Object.entries(t).every(
      ([n, i]) => (0, np.default)(r7[n], i, cx)
    ),
    message: /* @__PURE__ */ o(() => {
      let n = this.isNot ? "not to" : "to", i = `${this.isNot ? ".not" : ""}.toHaveFormValues`, s = Object.keys(r7).filter((a) => t.hasOwnProperty(
        a
      )).reduce((a, l) => ({ ...a, [l]: r7[l] }), {});
      return [
        this.utils.matcherHint(i, "element", ""),
        `Expected the element ${n} have form values`,
        this.utils.diff(t, s)
      ].join(`

`);
    }, "message")
  };
}
o(Ex, "toHaveFormValues");
function Xne(e) {
  let { getComputedStyle: t } = e.ownerDocument.defaultView, { display: r7, visibility: n, opacity: i } = t(e);
  return r7 !== "none" && n !== "hidden" && n !== "collapse" && i !== "0" && i !== 0;
}
o(Xne, "isStyleVisible");
function Jne(e, t) {
  let r7;
  return t ? r7 = e.nodeName === "DETAILS" && t.nodeName !== "SUMMARY" ? e.hasAttribute("open") : true : r7 = e.nodeName === "DETAILS" ? e.hasAttribute(
    "open"
  ) : true, !e.hasAttribute("hidden") && r7;
}
o(Jne, "isAttributeVisible");
function gN(e, t) {
  return Xne(e) && Jne(e, t) && (!e.parentElement || gN(e.parentElement, e));
}
o(gN, "isElementVisible");
function xx(e) {
  me$1(e, xx, this);
  let t = e.ownerDocument === e.getRootNode({ composed: true }), r7 = t && gN(e);
  return {
    pass: r7,
    message: /* @__PURE__ */ o(() => {
      let n = r7 ? "is" : "is not";
      return [
        this.utils.matcherHint(
          `${this.isNot ? ".not" : ""}.toBeVisible`,
          "element",
          ""
        ),
        "",
        `Received element ${n} visible${t ? "" : " (element is not in the document)"}:`,
        `  ${this.utils.printReceived(e.cloneNode(false))}`
      ].join(`
`);
    }, "message")
  };
}
o(xx, "toBeVisible");
var Qne = [
  "fieldset",
  "input",
  "select",
  "optgroup",
  "option",
  "button",
  "textarea"
];
function Zne(e, t) {
  return Br$1(e) === "legend" && Br$1(t) === "fieldset" && e.isSameNode(
    Array.from(t.children).find((r7) => Br$1(r7) === "legend")
  );
}
o(Zne, "isFirstLegendChildOfFieldset");
function eoe(e, t) {
  return EN(t) && !Zne(e, t);
}
o(eoe, "isElementDisabledByParent");
function toe(e) {
  return e.includes("-");
}
o(toe, "isCustomElement");
function vN(e) {
  let t = Br$1(e);
  return Qne.includes(t) || toe(t);
}
o(vN, "canElementBeDisabled");
function EN(e) {
  return vN(e) && e.hasAttribute("disabled");
}
o(EN, "isElementDisabled");
function xN(e) {
  let t = e.parentElement;
  return !!t && (eoe(e, t) || xN(t));
}
o(xN, "isAncestorDisabled");
function wN(e) {
  return vN(e) && (EN(e) || xN(e));
}
o(wN, "isElementOrAncestorDisabled");
function wx(e) {
  me$1(e, wx, this);
  let t = wN(e);
  return {
    pass: t,
    message: /* @__PURE__ */ o(() => {
      let r7 = t ? "is" : "is not";
      return [
        this.utils.matcherHint(
          `${this.isNot ? ".not" : ""}.toBeDisabled`,
          "element",
          ""
        ),
        "",
        `Received element ${r7} disabled:`,
        `  ${this.utils.printReceived(e.cloneNode(false))}`
      ].join(`
`);
    }, "message")
  };
}
o(wx, "toBeDisabled");
function Tx(e) {
  me$1(e, Tx, this);
  let t = !wN(e);
  return {
    pass: t,
    message: /* @__PURE__ */ o(() => {
      let r7 = t ? "is" : "is not";
      return [
        this.utils.matcherHint(
          `${this.isNot ? ".not" : ""}.toBeEnabled`,
          "element",
          ""
        ),
        "",
        `Received element ${r7} enabled:`,
        `  ${this.utils.printReceived(e.cloneNode(false))}`
      ].join(`
`);
    }, "message")
  };
}
o(Tx, "toBeEnabled");
var roe = ["select", "textarea"], noe = ["input", "select", "textarea"], ooe = [
  "color",
  "hidden",
  "range",
  "submit",
  "image",
  "reset"
], ioe = [
  "checkbox",
  "combobox",
  "gridcell",
  "listbox",
  "radiogroup",
  "spinbutton",
  "textbox",
  "tree"
];
function soe(e) {
  return roe.includes(Br$1(e)) && e.hasAttribute("required");
}
o(soe, "isRequiredOnFormTagsExceptInput");
function aoe(e) {
  return Br$1(e) === "input" && e.hasAttribute("required") && (e.hasAttribute("type") && !ooe.includes(e.getAttribute("type")) || !e.hasAttribute(
    "type"
  ));
}
o(aoe, "isRequiredOnSupportedInput");
function loe(e) {
  return e.hasAttribute("aria-required") && e.getAttribute("aria-required") === "true" && (noe.includes(Br$1(e)) || e.hasAttribute("role") && ioe.includes(e.getAttribute("role")));
}
o(loe, "isElementRequiredByARIA");
function Rx(e) {
  me$1(e, Rx, this);
  let t = soe(e) || aoe(e) || loe(e);
  return {
    pass: t,
    message: /* @__PURE__ */ o(() => {
      let r7 = t ? "is" : "is not";
      return [
        this.utils.matcherHint(
          `${this.isNot ? ".not" : ""}.toBeRequired`,
          "element",
          ""
        ),
        "",
        `Received element ${r7} required:`,
        `  ${this.utils.printReceived(e.cloneNode(false))}`
      ].join(`
`);
    }, "message")
  };
}
o(Rx, "toBeRequired");
var uoe = ["form", "input", "select", "textarea"];
function coe(e) {
  return e.hasAttribute("aria-invalid") && e.getAttribute("aria-invalid") !== "false";
}
o(coe, "isElementHavingAriaInvalid");
function doe(e) {
  return uoe.includes(Br$1(e));
}
o(doe, "isSupportsValidityMethod");
function TN(e) {
  let t = coe(e);
  return doe(e) ? t || !e.checkValidity() : t;
}
o(TN, "isElementInvalid");
function Sx(e) {
  me$1(e, Sx, this);
  let t = TN(e);
  return {
    pass: t,
    message: /* @__PURE__ */ o(() => {
      let r7 = t ? "is" : "is not";
      return [
        this.utils.matcherHint(
          `${this.isNot ? ".not" : ""}.toBeInvalid`,
          "element",
          ""
        ),
        "",
        `Received element ${r7} currently invalid:`,
        `  ${this.utils.printReceived(e.cloneNode(false))}`
      ].join(`
`);
    }, "message")
  };
}
o(Sx, "toBeInvalid");
function _x(e) {
  me$1(e, _x, this);
  let t = !TN(e);
  return {
    pass: t,
    message: /* @__PURE__ */ o(() => {
      let r7 = t ? "is" : "is not";
      return [
        this.utils.matcherHint(
          `${this.isNot ? ".not" : ""}.toBeValid`,
          "element",
          ""
        ),
        "",
        `Received element ${r7} currently valid:`,
        `  ${this.utils.printReceived(e.cloneNode(false))}`
      ].join(`
`);
    }, "message")
  };
}
o(_x, "toBeValid");
function Cx(e, t) {
  if (me$1(e, Cx, this), e.tagName.toLowerCase() === "input" && ["checkbox", "radio"].includes(e.type))
    throw new Error(
      "input with type=checkbox or type=radio cannot be used with .toHaveValue(). Use .toBeChecked() for type=checkbox or .toHaveFormValues() instead"
    );
  let r7 = bN(e), n = t !== void 0, i = t, s = r7;
  return t == r7 && t !== r7 && (i = `${t} (${typeof t})`, s = `${r7} (${typeof r7})`), {
    pass: n ? (0, np.default)(r7, t, cx) : !!r7,
    message: /* @__PURE__ */ o(() => {
      let a = this.isNot ? "not to" : "to", l = this.utils.matcherHint(
        `${this.isNot ? ".not" : ""}.toHaveValue`,
        "element",
        t
      );
      return Xe(
        this,
        l,
        `Expected the element ${a} have value`,
        n ? i : "(any)",
        "Received",
        s
      );
    }, "message")
  };
}
o(Cx, "toHaveValue");
function Px(e, t) {
  me$1(e, Px, this);
  let r7 = e.tagName.toLowerCase();
  if (!["select", "input", "textarea"].includes(r7))
    throw new Error(
      ".toHaveDisplayValue() currently supports only input, textarea or select elements, try with another matcher instead."
    );
  if (r7 === "input" && ["radio", "checkbox"].includes(e.type))
    throw new Error(
      `.toHaveDisplayValue() currently does not support input[type="${e.type}"], try with another matcher instead.`
    );
  let n = poe(r7, e), i = foe(t), s = i.filter(
    (u) => n.some(
      (c) => u instanceof RegExp ? u.test(c) : this.equals(c, String(u))
    )
  ).length, a = s === n.length, l = s === i.length;
  return {
    pass: a && l,
    message: /* @__PURE__ */ o(() => Xe(
      this,
      this.utils.matcherHint(
        `${this.isNot ? ".not" : ""}.toHaveDisplayValue`,
        "element",
        ""
      ),
      `Expected element ${this.isNot ? "not " : ""}to have display value`,
      t,
      "Received",
      n
    ), "message")
  };
}
o(Px, "toHaveDisplayValue");
function poe(e, t) {
  return e === "select" ? Array.from(t).filter((r7) => r7.selected).map((r7) => r7.textContent) : [t.value];
}
o(poe, "getValues");
function foe(e) {
  return e instanceof Array ? e : [e];
}
o(foe, "getExpectedValues");
function Ax(e) {
  me$1(e, Ax, this);
  let t = /* @__PURE__ */ o(() => e.tagName.toLowerCase() === "input" && ["checkbox", "radio"].includes(e.type), "isValidInput"), r7 = /* @__PURE__ */ o(
    () => RN(e.getAttribute("role")) && ["true", "false"].includes(e.getAttribute("aria-checked")),
    "isValidAriaElement"
  );
  if (!t() && !r7())
    return {
      pass: false,
      message: /* @__PURE__ */ o(() => `only inputs with type="checkbox" or type="radio" or elements with ${moe()} and a valid aria-checked attribute can be used with .toBeChecked(). Use .toHaveValue() instead`, "message")
    };
  let n = /* @__PURE__ */ o(() => t() ? e.checked : e.getAttribute("aria-checked") === "true", "isChecked");
  return {
    pass: n(),
    message: /* @__PURE__ */ o(() => {
      let i = n() ? "is" : "is not";
      return [
        this.utils.matcherHint(
          `${this.isNot ? ".not" : ""}.toBeChecked`,
          "element",
          ""
        ),
        "",
        `Received element ${i} checked:`,
        `  ${this.utils.printReceived(e.cloneNode(false))}`
      ].join(`
`);
    }, "message")
  };
}
o(Ax, "toBeChecked");
function moe() {
  return Mne(
    hoe().map((e) => `role="${e}"`),
    { lastWordConnector: " or " }
  );
}
o(moe, "supportedRolesSentence");
function hoe() {
  return Rs.roles.keys().filter(RN);
}
o(hoe, "supportedRoles");
function RN(e) {
  return Rs.roles.get(e)?.props["aria-checked"] !== void 0;
}
o(RN, "roleSupportsChecked");
function Ox(e) {
  me$1(e, Ox, this);
  let t = /* @__PURE__ */ o(() => e.tagName.toLowerCase() === "input" && e.type === "checkbox", "isValidInput"), r7 = /* @__PURE__ */ o(() => e.getAttribute("role") === "checkbox", "isValidAriaElement");
  if (!t() && !r7())
    return {
      pass: false,
      message: /* @__PURE__ */ o(() => 'only inputs with type="checkbox" or elements with role="checkbox" and a valid aria-checked attribute can be used with .toBePartiallyChecked(). Use .toHaveValue() instead', "message")
    };
  let n = /* @__PURE__ */ o(() => {
    let i = e.getAttribute("aria-checked") === "mixed";
    return t() && e.indeterminate || i;
  }, "isPartiallyChecked");
  return {
    pass: n(),
    message: /* @__PURE__ */ o(() => {
      let i = n() ? "is" : "is not";
      return [
        this.utils.matcherHint(
          `${this.isNot ? ".not" : ""}.toBePartiallyChecked`,
          "element",
          ""
        ),
        "",
        `Received element ${i} partially checked:`,
        `  ${this.utils.printReceived(e.cloneNode(false))}`
      ].join(`
`);
    }, "message")
  };
}
o(Ox, "toBePartiallyChecked");
function qx(e, t) {
  op(
    "toHaveDescription",
    "Please use toHaveAccessibleDescription."
  ), me$1(e, qx, this);
  let r7 = t !== void 0, i = (e.getAttribute("aria-describedby") || "").split(/\s+/).filter(Boolean), s = "";
  if (i.length > 0) {
    let a = e.ownerDocument, l = i.map((u) => a.getElementById(u)).filter(Boolean);
    s = ip(l.map((u) => u.textContent).join(" "));
  }
  return {
    pass: r7 ? t instanceof RegExp ? t.test(s) : this.equals(s, t) : !!s,
    message: /* @__PURE__ */ o(() => {
      let a = this.isNot ? "not to" : "to";
      return Xe(
        this,
        this.utils.matcherHint(
          `${this.isNot ? ".not" : ""}.toHaveDescription`,
          "element",
          ""
        ),
        `Expected the element ${a} have description`,
        this.utils.printExpected(t),
        "Received",
        this.utils.printReceived(s)
      );
    }, "message")
  };
}
o(qx, "toHaveDescription");
function Ix(e, t) {
  if (op("toHaveErrorMessage", "Please use toHaveAccessibleErrorMessage."), me$1(e, Ix, this), !e.hasAttribute("aria-invalid") || e.getAttribute(
    "aria-invalid"
  ) === "false") {
    let a = this.isNot ? ".not" : "";
    return {
      pass: false,
      message: /* @__PURE__ */ o(() => Xe(
        this,
        this.utils.matcherHint(`${a}.toHaveErrorMessage`, "element", ""),
        "Expected the element to have invalid state indicated by",
        'aria-invalid="true"',
        "Received",
        e.hasAttribute("aria-invalid") ? `aria-invalid="${e.getAttribute("aria-invalid")}"` : this.utils.printReceived("")
      ), "message")
    };
  }
  let r7 = t !== void 0, i = (e.getAttribute("aria-errormessage") || "").split(/\s+/).filter(Boolean), s = "";
  if (i.length > 0) {
    let a = e.ownerDocument, l = i.map((u) => a.getElementById(u)).filter(Boolean);
    s = ip(
      l.map((u) => u.textContent).join(" ")
    );
  }
  return {
    pass: r7 ? t instanceof RegExp ? t.test(s) : this.equals(s, t) : !!s,
    message: /* @__PURE__ */ o(() => {
      let a = this.isNot ? "not to" : "to";
      return Xe(
        this,
        this.utils.matcherHint(
          `${this.isNot ? ".not" : ""}.toHaveErrorMessage`,
          "element",
          ""
        ),
        `Expected the element ${a} have error message`,
        this.utils.printExpected(t),
        "Received",
        this.utils.printReceived(s)
      );
    }, "message")
  };
}
o(Ix, "toHaveErrorMessage");
function yoe(e) {
  let t = e.ownerDocument.getSelection();
  if (["input", "textarea"].includes(e.tagName.toLowerCase()))
    return ["radio", "checkbox"].includes(e.type) ? "" : e.value.toString().substring(e.selectionStart, e.selectionEnd);
  if (t.anchorNode === null || t.focusNode === null)
    return "";
  let r7 = t.getRangeAt(0), n = e.ownerDocument.createRange();
  if (t.containsNode(e, false))
    n.selectNodeContents(e), t.removeAllRanges(), t.addRange(n);
  else if (!(e.contains(t.anchorNode) && e.contains(t.focusNode))) {
    let s = e === r7.startContainer || e.contains(r7.startContainer), a = e === r7.endContainer || e.contains(r7.endContainer);
    t.removeAllRanges(), (s || a) && (n.selectNodeContents(e), s && n.setStart(
      r7.startContainer,
      r7.startOffset
    ), a && n.setEnd(
      r7.endContainer,
      r7.endOffset
    ), t.addRange(n));
  }
  let i = t.toString();
  return t.removeAllRanges(), t.addRange(r7), i;
}
o(yoe, "getSelection");
function Mx(e, t) {
  me$1(e, Mx, this);
  let r7 = t !== void 0;
  if (r7 && typeof t != "string")
    throw new Error("expected selection must be a string or undefined");
  let n = yoe(e);
  return {
    pass: r7 ? (0, np.default)(n, t, cx) : !!n,
    message: /* @__PURE__ */ o(() => {
      let i = this.isNot ? "not to" : "to", s = this.utils.matcherHint(
        `${this.isNot ? ".not" : ""}.toHaveSelection`,
        "element",
        t
      );
      return Xe(
        this,
        s,
        `Expected the element ${i} have selection`,
        r7 ? t : "(any)",
        "Received",
        n
      );
    }, "message")
  };
}
o(Mx, "toHaveSelection");
Ne(rE(), 1);
Ne(AE(), 1);
Ne(DE(), 1);
Ne(ix(), 1);
Ne(ax(), 1);
var Dx, SN;
function boe() {
  if (SN) return Dx;
  SN = 1;
  var e, t, r7, n, i, s, a, l, u, c, d, p5, f, m, h5, b, v5, g, w5;
  return f = /\/(?![*\/])(?:\[(?:(?![\]\\]).|\\.)*\]|(?![\/\\]).|\\.)*(\/[$_\u200C\u200D\p{ID_Continue}]*|\\)?/yu, p5 = /--|\+\+|=>|\.{3}|\??\.(?!\d)|(?:&&|\|\||\?\?|[+\-%&|^]|\*{1,2}|<{1,2}|>{1,3}|!=?|={1,2}|\/(?![\/*]))=?|[?~,:;[\](){}]/y, e = /(\x23?)(?=[$_\p{ID_Start}\\])(?:[$_\u200C\u200D\p{ID_Continue}]|\\u[\da-fA-F]{4}|\\u\{[\da-fA-F]+\})+/yu, h5 = /(['"])(?:(?!\1)[^\\\n\r]|\\(?:\r\n|[^]))*(\1)?/y, d = /(?:0[xX][\da-fA-F](?:_?[\da-fA-F])*|0[oO][0-7](?:_?[0-7])*|0[bB][01](?:_?[01])*)n?|0n|[1-9](?:_?\d)*n|(?:(?:0(?!\d)|0\d*[89]\d*|[1-9](?:_?\d)*)(?:\.(?:\d(?:_?\d)*)?)?|\.\d(?:_?\d)*)(?:[eE][+-]?\d(?:_?\d)*)?|0[0-7]+/y, b = /[`}](?:[^`\\$]|\\[^]|\$(?!\{))*(`|\$\{)?/y, w5 = /[\t\v\f\ufeff\p{Zs}]+/yu, l = /\r?\n|[\r\u2028\u2029]/y, u = /\/\*(?:[^*]|\*(?!\/))*(\*\/)?/y, m = /\/\/.*/y, r7 = /[<>.:={}]|\/(?![\/*])/y, t = /[$_\p{ID_Start}][$_\u200C\u200D\p{ID_Continue}-]*/yu, n = /(['"])(?:(?!\1)[^])*(\1)?/y, i = /[^<>{}]+/y, g = /^(?:[\/+-]|\.{3}|\?(?:InterpolationIn(?:JSX|Template)|NoLineTerminatorHere|NonExpressionParenEnd|UnaryIncDec))?$|[{}([,;<>=*%&|^!~?:]$/, v5 = /^(?:=>|[;\]){}]|else|\?(?:NoLineTerminatorHere|NonExpressionParenEnd))?$/, s = /^(?:await|case|default|delete|do|else|instanceof|new|return|throw|typeof|void|yield)$/, a = /^(?:return|throw|yield)$/, c = RegExp(l.source), Dx = /* @__PURE__ */ o(function* (E, { jsx: R = false } = {}) {
    var S, P, _5, C5, O, L, q, D, H, M7, U, N, W, Y;
    for ({ length: L } = E, C5 = 0, O = "", Y = [
      { tag: "JS" }
    ], S = [], U = 0, N = false; C5 < L; ) {
      switch (D = Y[Y.length - 1], D.tag) {
        case "JS":
        case "JSNonExpressionParen":
        case "InterpolationInTemplate":
        case "InterpolationInJSX":
          if (E[C5] === "/" && (g.test(O) || s.test(O)) && (f.lastIndex = C5, q = f.exec(E))) {
            C5 = f.lastIndex, O = q[0], N = true, yield {
              type: "RegularExpressionLiteral",
              value: q[0],
              closed: q[1] !== void 0 && q[1] !== "\\"
            };
            continue;
          }
          if (p5.lastIndex = C5, q = p5.exec(E)) {
            switch (W = q[0], H = p5.lastIndex, M7 = W, W) {
              case "(":
                O === "?NonExpressionParenKeyword" && Y.push({
                  tag: "JSNonExpressionParen",
                  nesting: U
                }), U++, N = false;
                break;
              case ")":
                U--, N = true, D.tag === "JSNonExpressionParen" && U === D.nesting && (Y.pop(), M7 = "?NonExpressionParenEnd", N = false);
                break;
              case "{":
                p5.lastIndex = 0, _5 = !v5.test(O) && (g.test(O) || s.test(O)), S.push(_5), N = false;
                break;
              case "}":
                switch (D.tag) {
                  case "InterpolationInTemplate":
                    if (S.length === D.nesting) {
                      b.lastIndex = C5, q = b.exec(E), C5 = b.lastIndex, O = q[0], q[1] === "${" ? (O = "?InterpolationInTemplate", N = false, yield {
                        type: "TemplateMiddle",
                        value: q[0]
                      }) : (Y.pop(), N = true, yield {
                        type: "TemplateTail",
                        value: q[0],
                        closed: q[1] === "`"
                      });
                      continue;
                    }
                    break;
                  case "InterpolationInJSX":
                    if (S.length === D.nesting) {
                      Y.pop(), C5 += 1, O = "}", yield {
                        type: "JSXPunctuator",
                        value: "}"
                      };
                      continue;
                    }
                }
                N = S.pop(), M7 = N ? "?ExpressionBraceEnd" : "}";
                break;
              case "]":
                N = true;
                break;
              case "++":
              case "--":
                M7 = N ? "?PostfixIncDec" : "?UnaryIncDec";
                break;
              case "<":
                if (R && (g.test(O) || s.test(O))) {
                  Y.push({ tag: "JSXTag" }), C5 += 1, O = "<", yield {
                    type: "JSXPunctuator",
                    value: W
                  };
                  continue;
                }
                N = false;
                break;
              default:
                N = false;
            }
            C5 = H, O = M7, yield {
              type: "Punctuator",
              value: W
            };
            continue;
          }
          if (e.lastIndex = C5, q = e.exec(E)) {
            switch (C5 = e.lastIndex, M7 = q[0], q[0]) {
              case "for":
              case "if":
              case "while":
              case "with":
                O !== "." && O !== "?." && (M7 = "?NonExpressionParenKeyword");
            }
            O = M7, N = !s.test(q[0]), yield {
              type: q[1] === "#" ? "PrivateIdentifier" : "IdentifierName",
              value: q[0]
            };
            continue;
          }
          if (h5.lastIndex = C5, q = h5.exec(E)) {
            C5 = h5.lastIndex, O = q[0], N = true, yield {
              type: "StringLiteral",
              value: q[0],
              closed: q[2] !== void 0
            };
            continue;
          }
          if (d.lastIndex = C5, q = d.exec(E)) {
            C5 = d.lastIndex, O = q[0], N = true, yield {
              type: "NumericLiteral",
              value: q[0]
            };
            continue;
          }
          if (b.lastIndex = C5, q = b.exec(E)) {
            C5 = b.lastIndex, O = q[0], q[1] === "${" ? (O = "?InterpolationInTemplate", Y.push({
              tag: "InterpolationInTemplate",
              nesting: S.length
            }), N = false, yield {
              type: "TemplateHead",
              value: q[0]
            }) : (N = true, yield {
              type: "NoSubstitutionTemplate",
              value: q[0],
              closed: q[1] === "`"
            });
            continue;
          }
          break;
        case "JSXTag":
        case "JSXTagEnd":
          if (r7.lastIndex = C5, q = r7.exec(E)) {
            switch (C5 = r7.lastIndex, M7 = q[0], q[0]) {
              case "<":
                Y.push({ tag: "JSXTag" });
                break;
              case ">":
                Y.pop(), O === "/" || D.tag === "JSXTagEnd" ? (M7 = "?JSX", N = true) : Y.push({ tag: "JSXChildren" });
                break;
              case "{":
                Y.push({
                  tag: "InterpolationInJSX",
                  nesting: S.length
                }), M7 = "?InterpolationInJSX", N = false;
                break;
              case "/":
                O === "<" && (Y.pop(), Y[Y.length - 1].tag === "JSXChildren" && Y.pop(), Y.push({ tag: "JSXTagEnd" }));
            }
            O = M7, yield {
              type: "JSXPunctuator",
              value: q[0]
            };
            continue;
          }
          if (t.lastIndex = C5, q = t.exec(E)) {
            C5 = t.lastIndex, O = q[0], yield {
              type: "JSXIdentifier",
              value: q[0]
            };
            continue;
          }
          if (n.lastIndex = C5, q = n.exec(E)) {
            C5 = n.lastIndex, O = q[0], yield {
              type: "JSXString",
              value: q[0],
              closed: q[2] !== void 0
            };
            continue;
          }
          break;
        case "JSXChildren":
          if (i.lastIndex = C5, q = i.exec(E)) {
            C5 = i.lastIndex, O = q[0], yield {
              type: "JSXText",
              value: q[0]
            };
            continue;
          }
          switch (E[C5]) {
            case "<":
              Y.push({ tag: "JSXTag" }), C5++, O = "<", yield {
                type: "JSXPunctuator",
                value: "<"
              };
              continue;
            case "{":
              Y.push({
                tag: "InterpolationInJSX",
                nesting: S.length
              }), C5++, O = "?InterpolationInJSX", N = false, yield {
                type: "JSXPunctuator",
                value: "{"
              };
              continue;
          }
      }
      if (w5.lastIndex = C5, q = w5.exec(E)) {
        C5 = w5.lastIndex, yield {
          type: "WhiteSpace",
          value: q[0]
        };
        continue;
      }
      if (l.lastIndex = C5, q = l.exec(E)) {
        C5 = l.lastIndex, N = false, a.test(O) && (O = "?NoLineTerminatorHere"), yield {
          type: "LineTerminatorSequence",
          value: q[0]
        };
        continue;
      }
      if (u.lastIndex = C5, q = u.exec(E)) {
        C5 = u.lastIndex, c.test(q[0]) && (N = false, a.test(O) && (O = "?NoLineTerminatorHere")), yield {
          type: "MultiLineComment",
          value: q[0],
          closed: q[1] !== void 0
        };
        continue;
      }
      if (m.lastIndex = C5, q = m.exec(E)) {
        C5 = m.lastIndex, N = false, yield {
          type: "SingleLineComment",
          value: q[0]
        };
        continue;
      }
      P = String.fromCodePoint(E.codePointAt(C5)), C5 += P.length, O = P, N = false, yield {
        type: D.tag.startsWith("JSX") ? "JSXInvalid" : "Invalid",
        value: P
      };
    }
  }, "jsTokens_1"), Dx;
}
o(boe, "requireJsTokens");
boe();
var _N = {
  keyword: [
    "break",
    "case",
    "catch",
    "continue",
    "debugger",
    "default",
    "do",
    "else",
    "finally",
    "for",
    "function",
    "if",
    "return",
    "switch",
    "throw",
    "try",
    "var",
    "const",
    "while",
    "with",
    "new",
    "this",
    "super",
    "class",
    "extends",
    "export",
    "import",
    "null",
    "true",
    "false",
    "in",
    "instanceof",
    "typeof",
    "void",
    "delete"
  ],
  strict: [
    "implements",
    "interface",
    "let",
    "package",
    "private",
    "protected",
    "public",
    "static",
    "yield"
  ]
};
new Set(_N.keyword);
new Set(_N.strict);
function sp(e, t) {
  if (!e)
    throw new Error(t);
}
o(sp, "assert");
function Vo(e, t) {
  return typeof t === e;
}
o(Vo, "isType");
function goe(e) {
  return e instanceof Promise;
}
o(goe, "isPromise");
function Ss(e, t, r7) {
  Object.defineProperty(e, t, r7);
}
o(Ss, "define");
function zo(e, t, r7) {
  Ss(e, t, { value: r7, configurable: true, writable: true });
}
o(zo, "defineValue");
var Hr$1 = Symbol.for("tinyspy:spy"), voe = /* @__PURE__ */ new Set(), Eoe = /* @__PURE__ */ o((e) => {
  e.called = false, e.callCount = 0, e.calls = [], e.results = [], e.resolves = [], e.next = [];
}, "reset"), xoe = /* @__PURE__ */ o((e) => (Ss(e, Hr$1, {
  value: { reset: /* @__PURE__ */ o(() => Eoe(e[Hr$1]), "reset") }
}), e[Hr$1]), "defineState"), ap = /* @__PURE__ */ o((e) => e[Hr$1] || xoe(e), "getInternalState");
function woe(e) {
  sp(
    Vo("function", e) || Vo("undefined", e),
    "cannot spy on a non-function value"
  );
  let t = /* @__PURE__ */ o(function(...n) {
    let i = ap(t);
    i.called = true, i.callCount++, i.calls.push(n);
    let s = i.next.shift();
    if (s) {
      i.results.push(s);
      let [d, p5] = s;
      if (d === "ok")
        return p5;
      throw p5;
    }
    let a, l = "ok", u = i.results.length;
    if (i.impl)
      try {
        new.target ? a = Reflect.construct(i.impl, n, new.target) : a = i.impl.apply(this, n), l = "ok";
      } catch (d) {
        throw a = d, l = "error", i.results.push([l, d]), d;
      }
    let c = [l, a];
    return goe(a) && a.then(
      (d) => i.resolves[u] = ["ok", d],
      (d) => i.resolves[u] = ["error", d]
    ), i.results.push(c), a;
  }, "fn");
  zo(t, "_isMockFunction", true), zo(t, "length", e ? e.length : 0), zo(t, "name", e && e.name || "spy");
  let r7 = ap(t);
  return r7.reset(), r7.impl = e, t;
}
o(woe, "createInternalSpy");
function Toe(e) {
  return !!e && e._isMockFunction === true;
}
o(Toe, "isMockFunction");
var PN = /* @__PURE__ */ o((e, t) => {
  let r7 = Object.getOwnPropertyDescriptor(e, t);
  if (r7)
    return [e, r7];
  let n = Object.getPrototypeOf(e);
  for (; n !== null; ) {
    let i = Object.getOwnPropertyDescriptor(n, t);
    if (i)
      return [n, i];
    n = Object.getPrototypeOf(n);
  }
}, "getDescriptor"), CN = /* @__PURE__ */ o((e, t) => {
  t != null && typeof t == "function" && t.prototype != null && Object.setPrototypeOf(e.prototype, t.prototype);
}, "setPototype");
function $x(e, t, r7) {
  sp(
    !Vo("undefined", e),
    "spyOn could not find an object to spy upon"
  ), sp(
    Vo("object", e) || Vo("function", e),
    "cannot spyOn on a primitive value"
  );
  let [n, i] = (() => {
    if (!Vo("object", t))
      return [t, "value"];
    if ("getter" in t && "setter" in t)
      throw new Error("cannot spy on both getter and setter");
    if ("getter" in t)
      return [t.getter, "get"];
    if ("setter" in t)
      return [t.setter, "set"];
    throw new Error("specify getter or setter to spy on");
  })(), [s, a] = PN(e, n) || [];
  sp(
    a || n in e,
    `${String(n)} does not exist`
  );
  let l = false;
  i === "value" && a && !a.value && a.get && (i = "get", l = true, r7 = a.get());
  let u;
  a ? u = a[i] : i !== "value" ? u = /* @__PURE__ */ o(() => e[n], "original") : u = e[n], u && Coe(u) && (u = u[Hr$1].getOriginal());
  let c = /* @__PURE__ */ o((m) => {
    let { value: h5, ...b } = a || {
      configurable: true,
      writable: true
    };
    i !== "value" && delete b.writable, b[i] = m, Ss(e, n, b);
  }, "reassign"), d = /* @__PURE__ */ o(() => {
    s !== e ? Reflect.deleteProperty(e, n) : a && !u ? Ss(e, n, a) : c(u);
  }, "restore");
  r7 || (r7 = u);
  let p5 = _oe(woe(r7), r7);
  i === "value" && CN(p5, u);
  let f = p5[Hr$1];
  return zo(f, "restore", d), zo(f, "getOriginal", () => l ? u() : u), zo(f, "willCall", (m) => (f.impl = m, p5)), c(
    l ? () => (CN(p5, r7), p5) : p5
  ), voe.add(p5), p5;
}
o($x, "internalSpyOn");
var Roe = /* @__PURE__ */ new Set([
  "length",
  "name",
  "prototype"
]);
function Soe(e) {
  let t = /* @__PURE__ */ new Set(), r7 = {};
  for (; e && e !== Object.prototype && e !== Function.prototype; ) {
    let n = [
      ...Object.getOwnPropertyNames(e),
      ...Object.getOwnPropertySymbols(e)
    ];
    for (let i of n)
      r7[i] || Roe.has(i) || (t.add(i), r7[i] = Object.getOwnPropertyDescriptor(e, i));
    e = Object.getPrototypeOf(e);
  }
  return {
    properties: t,
    descriptors: r7
  };
}
o(Soe, "getAllProperties");
function _oe(e, t) {
  if (!t || // the original is already a spy, so it has all the properties
  Hr$1 in t)
    return e;
  let { properties: r7, descriptors: n } = Soe(t);
  for (let i of r7) {
    let s = n[i];
    PN(e, i) || Ss(e, i, s);
  }
  return e;
}
o(_oe, "wrap");
function Coe(e) {
  return Toe(e) && "getOriginal" in e[Hr$1];
}
o(Coe, "isSpyFunction");
var Go = /* @__PURE__ */ new Set();
function hr$1(e) {
  return typeof e == "function" && "_isMockFunction" in e && e._isMockFunction;
}
o(hr$1, "isMockFunction");
function AN(e, t, r7) {
  let i = r7 ? { [{
    get: "getter",
    set: "setter"
  }[r7]]: t } : t, s, a = Ooe(e, t), l = a && a[r7 || "value"];
  hr$1(l) && (s = l.mock._state());
  try {
    let u = $x(e, i), c = ON(u);
    return s && c.mock._state(s), c;
  } catch (u) {
    throw u instanceof TypeError && Symbol.toStringTag && e[Symbol.toStringTag] === "Module" && (u.message.includes("Cannot redefine property") || u.message.includes("Cannot replace module namespace") || u.message.includes("can't redefine non-configurable property")) ? new TypeError(
      `Cannot spy on export "${String(i)}". Module namespace is not configurable in ESM. See: https://vitest.dev/guide/browser/#limitations`,
      {
        cause: u
      }
    ) : u;
  }
}
o(AN, "spyOn");
var Aoe = 0;
function ON(e) {
  let t = e, r7, n = [], i = false, s = [], a = [], l = [], u = ap(e), c = {
    get calls() {
      return u.calls;
    },
    get contexts() {
      return a;
    },
    get instances() {
      return s;
    },
    get invocationCallOrder() {
      return l;
    },
    get results() {
      return u.results.map(([m, h5]) => ({
        type: m === "error" ? "throw" : "return",
        value: h5
      }));
    },
    get settledResults() {
      return u.resolves.map(([m, h5]) => ({
        type: m === "error" ? "rejected" : "fulfilled",
        value: h5
      }));
    },
    get lastCall() {
      return u.calls[u.calls.length - 1];
    },
    _state(m) {
      return m && (r7 = m.implementation, n = m.onceImplementations, i = m.implementationChangedTemporarily), {
        implementation: r7,
        onceImplementations: n,
        implementationChangedTemporarily: i
      };
    }
  };
  function d(...m) {
    return s.push(this), a.push(this), l.push(++Aoe), (i ? r7 : n.shift() || r7 || u.getOriginal() || (() => {
    })).apply(this, m);
  }
  o(d, "mockCall");
  let p5 = t.name;
  t.getMockName = () => p5 || "vi.fn()", t.mockName = (m) => (p5 = m, t), t.mockClear = () => (u.reset(), s = [], a = [], l = [], t), t.mockReset = () => (t.mockClear(), r7 = void 0, n = [], t), t.mockRestore = () => (t.mockReset(), u.restore(), t), Symbol.dispose && (t[Symbol.dispose] = () => t.mockRestore()), t.getMockImplementation = () => i ? r7 : n.at(0) || r7, t.mockImplementation = (m) => (r7 = m, u.willCall(d), t), t.mockImplementationOnce = (m) => (n.push(m), t);
  function f(m, h5) {
    let b = r7;
    r7 = m, u.willCall(d), i = true;
    let v5 = /* @__PURE__ */ o(() => {
      r7 = b, i = false;
    }, "reset"), g = h5();
    return typeof g == "object" && g && typeof g.then == "function" ? g.then(() => (v5(), t)) : (v5(), t);
  }
  return o(f, "withImplementation"), t.withImplementation = f, t.mockReturnThis = () => t.mockImplementation(function() {
    return this;
  }), t.mockReturnValue = (m) => t.mockImplementation(() => m), t.mockReturnValueOnce = (m) => t.mockImplementationOnce(() => m), t.mockResolvedValue = (m) => t.mockImplementation(() => Promise.resolve(m)), t.mockResolvedValueOnce = (m) => t.mockImplementationOnce(() => Promise.resolve(m)), t.mockRejectedValue = (m) => t.mockImplementation(() => Promise.reject(m)), t.mockRejectedValueOnce = (m) => t.mockImplementationOnce(() => Promise.reject(m)), Object.defineProperty(t, "mock", { get: /* @__PURE__ */ o(() => c, "get") }), u.willCall(d), Go.add(t), t;
}
o(ON, "enhanceSpy");
function Bx(e) {
  let t = ON($x({ spy: e || function() {
  } }, "spy"));
  return e && t.mockImplementation(e), t;
}
o(Bx, "fn");
function Ooe(e, t) {
  let r7 = Object.getOwnPropertyDescriptor(e, t);
  if (r7)
    return r7;
  let n = Object.getPrototypeOf(e);
  for (; n !== null; ) {
    let i = Object.getOwnPropertyDescriptor(n, t);
    if (i)
      return i;
    n = Object.getPrototypeOf(n);
  }
}
o(Ooe, "getDescriptor");
var Ps = Symbol.for("matchers-object"), As = Symbol.for("$$jest-matchers-object-storybook"), hp = Symbol.for("expect-global"), Vx = Symbol.for(
  "asymmetric-matchers-object"
), $N = {
  toSatisfy(e, t, r7) {
    let { printReceived: n, printExpected: i, matcherHint: s } = this.utils, a = t(e);
    return {
      pass: a,
      message: /* @__PURE__ */ o(() => a ? `${s(".not.toSatisfy", "received", "")}

Expected value to not satisfy:
${r7 || i(t)}
Received:
${n(e)}` : `${s(".toSatisfy", "received", "")}

Expected value to satisfy:
${r7 || i(t)}

Received:
${n(e)}`, "message")
    };
  },
  toBeOneOf(e, t) {
    let { equals: r7, customTesters: n } = this, { printReceived: i, printExpected: s, matcherHint: a } = this.utils;
    if (!Array.isArray(t))
      throw new TypeError(`You must provide an array to ${a(".toBeOneOf")}, not '${typeof t}'.`);
    let l = t.length === 0 || t.some((u) => r7(u, e, n));
    return {
      pass: l,
      message: /* @__PURE__ */ o(() => l ? `${a(".not.toBeOneOf", "received", "")}

Expected value to not be one of:
${s(t)}
Received:
${i(e)}` : `${a(".toBeOneOf", "received", "")}

Expected value to be one of:
${s(t)}

Received:
${i(e)}`, "message")
    };
  }
}, lp = Ee.green, Yx = Ee.red, qoe = Ee.inverse, Ioe = Ee.bold, Ur$1 = Ee.dim;
function Moe(e, t = "received", r7 = "expected", n = {}) {
  let {
    comment: i = "",
    isDirectExpectCall: s = false,
    isNot: a = false,
    promise: l = "",
    secondArgument: u = "",
    expectedColor: c = lp,
    receivedColor: d = Yx,
    secondArgumentColor: p5 = lp
  } = n, f = "", m = "expect";
  return !s && t !== "" && (f += Ur$1(`${m}(`) + d(t), m = ")"), l !== "" && (f += Ur$1(`${m}.`) + l, m = ""), a && (f += `${Ur$1(`${m}.`)}not`, m = ""), e.includes(".") ? m += e : (f += Ur$1(`${m}.`) + e, m = ""), r7 === "" ? m += "()" : (f += Ur$1(`${m}(`) + c(r7), u && (f += Ur$1(", ") + p5(u)), m = ")"), i !== "" && (m += ` // ${i}`), m !== "" && (f += Ur$1(m)), f;
}
o(Moe, "matcherHint");
var Noe = "·";
function BN(e) {
  return e.replace(/\s+$/gm, (t) => Noe.repeat(t.length));
}
o(BN, "replaceTrailingSpaces");
function joe(e) {
  return Yx(BN(Ye(e)));
}
o(joe, "printReceived");
function koe(e) {
  return lp(BN(Ye(e)));
}
o(koe, "printExpected");
function HN() {
  return {
    EXPECTED_COLOR: lp,
    RECEIVED_COLOR: Yx,
    INVERTED_COLOR: qoe,
    BOLD_WEIGHT: Ioe,
    DIM_COLOR: Ur$1,
    diff: Tn$1,
    matcherHint: Moe,
    printReceived: joe,
    printExpected: koe,
    printDiffOrStringify: vl,
    printWithType: Loe
  };
}
o(HN, "getMatcherUtils");
function Loe(e, t, r7) {
  let n = xn(t), i = n !== "null" && n !== "undefined" ? `${e} has type:  ${n}
` : "", s = `${e} has value: ${r7(t)}`;
  return i + s;
}
o(Loe, "printWithType");
function Kx() {
  return globalThis[As].customEqualityTesters;
}
o(Kx, "getCustomEqualityTesters");
function ce$1(e, t, r7, n) {
  return r7 = r7 || [], _s(e, t, [], [], r7, n ? UN : $oe);
}
o(ce$1, "equals");
function qN(e) {
  return !!e && typeof e == "object" && "asymmetricMatch" in e && Ht("Function", e.asymmetricMatch);
}
o(qN, "isAsymmetric");
function Foe(e, t) {
  let r7 = qN(e), n = qN(t);
  if (!(r7 && n)) {
    if (r7)
      return e.asymmetricMatch(t);
    if (n)
      return t.asymmetricMatch(e);
  }
}
o(Foe, "asymmetricMatch");
function _s(e, t, r7, n, i, s) {
  let a = true, l = Foe(e, t);
  if (l !== void 0)
    return l;
  let u = { equals: ce$1 };
  for (let h5 = 0; h5 < i.length; h5++) {
    let b = i[h5].call(u, e, t, i);
    if (b !== void 0)
      return b;
  }
  if (typeof URL == "function" && e instanceof URL && t instanceof URL)
    return e.href === t.href;
  if (Object.is(e, t))
    return true;
  if (e === null || t === null)
    return e === t;
  let c = Object.prototype.toString.call(e);
  if (c !== Object.prototype.toString.call(t))
    return false;
  switch (c) {
    case "[object Boolean]":
    case "[object String]":
    case "[object Number]":
      return typeof e != typeof t ? false : typeof e != "object" && typeof t != "object" ? Object.is(e, t) : Object.is(e.valueOf(), t.valueOf());
    case "[object Date]": {
      let h5 = +e, b = +t;
      return h5 === b || Number.isNaN(h5) && Number.isNaN(b);
    }
    case "[object RegExp]":
      return e.source === t.source && e.flags === t.flags;
    case "[object Temporal.Instant]":
    case "[object Temporal.ZonedDateTime]":
    case "[object Temporal.PlainDateTime]":
    case "[object Temporal.PlainDate]":
    case "[object Temporal.PlainTime]":
    case "[object Temporal.PlainYearMonth]":
    case "[object Temporal.PlainMonthDay]":
      return e.equals(t);
    case "[object Temporal.Duration]":
      return e.toString() === t.toString();
  }
  if (typeof e != "object" || typeof t != "object")
    return false;
  if (MN(e) && MN(t))
    return e.isEqualNode(t);
  let d = r7.length;
  for (; d--; ) {
    if (r7[d] === e)
      return n[d] === t;
    if (n[d] === t)
      return false;
  }
  if (r7.push(e), n.push(t), c === "[object Array]" && e.length !== t.length)
    return false;
  if (e instanceof Error && t instanceof Error)
    try {
      return Doe(e, t, r7, n, i, s);
    } finally {
      r7.pop(), n.pop();
    }
  let p5 = IN(e, s), f, m = p5.length;
  if (IN(t, s).length !== m)
    return false;
  for (; m--; )
    if (f = p5[m], a = s(t, f) && _s(e[f], t[f], r7, n, i, s), !a)
      return false;
  return r7.pop(), n.pop(), a;
}
o(_s, "eq");
function Doe(e, t, r7, n, i, s) {
  let a = Object.getPrototypeOf(e) === Object.getPrototypeOf(t) && e.name === t.name && e.message === t.message;
  return typeof t.cause < "u" && a && (a = _s(e.cause, t.cause, r7, n, i, s)), e instanceof AggregateError && t instanceof AggregateError && a && (a = _s(e.errors, t.errors, r7, n, i, s)), a && (a = _s({ ...e }, { ...t }, r7, n, i, s)), a;
}
o(Doe, "isErrorEqual");
function IN(e, t) {
  let r7 = [];
  for (let n in e)
    t(e, n) && r7.push(n);
  return r7.concat(Object.getOwnPropertySymbols(e).filter((n) => Object.getOwnPropertyDescriptor(e, n).enumerable));
}
o(IN, "keys");
function $oe(e, t) {
  return UN(e, t) && e[t] !== void 0;
}
o($oe, "hasDefinedKey");
function UN(e, t) {
  return Object.prototype.hasOwnProperty.call(e, t);
}
o(UN, "hasKey");
function Ht(e, t) {
  return Object.prototype.toString.apply(t) === `[object ${e}]`;
}
o(Ht, "isA");
function MN(e) {
  return e !== null && typeof e == "object" && "nodeType" in e && typeof e.nodeType == "number" && "nodeName" in e && typeof e.nodeName == "string" && "isEqualNode" in e && typeof e.isEqualNode == "function";
}
o(MN, "isDomNode");
var VN = "@@__IMMUTABLE_KEYED__@@", zN = "@@__IMMUTABLE_SET__@@", Boe = "@@__IMMUTABLE_LIST__@@", yp = "@@__IMMUTABLE_ORDERED__@@", Hoe = "@@__IMMUTABLE_RECORD__@@";
function Uoe(e) {
  return !!(e && e[VN] && !e[yp]);
}
o(Uoe, "isImmutableUnorderedKeyed");
function Voe(e) {
  return !!(e && e[zN] && !e[yp]);
}
o(Voe, "isImmutableUnorderedSet");
function bp(e) {
  return e != null && typeof e == "object" && !Array.isArray(e);
}
o(bp, "isObjectLiteral");
function zoe(e) {
  return !!(e && bp(e) && e[Boe]);
}
o(zoe, "isImmutableList");
function Goe(e) {
  return !!(e && bp(e) && e[VN] && e[yp]);
}
o(Goe, "isImmutableOrderedKeyed");
function Woe(e) {
  return !!(e && bp(e) && e[zN] && e[yp]);
}
o(Woe, "isImmutableOrderedSet");
function Yoe(e) {
  return !!(e && bp(e) && e[Hoe]);
}
o(Yoe, "isImmutableRecord");
var GN = Symbol.iterator;
function NN(e) {
  return !!(e != null && e[GN]);
}
o(NN, "hasIterator");
function qt(e, t, r7 = [], n = [], i = []) {
  if (typeof e != "object" || typeof t != "object" || Array.isArray(e) || Array.isArray(t) || !NN(e) || !NN(t))
    return;
  if (e.constructor !== t.constructor)
    return false;
  let s = n.length;
  for (; s--; )
    if (n[s] === e)
      return i[s] === t;
  n.push(e), i.push(t);
  let a = [...r7.filter((c) => c !== qt), l];
  function l(c, d) {
    return qt(c, d, [...r7], [...n], [...i]);
  }
  if (o(l, "iterableEqualityWithStack"), e.size !== void 0) {
    if (e.size !== t.size)
      return false;
    if (Ht("Set", e) || Voe(e)) {
      let c = true;
      for (let d of e)
        if (!t.has(d)) {
          let p5 = false;
          for (let f of t)
            ce$1(d, f, a) === true && (p5 = true);
          if (p5 === false) {
            c = false;
            break;
          }
        }
      return n.pop(), i.pop(), c;
    } else if (Ht("Map", e) || Uoe(e)) {
      let c = true;
      for (let d of e)
        if (!t.has(d[0]) || !ce$1(d[1], t.get(d[0]), a)) {
          let p5 = false;
          for (let f of t) {
            let m = ce$1(d[0], f[0], a), h5 = false;
            m === true && (h5 = ce$1(d[1], f[1], a)), h5 === true && (p5 = true);
          }
          if (p5 === false) {
            c = false;
            break;
          }
        }
      return n.pop(), i.pop(), c;
    }
  }
  let u = t[GN]();
  for (let c of e) {
    let d = u.next();
    if (d.done || !ce$1(c, d.value, a))
      return false;
  }
  if (!u.next().done)
    return false;
  if (!zoe(e) && !Goe(e) && !Woe(e) && !Yoe(e)) {
    let c = Object.entries(e), d = Object.entries(t);
    if (!ce$1(c, d, a))
      return false;
  }
  return n.pop(), i.pop(), true;
}
o(qt, "iterableEquality");
function Xx(e, t) {
  return !e || typeof e != "object" || e === Object.prototype ? false : Object.prototype.hasOwnProperty.call(e, t) || Xx(Object.getPrototypeOf(
    e
  ), t);
}
o(Xx, "hasPropertyInObject");
function Koe(e) {
  return To(e) && !(e instanceof Error) && !Array.isArray(e) && !(e instanceof Date);
}
o(Koe, "isObjectWithKeys");
function Os(e, t, r7 = []) {
  let n = r7.filter((s) => s !== Os), i = /* @__PURE__ */ o((s = /* @__PURE__ */ new WeakMap()) => (a, l) => {
    if (Koe(l))
      return Object.keys(l).every((u) => {
        if (l[u] != null && typeof l[u] == "object") {
          if (s.has(l[u]))
            return ce$1(a[u], l[u], n);
          s.set(l[u], true);
        }
        let c = a != null && Xx(a, u) && ce$1(a[u], l[u], [...n, i(s)]);
        return s.delete(l[u]), c;
      });
  }, "subsetEqualityWithContext");
  return i()(e, t);
}
o(Os, "subsetEquality");
function jN(e, t) {
  if (!(e == null || t == null || e.constructor === t.constructor))
    return false;
}
o(jN, "typeEquality");
function kN(e, t) {
  let r7 = e, n = t;
  if (!(e instanceof DataView && t instanceof DataView)) {
    if (!(e instanceof ArrayBuffer) || !(t instanceof ArrayBuffer))
      return;
    try {
      r7 = new DataView(e), n = new DataView(t);
    } catch {
      return;
    }
  }
  if (r7.byteLength !== n.byteLength)
    return false;
  for (let i = 0; i < r7.byteLength; i++)
    if (r7.getUint8(i) !== n.getUint8(i))
      return false;
  return true;
}
o(kN, "arrayBufferEquality");
function zx(e, t, r7 = []) {
  if (!Array.isArray(e) || !Array.isArray(t))
    return;
  let n = Object.keys(e), i = Object.keys(t), s = r7.filter((a) => a !== zx);
  return ce$1(e, t, s, true) && ce$1(n, i);
}
o(zx, "sparseArrayEquality");
function Xoe(e, t = "#{this}", r7 = "#{exp}") {
  let n = `expected ${t} to be ${r7} // Object.is equality`;
  return ["toStrictEqual", "toEqual"].includes(e) ? `${n}

If it should pass with deep equality, replace "toBe" with "${e}"

Expected: ${t}
Received: serializes to the same string
` : n;
}
o(Xoe, "generateToBeMessage");
function Joe(e, t) {
  return `${t} ${e}${t === 1 ? "" : "s"}`;
}
o(Joe, "pluralize");
function Hx(e) {
  return [...Object.keys(e), ...Object.getOwnPropertySymbols(e).filter((t) => {
    var r7;
    return (r7 = Object.getOwnPropertyDescriptor(e, t)) === null || r7 === void 0 ? void 0 : r7.enumerable;
  })];
}
o(Hx, "getObjectKeys");
function Qoe(e, t, r7) {
  let n = 0, i = /* @__PURE__ */ o((s = /* @__PURE__ */ new WeakMap()) => (a, l) => {
    if (Array.isArray(a)) {
      if (Array.isArray(l) && l.length === a.length)
        return l.map((u, c) => i(s)(a[c], u));
    } else {
      if (a instanceof Date)
        return a;
      if (To(a) && To(l)) {
        if (ce$1(a, l, [
          ...r7,
          qt,
          Os
        ]))
          return l;
        let u = {};
        s.set(a, u), typeof a.constructor == "function" && typeof a.constructor.name == "string" && Object.defineProperty(u, "constructor", {
          enumerable: false,
          value: a.constructor
        });
        for (let c of Hx(a))
          Xx(l, c) ? u[c] = s.has(a[c]) ? s.get(a[c]) : i(s)(a[c], l[c]) : s.has(a[c]) || (n += 1, To(a[c]) && (n += Hx(a[c]).length), i(s)(
            a[c],
            l[c]
          ));
        if (Hx(u).length > 0)
          return u;
      }
    }
    return a;
  }, "getObjectSubsetWithContext");
  return {
    subset: i()(e, t),
    stripped: n
  };
}
o(Qoe, "getObjectSubset");
if (!Object.prototype.hasOwnProperty.call(globalThis, Ps)) {
  let e = /* @__PURE__ */ new WeakMap();
  Object.defineProperty(globalThis, Ps, { get: /* @__PURE__ */ o(() => e, "get") });
}
if (!Object.prototype.hasOwnProperty.call(globalThis, As)) {
  let e = /* @__PURE__ */ Object.create(null), t = [];
  Object.defineProperty(globalThis, As, {
    configurable: true,
    get: /* @__PURE__ */ o(() => ({
      state: globalThis[Ps].get(globalThis[hp]),
      matchers: e,
      customEqualityTesters: t
    }), "get")
  });
}
if (!Object.prototype.hasOwnProperty.call(globalThis, Vx)) {
  let e = /* @__PURE__ */ Object.create(null);
  Object.defineProperty(globalThis, Vx, { get: /* @__PURE__ */ o(() => e, "get") });
}
function qs(e) {
  return globalThis[Ps].get(e);
}
o(qs, "getState");
function gp(e, t) {
  let r7 = globalThis[Ps], n = r7.get(t) || {}, i = Object.defineProperties(n, {
    ...Object.getOwnPropertyDescriptors(n),
    ...Object.getOwnPropertyDescriptors(e)
  });
  r7.set(t, i);
}
o(gp, "setState");
var Jx = class Jx2 {
  constructor(t, r7 = false) {
    // should have "jest" to be compatible with its ecosystem
    __publicField(this, "$$typeof", Symbol.for("jest.asymmetricMatcher"));
    this.sample = t, this.inverse = r7;
  }
  getMatcherContext(t) {
    return {
      ...qs(t || globalThis[hp]),
      equals: ce$1,
      isNot: this.inverse,
      customTesters: Kx(),
      utils: {
        ...HN(),
        diff: Tn$1,
        stringify: Ye,
        iterableEquality: qt,
        subsetEquality: Os
      }
    };
  }
};
o(Jx, "AsymmetricMatcher");
var Ut = Jx;
Ut.prototype[Symbol.for("chai/inspect")] = function(e) {
  let t = Ye(this, e.depth, { min: true });
  return t.length <= e.truncate ? t : `${this.toString()}{…}`;
};
var Qx = class Qx2 extends Ut {
  constructor(t, r7 = false) {
    if (!Ht("String", t))
      throw new Error("Expected is not a string");
    super(t, r7);
  }
  asymmetricMatch(t) {
    let r7 = Ht("String", t) && t.includes(this.sample);
    return this.inverse ? !r7 : r7;
  }
  toString() {
    return `String${this.inverse ? "Not" : ""}Containing`;
  }
  getExpectedType() {
    return "string";
  }
};
o(Qx, "StringContaining");
var up = Qx, Zx = class Zx2 extends Ut {
  asymmetricMatch(t) {
    return t != null;
  }
  toString() {
    return "Anything";
  }
  toAsymmetricMatcher() {
    return "Anything";
  }
};
o(Zx, "Anything");
var Gx = Zx, ew = class ew2 extends Ut {
  constructor(t, r7 = false) {
    super(t, r7);
  }
  getPrototype(t) {
    return Object.getPrototypeOf ? Object.getPrototypeOf(t) : t.constructor.prototype === t ? null : t.constructor.prototype;
  }
  hasProperty(t, r7) {
    return t ? Object.prototype.hasOwnProperty.call(t, r7) ? true : this.hasProperty(this.getPrototype(t), r7) : false;
  }
  asymmetricMatch(t) {
    if (typeof this.sample != "object")
      throw new TypeError(`You must provide an object to ${this.toString()}, not '${typeof this.sample}'.`);
    let r7 = true, n = this.getMatcherContext();
    for (let i in this.sample)
      if (!this.hasProperty(t, i) || !ce$1(this.sample[i], t[i], n.customTesters)) {
        r7 = false;
        break;
      }
    return this.inverse ? !r7 : r7;
  }
  toString() {
    return `Object${this.inverse ? "Not" : ""}Containing`;
  }
  getExpectedType() {
    return "object";
  }
};
o(ew, "ObjectContaining");
var cp = ew, tw = class tw2 extends Ut {
  constructor(t, r7 = false) {
    super(t, r7);
  }
  asymmetricMatch(t) {
    if (!Array.isArray(this.sample))
      throw new TypeError(`You must provide an array to ${this.toString()}, not '${typeof this.sample}'.`);
    let r7 = this.getMatcherContext(), n = this.sample.length === 0 || Array.isArray(t) && this.sample.every((i) => t.some((s) => ce$1(i, s, r7.customTesters)));
    return this.inverse ? !n : n;
  }
  toString() {
    return `Array${this.inverse ? "Not" : ""}Containing`;
  }
  getExpectedType() {
    return "array";
  }
};
o(tw, "ArrayContaining");
var dp = tw, rw = class rw2 extends Ut {
  constructor(t) {
    if (typeof t > "u")
      throw new TypeError("any() expects to be passed a constructor function. Please pass one or use anything() to match any object.");
    super(t);
  }
  fnNameFor(t) {
    if (t.name)
      return t.name;
    let n = Function.prototype.toString.call(t).match(/^(?:async)?\s*function\s*(?:\*\s*)?([\w$]+)\s*\(/);
    return n ? n[1] : "<anonymous>";
  }
  asymmetricMatch(t) {
    return this.sample === String ? typeof t == "string" || t instanceof String : this.sample === Number ? typeof t == "number" || t instanceof Number : this.sample === Function ? typeof t == "function" || typeof t == "function" : this.sample === Boolean ? typeof t == "boolean" || t instanceof Boolean : this.sample === BigInt ? typeof t == "bigint" || t instanceof BigInt : this.sample === Symbol ? typeof t == "symbol" || t instanceof Symbol : this.sample === Object ? typeof t == "object" : t instanceof this.sample;
  }
  toString() {
    return "Any";
  }
  getExpectedType() {
    return this.sample === String ? "string" : this.sample === Number ? "number" : this.sample === Function ? "function" : this.sample === Object ? "object" : this.sample === Boolean ? "boolean" : this.fnNameFor(this.sample);
  }
  toAsymmetricMatcher() {
    return `Any<${this.fnNameFor(this.sample)}>`;
  }
};
o(rw, "Any");
var Wx = rw, nw = class nw2 extends Ut {
  constructor(t, r7 = false) {
    if (!Ht("String", t) && !Ht("RegExp", t))
      throw new Error("Expected is not a String or a RegExp");
    super(new RegExp(t), r7);
  }
  asymmetricMatch(t) {
    let r7 = Ht("String", t) && this.sample.test(t);
    return this.inverse ? !r7 : r7;
  }
  toString() {
    return `String${this.inverse ? "Not" : ""}Matching`;
  }
  getExpectedType() {
    return "string";
  }
};
o(nw, "StringMatching");
var pp = nw, ow = class ow2 extends Ut {
  constructor(t, r7 = 2, n = false) {
    if (!Ht("Number", t))
      throw new Error("Expected is not a Number");
    if (!Ht("Number", r7))
      throw new Error("Precision is not a Number");
    super(t);
    __publicField(this, "precision");
    this.inverse = n, this.precision = r7;
  }
  asymmetricMatch(t) {
    if (!Ht("Number", t))
      return false;
    let r7 = false;
    return t === Number.POSITIVE_INFINITY && this.sample === Number.POSITIVE_INFINITY || t === Number.NEGATIVE_INFINITY && this.sample === Number.NEGATIVE_INFINITY ? r7 = true : r7 = Math.abs(this.sample - t) < 10 ** -this.precision / 2, this.inverse ? !r7 : r7;
  }
  toString() {
    return `Number${this.inverse ? "Not" : ""}CloseTo`;
  }
  getExpectedType() {
    return "number";
  }
  toAsymmetricMatcher() {
    return [
      this.toString(),
      this.sample,
      `(${Joe("digit", this.precision)})`
    ].join(" ");
  }
};
o(ow, "CloseTo");
var fp = ow, WN = /* @__PURE__ */ o((e, t) => {
  t.addMethod(e.expect, "anything", () => new Gx()), t.addMethod(e.expect, "any", (r7) => new Wx(r7)), t.addMethod(
    e.expect,
    "stringContaining",
    (r7) => new up(r7)
  ), t.addMethod(e.expect, "objectContaining", (r7) => new cp(r7)), t.addMethod(e.expect, "arrayContaining", (r7) => new dp(r7)), t.addMethod(e.expect, "stringMatching", (r7) => new pp(r7)), t.addMethod(e.expect, "closeTo", (r7, n) => new fp(r7, n)), e.expect.not = {
    stringContaining: /* @__PURE__ */ o((r7) => new up(r7, true), "stringContaining"),
    objectContaining: /* @__PURE__ */ o((r7) => new cp(r7, true), "objectContaining"),
    arrayContaining: /* @__PURE__ */ o((r7) => new dp(r7, true), "arrayContaining"),
    stringMatching: /* @__PURE__ */ o((r7) => new pp(r7, true), "stringMatching"),
    closeTo: /* @__PURE__ */ o((r7, n) => new fp(r7, n, true), "closeTo")
  };
}, "JestAsymmetricMatchers");
function LN(e, t, r7) {
  let n = e.flag(t, "negate") ? "not." : "", i = `${e.flag(t, "_name")}(${r7 ? "expected" : ""})`, s = e.flag(t, "promise");
  return `expect(actual)${s ? `.${s}` : ""}.${n}${i}`;
}
o(LN, "createAssertionMessage");
function FN(e, t, r7, n) {
  let i = e;
  if (i && t instanceof Promise) {
    t = t.finally(() => {
      if (!i.promises)
        return;
      let a = i.promises.indexOf(t);
      a !== -1 && i.promises.splice(a, 1);
    }), i.promises || (i.promises = []), i.promises.push(t);
    let s = false;
    return i.onFinished ?? (i.onFinished = []), i.onFinished.push(() => {
      if (!s) {
        var a;
        let u = (((a = globalThis.__vitest_worker__) === null || a === void 0 ? void 0 : a.onFilterStackTrace) || ((c) => c || ""))(n.stack);
        console.warn([
          `Promise returned by \`${r7}\` was not awaited. `,
          "Vitest currently auto-awaits hanging assertions at the end of the test, but this will cause the test to fail in Vitest 3. ",
          `Please remember to await the assertion.
`,
          u
        ].join(""));
      }
    }), {
      then(a, l) {
        return s = true, t.then(a, l);
      },
      catch(a) {
        return t.catch(a);
      },
      finally(a) {
        return t.finally(a);
      },
      [Symbol.toStringTag]: "Promise"
    };
  }
  return t;
}
o(FN, "recordAsyncExpect");
function DN(e, t) {
  var r7;
  e.result || (e.result = { state: "fail" }), e.result.state = "fail", (r7 = e.result).errors || (r7.errors = []), e.result.errors.push(Ki(t));
}
o(DN, "handleTestError");
function YN(e, t, r7) {
  return function(...n) {
    if (t !== "withTest" && e.flag(this, "_name", t), !e.flag(this, "soft"))
      return r7.apply(this, n);
    let i = e.flag(this, "vitest-test");
    if (!i)
      throw new Error("expect.soft() can only be used inside a test");
    try {
      let s = r7.apply(this, n);
      return s && typeof s == "object" && typeof s.then == "function" ? s.then(Ug, (a) => {
        DN(i, a);
      }) : s;
    } catch (s) {
      DN(i, s);
    }
  };
}
o(YN, "wrapAssertion");
var KN = /* @__PURE__ */ o((e, t) => {
  let { AssertionError: r7 } = e, n = Kx();
  function i(c, d) {
    let p5 = /* @__PURE__ */ o((f) => {
      let m = YN(t, f, d);
      t.addMethod(e.Assertion.prototype, f, m), t.addMethod(globalThis[As].matchers, f, m);
    }, "addMethod");
    Array.isArray(c) ? c.forEach((f) => p5(f)) : p5(c);
  }
  o(i, "def"), [
    "throw",
    "throws",
    "Throw"
  ].forEach((c) => {
    t.overwriteMethod(e.Assertion.prototype, c, (d) => function(...p5) {
      let f = t.flag(this, "promise"), m = t.flag(this, "object"), h5 = t.flag(this, "negate");
      if (f === "rejects")
        t.flag(this, "object", () => {
          throw m;
        });
      else if (f === "resolves" && typeof m != "function") {
        if (h5)
          return;
        {
          let b = t.flag(this, "message") || "expected promise to throw an error, but it didn't", v5 = { showDiff: false };
          throw new r7(b, v5, t.flag(this, "ssfi"));
        }
      }
      d.apply(this, p5);
    });
  }), i("withTest", function(c) {
    return t.flag(this, "vitest-test", c), this;
  }), i("toEqual", function(c) {
    let d = t.flag(this, "object"), p5 = ce$1(d, c, [...n, qt]);
    return this.assert(p5, "expected #{this} to deeply equal #{exp}", "expected #{this} to not deeply equal #{exp}", c, d);
  }), i("toStrictEqual", function(c) {
    let d = t.flag(this, "object"), p5 = ce$1(d, c, [
      ...n,
      qt,
      jN,
      zx,
      kN
    ], true);
    return this.assert(p5, "expected #{this} to strictly equal #{exp}", "expected #{this} to not strictly equal #{exp}", c, d);
  }), i("toBe", function(c) {
    let d = this._obj, p5 = Object.is(d, c), f = "";
    return p5 || (ce$1(d, c, [
      ...n,
      qt,
      jN,
      zx,
      kN
    ], true) ? f = "toStrictEqual" : ce$1(d, c, [...n, qt]) && (f = "toEqual")), this.assert(p5, Xoe(f), "expected #{this} not to be #{exp} // Object.is equality", c, d);
  }), i("toMatchObject", function(c) {
    let d = this._obj, p5 = ce$1(d, c, [
      ...n,
      qt,
      Os
    ]), f = t.flag(this, "negate"), { subset: m, stripped: h5 } = Qoe(d, c, n);
    if (p5 && f || !p5 && !f) {
      let b = t.getMessage(this, [
        p5,
        "expected #{this} to match object #{exp}",
        "expected #{this} to not match object #{exp}",
        c,
        m,
        false
      ]), v5 = h5 === 0 ? b : `${b}
(${h5} matching ${h5 === 1 ? "property" : "properties"} omitted from actual)`;
      throw new r7(v5, {
        showDiff: true,
        expected: c,
        actual: m
      });
    }
  }), i("toMatch", function(c) {
    let d = this._obj;
    if (typeof d != "string")
      throw new TypeError(`.toMatch() expects to receive a string, but got ${typeof d}`);
    return this.assert(typeof c == "string" ? d.includes(c) : d.match(c), "expected #{this} to match #{exp}", "expected #{this} not to match #{exp}", c, d);
  }), i("toContain", function(c) {
    let d = this._obj;
    if (typeof Node < "u" && d instanceof Node) {
      if (!(c instanceof Node))
        throw new TypeError(`toContain() expected a DOM node as the argument, but got ${typeof c}`);
      return this.assert(d.contains(c), "expected #{this} to contain element #{exp}", "expected #{this} not to contain element #{exp}", c, d);
    }
    if (typeof DOMTokenList < "u" && d instanceof DOMTokenList) {
      Dt$1(c, "class name", ["string"]);
      let f = t.flag(this, "negate") ? d.value.replace(c, "").trim() : `${d.value} ${c}`;
      return this.assert(d.contains(c), `expected "${d.value}" to contain "${c}"`, `expected "${d.value}" not to contain "${c}"`, f, d.value);
    }
    return typeof d == "string" && typeof c == "string" ? this.assert(d.includes(c), "expected #{this} to contain #{exp}", "expected #{this} not to contain #{exp}", c, d) : (d != null && typeof d != "string" && t.flag(this, "object", Array.from(d)), this.contain(c));
  }), i("toContainEqual", function(c) {
    let d = t.flag(this, "object"), p5 = Array.from(d).findIndex((f) => ce$1(f, c, n));
    this.assert(p5 !== -1, "expected #{this} to deep equally contain #{exp}", "expected #{this} to not deep equally contain #{exp}", c);
  }), i("toBeTruthy", function() {
    let c = t.flag(this, "object");
    this.assert(!!c, "expected #{this} to be truthy", "expected #{this} to not be truthy", true, c);
  }), i("toBeFalsy", function() {
    let c = t.flag(this, "object");
    this.assert(!c, "expected #{this} to be falsy", "expected #{this} to not be falsy", false, c);
  }), i("toBeGreaterThan", function(c) {
    let d = this._obj;
    return Dt$1(d, "actual", ["number", "bigint"]), Dt$1(c, "expected", ["number", "bigint"]), this.assert(d > c, `expected ${d} to be greater than ${c}`, `expected ${d} to be not greater than ${c}`, c, d, false);
  }), i("toBeGreaterThanOrEqual", function(c) {
    let d = this._obj;
    return Dt$1(d, "actual", ["number", "bigint"]), Dt$1(c, "expected", ["number", "bigint"]), this.assert(d >= c, `expected ${d} to be greater than or equal to ${c}`, `expected ${d} to be not greater than or equal to ${c}`, c, d, false);
  }), i("toBeLessThan", function(c) {
    let d = this._obj;
    return Dt$1(d, "actual", ["number", "bigint"]), Dt$1(c, "expected", ["number", "bigint"]), this.assert(d < c, `expected ${d} to be less than ${c}`, `expected ${d} to be not less than ${c}`, c, d, false);
  }), i("toBeLessThanOrEqual", function(c) {
    let d = this._obj;
    return Dt$1(d, "actual", ["number", "bigint"]), Dt$1(c, "expected", ["number", "bigint"]), this.assert(d <= c, `expected ${d} to be less than or equal to ${c}`, `expected ${d} to be not less than or equal to ${c}`, c, d, false);
  }), i("toBeNaN", function() {
    let c = t.flag(this, "object");
    this.assert(Number.isNaN(c), "expected #{this} to be NaN", "expected #{this} not to be NaN", Number.NaN, c);
  }), i("toBeUndefined", function() {
    let c = t.flag(this, "object");
    this.assert(c === void 0, "expected #{this} to be undefined", "expected #{this} not to be undefined", void 0, c);
  }), i("toBeNull", function() {
    let c = t.flag(this, "object");
    this.assert(c === null, "expected #{this} to be null", "expected #{this} not to be null", null, c);
  }), i("toBeDefined", function() {
    let c = t.flag(this, "object");
    this.assert(typeof c < "u", "expected #{this} to be defined", "expected #{this} to be undefined", c);
  }), i("toBeTypeOf", function(c) {
    let d = typeof this._obj, p5 = c === d;
    return this.assert(p5, "expected #{this} to be type of #{exp}", "expected #{this} not to be type of #{exp}", c, d);
  }), i("toBeInstanceOf", function(c) {
    return this.instanceOf(c);
  }), i("toHaveLength", function(c) {
    return this.have.length(c);
  }), i("toHaveProperty", function(...c) {
    Array.isArray(c[0]) && (c[0] = c[0].map((w5) => String(w5).replace(/([.[\]])/g, "\\$1")).join("."));
    let d = this._obj, [p5, f] = c, m = /* @__PURE__ */ o(() => Object.prototype.hasOwnProperty.call(d, p5) ? {
      value: d[p5],
      exists: true
    } : t.getPathInfo(d, p5), "getValue"), { value: h5, exists: b } = m(), v5 = b && (c.length === 1 || ce$1(f, h5, n)), g = c.length === 1 ? "" : ` with value ${t.objDisplay(f)}`;
    return this.assert(v5, `expected #{this} to have property "${p5}"${g}`, `expected #{this} to not have property "${p5}"${g}`, f, b ? h5 : void 0);
  }), i("toBeCloseTo", function(c, d = 2) {
    let p5 = this._obj, f = false, m = 0, h5 = 0;
    return c === Number.POSITIVE_INFINITY && p5 === Number.POSITIVE_INFINITY || c === Number.NEGATIVE_INFINITY && p5 === Number.NEGATIVE_INFINITY ? f = true : (m = 10 ** -d / 2, h5 = Math.abs(p5 - c), f = h5 < m), this.assert(f, `expected #{this} to be close to #{exp}, received difference is ${h5}, but expected ${m}`, `expected #{this} to not be close to #{exp}, received difference is ${h5}, but expected ${m}`, c, p5, false);
  });
  function s(c) {
    if (!hr$1(c._obj))
      throw new TypeError(`${t.inspect(c._obj)} is not a spy or a call to a spy!`);
  }
  o(s, "assertIsMock");
  function a(c) {
    return s(c), c._obj;
  }
  o(a, "getSpy"), i(["toHaveBeenCalledTimes", "toBeCalledTimes"], function(c) {
    let d = a(this), p5 = d.getMockName(), f = d.mock.calls.length;
    return this.assert(f === c, `expected "${p5}" to be called #{exp} times, but got ${f} times`, `expected "${p5}" to not be called #{exp} times`, c, f, false);
  }), i("toHaveBeenCalledOnce", function() {
    let c = a(this), d = c.getMockName(), p5 = c.mock.calls.length;
    return this.assert(p5 === 1, `expected "${d}" to be called once, but got ${p5} times`, `expected "${d}" to not be called once`, 1, p5, false);
  }), i(["toHaveBeenCalled", "toBeCalled"], function() {
    let c = a(this), d = c.getMockName(), p5 = c.mock.calls.length, f = p5 > 0, m = t.flag(this, "negate"), h5 = t.getMessage(this, [
      f,
      `expected "${d}" to be called at least once`,
      `expected "${d}" to not be called at all, but actually been called ${p5} times`,
      true,
      f
    ]);
    if (f && m && (h5 = Ux(c, h5)), f && m || !f && !m)
      throw new r7(h5);
  });
  function l(c, d) {
    return c.length === d.length && c.every((p5, f) => ce$1(p5, d[f], [...n, qt]));
  }
  o(l, "equalsArgumentArray"), i(["toHaveBeenCalledWith", "toBeCalledWith"], function(...c) {
    let d = a(this), p5 = d.getMockName(), f = d.mock.calls.some((b) => l(b, c)), m = t.flag(this, "negate"), h5 = t.getMessage(this, [
      f,
      `expected "${p5}" to be called with arguments: #{exp}`,
      `expected "${p5}" to not be called with arguments: #{exp}`,
      c
    ]);
    if (f && m || !f && !m)
      throw new r7(Ux(d, h5, c));
  }), i("toHaveBeenCalledExactlyOnceWith", function(...c) {
    let d = a(this), p5 = d.getMockName(), f = d.mock.calls.length, h5 = d.mock.calls.some((g) => l(g, c)) && f === 1, b = t.flag(this, "negate"), v5 = t.getMessage(this, [
      h5,
      `expected "${p5}" to be called once with arguments: #{exp}`,
      `expected "${p5}" to not be called once with arguments: #{exp}`,
      c
    ]);
    if (h5 && b || !h5 && !b)
      throw new r7(Ux(d, v5, c));
  }), i(["toHaveBeenNthCalledWith", "nthCalledWith"], function(c, ...d) {
    let p5 = a(this), f = p5.getMockName(), m = p5.mock.calls[c - 1], h5 = p5.mock.calls.length, b = c <= h5;
    this.assert(m && l(m, d), `expected ${Cs(c)} "${f}" call to have been called with #{exp}${b ? "" : `, but called only ${h5} times`}`, `expected ${Cs(c)} "${f}" call to not have been called with #{exp}`, d, m, b);
  }), i(["toHaveBeenLastCalledWith", "lastCalledWith"], function(...c) {
    let d = a(this), p5 = d.getMockName(), f = d.mock.calls[d.mock.calls.length - 1];
    this.assert(f && l(f, c), `expected last "${p5}" call to have been called with #{exp}`, `expected last "${p5}" call to not have been called with #{exp}`, c, f);
  });
  function u(c, d, p5) {
    let f = c.mock.invocationCallOrder, m = d.mock.invocationCallOrder;
    return f.length === 0 ? !p5 : m.length === 0 ? false : f[0] < m[0];
  }
  o(u, "isSpyCalledBeforeAnotherSpy"), i(["toHaveBeenCalledBefore"], function(c, d = true) {
    let p5 = a(this);
    if (!hr$1(c))
      throw new TypeError(`${t.inspect(c)} is not a spy or a call to a spy`);
    this.assert(u(p5, c, d), `expected "${p5.getMockName()}" to have been called before "${c.getMockName()}"`, `expected "${p5.getMockName()}" to not have been called before "${c.getMockName()}"`, c, p5);
  }), i(["toHaveBeenCalledAfter"], function(c, d = true) {
    let p5 = a(this);
    if (!hr$1(c))
      throw new TypeError(`${t.inspect(c)} is not a spy or a call to a spy`);
    this.assert(u(c, p5, d), `expected "${p5.getMockName()}" to have been called after "${c.getMockName()}"`, `expected "${p5.getMockName()}" to not have been called after "${c.getMockName()}"`, c, p5);
  }), i(["toThrow", "toThrowError"], function(c) {
    if (typeof c == "string" || typeof c > "u" || c instanceof RegExp)
      return this.throws(c === "" ? /^$/ : c);
    let d = this._obj, p5 = t.flag(this, "promise"), f = t.flag(this, "negate"), m = null;
    if (p5 === "rejects")
      m = d;
    else if (p5 === "resolves" && typeof d != "function") {
      if (f)
        return;
      {
        let h5 = t.flag(this, "message") || "expected promise to throw an error, but it didn't", b = { showDiff: false };
        throw new r7(h5, b, t.flag(this, "ssfi"));
      }
    } else {
      let h5 = false;
      try {
        d();
      } catch (b) {
        h5 = true, m = b;
      }
      if (!h5 && !f) {
        let b = t.flag(this, "message") || "expected function to throw an error, but it didn't", v5 = { showDiff: false };
        throw new r7(b, v5, t.flag(this, "ssfi"));
      }
    }
    if (typeof c == "function") {
      let h5 = c.name || c.prototype.constructor.name;
      return this.assert(m && m instanceof c, `expected error to be instance of ${h5}`, `expected error not to be instance of ${h5}`, c, m);
    }
    if (c instanceof Error) {
      let h5 = ce$1(m, c, [...n, qt]);
      return this.assert(h5, "expected a thrown error to be #{exp}", "expected a thrown error not to be #{exp}", c, m);
    }
    if (typeof c == "object" && "asymmetricMatch" in c && typeof c.asymmetricMatch == "function") {
      let h5 = c;
      return this.assert(m && h5.asymmetricMatch(m), "expected error to match asymmetric matcher", "expected error not to match asymmetric matcher", h5, m);
    }
    throw new Error(`"toThrow" expects string, RegExp, function, Error instance or asymmetric matcher, got "${typeof c}"`);
  }), [{
    name: "toHaveResolved",
    condition: /* @__PURE__ */ o((c) => c.mock.settledResults.length > 0 && c.mock.settledResults.some(({ type: d }) => d === "fulfilled"), "condition"),
    action: "resolved"
  }, {
    name: ["toHaveReturned", "toReturn"],
    condition: /* @__PURE__ */ o((c) => c.mock.calls.length > 0 && c.mock.results.some(({ type: d }) => d !== "throw"), "condition"),
    action: "called"
  }].forEach(({ name: c, condition: d, action: p5 }) => {
    i(c, function() {
      let f = a(this), m = f.getMockName(), h5 = d(f);
      this.assert(h5, `expected "${m}" to be successfully ${p5} at least once`, `expected "${m}" to not be successfully ${p5}`, h5, !h5, false);
    });
  }), [{
    name: "toHaveResolvedTimes",
    condition: /* @__PURE__ */ o((c, d) => c.mock.settledResults.reduce((p5, { type: f }) => f === "fulfilled" ? ++p5 : p5, 0) === d, "condition"),
    action: "resolved"
  }, {
    name: ["toHaveReturnedTimes", "toReturnTimes"],
    condition: /* @__PURE__ */ o((c, d) => c.mock.results.reduce((p5, { type: f }) => f === "throw" ? p5 : ++p5, 0) === d, "condition"),
    action: "called"
  }].forEach(({ name: c, condition: d, action: p5 }) => {
    i(c, function(f) {
      let m = a(this), h5 = m.getMockName(), b = d(m, f);
      this.assert(b, `expected "${h5}" to be successfully ${p5} ${f} times`, `expected "${h5}" to not be successfully ${p5} ${f} times`, `expected resolved times: ${f}`, `received resolved times: ${b}`, false);
    });
  }), [{
    name: "toHaveResolvedWith",
    condition: /* @__PURE__ */ o((c, d) => c.mock.settledResults.some(({ type: p5, value: f }) => p5 === "fulfilled" && ce$1(d, f)), "condition"),
    action: "resolve"
  }, {
    name: ["toHaveReturnedWith", "toReturnWith"],
    condition: /* @__PURE__ */ o((c, d) => c.mock.results.some(({ type: p5, value: f }) => p5 === "return" && ce$1(d, f)), "condition"),
    action: "return"
  }].forEach(({ name: c, condition: d, action: p5 }) => {
    i(c, function(f) {
      let m = a(this), h5 = d(m, f), b = t.flag(this, "negate");
      if (h5 && b || !h5 && !b) {
        let v5 = m.getMockName(), g = t.getMessage(this, [
          h5,
          `expected "${v5}" to ${p5} with: #{exp} at least once`,
          `expected "${v5}" to not ${p5} with: #{exp}`,
          f
        ]), w5 = p5 === "return" ? m.mock.results : m.mock.settledResults;
        throw new r7(Zoe(m, w5, g, f));
      }
    });
  }), [{
    name: "toHaveLastResolvedWith",
    condition: /* @__PURE__ */ o((c, d) => {
      let p5 = c.mock.settledResults[c.mock.settledResults.length - 1];
      return p5 && p5.type === "fulfilled" && ce$1(p5.value, d);
    }, "condition"),
    action: "resolve"
  }, {
    name: ["toHaveLastReturnedWith", "lastReturnedWith"],
    condition: /* @__PURE__ */ o((c, d) => {
      let p5 = c.mock.results[c.mock.results.length - 1];
      return p5 && p5.type === "return" && ce$1(p5.value, d);
    }, "condition"),
    action: "return"
  }].forEach(({ name: c, condition: d, action: p5 }) => {
    i(c, function(f) {
      let m = a(this), h5 = p5 === "return" ? m.mock.results : m.mock.settledResults, b = h5[h5.length - 1], v5 = m.getMockName();
      this.assert(d(m, f), `expected last "${v5}" call to ${p5} #{exp}`, `expected last "${v5}" call to not ${p5} #{exp}`, f, b?.value);
    });
  }), [{
    name: "toHaveNthResolvedWith",
    condition: /* @__PURE__ */ o((c, d, p5) => {
      let f = c.mock.settledResults[d - 1];
      return f && f.type === "fulfilled" && ce$1(f.value, p5);
    }, "condition"),
    action: "resolve"
  }, {
    name: ["toHaveNthReturnedWith", "nthReturnedWith"],
    condition: /* @__PURE__ */ o((c, d, p5) => {
      let f = c.mock.results[d - 1];
      return f && f.type === "return" && ce$1(f.value, p5);
    }, "condition"),
    action: "return"
  }].forEach(({ name: c, condition: d, action: p5 }) => {
    i(c, function(f, m) {
      let h5 = a(this), b = h5.getMockName(), g = (p5 === "return" ? h5.mock.results : h5.mock.settledResults)[f - 1], w5 = `${Cs(f)} call`;
      this.assert(d(h5, f, m), `expected ${w5} "${b}" call to ${p5} #{exp}`, `expected ${w5} "${b}" call to not ${p5} #{exp}`, m, g?.value);
    });
  }), i("withContext", function(c) {
    for (let d in c)
      t.flag(this, d, c[d]);
    return this;
  }), t.addProperty(e.Assertion.prototype, "resolves", /* @__PURE__ */ o(function() {
    let d = new Error("resolves");
    t.flag(this, "promise", "resolves"), t.flag(this, "error", d);
    let p5 = t.flag(this, "vitest-test"), f = t.flag(this, "object");
    if (t.flag(this, "poll"))
      throw new SyntaxError("expect.poll() is not supported in combination with .resolves");
    if (typeof f?.then != "function")
      throw new TypeError(`You must provide a Promise to expect() when using .resolves, not '${typeof f}'.`);
    let m = new Proxy(this, { get: /* @__PURE__ */ o((h5, b, v5) => {
      let g = Reflect.get(h5, b, v5);
      return typeof g != "function" ? g instanceof e.Assertion ? m : g : (...w5) => {
        t.flag(this, "_name", b);
        let E = f.then((R) => (t.flag(this, "object", R), g.call(this, ...w5)), (R) => {
          let S = new r7(`promise rejected "${t.inspect(R)}" instead of resolving`, { showDiff: false });
          throw S.cause = R, S.stack = d.stack.replace(d.message, S.message), S;
        });
        return FN(p5, E, LN(t, this, !!w5.length), d);
      };
    }, "get") });
    return m;
  }, "__VITEST_RESOLVES__")), t.addProperty(e.Assertion.prototype, "rejects", /* @__PURE__ */ o(function() {
    let d = new Error("rejects");
    t.flag(this, "promise", "rejects"), t.flag(this, "error", d);
    let p5 = t.flag(this, "vitest-test"), f = t.flag(this, "object"), m = typeof f == "function" ? f() : f;
    if (t.flag(this, "poll"))
      throw new SyntaxError("expect.poll() is not supported in combination with .rejects");
    if (typeof m?.then != "function")
      throw new TypeError(`You must provide a Promise to expect() when using .rejects, not '${typeof m}'.`);
    let h5 = new Proxy(this, { get: /* @__PURE__ */ o((b, v5, g) => {
      let w5 = Reflect.get(b, v5, g);
      return typeof w5 != "function" ? w5 instanceof e.Assertion ? h5 : w5 : (...E) => {
        t.flag(this, "_name", v5);
        let R = m.then((S) => {
          let P = new r7(`promise resolved "${t.inspect(S)}" instead of rejecting`, {
            showDiff: true,
            expected: new Error("rejected promise"),
            actual: S
          });
          throw P.stack = d.stack.replace(d.message, P.message), P;
        }, (S) => (t.flag(this, "object", S), w5.call(this, ...E)));
        return FN(p5, R, LN(t, this, !!E.length), d);
      };
    }, "get") });
    return h5;
  }, "__VITEST_REJECTS__"));
}, "JestChaiExpect");
function Cs(e) {
  let t = e % 10, r7 = e % 100;
  return t === 1 && r7 !== 11 ? `${e}st` : t === 2 && r7 !== 12 ? `${e}nd` : t === 3 && r7 !== 13 ? `${e}rd` : `${e}th`;
}
o(Cs, "ordinalOf");
function Ux(e, t, r7) {
  return e.mock.calls.length && (t += Ee.gray(`

Received: 

${e.mock.calls.map((n, i) => {
    let s = Ee.bold(`  ${Cs(i + 1)} ${e.getMockName()} call:

`);
    return r7 ? s += Tn$1(r7, n, { omitAnnotationLines: true }) : s += Ye(n).split(`
`).map((a) => `    ${a}`).join(`
`), s += `
`, s;
  }).join(`
`)}`)), t += Ee.gray(`

Number of calls: ${Ee.bold(e.mock.calls.length)}
`), t;
}
o(Ux, "formatCalls");
function Zoe(e, t, r7, n) {
  return t.length && (r7 += Ee.gray(`

Received: 

${t.map((i, s) => {
    let a = Ee.bold(`  ${Cs(s + 1)} ${e.getMockName()} call return:

`);
    return n ? a += Tn$1(n, i.value, { omitAnnotationLines: true }) : a += Ye(i).split(`
`).map((l) => `    ${l}`).join(`
`), a += `
`, a;
  }).join(`
`)}`)), r7 += Ee.gray(`

Number of calls: ${Ee.bold(e.mock.calls.length)}
`), r7;
}
o(Zoe, "formatReturns");
function eie(e, t) {
  let r7 = e._obj, n = _t.flag(e, "negate"), i = _t.flag(e, "promise") || "", s = {
    ...HN(),
    diff: Tn$1,
    stringify: Ye,
    iterableEquality: qt,
    subsetEquality: Os
  };
  return {
    state: {
      ...qs(t),
      customTesters: Kx(),
      isNot: n,
      utils: s,
      promise: i,
      equals: ce$1,
      suppressedErrors: [],
      soft: _t.flag(e, "soft"),
      poll: _t.flag(e, "poll")
    },
    isNot: n,
    obj: r7
  };
}
o(eie, "getMatcherState");
var iw = class iw2 extends Error {
  constructor(t, r7, n) {
    super(t), this.actual = r7, this.expected = n;
  }
};
o(iw, "JestExtendError");
var mp = iw;
function tie(e, t, r7) {
  return (n, i) => {
    Object.entries(r7).forEach(([s, a]) => {
      function l(...f) {
        let { state: m, isNot: h5, obj: b } = eie(this, t), v5 = a.call(m, b, ...f);
        if (v5 && typeof v5 == "object" && typeof v5.then == "function")
          return v5.then(({ pass: P, message: _5, actual: C5, expected: O }) => {
            if (P && h5 || !P && !h5)
              throw new mp(_5(), C5, O);
          });
        let { pass: g, message: w5, actual: E, expected: R } = v5;
        if (g && h5 || !g && !h5)
          throw new mp(w5(), E, R);
      }
      o(l, "expectWrapper");
      let u = YN(i, s, l);
      i.addMethod(globalThis[As].matchers, s, u), i.addMethod(e.Assertion.prototype, s, u);
      let p5 = class p extends Ut {
        constructor(m = false, ...h5) {
          super(h5, m);
        }
        asymmetricMatch(m) {
          let { pass: h5 } = a.call(this.getMatcherContext(t), m, ...this.sample);
          return this.inverse ? !h5 : h5;
        }
        toString() {
          return `${this.inverse ? "not." : ""}${s}`;
        }
        getExpectedType() {
          return "any";
        }
        toAsymmetricMatcher() {
          return `${this.toString()}<${this.sample.map((m) => Ye(m)).join(", ")}>`;
        }
      };
      o(p5, "CustomMatcher");
      let c = p5, d = /* @__PURE__ */ o((...f) => new c(false, ...f), "customMatcher");
      Object.defineProperty(t, s, {
        configurable: true,
        enumerable: true,
        value: d,
        writable: true
      }), Object.defineProperty(t.not, s, {
        configurable: true,
        enumerable: true,
        value: /* @__PURE__ */ o((...f) => new c(true, ...f), "value"),
        writable: true
      }), Object.defineProperty(globalThis[Vx], s, {
        configurable: true,
        enumerable: true,
        value: d,
        writable: true
      });
    });
  };
}
o(tie, "JestExtendPlugin");
var XN = /* @__PURE__ */ o((e, t) => {
  t.addMethod(e.expect, "extend", (r7, n) => {
    Fr$1(tie(e, r7, n));
  });
}, "JestExtend");
function rie() {
  Fr$1(XN), Fr$1(KN), Fr$1(WN);
  let e = /* @__PURE__ */ o((n, i) => {
    let { assertionCalls: s } = qs(e);
    return gp({ assertionCalls: s + 1, soft: false }, e), Lr$1(n, i);
  }, "expect");
  Object.assign(e, Lr$1), e.getState = () => qs(e), e.setState = (n) => gp(n, e), e.extend = (n) => Lr$1.extend(e, n), e.soft = (...n) => {
    let i = e(...n);
    return e.setState({
      soft: true
    }), i;
  }, e.extend($N), e.unreachable = (n) => {
    x.fail(`expected${n ? ` "${n}" ` : " "}not to be reached`);
  };
  function t(n) {
    let i = /* @__PURE__ */ o(() => new Error(
      `expected number of assertions to be ${n}, but got ${e.getState().assertionCalls}`
    ), "errorGen");
    "captureStackTrace" in Error && typeof Error.captureStackTrace == "function" && Error.captureStackTrace(i(), t), e.setState({
      expectedAssertionsNumber: n,
      expectedAssertionsNumberErrorGen: i
    });
  }
  o(t, "assertions");
  function r7() {
    let n = new Error("expected any number of assertion, but got none");
    "captureStackTrace" in Error && typeof Error.captureStackTrace == "function" && Error.captureStackTrace(n, r7), e.setState({
      isExpectingAssertions: true,
      isExpectingAssertionsError: n
    });
  }
  return o(r7, "hasAssertions"), gp(
    {
      // this should also add "snapshotState" that is added conditionally
      assertionCalls: 0,
      isExpectingAssertions: false,
      isExpectingAssertionsError: null,
      expectedAssertionsNumber: null,
      expectedAssertionsNumberErrorGen: null
    },
    e
  ), _t.addMethod(e, "assertions", t), _t.addMethod(e, "hasAssertions", r7), e.extend(Fx), e;
}
o(rie, "createExpect");
var sw = rie();
Object.defineProperty(globalThis, hp, {
  value: sw,
  writable: true,
  configurable: true
});
function nie(e, t, r7) {
  Object.defineProperty(e, t, r7);
}
o(nie, "f");
var vp = Symbol.for("tinyspy:spy");
var oie = /* @__PURE__ */ o((e) => {
  e.called = false, e.callCount = 0, e.calls = [], e.results = [], e.resolves = [], e.next = [];
}, "P"), iie = /* @__PURE__ */ o((e) => (nie(e, vp, { value: { reset: /* @__PURE__ */ o(() => oie(e[vp]), "reset") } }), e[vp]), "K"), JN = /* @__PURE__ */ o(
  (e) => e[vp] || iie(e),
  "T"
);
var aw = /* @__PURE__ */ new Set();
function lw(e) {
  return aw.add(e), () => void aw.delete(e);
}
o(lw, "onMockCall");
var aie = /* @__PURE__ */ o((...e) => {
  let t = AN(...e);
  return ZN(t);
}, "spyOn");
function uw(e) {
  let t = e ? Bx(e) : Bx();
  return ZN(t);
}
o(uw, "fn");
function ZN(e) {
  let t = QN(e), r7 = t.mockImplementation.bind(null);
  return t.mockImplementation = (n) => QN(r7(n)), t;
}
o(ZN, "reactiveMock");
function QN(e) {
  let t = JN(e), r7 = t.impl;
  return t.willCall(function(...n) {
    return aw.forEach((i) => i(e, n)), r7?.apply(this, n);
  }), e;
}
o(QN, "listenWhenCalled");
function cw() {
  Go.forEach((e) => e.mockClear());
}
o(cw, "clearAllMocks");
function dw() {
  Go.forEach((e) => e.mockReset());
}
o(dw, "resetAllMocks");
function pw() {
  Go.forEach((e) => e.mockRestore());
}
o(pw, "restoreAllMocks");
function lie(e, t = {}) {
  return e;
}
o(lie, "mocked");
var cT = {};
st$1(cT, {
  buildQueries: () => vr$1,
  configure: () => Rye,
  createEvent: () => Oh,
  findAllByAltText: () => H$,
  findAllByDisplayValue: () => k$,
  findAllByLabelText: () => h$,
  findAllByPlaceholderText: () => R$,
  findAllByRole: () => tB,
  findAllByTestId: () => aB,
  findAllByText: () => O$,
  findAllByTitle: () => Y$,
  findByAltText: () => U$,
  findByDisplayValue: () => L$,
  findByLabelText: () => y$,
  findByPlaceholderText: () => S$,
  findByRole: () => rB,
  findByTestId: () => lB,
  findByText: () => q$,
  findByTitle: () => K$,
  fireEvent: () => ea,
  getAllByAltText: () => $$,
  getAllByDisplayValue: () => N$,
  getAllByLabelText: () => b$,
  getAllByPlaceholderText: () => w$,
  getAllByRole: () => Z$,
  getAllByTestId: () => iB,
  getAllByText: () => P$,
  getAllByTitle: () => G$,
  getByAltText: () => B$,
  getByDisplayValue: () => j$,
  getByLabelText: () => g$,
  getByPlaceholderText: () => T$,
  getByRole: () => eB,
  getByTestId: () => sB,
  getByText: () => A$,
  getByTitle: () => W$,
  getConfig: () => ie$1,
  getDefaultNormalizer: () => iT,
  getElementError: () => Nh,
  getMultipleElementsFoundError: () => jh,
  getNodeText: () => ra,
  getQueriesForElement: () => uB,
  getRoles: () => l$,
  getSuggestedQuery: () => qh,
  isInaccessible: () => Mh,
  logDOM: () => Ww,
  logRoles: () => Aye,
  makeFindQuery: () => ti,
  makeGetAllQuery: () => lT,
  makeSingleQuery: () => ei,
  prettyDOM: () => Qs,
  prettyFormat: () => ta,
  queries: () => Ih,
  queryAllByAltText: () => F$,
  queryAllByAttribute: () => Nn,
  queryAllByDisplayValue: () => I$,
  queryAllByLabelText: () => v$,
  queryAllByPlaceholderText: () => E$,
  queryAllByRole: () => J$,
  queryAllByTestId: () => nB,
  queryAllByText: () => _$,
  queryAllByTitle: () => V$,
  queryByAltText: () => D$,
  queryByAttribute: () => c$,
  queryByDisplayValue: () => M$,
  queryByLabelText: () => f$,
  queryByPlaceholderText: () => x$,
  queryByRole: () => Q$,
  queryByTestId: () => oB,
  queryByText: () => C$,
  queryByTitle: () => z$,
  queryHelpers: () => Uye,
  screen: () => bbe,
  waitFor: () => aT,
  waitForElementToBeRemoved: () => cbe,
  within: () => uB,
  wrapAllByQueryWithSuggestion: () => mt$1,
  wrapSingleQueryWithSuggestion: () => nn$1
});
var ta = Ne(dk());
var Use = Object.prototype.toString;
function pk(e) {
  return typeof e == "function" || Use.call(e) === "[object Function]";
}
o(pk, "isCallable");
function Vse(e) {
  var t = Number(e);
  return isNaN(t) ? 0 : t === 0 || !isFinite(t) ? t : (t > 0 ? 1 : -1) * Math.floor(Math.abs(t));
}
o(Vse, "toInteger");
var zse = Math.pow(2, 53) - 1;
function Gse(e) {
  var t = Vse(e);
  return Math.min(Math.max(t, 0), zse);
}
o(Gse, "toLength");
function xt$1(e, t) {
  var r7 = Array, n = Object(e);
  if (e == null)
    throw new TypeError("Array.from requires an array-like object - not null or undefined");
  if (typeof t < "u" && !pk(t))
    throw new TypeError("Array.from: when provided, the second argument must be a function");
  for (var i = Gse(n.length), s = pk(r7) ? Object(new r7(i)) : new Array(i), a = 0, l; a < i; )
    l = n[a], t ? s[a] = t(l, a) : s[a] = l, a += 1;
  return s.length = i, s;
}
o(xt$1, "arrayFrom");
function zs(e) {
  "@babel/helpers - typeof";
  return zs = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t) {
    return typeof t;
  } : function(t) {
    return t && typeof Symbol == "function" && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
  }, zs(e);
}
o(zs, "_typeof");
function Wse(e, t) {
  if (!(e instanceof t))
    throw new TypeError("Cannot call a class as a function");
}
o(Wse, "_classCallCheck");
function fk(e, t) {
  for (var r7 = 0; r7 < t.length; r7++) {
    var n = t[r7];
    n.enumerable = n.enumerable || false, n.configurable = true, "value" in n && (n.writable = true), Object.defineProperty(e, mk(n.key), n);
  }
}
o(fk, "_defineProperties");
function Yse(e, t, r7) {
  return t && fk(e.prototype, t), r7 && fk(e, r7), Object.defineProperty(e, "prototype", { writable: false }), e;
}
o(Yse, "_createClass");
function Kse(e, t, r7) {
  return t = mk(t), t in e ? Object.defineProperty(e, t, { value: r7, enumerable: true, configurable: true, writable: true }) : e[t] = r7, e;
}
o(Kse, "_defineProperty");
function mk(e) {
  var t = Xse(e, "string");
  return zs(t) === "symbol" ? t : String(t);
}
o(mk, "_toPropertyKey");
function Xse(e, t) {
  if (zs(e) !== "object" || e === null) return e;
  var r7 = e[Symbol.toPrimitive];
  if (r7 !== void 0) {
    var n = r7.call(e, t || "default");
    if (zs(n) !== "object") return n;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (t === "string" ? String : Number)(e);
}
o(Xse, "_toPrimitive");
var Jse = /* @__PURE__ */ (function() {
  function e() {
    var t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
    Wse(this, e), Kse(this, "items", void 0), this.items = t;
  }
  return o(e, "SetLike"), Yse(e, [{
    key: "add",
    value: /* @__PURE__ */ o(function(r7) {
      return this.has(r7) === false && this.items.push(r7), this;
    }, "add")
  }, {
    key: "clear",
    value: /* @__PURE__ */ o(function() {
      this.items = [];
    }, "clear")
  }, {
    key: "delete",
    value: /* @__PURE__ */ o(function(r7) {
      var n = this.items.length;
      return this.items = this.items.filter(function(i) {
        return i !== r7;
      }), n !== this.items.length;
    }, "_delete")
  }, {
    key: "forEach",
    value: /* @__PURE__ */ o(function(r7) {
      var n = this;
      this.items.forEach(function(i) {
        r7(i, i, n);
      });
    }, "forEach")
  }, {
    key: "has",
    value: /* @__PURE__ */ o(function(r7) {
      return this.items.indexOf(r7) !== -1;
    }, "has")
  }, {
    key: "size",
    get: /* @__PURE__ */ o(function() {
      return this.items.length;
    }, "get")
  }]), e;
})(), hk = typeof Set > "u" ? Set : Jse;
function De(e) {
  var t;
  return (
    // eslint-disable-next-line no-restricted-properties -- actual guard for environments without localName
    (t = e.localName) !== null && t !== void 0 ? t : (
      // eslint-disable-next-line no-restricted-properties -- required for the fallback
      e.tagName.toLowerCase()
    )
  );
}
o(De, "getLocalName");
var Qse = {
  article: "article",
  aside: "complementary",
  button: "button",
  datalist: "listbox",
  dd: "definition",
  details: "group",
  dialog: "dialog",
  dt: "term",
  fieldset: "group",
  figure: "figure",
  // WARNING: Only with an accessible name
  form: "form",
  footer: "contentinfo",
  h1: "heading",
  h2: "heading",
  h3: "heading",
  h4: "heading",
  h5: "heading",
  h6: "heading",
  header: "banner",
  hr: "separator",
  html: "document",
  legend: "legend",
  li: "listitem",
  math: "math",
  main: "main",
  menu: "list",
  nav: "navigation",
  ol: "list",
  optgroup: "group",
  // WARNING: Only in certain context
  option: "option",
  output: "status",
  progress: "progressbar",
  // WARNING: Only with an accessible name
  section: "region",
  summary: "button",
  table: "table",
  tbody: "rowgroup",
  textarea: "textbox",
  tfoot: "rowgroup",
  // WARNING: Only in certain context
  td: "cell",
  th: "columnheader",
  thead: "rowgroup",
  tr: "row",
  ul: "list"
}, Zse = {
  caption: /* @__PURE__ */ new Set(["aria-label", "aria-labelledby"]),
  code: /* @__PURE__ */ new Set(["aria-label", "aria-labelledby"]),
  deletion: /* @__PURE__ */ new Set(["aria-label", "aria-labelledby"]),
  emphasis: /* @__PURE__ */ new Set(["aria-label", "aria-labelledby"]),
  generic: /* @__PURE__ */ new Set(["aria-label", "aria-labelledby", "aria-roledescription"]),
  insertion: /* @__PURE__ */ new Set(["aria-label", "aria-labelledby"]),
  paragraph: /* @__PURE__ */ new Set(["aria-label", "aria-labelledby"]),
  presentation: /* @__PURE__ */ new Set(["aria-label", "aria-labelledby"]),
  strong: /* @__PURE__ */ new Set(["aria-label", "aria-labelledby"]),
  subscript: /* @__PURE__ */ new Set(["aria-label", "aria-labelledby"]),
  superscript: /* @__PURE__ */ new Set(["aria-label", "aria-labelledby"])
};
function eae(e, t) {
  return [
    "aria-atomic",
    "aria-busy",
    "aria-controls",
    "aria-current",
    "aria-describedby",
    "aria-details",
    // "disabled",
    "aria-dropeffect",
    // "errormessage",
    "aria-flowto",
    "aria-grabbed",
    // "haspopup",
    "aria-hidden",
    // "invalid",
    "aria-keyshortcuts",
    "aria-label",
    "aria-labelledby",
    "aria-live",
    "aria-owns",
    "aria-relevant",
    "aria-roledescription"
  ].some(function(r7) {
    var n;
    return e.hasAttribute(r7) && !((n = Zse[t]) !== null && n !== void 0 && n.has(r7));
  });
}
o(eae, "hasGlobalAriaAttributes");
function yk(e, t) {
  return eae(e, t);
}
o(yk, "ignorePresentationalRole");
function Op(e) {
  var t = rae(e);
  if (t === null || t === "presentation") {
    var r7 = tae(e);
    if (t !== "presentation" || yk(e, r7 || ""))
      return r7;
  }
  return t;
}
o(Op, "getRole");
function tae(e) {
  var t = Qse[De(e)];
  if (t !== void 0)
    return t;
  switch (De(e)) {
    case "a":
    case "area":
    case "link":
      if (e.hasAttribute("href"))
        return "link";
      break;
    case "img":
      return e.getAttribute("alt") === "" && !yk(e, "img") ? "presentation" : "img";
    case "input": {
      var r7 = e, n = r7.type;
      switch (n) {
        case "button":
        case "image":
        case "reset":
        case "submit":
          return "button";
        case "checkbox":
        case "radio":
          return n;
        case "range":
          return "slider";
        case "email":
        case "tel":
        case "text":
        case "url":
          return e.hasAttribute("list") ? "combobox" : "textbox";
        case "search":
          return e.hasAttribute("list") ? "combobox" : "searchbox";
        case "number":
          return "spinbutton";
        default:
          return null;
      }
    }
    case "select":
      return e.hasAttribute("multiple") || e.size > 1 ? "listbox" : "combobox";
  }
  return null;
}
o(tae, "getImplicitRole");
function rae(e) {
  var t = e.getAttribute("role");
  if (t !== null) {
    var r7 = t.trim().split(" ")[0];
    if (r7.length > 0)
      return r7;
  }
  return null;
}
o(rae, "getExplicitRole");
function _e$1(e) {
  return e !== null && e.nodeType === e.ELEMENT_NODE;
}
o(_e$1, "isElement");
function Tw(e) {
  return _e$1(e) && De(e) === "caption";
}
o(Tw, "isHTMLTableCaptionElement");
function Gs(e) {
  return _e$1(e) && De(e) === "input";
}
o(Gs, "isHTMLInputElement");
function bk(e) {
  return _e$1(e) && De(e) === "optgroup";
}
o(bk, "isHTMLOptGroupElement");
function gk(e) {
  return _e$1(e) && De(e) === "select";
}
o(gk, "isHTMLSelectElement");
function vk(e) {
  return _e$1(e) && De(e) === "table";
}
o(vk, "isHTMLTableElement");
function Ek(e) {
  return _e$1(e) && De(e) === "textarea";
}
o(Ek, "isHTMLTextAreaElement");
function xk(e) {
  var t = e.ownerDocument === null ? e : e.ownerDocument, r7 = t.defaultView;
  if (r7 === null)
    throw new TypeError("no window available");
  return r7;
}
o(xk, "safeWindow");
function wk(e) {
  return _e$1(e) && De(e) === "fieldset";
}
o(wk, "isHTMLFieldSetElement");
function Tk(e) {
  return _e$1(e) && De(e) === "legend";
}
o(Tk, "isHTMLLegendElement");
function Rk(e) {
  return _e$1(e) && De(e) === "slot";
}
o(Rk, "isHTMLSlotElement");
function nae(e) {
  return _e$1(e) && e.ownerSVGElement !== void 0;
}
o(nae, "isSVGElement");
function Sk(e) {
  return _e$1(e) && De(e) === "svg";
}
o(Sk, "isSVGSVGElement");
function _k(e) {
  return nae(e) && De(e) === "title";
}
o(_k, "isSVGTitleElement");
function Xo(e, t) {
  if (_e$1(e) && e.hasAttribute(t)) {
    var r7 = e.getAttribute(t).split(" "), n = e.getRootNode ? e.getRootNode() : e.ownerDocument;
    return r7.map(function(i) {
      return n.getElementById(i);
    }).filter(
      function(i) {
        return i !== null;
      }
      // TODO: why does this not narrow?
    );
  }
  return [];
}
o(Xo, "queryIdRefs");
function Gt(e, t) {
  return _e$1(e) ? t.indexOf(Op(e)) !== -1 : false;
}
o(Gt, "hasAnyConcreteRoles");
function oae(e) {
  return e.trim().replace(/\s\s+/g, " ");
}
o(oae, "asFlatString");
function iae(e, t) {
  if (!_e$1(e))
    return false;
  if (e.hasAttribute("hidden") || e.getAttribute("aria-hidden") === "true")
    return true;
  var r7 = t(e);
  return r7.getPropertyValue("display") === "none" || r7.getPropertyValue("visibility") === "hidden";
}
o(iae, "isHidden");
function sae(e) {
  return Gt(e, ["button", "combobox", "listbox", "textbox"]) || Ak(e, "range");
}
o(sae, "isControl");
function Ak(e, t) {
  if (!_e$1(e))
    return false;
  switch (t) {
    case "range":
      return Gt(e, ["meter", "progressbar", "scrollbar", "slider", "spinbutton"]);
    default:
      throw new TypeError("No knowledge about abstract role '".concat(t, "'. This is likely a bug :("));
  }
}
o(Ak, "hasAbstractRole");
function Ck(e, t) {
  var r7 = xt$1(e.querySelectorAll(t));
  return Xo(e, "aria-owns").forEach(function(n) {
    r7.push.apply(r7, xt$1(n.querySelectorAll(t)));
  }), r7;
}
o(Ck, "querySelectorAllSubtree");
function aae(e) {
  return gk(e) ? e.selectedOptions || Ck(e, "[selected]") : Ck(e, '[aria-selected="true"]');
}
o(aae, "querySelectedOptions");
function lae(e) {
  return Gt(e, ["none", "presentation"]);
}
o(lae, "isMarkedPresentational");
function uae(e) {
  return Tw(e);
}
o(uae, "isNativeHostLanguageTextAlternativeElement");
function cae(e) {
  return Gt(e, ["button", "cell", "checkbox", "columnheader", "gridcell", "heading", "label", "legend", "link", "menuitem", "menuitemcheckbox", "menuitemradio", "option", "radio", "row", "rowheader", "switch", "tab", "tooltip", "treeitem"]);
}
o(cae, "allowsNameFromContent");
function dae(e) {
  return false;
}
o(dae, "isDescendantOfNativeHostLanguageTextAlternativeElement");
function pae(e) {
  return Gs(e) || Ek(e) ? e.value : e.textContent || "";
}
o(pae, "getValueOfTextbox");
function Pk(e) {
  var t = e.getPropertyValue("content");
  return /^["'].*["']$/.test(t) ? t.slice(1, -1) : "";
}
o(Pk, "getTextualContent");
function Ok(e) {
  var t = De(e);
  return t === "button" || t === "input" && e.getAttribute("type") !== "hidden" || t === "meter" || t === "output" || t === "progress" || t === "select" || t === "textarea";
}
o(Ok, "isLabelableElement");
function qk(e) {
  if (Ok(e))
    return e;
  var t = null;
  return e.childNodes.forEach(function(r7) {
    if (t === null && _e$1(r7)) {
      var n = qk(r7);
      n !== null && (t = n);
    }
  }), t;
}
o(qk, "findLabelableElement");
function fae(e) {
  if (e.control !== void 0)
    return e.control;
  var t = e.getAttribute("for");
  return t !== null ? e.ownerDocument.getElementById(t) : qk(e);
}
o(fae, "getControlOfLabel");
function mae(e) {
  var t = e.labels;
  if (t === null)
    return t;
  if (t !== void 0)
    return xt$1(t);
  if (!Ok(e))
    return null;
  var r7 = e.ownerDocument;
  return xt$1(r7.querySelectorAll("label")).filter(function(n) {
    return fae(n) === e;
  });
}
o(mae, "getLabels");
function hae(e) {
  var t = e.assignedNodes();
  return t.length === 0 ? xt$1(e.childNodes) : t;
}
o(hae, "getSlotContents");
function qp(e) {
  var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, r7 = new hk(), n = xk(e), i = t.compute, s = i === void 0 ? "name" : i, a = t.computedStyleSupportsPseudoElements, l = a === void 0 ? t.getComputedStyle !== void 0 : a, u = t.getComputedStyle, c = u === void 0 ? n.getComputedStyle.bind(n) : u, d = t.hidden, p5 = d === void 0 ? false : d;
  function f(g, w5) {
    var E = "";
    if (_e$1(g) && l) {
      var R = c(g, "::before"), S = Pk(R);
      E = "".concat(S, " ").concat(E);
    }
    var P = Rk(g) ? hae(g) : xt$1(g.childNodes).concat(Xo(g, "aria-owns"));
    if (P.forEach(function(O) {
      var L = v5(O, {
        isEmbeddedInLabel: w5.isEmbeddedInLabel,
        isReferenced: false,
        recursion: true
      }), q = _e$1(O) ? c(O).getPropertyValue("display") : "inline", D = q !== "inline" ? " " : "";
      E += "".concat(D).concat(L).concat(D);
    }), _e$1(g) && l) {
      var _5 = c(g, "::after"), C5 = Pk(_5);
      E = "".concat(E, " ").concat(C5);
    }
    return E.trim();
  }
  o(f, "computeMiscTextAlternative");
  function m(g, w5) {
    var E = g.getAttributeNode(w5);
    return E !== null && !r7.has(E) && E.value.trim() !== "" ? (r7.add(E), E.value) : null;
  }
  o(m, "useAttribute");
  function h5(g) {
    return _e$1(g) ? m(g, "title") : null;
  }
  o(h5, "computeTooltipAttributeValue");
  function b(g) {
    if (!_e$1(g))
      return null;
    if (wk(g)) {
      r7.add(g);
      for (var w5 = xt$1(g.childNodes), E = 0; E < w5.length; E += 1) {
        var R = w5[E];
        if (Tk(R))
          return v5(R, {
            isEmbeddedInLabel: false,
            isReferenced: false,
            recursion: false
          });
      }
    } else if (vk(g)) {
      r7.add(g);
      for (var S = xt$1(g.childNodes), P = 0; P < S.length; P += 1) {
        var _5 = S[P];
        if (Tw(_5))
          return v5(_5, {
            isEmbeddedInLabel: false,
            isReferenced: false,
            recursion: false
          });
      }
    } else if (Sk(g)) {
      r7.add(g);
      for (var C5 = xt$1(g.childNodes), O = 0; O < C5.length; O += 1) {
        var L = C5[O];
        if (_k(L))
          return L.textContent;
      }
      return null;
    } else if (De(g) === "img" || De(g) === "area") {
      var q = m(g, "alt");
      if (q !== null)
        return q;
    } else if (bk(g)) {
      var D = m(g, "label");
      if (D !== null)
        return D;
    }
    if (Gs(g) && (g.type === "button" || g.type === "submit" || g.type === "reset")) {
      var H = m(g, "value");
      if (H !== null)
        return H;
      if (g.type === "submit")
        return "Submit";
      if (g.type === "reset")
        return "Reset";
    }
    var M7 = mae(g);
    if (M7 !== null && M7.length !== 0)
      return r7.add(g), xt$1(M7).map(function(Y) {
        return v5(Y, {
          isEmbeddedInLabel: true,
          isReferenced: false,
          recursion: true
        });
      }).filter(function(Y) {
        return Y.length > 0;
      }).join(" ");
    if (Gs(g) && g.type === "image") {
      var U = m(g, "alt");
      if (U !== null)
        return U;
      var N = m(g, "title");
      return N !== null ? N : "Submit Query";
    }
    if (Gt(g, ["button"])) {
      var W = f(g, {
        isEmbeddedInLabel: false
      });
      if (W !== "")
        return W;
    }
    return null;
  }
  o(b, "computeElementTextAlternative");
  function v5(g, w5) {
    if (r7.has(g))
      return "";
    if (!p5 && iae(g, c) && !w5.isReferenced)
      return r7.add(g), "";
    var E = _e$1(g) ? g.getAttributeNode("aria-labelledby") : null, R = E !== null && !r7.has(E) ? Xo(g, "aria-labelledby") : [];
    if (s === "name" && !w5.isReferenced && R.length > 0)
      return r7.add(E), R.map(function(q) {
        return v5(q, {
          isEmbeddedInLabel: w5.isEmbeddedInLabel,
          isReferenced: true,
          // this isn't recursion as specified, otherwise we would skip
          // `aria-label` in
          // <input id="myself" aria-label="foo" aria-labelledby="myself"
          recursion: false
        });
      }).join(" ");
    var S = w5.recursion && sae(g) && s === "name";
    if (!S) {
      var P = (_e$1(g) && g.getAttribute("aria-label") || "").trim();
      if (P !== "" && s === "name")
        return r7.add(g), P;
      if (!lae(g)) {
        var _5 = b(g);
        if (_5 !== null)
          return r7.add(g), _5;
      }
    }
    if (Gt(g, ["menu"]))
      return r7.add(g), "";
    if (S || w5.isEmbeddedInLabel || w5.isReferenced) {
      if (Gt(g, ["combobox", "listbox"])) {
        r7.add(g);
        var C5 = aae(g);
        return C5.length === 0 ? Gs(g) ? g.value : "" : xt$1(C5).map(function(q) {
          return v5(q, {
            isEmbeddedInLabel: w5.isEmbeddedInLabel,
            isReferenced: false,
            recursion: true
          });
        }).join(" ");
      }
      if (Ak(g, "range"))
        return r7.add(g), g.hasAttribute("aria-valuetext") ? g.getAttribute("aria-valuetext") : g.hasAttribute("aria-valuenow") ? g.getAttribute(
          "aria-valuenow"
        ) : g.getAttribute("value") || "";
      if (Gt(g, ["textbox"]))
        return r7.add(g), pae(g);
    }
    if (cae(g) || _e$1(g) && w5.isReferenced || uae(g) || dae()) {
      var O = f(g, {
        isEmbeddedInLabel: w5.isEmbeddedInLabel
      });
      if (O !== "")
        return r7.add(g), O;
    }
    if (g.nodeType === g.TEXT_NODE)
      return r7.add(g), g.textContent || "";
    if (w5.recursion)
      return r7.add(g), f(g, {
        isEmbeddedInLabel: w5.isEmbeddedInLabel
      });
    var L = h5(g);
    return L !== null ? (r7.add(g), L) : (r7.add(g), "");
  }
  return o(v5, "computeTextAlternative"), oae(v5(e, {
    isEmbeddedInLabel: false,
    // by spec computeAccessibleDescription starts with the referenced elements as roots
    isReferenced: s === "description",
    recursion: false
  }));
}
o(qp, "computeTextAlternative");
function Ws(e) {
  "@babel/helpers - typeof";
  return Ws = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t) {
    return typeof t;
  } : function(t) {
    return t && typeof Symbol == "function" && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
  }, Ws(e);
}
o(Ws, "_typeof");
function Ik(e, t) {
  var r7 = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var n = Object.getOwnPropertySymbols(e);
    t && (n = n.filter(function(i) {
      return Object.getOwnPropertyDescriptor(e, i).enumerable;
    })), r7.push.apply(r7, n);
  }
  return r7;
}
o(Ik, "ownKeys");
function Mk(e) {
  for (var t = 1; t < arguments.length; t++) {
    var r7 = arguments[t] != null ? arguments[t] : {};
    t % 2 ? Ik(Object(r7), true).forEach(function(n) {
      yae(e, n, r7[n]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r7)) : Ik(Object(r7)).forEach(function(n) {
      Object.defineProperty(e, n, Object.getOwnPropertyDescriptor(r7, n));
    });
  }
  return e;
}
o(Mk, "_objectSpread");
function yae(e, t, r7) {
  return t = bae(t), t in e ? Object.defineProperty(e, t, { value: r7, enumerable: true, configurable: true, writable: true }) : e[t] = r7, e;
}
o(yae, "_defineProperty");
function bae(e) {
  var t = gae(e, "string");
  return Ws(t) === "symbol" ? t : String(t);
}
o(bae, "_toPropertyKey");
function gae(e, t) {
  if (Ws(e) !== "object" || e === null) return e;
  var r7 = e[Symbol.toPrimitive];
  if (r7 !== void 0) {
    var n = r7.call(e, t || "default");
    if (Ws(n) !== "object") return n;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (t === "string" ? String : Number)(e);
}
o(gae, "_toPrimitive");
function Ip(e) {
  var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, r7 = Xo(e, "aria-describedby").map(function(i) {
    return qp(i, Mk(Mk({}, t), {}, {
      compute: "description"
    }));
  }).join(" ");
  if (r7 === "") {
    var n = e.getAttribute("title");
    r7 = n === null ? "" : n;
  }
  return r7;
}
o(Ip, "computeAccessibleDescription");
function vae(e) {
  return Gt(e, ["caption", "code", "deletion", "emphasis", "generic", "insertion", "paragraph", "presentation", "strong", "subscript", "superscript"]);
}
o(vae, "prohibitsNaming");
function Ys(e) {
  var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  return vae(e) ? "" : qp(e, t);
}
o(Ys, "computeAccessibleName");
var lt$1 = Ne(FD()), GD = Ne(DD());
function WD(e) {
  return e.replace(/</g, "&lt;").replace(/>/g, "&gt;");
}
o(WD, "escapeHTML");
var oye = /* @__PURE__ */ o((e, t, r7, n, i, s, a) => {
  let l = n + r7.indent, u = r7.colors;
  return e.map((c) => {
    let d = t[c], p5 = a(d, r7, l, i, s);
    return typeof d != "string" && (p5.indexOf(`
`) !== -1 && (p5 = r7.spacingOuter + l + p5 + r7.spacingOuter + n), p5 = "{" + p5 + "}"), r7.spacingInner + n + u.prop.open + c + u.prop.close + "=" + u.value.open + p5 + u.value.close;
  }).join("");
}, "printProps"), iye = 3, sye = /* @__PURE__ */ o((e, t, r7, n, i, s) => e.map((a) => {
  let l = typeof a == "string" ? YD(a, t) : s(a, t, r7, n, i);
  return l === "" && typeof a == "object" && a !== null && a.nodeType !== iye ? "" : t.spacingOuter + r7 + l;
}).join(""), "printChildren"), YD = /* @__PURE__ */ o((e, t) => {
  let r7 = t.colors.content;
  return r7.open + WD(e) + r7.close;
}, "printText"), aye = /* @__PURE__ */ o((e, t) => {
  let r7 = t.colors.comment;
  return r7.open + "<!--" + WD(e) + "-->" + r7.close;
}, "printComment"), lye = /* @__PURE__ */ o((e, t, r7, n, i) => {
  let s = n.colors.tag;
  return s.open + "<" + e + (t && s.close + t + n.spacingOuter + i + s.open) + (r7 ? ">" + s.close + r7 + n.spacingOuter + i + s.open + "</" + e : (t && !n.min ? "" : " ") + "/") + ">" + s.close;
}, "printElement"), uye = /* @__PURE__ */ o((e, t) => {
  let r7 = t.colors.tag;
  return r7.open + "<" + e + r7.close + " …" + r7.open + " />" + r7.close;
}, "printElementAsLeaf"), cye = 1, KD = 3, XD = 8, JD = 11, dye = /^((HTML|SVG)\w*)?Element$/, QD = /* @__PURE__ */ o((e) => {
  let {
    tagName: t
  } = e;
  return !!(typeof t == "string" && t.includes("-") || typeof e.hasAttribute == "function" && e.hasAttribute("is"));
}, "isCustomElement"), pye = /* @__PURE__ */ o((e) => {
  let t = e.constructor.name, {
    nodeType: r7
  } = e;
  return r7 === cye && (dye.test(t) || QD(e)) || r7 === KD && t === "Text" || r7 === XD && t === "Comment" || r7 === JD && t === "DocumentFragment";
}, "testNode");
function fye(e) {
  return e.nodeType === KD;
}
o(fye, "nodeIsText");
function mye(e) {
  return e.nodeType === XD;
}
o(mye, "nodeIsComment");
function zw(e) {
  return e.nodeType === JD;
}
o(zw, "nodeIsFragment");
function hye(e) {
  return {
    test: /* @__PURE__ */ o((t) => {
      var r7;
      return ((t == null || (r7 = t.constructor) == null ? void 0 : r7.name) || QD(t)) && pye(t);
    }, "test"),
    serialize: /* @__PURE__ */ o((t, r7, n, i, s, a) => {
      if (fye(t))
        return YD(t.data, r7);
      if (mye(t))
        return aye(t.data, r7);
      let l = zw(t) ? "DocumentFragment" : t.tagName.toLowerCase();
      return ++i > r7.maxDepth ? uye(l, r7) : lye(l, oye(zw(t) ? [] : Array.from(t.attributes).map((u) => u.name).sort(), zw(t) ? {} : Array.from(
        t.attributes
      ).reduce((u, c) => (u[c.name] = c.value, u), {}), r7, n + r7.indent, i, s, a), sye(Array.prototype.slice.call(t.childNodes || t.children).filter(e), r7, n + r7.indent, i, s, a), r7, n);
    }, "serialize")
  };
}
o(hye, "createDOMElementFilter");
var ZD = null, rT = null, nT = null;
try {
  let e = module && module.require;
  rT = e.call(module, "fs").readFileSync, nT = e.call(module, "@babel/code-frame").codeFrameColumns, ZD = e.call(module, "chalk");
} catch {
}
function yye(e) {
  let t = e.indexOf("(") + 1, r7 = e.indexOf(")"), n = e.slice(t, r7), i = n.split(":"), [s, a, l] = [i[0], parseInt(i[1], 10), parseInt(
    i[2],
    10
  )], u = "";
  try {
    u = rT(s, "utf-8");
  } catch {
    return "";
  }
  let c = nT(u, {
    start: {
      line: a,
      column: l
    }
  }, {
    highlightCode: true,
    linesBelow: 0
  });
  return ZD.dim(n) + `
` + c + `
`;
}
o(yye, "getCodeFrame");
function bye() {
  if (!rT || !nT)
    return "";
  let t = new Error().stack.split(`
`).slice(1).find((r7) => !r7.includes("node_modules/"));
  return yye(t);
}
o(bye, "getUserCodeFrame");
var e$ = 3;
function Gw() {
  return typeof jest < "u" && jest !== null ? (
    // legacy timers
    setTimeout._isMockFunction === true || // modern timers
    // eslint-disable-next-line prefer-object-has-own -- not supported by our support matrix
    Object.prototype.hasOwnProperty.call(setTimeout, "clock")
  ) : false;
}
o(Gw, "jestFakeTimersAreEnabled");
function oT() {
  if (typeof window > "u")
    throw new Error("Could not find default container");
  return window.document;
}
o(oT, "getDocument");
function t$(e) {
  if (e.defaultView)
    return e.defaultView;
  if (e.ownerDocument && e.ownerDocument.defaultView)
    return e.ownerDocument.defaultView;
  if (e.window)
    return e.window;
  throw e.ownerDocument && e.ownerDocument.defaultView === null ? new Error("It looks like the window object is not available for the provided node.") : e.then instanceof Function ? new Error("It looks like you passed a Promise object instead of a DOM node. Did you do something like `fireEvent.click(screen.findBy...` when you meant to use a `getBy` query `fireEvent.click(screen.getBy...`, or await the findBy query `fireEvent.click(await screen.findBy...`?") : Array.isArray(e) ? new Error("It looks like you passed an Array instead of a DOM node. Did you do something like `fireEvent.click(screen.getAllBy...` when you meant to use a `getBy` query `fireEvent.click(screen.getBy...`?") : typeof e.debug == "function" && typeof e.logTestingPlaygroundURL == "function" ? new Error("It looks like you passed a `screen` object. Did you do something like `fireEvent.click(screen, ...` when you meant to use a query, e.g. `fireEvent.click(screen.getBy..., `?") : new Error("The given node is not an Element, the node type is: " + typeof e + ".");
}
o(t$, "getWindowFromNode");
function gr$1(e) {
  if (!e || typeof e.querySelector != "function" || typeof e.querySelectorAll != "function")
    throw new TypeError("Expected container to be an Element, a Document or a DocumentFragment but got " + t(e) + ".");
  function t(r7) {
    return typeof r7 == "object" ? r7 === null ? "null" : r7.constructor.name : typeof r7;
  }
  o(t, "getTypeName");
}
o(gr$1, "checkContainerType");
var gye = /* @__PURE__ */ o(() => {
  if (typeof process > "u")
    return false;
  let e;
  try {
    var t;
    let r7 = (t = define_process_env_default) == null ? void 0 : t.COLORS;
    r7 && (e = JSON.parse(r7));
  } catch {
  }
  return typeof e == "boolean" ? e : process.versions !== void 0 && process.versions.node !== void 0;
}, "shouldHighlight"), {
  DOMCollection: vye
} = ta.plugins, Eye = 1, xye = 8;
function wye(e) {
  return e.nodeType !== xye && (e.nodeType !== Eye || !e.matches(ie$1().defaultIgnore));
}
o(wye, "filterCommentsAndDefaultIgnoreTagsTags");
function Qs(e, t, r7) {
  if (r7 === void 0 && (r7 = {}), e || (e = oT().body), typeof t != "number" && (t = typeof process < "u" && typeof define_process_env_default < "u" && define_process_env_default.DEBUG_PRINT_LIMIT || 7e3), t === 0)
    return "";
  e.documentElement && (e = e.documentElement);
  let n = typeof e;
  if (n === "object" ? n = e.constructor.name : e = {}, !("outerHTML" in e))
    throw new TypeError("Expected an element or document but got " + n);
  let {
    filterNode: i = wye,
    ...s
  } = r7, a = ta.format(e, {
    plugins: [hye(i), vye],
    printFunctionName: false,
    highlight: gye(),
    ...s
  });
  return t !== void 0 && e.outerHTML.length > t ? a.slice(0, t) + "..." : a;
}
o(Qs, "prettyDOM");
var Ww = /* @__PURE__ */ o(function() {
  let e = bye();
  console.log(e ? Qs(...arguments) + `

` + e : Qs(...arguments));
}, "logDOM"), qn = {
  testIdAttribute: "data-testid",
  asyncUtilTimeout: 1e3,
  // asyncWrapper and advanceTimersWrapper is to support React's async `act` function.
  // forcing react-testing-library to wrap all async functions would've been
  // a total nightmare (consider wrapping every findBy* query and then also
  // updating `within` so those would be wrapped too. Total nightmare).
  // so we have this config option that's really only intended for
  // react-testing-library to use. For that reason, this feature will remain
  // undocumented.
  asyncWrapper: /* @__PURE__ */ o((e) => e(), "asyncWrapper"),
  unstable_advanceTimersWrapper: /* @__PURE__ */ o((e) => e(), "unstable_advanceTimersWrapper"),
  eventWrapper: /* @__PURE__ */ o((e) => e(), "eventWrapper"),
  // default value for the `hidden` option in `ByRole` queries
  defaultHidden: false,
  // default value for the `ignore` option in `ByText` queries
  defaultIgnore: "script, style",
  // showOriginalStackTrace flag to show the full error stack traces for async errors
  showOriginalStackTrace: false,
  // throw errors w/ suggestions for better queries. Opt in so off by default.
  throwSuggestions: false,
  // called when getBy* queries fail. (message, container) => Error
  getElementError(e, t) {
    let r7 = Qs(t), n = new Error([e, "Ignored nodes: comments, " + qn.defaultIgnore + `
` + r7].filter(Boolean).join(`

`));
    return n.name = "TestingLibraryElementError", n;
  },
  _disableExpensiveErrorDiagnostics: false,
  computedStyleSupportsPseudoElements: false
};
function Tye(e) {
  try {
    return qn._disableExpensiveErrorDiagnostics = true, e();
  } finally {
    qn._disableExpensiveErrorDiagnostics = false;
  }
}
o(Tye, "runWithExpensiveErrorDiagnosticsDisabled");
function Rye(e) {
  typeof e == "function" && (e = e(qn)), qn = {
    ...qn,
    ...e
  };
}
o(Rye, "configure");
function ie$1() {
  return qn;
}
o(ie$1, "getConfig");
var Sye = ["button", "meter", "output", "progress", "select", "textarea", "input"];
function r$(e) {
  return Sye.includes(e.nodeName.toLowerCase()) ? "" : e.nodeType === e$ ? e.textContent : Array.from(e.childNodes).map((t) => r$(t)).join("");
}
o(r$, "getTextContent");
function Yw(e) {
  let t;
  return e.tagName.toLowerCase() === "label" ? t = r$(e) : t = e.value || e.textContent, t;
}
o(Yw, "getLabelContent");
function n$(e) {
  if (e.labels !== void 0) {
    var t;
    return (t = e.labels) != null ? t : [];
  }
  if (!_ye(e)) return [];
  let r7 = e.ownerDocument.querySelectorAll("label");
  return Array.from(r7).filter((n) => n.control === e);
}
o(n$, "getRealLabels");
function _ye(e) {
  return /BUTTON|METER|OUTPUT|PROGRESS|SELECT|TEXTAREA/.test(e.tagName) || e.tagName === "INPUT" && e.getAttribute("type") !== "hidden";
}
o(_ye, "isLabelable");
function o$(e, t, r7) {
  let {
    selector: n = "*"
  } = r7 === void 0 ? {} : r7, i = t.getAttribute("aria-labelledby"), s = i ? i.split(" ") : [];
  return s.length ? s.map((a) => {
    let l = e.querySelector('[id="' + a + '"]');
    return l ? {
      content: Yw(l),
      formControl: null
    } : {
      content: "",
      formControl: null
    };
  }) : Array.from(n$(t)).map((a) => {
    let l = Yw(a), c = Array.from(a.querySelectorAll("button, input, meter, output, progress, select, textarea")).filter((d) => d.matches(n))[0];
    return {
      content: l,
      formControl: c
    };
  });
}
o(o$, "getLabels");
function i$(e) {
  if (e == null)
    throw new Error(
      // eslint-disable-next-line @typescript-eslint/restrict-template-expressions -- implicitly converting `T` to `string`
      "It looks like " + e + " was passed instead of a matcher. Did you do something like getByText(" + e + ")?"
    );
}
o(i$, "assertNotNullOrUndefined");
function ri(e, t, r7, n) {
  if (typeof e != "string")
    return false;
  i$(r7);
  let i = n(e);
  return typeof r7 == "string" || typeof r7 == "number" ? i.toLowerCase().includes(r7.toString().toLowerCase()) : typeof r7 == "function" ? r7(
    i,
    t
  ) : s$(r7, i);
}
o(ri, "fuzzyMatches");
function br$1(e, t, r7, n) {
  if (typeof e != "string")
    return false;
  i$(r7);
  let i = n(e);
  return r7 instanceof Function ? r7(i, t) : r7 instanceof RegExp ? s$(r7, i) : i === String(r7);
}
o(br$1, "matches");
function iT(e) {
  let {
    trim: t = true,
    collapseWhitespace: r7 = true
  } = e === void 0 ? {} : e;
  return (n) => {
    let i = n;
    return i = t ? i.trim() : i, i = r7 ? i.replace(/\s+/g, " ") : i, i;
  };
}
o(iT, "getDefaultNormalizer");
function Mn(e) {
  let {
    trim: t,
    collapseWhitespace: r7,
    normalizer: n
  } = e;
  if (!n)
    return iT({
      trim: t,
      collapseWhitespace: r7
    });
  if (typeof t < "u" || typeof r7 < "u")
    throw new Error('trim and collapseWhitespace are not supported with a normalizer. If you want to use the default trim and collapseWhitespace logic in your normalizer, use "getDefaultNormalizer({trim, collapseWhitespace})" and compose that into your normalizer');
  return n;
}
o(Mn, "makeNormalizer");
function s$(e, t) {
  let r7 = e.test(t);
  return e.global && e.lastIndex !== 0 && (console.warn("To match all elements we had to reset the lastIndex of the RegExp because the global flag is enabled. We encourage to remove the global flag from the RegExp."), e.lastIndex = 0), r7;
}
o(s$, "matchRegExp");
function ra(e) {
  return e.matches("input[type=submit], input[type=button], input[type=reset]") ? e.value : Array.from(e.childNodes).filter((t) => t.nodeType === e$ && !!t.textContent).map((t) => t.textContent).join("");
}
o(ra, "getNodeText");
var Cye = Pye(lt$1.elementRoles);
function a$(e) {
  return e.hidden === true || e.getAttribute("aria-hidden") === "true" || e.ownerDocument.defaultView.getComputedStyle(e).display === "none";
}
o(a$, "isSubtreeInaccessible");
function Mh(e, t) {
  t === void 0 && (t = {});
  let {
    isSubtreeInaccessible: r7 = a$
  } = t;
  if (e.ownerDocument.defaultView.getComputedStyle(e).visibility === "hidden")
    return true;
  let i = e;
  for (; i; ) {
    if (r7(i))
      return true;
    i = i.parentElement;
  }
  return false;
}
o(Mh, "isInaccessible");
function sT(e) {
  for (let {
    match: t,
    roles: r7
  } of Cye)
    if (t(e))
      return [...r7];
  return [];
}
o(sT, "getImplicitAriaRoles");
function Pye(e) {
  function t(a) {
    let {
      name: l,
      attributes: u
    } = a;
    return "" + l + u.map((c) => {
      let {
        name: d,
        value: p5,
        constraints: f = []
      } = c, m = f.indexOf("undefined") !== -1, h5 = f.indexOf("set") !== -1;
      return typeof p5 < "u" ? "[" + d + '="' + p5 + '"]' : m ? ":not([" + d + "])" : h5 ? "[" + d + "]:not([" + d + '=""])' : "[" + d + "]";
    }).join("");
  }
  o(t, "makeElementSelector");
  function r7(a) {
    let {
      attributes: l = []
    } = a;
    return l.length;
  }
  o(r7, "getSelectorSpecificity");
  function n(a, l) {
    let {
      specificity: u
    } = a, {
      specificity: c
    } = l;
    return c - u;
  }
  o(n, "bySelectorSpecificity");
  function i(a) {
    let {
      attributes: l = []
    } = a, u = l.findIndex((d) => d.value && d.name === "type" && d.value === "text");
    u >= 0 && (l = [...l.slice(0, u), ...l.slice(u + 1)]);
    let c = t({
      ...a,
      attributes: l
    });
    return (d) => u >= 0 && d.type !== "text" ? false : d.matches(c);
  }
  o(i, "match");
  let s = [];
  for (let [a, l] of e.entries())
    s = [...s, {
      match: i(a),
      roles: Array.from(l),
      specificity: r7(a)
    }];
  return s.sort(n);
}
o(Pye, "buildElementRoleList");
function l$(e, t) {
  let {
    hidden: r7 = false
  } = t === void 0 ? {} : t;
  function n(i) {
    return [i, ...Array.from(i.children).reduce((s, a) => [...s, ...n(a)], [])];
  }
  return o(n, "flattenDOM"), n(e).filter((i) => r7 === false ? Mh(i) === false : true).reduce((i, s) => {
    let a = [];
    return s.hasAttribute("role") ? a = s.getAttribute("role").split(" ").slice(0, 1) : a = sT(s), a.reduce((l, u) => Array.isArray(l[u]) ? {
      ...l,
      [u]: [...l[u], s]
    } : {
      ...l,
      [u]: [s]
    }, i);
  }, {});
}
o(l$, "getRoles");
function u$(e, t) {
  let {
    hidden: r7,
    includeDescription: n
  } = t, i = l$(e, {
    hidden: r7
  });
  return Object.entries(i).filter((s) => {
    let [a] = s;
    return a !== "generic";
  }).map((s) => {
    let [a, l] = s, u = "-".repeat(50), c = l.map((d) => {
      let p5 = 'Name "' + Ys(d, {
        computedStyleSupportsPseudoElements: ie$1().computedStyleSupportsPseudoElements
      }) + `":
`, f = Qs(d.cloneNode(false));
      if (n) {
        let m = 'Description "' + Ip(d, {
          computedStyleSupportsPseudoElements: ie$1().computedStyleSupportsPseudoElements
        }) + `":
`;
        return "" + p5 + m + f;
      }
      return "" + p5 + f;
    }).join(`

`);
    return a + `:

` + c + `

` + u;
  }).join(`
`);
}
o(u$, "prettyRoles");
var Aye = /* @__PURE__ */ o(function(e, t) {
  let {
    hidden: r7 = false
  } = t === void 0 ? {} : t;
  return console.log(u$(e, {
    hidden: r7
  }));
}, "logRoles");
function Oye(e) {
  return e.tagName === "OPTION" ? e.selected : na(e, "aria-selected");
}
o(Oye, "computeAriaSelected");
function qye(e) {
  return e.getAttribute("aria-busy") === "true";
}
o(qye, "computeAriaBusy");
function Iye(e) {
  if (!("indeterminate" in e && e.indeterminate))
    return "checked" in e ? e.checked : na(e, "aria-checked");
}
o(Iye, "computeAriaChecked");
function Mye(e) {
  return na(e, "aria-pressed");
}
o(Mye, "computeAriaPressed");
function Nye(e) {
  var t, r7;
  return (t = (r7 = na(e, "aria-current")) != null ? r7 : e.getAttribute("aria-current")) != null ? t : false;
}
o(Nye, "computeAriaCurrent");
function jye(e) {
  return na(e, "aria-expanded");
}
o(jye, "computeAriaExpanded");
function na(e, t) {
  let r7 = e.getAttribute(t);
  if (r7 === "true")
    return true;
  if (r7 === "false")
    return false;
}
o(na, "checkBooleanAttribute");
function kye(e) {
  let t = {
    H1: 1,
    H2: 2,
    H3: 3,
    H4: 4,
    H5: 5,
    H6: 6
  };
  return e.getAttribute("aria-level") && Number(e.getAttribute("aria-level")) || t[e.tagName];
}
o(kye, "computeHeadingLevel");
function Lye(e) {
  let t = e.getAttribute("aria-valuenow");
  return t === null ? void 0 : +t;
}
o(Lye, "computeAriaValueNow");
function Fye(e) {
  let t = e.getAttribute("aria-valuemax");
  return t === null ? void 0 : +t;
}
o(Fye, "computeAriaValueMax");
function Dye(e) {
  let t = e.getAttribute("aria-valuemin");
  return t === null ? void 0 : +t;
}
o(Dye, "computeAriaValueMin");
function $ye(e) {
  let t = e.getAttribute("aria-valuetext");
  return t === null ? void 0 : t;
}
o($ye, "computeAriaValueText");
var $D = iT();
function Bye(e) {
  return e.replace(/[.*+\-?^${}()|[\]\\]/g, "\\$&");
}
o(Bye, "escapeRegExp");
function BD(e) {
  return new RegExp(Bye(e.toLowerCase()), "i");
}
o(BD, "getRegExpMatcher");
function tn$1(e, t, r7, n) {
  let {
    variant: i,
    name: s
  } = n, a = "", l = {}, u = [["Role", "TestId"].includes(e) ? r7 : BD(r7)];
  s && (l.name = BD(s)), e === "Role" && Mh(t) && (l.hidden = true, a = `Element is inaccessible. This means that the element and all its children are invisible to screen readers.
    If you are using the aria-hidden prop, make sure this is the right choice for your case.
    `), Object.keys(l).length > 0 && u.push(l);
  let c = i + "By" + e;
  return {
    queryName: e,
    queryMethod: c,
    queryArgs: u,
    variant: i,
    warning: a,
    toString() {
      a && console.warn(a);
      let [d, p5] = u;
      return d = typeof d == "string" ? "'" + d + "'" : d, p5 = p5 ? ", { " + Object.entries(p5).map((f) => {
        let [m, h5] = f;
        return m + ": " + h5;
      }).join(", ") + " }" : "", c + "(" + d + p5 + ")";
    }
  };
}
o(tn$1, "makeSuggestion");
function rn$1(e, t, r7) {
  return r7 && (!t || t.toLowerCase() === e.toLowerCase());
}
o(rn$1, "canSuggest");
function qh(e, t, r7) {
  var n, i;
  if (t === void 0 && (t = "get"), e.matches(ie$1().defaultIgnore))
    return;
  let s = (n = e.getAttribute("role")) != null ? n : (i = sT(e)) == null ? void 0 : i[0];
  if (s !== "generic" && rn$1("Role", r7, s))
    return tn$1("Role", e, s, {
      variant: t,
      name: Ys(e, {
        computedStyleSupportsPseudoElements: ie$1().computedStyleSupportsPseudoElements
      })
    });
  let a = o$(document, e).map((f) => f.content).join(" ");
  if (rn$1("LabelText", r7, a))
    return tn$1("LabelText", e, a, {
      variant: t
    });
  let l = e.getAttribute("placeholder");
  if (rn$1("PlaceholderText", r7, l))
    return tn$1("PlaceholderText", e, l, {
      variant: t
    });
  let u = $D(ra(e));
  if (rn$1("Text", r7, u))
    return tn$1("Text", e, u, {
      variant: t
    });
  if (rn$1("DisplayValue", r7, e.value))
    return tn$1("DisplayValue", e, $D(e.value), {
      variant: t
    });
  let c = e.getAttribute("alt");
  if (rn$1("AltText", r7, c))
    return tn$1("AltText", e, c, {
      variant: t
    });
  let d = e.getAttribute("title");
  if (rn$1("Title", r7, d))
    return tn$1("Title", e, d, {
      variant: t
    });
  let p5 = e.getAttribute(ie$1().testIdAttribute);
  if (rn$1("TestId", r7, p5))
    return tn$1("TestId", e, p5, {
      variant: t
    });
}
o(qh, "getSuggestedQuery");
function Ah(e, t) {
  e.stack = t.stack.replace(t.message, e.message);
}
o(Ah, "copyStackTrace");
function Hye(e, t) {
  let {
    container: r7 = oT(),
    timeout: n = ie$1().asyncUtilTimeout,
    showOriginalStackTrace: i = ie$1().showOriginalStackTrace,
    stackTraceError: s,
    interval: a = 50,
    onTimeout: l = /* @__PURE__ */ o((c) => (Object.defineProperty(c, "message", {
      value: ie$1().getElementError(c.message, r7).message
    }), c), "onTimeout"),
    mutationObserverOptions: u = {
      subtree: true,
      childList: true,
      attributes: true,
      characterData: true
    }
  } = t;
  if (typeof e != "function")
    throw new TypeError("Received `callback` arg must be a function");
  return new Promise(async (c, d) => {
    let p5, f, m, h5 = false, b = "idle", v5 = setTimeout(S, n), g = Gw();
    if (g) {
      let {
        unstable_advanceTimersWrapper: P
      } = ie$1();
      for (R(); !h5; ) {
        if (!Gw()) {
          let _5 = new Error("Changed from using fake timers to real timers while using waitFor. This is not allowed and will result in very strange behavior. Please ensure you're awaiting all async things your test is doing before changing to real timers. For more info, please go to https://github.com/testing-library/dom-testing-library/issues/830");
          i || Ah(_5, s), d(_5);
          return;
        }
        if (await P(async () => {
          jest.advanceTimersByTime(a);
        }), h5)
          break;
        R();
      }
    } else {
      try {
        gr$1(r7);
      } catch (_5) {
        d(_5);
        return;
      }
      f = setInterval(E, a);
      let {
        MutationObserver: P
      } = t$(r7);
      m = new P(E), m.observe(r7, u), R();
    }
    function w5(P, _5) {
      h5 = true, clearTimeout(v5), g || (clearInterval(f), m.disconnect()), P ? d(P) : c(_5);
    }
    o(w5, "onDone");
    function E() {
      if (Gw()) {
        let P = new Error("Changed from using real timers to fake timers while using waitFor. This is not allowed and will result in very strange behavior. Please ensure you're awaiting all async things your test is doing before changing to fake timers. For more info, please go to https://github.com/testing-library/dom-testing-library/issues/830");
        return i || Ah(P, s), d(P);
      } else
        return R();
    }
    o(E, "checkRealTimersCallback");
    function R() {
      if (b !== "pending")
        try {
          let P = Tye(e);
          typeof P?.then == "function" ? (b = "pending", P.then((_5) => {
            b = "resolved", w5(null, _5);
          }, (_5) => {
            b = "rejected", p5 = _5;
          })) : w5(null, P);
        } catch (P) {
          p5 = P;
        }
    }
    o(R, "checkCallback");
    function S() {
      let P;
      p5 ? (P = p5, !i && P.name === "TestingLibraryElementError" && Ah(P, s)) : (P = new Error("Timed out in waitFor."), i || Ah(P, s)), w5(l(
        P
      ), null);
    }
    o(S, "handleTimeout");
  });
}
o(Hye, "waitFor");
function aT(e, t) {
  let r7 = new Error("STACK_TRACE_MESSAGE");
  return ie$1().asyncWrapper(() => Hye(e, {
    stackTraceError: r7,
    ...t
  }));
}
o(aT, "waitForWrapper");
function Nh(e, t) {
  return ie$1().getElementError(e, t);
}
o(Nh, "getElementError");
function jh(e, t) {
  return Nh(e + "\n\n(If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).", t);
}
o(jh, "getMultipleElementsFoundError");
function Nn(e, t, r7, n) {
  let {
    exact: i = true,
    collapseWhitespace: s,
    trim: a,
    normalizer: l
  } = n === void 0 ? {} : n, u = i ? br$1 : ri, c = Mn({
    collapseWhitespace: s,
    trim: a,
    normalizer: l
  });
  return Array.from(t.querySelectorAll("[" + e + "]")).filter((d) => u(d.getAttribute(e), d, r7, c));
}
o(Nn, "queryAllByAttribute");
function c$(e, t, r7, n) {
  let i = Nn(e, t, r7, n);
  if (i.length > 1)
    throw jh("Found multiple elements by [" + e + "=" + r7 + "]", t);
  return i[0] || null;
}
o(c$, "queryByAttribute");
function ei(e, t) {
  return function(r7) {
    for (var n = arguments.length, i = new Array(n > 1 ? n - 1 : 0), s = 1; s < n; s++)
      i[s - 1] = arguments[s];
    let a = e(r7, ...i);
    if (a.length > 1) {
      let l = a.map((u) => Nh(null, u).message).join(`

`);
      throw jh(t(r7, ...i) + `

Here are the matching elements:

` + l, r7);
    }
    return a[0] || null;
  };
}
o(ei, "makeSingleQuery");
function d$(e, t) {
  return ie$1().getElementError(`A better query is available, try this:
` + e.toString() + `
`, t);
}
o(d$, "getSuggestionError");
function lT(e, t) {
  return function(r7) {
    for (var n = arguments.length, i = new Array(n > 1 ? n - 1 : 0), s = 1; s < n; s++)
      i[s - 1] = arguments[s];
    let a = e(r7, ...i);
    if (!a.length)
      throw ie$1().getElementError(t(r7, ...i), r7);
    return a;
  };
}
o(lT, "makeGetAllQuery");
function ti(e) {
  return (t, r7, n, i) => aT(() => e(t, r7, n), {
    container: t,
    ...i
  });
}
o(ti, "makeFindQuery");
var nn$1 = /* @__PURE__ */ o((e, t, r7) => function(n) {
  for (var i = arguments.length, s = new Array(i > 1 ? i - 1 : 0), a = 1; a < i; a++)
    s[a - 1] = arguments[a];
  let l = e(n, ...s), [{
    suggest: u = ie$1().throwSuggestions
  } = {}] = s.slice(-1);
  if (l && u) {
    let c = qh(l, r7);
    if (c && !t.endsWith(c.queryName))
      throw d$(c.toString(), n);
  }
  return l;
}, "wrapSingleQueryWithSuggestion"), mt$1 = /* @__PURE__ */ o((e, t, r7) => function(n) {
  for (var i = arguments.length, s = new Array(i > 1 ? i - 1 : 0), a = 1; a < i; a++)
    s[a - 1] = arguments[a];
  let l = e(n, ...s), [{
    suggest: u = ie$1().throwSuggestions
  } = {}] = s.slice(-1);
  if (l.length && u) {
    let c = [...new Set(l.map((d) => {
      var p5;
      return (p5 = qh(d, r7)) == null ? void 0 : p5.toString();
    }))];
    if (
      // only want to suggest if all the els have the same suggestion.
      c.length === 1 && !t.endsWith(
        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion -- TODO: Can this be null at runtime?
        qh(l[0], r7).queryName
      )
    )
      throw d$(c[0], n);
  }
  return l;
}, "wrapAllByQueryWithSuggestion");
function vr$1(e, t, r7) {
  let n = nn$1(ei(e, t), e.name, "query"), i = lT(e, r7), s = ei(i, t), a = nn$1(s, e.name, "get"), l = mt$1(i, e.name.replace("query", "get"), "getAll"), u = ti(mt$1(i, e.name, "findAll")), c = ti(nn$1(s, e.name, "find"));
  return [n, l, a, u, c];
}
o(vr$1, "buildQueries");
var Uye = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  getElementError: Nh,
  wrapAllByQueryWithSuggestion: mt$1,
  wrapSingleQueryWithSuggestion: nn$1,
  getMultipleElementsFoundError: jh,
  queryAllByAttribute: Nn,
  queryByAttribute: c$,
  makeSingleQuery: ei,
  makeGetAllQuery: lT,
  makeFindQuery: ti,
  buildQueries: vr$1
});
function Vye(e) {
  return Array.from(e.querySelectorAll("label,input")).map((t) => ({
    node: t,
    textToMatch: Yw(t)
  })).filter((t) => {
    let {
      textToMatch: r7
    } = t;
    return r7 !== null;
  });
}
o(Vye, "queryAllLabels");
var zye = /* @__PURE__ */ o(function(e, t, r7) {
  let {
    exact: n = true,
    trim: i,
    collapseWhitespace: s,
    normalizer: a
  } = r7 === void 0 ? {} : r7, l = n ? br$1 : ri, u = Mn({
    collapseWhitespace: s,
    trim: i,
    normalizer: a
  });
  return Vye(e).filter((d) => {
    let {
      node: p5,
      textToMatch: f
    } = d;
    return l(f, p5, t, u);
  }).map((d) => {
    let {
      node: p5
    } = d;
    return p5;
  });
}, "queryAllLabelsByText"), Zs = /* @__PURE__ */ o(function(e, t, r7) {
  let {
    selector: n = "*",
    exact: i = true,
    collapseWhitespace: s,
    trim: a,
    normalizer: l
  } = r7 === void 0 ? {} : r7;
  gr$1(e);
  let u = i ? br$1 : ri, c = Mn({
    collapseWhitespace: s,
    trim: a,
    normalizer: l
  }), d = Array.from(e.querySelectorAll("*")).filter((p5) => n$(p5).length || p5.hasAttribute("aria-labelledby")).reduce((p5, f) => {
    let m = o$(e, f, {
      selector: n
    });
    m.filter((b) => !!b.formControl).forEach((b) => {
      u(b.content, b.formControl, t, c) && b.formControl && p5.push(b.formControl);
    });
    let h5 = m.filter((b) => !!b.content).map((b) => b.content);
    return u(h5.join(" "), f, t, c) && p5.push(f), h5.length > 1 && h5.forEach((b, v5) => {
      u(b, f, t, c) && p5.push(f);
      let g = [...h5];
      g.splice(v5, 1), g.length > 1 && u(g.join(" "), f, t, c) && p5.push(f);
    }), p5;
  }, []).concat(Nn("aria-label", e, t, {
    exact: i,
    normalizer: c
  }));
  return Array.from(new Set(d)).filter((p5) => p5.matches(n));
}, "queryAllByLabelText"), In = /* @__PURE__ */ o(function(e, t) {
  for (var r7 = arguments.length, n = new Array(r7 > 2 ? r7 - 2 : 0), i = 2; i < r7; i++)
    n[i - 2] = arguments[i];
  let s = Zs(e, t, ...n);
  if (!s.length) {
    let a = zye(e, t, ...n);
    if (a.length) {
      let l = a.map((u) => Gye(e, u)).filter((u) => !!u);
      throw l.length ? ie$1().getElementError(l.map((u) => "Found a label with the text of: " + t + ", however the element associated with this label (<" + u + " />) is non-labellable [https://html.spec.whatwg.org/multipage/forms.html#category-label]. If you really need to label a <" + u + " />, you can use aria-label or aria-labelledby instead.").join(`

`), e) : ie$1().getElementError("Found a label with the text of: " + t + `, however no form control was found associated to that label. Make sure you're using the "for" attribute or "aria-labelledby" attribute correctly.`, e);
    } else
      throw ie$1().getElementError("Unable to find a label with the text of: " + t, e);
  }
  return s;
}, "getAllByLabelText");
function Gye(e, t) {
  let r7 = t.getAttribute("for");
  if (!r7)
    return null;
  let n = e.querySelector('[id="' + r7 + '"]');
  return n ? n.tagName.toLowerCase() : null;
}
o(Gye, "getTagNameOfElementAssociatedWithLabelViaFor");
var p$ = /* @__PURE__ */ o((e, t) => "Found multiple elements with the text of: " + t, "getMultipleError$7"), f$ = nn$1(ei(Zs, p$), Zs.name, "query"), m$ = ei(In, p$), h$ = ti(mt$1(In, In.name, "findAll")), y$ = ti(nn$1(m$, In.name, "find")), b$ = mt$1(In, In.name, "getAll"), g$ = nn$1(
  m$,
  In.name,
  "get"
), v$ = mt$1(Zs, Zs.name, "queryAll"), Kw = /* @__PURE__ */ o(function() {
  for (var e = arguments.length, t = new Array(e), r7 = 0; r7 < e; r7++)
    t[r7] = arguments[r7];
  return gr$1(t[0]), Nn("placeholder", ...t);
}, "queryAllByPlaceholderText"), Wye = /* @__PURE__ */ o((e, t) => "Found multiple elements with the placeholder text of: " + t, "getMultipleError$6"), Yye = /* @__PURE__ */ o((e, t) => "Unable to find an element with the placeholder text of: " + t, "getMissingError$6"), E$ = mt$1(
  Kw,
  Kw.name,
  "queryAll"
), [x$, w$, T$, R$, S$] = vr$1(Kw, Wye, Yye), Xw = /* @__PURE__ */ o(function(e, t, r7) {
  let {
    selector: n = "*",
    exact: i = true,
    collapseWhitespace: s,
    trim: a,
    ignore: l = ie$1().defaultIgnore,
    normalizer: u
  } = r7 === void 0 ? {} : r7;
  gr$1(e);
  let c = i ? br$1 : ri, d = Mn({
    collapseWhitespace: s,
    trim: a,
    normalizer: u
  }), p5 = [];
  return typeof e.matches == "function" && e.matches(n) && (p5 = [e]), [...p5, ...Array.from(e.querySelectorAll(n))].filter((f) => !l || !f.matches(
    l
  )).filter((f) => c(ra(f), f, t, d));
}, "queryAllByText"), Kye = /* @__PURE__ */ o((e, t) => "Found multiple elements with the text: " + t, "getMultipleError$5"), Xye = /* @__PURE__ */ o(
  function(e, t, r7) {
    r7 === void 0 && (r7 = {});
    let {
      collapseWhitespace: n,
      trim: i,
      normalizer: s,
      selector: a
    } = r7, u = Mn({
      collapseWhitespace: n,
      trim: i,
      normalizer: s
    })(t.toString()), c = u !== t.toString(), d = (a ?? "*") !== "*";
    return "Unable to find an element with the text: " + (c ? u + " (normalized from '" + t + "')" : t) + (d ? ", which matches selector '" + a + "'" : "") + ". This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.";
  },
  "getMissingError$5"
), _$ = mt$1(Xw, Xw.name, "queryAll"), [C$, P$, A$, O$, q$] = vr$1(Xw, Kye, Xye), Jw = /* @__PURE__ */ o(function(e, t, r7) {
  let {
    exact: n = true,
    collapseWhitespace: i,
    trim: s,
    normalizer: a
  } = r7 === void 0 ? {} : r7;
  gr$1(e);
  let l = n ? br$1 : ri, u = Mn({
    collapseWhitespace: i,
    trim: s,
    normalizer: a
  });
  return Array.from(e.querySelectorAll("input,textarea,select")).filter((c) => c.tagName === "SELECT" ? Array.from(c.options).filter((p5) => p5.selected).some((p5) => l(ra(p5), p5, t, u)) : l(c.value, c, t, u));
}, "queryAllByDisplayValue"), Jye = /* @__PURE__ */ o((e, t) => "Found multiple elements with the display value: " + t + ".", "getMultipleError$4"), Qye = /* @__PURE__ */ o((e, t) => "Unable to find an element with the display value: " + t + ".", "getMissingError$4"), I$ = mt$1(
  Jw,
  Jw.name,
  "queryAll"
), [M$, N$, j$, k$, L$] = vr$1(Jw, Jye, Qye), Zye = /^(img|input|area|.+-.+)$/i, Qw = /* @__PURE__ */ o(function(e, t, r7) {
  return r7 === void 0 && (r7 = {}), gr$1(e), Nn("alt", e, t, r7).filter((n) => Zye.test(n.tagName));
}, "queryAllByAltText"), ebe = /* @__PURE__ */ o((e, t) => "Found multiple elements with the alt text: " + t, "getMultipleError$3"), tbe = /* @__PURE__ */ o(
  (e, t) => "Unable to find an element with the alt text: " + t,
  "getMissingError$3"
), F$ = mt$1(Qw, Qw.name, "queryAll"), [D$, $$, B$, H$, U$] = vr$1(
  Qw,
  ebe,
  tbe
), rbe = /* @__PURE__ */ o((e) => {
  var t;
  return e.tagName.toLowerCase() === "title" && ((t = e.parentElement) == null ? void 0 : t.tagName.toLowerCase()) === "svg";
}, "isSvgTitle"), Zw = /* @__PURE__ */ o(function(e, t, r7) {
  let {
    exact: n = true,
    collapseWhitespace: i,
    trim: s,
    normalizer: a
  } = r7 === void 0 ? {} : r7;
  gr$1(e);
  let l = n ? br$1 : ri, u = Mn({
    collapseWhitespace: i,
    trim: s,
    normalizer: a
  });
  return Array.from(e.querySelectorAll("[title], svg > title")).filter((c) => l(c.getAttribute("title"), c, t, u) || rbe(c) && l(
    ra(c),
    c,
    t,
    u
  ));
}, "queryAllByTitle"), nbe = /* @__PURE__ */ o((e, t) => "Found multiple elements with the title: " + t + ".", "getMultipleError$2"), obe = /* @__PURE__ */ o(
  (e, t) => "Unable to find an element with the title: " + t + ".",
  "getMissingError$2"
), V$ = mt$1(Zw, Zw.name, "queryAll"), [z$, G$, W$, Y$, K$] = vr$1(
  Zw,
  nbe,
  obe
), eT = /* @__PURE__ */ o(function(e, t, r7) {
  let {
    hidden: n = ie$1().defaultHidden,
    name: i,
    description: s,
    queryFallbacks: a = false,
    selected: l,
    busy: u,
    checked: c,
    pressed: d,
    current: p5,
    level: f,
    expanded: m,
    value: {
      now: h5,
      min: b,
      max: v5,
      text: g
    } = {}
  } = r7 === void 0 ? {} : r7;
  if (gr$1(e), l !== void 0) {
    var w5;
    if (((w5 = lt$1.roles.get(t)) == null ? void 0 : w5.props["aria-selected"]) === void 0)
      throw new Error('"aria-selected" is not supported on role "' + t + '".');
  }
  if (u !== void 0) {
    var E;
    if (((E = lt$1.roles.get(t)) == null ? void 0 : E.props["aria-busy"]) === void 0)
      throw new Error('"aria-busy" is not supported on role "' + t + '".');
  }
  if (c !== void 0) {
    var R;
    if (((R = lt$1.roles.get(t)) == null ? void 0 : R.props["aria-checked"]) === void 0)
      throw new Error('"aria-checked" is not supported on role "' + t + '".');
  }
  if (d !== void 0) {
    var S;
    if (((S = lt$1.roles.get(t)) == null ? void 0 : S.props["aria-pressed"]) === void 0)
      throw new Error('"aria-pressed" is not supported on role "' + t + '".');
  }
  if (p5 !== void 0) {
    var P;
    if (((P = lt$1.roles.get(t)) == null ? void 0 : P.props["aria-current"]) === void 0)
      throw new Error('"aria-current" is not supported on role "' + t + '".');
  }
  if (f !== void 0 && t !== "heading")
    throw new Error('Role "' + t + '" cannot have "level" property.');
  if (h5 !== void 0) {
    var _5;
    if (((_5 = lt$1.roles.get(t)) == null ? void 0 : _5.props["aria-valuenow"]) === void 0)
      throw new Error('"aria-valuenow" is not supported on role "' + t + '".');
  }
  if (v5 !== void 0) {
    var C5;
    if (((C5 = lt$1.roles.get(t)) == null ? void 0 : C5.props["aria-valuemax"]) === void 0)
      throw new Error('"aria-valuemax" is not supported on role "' + t + '".');
  }
  if (b !== void 0) {
    var O;
    if (((O = lt$1.roles.get(t)) == null ? void 0 : O.props["aria-valuemin"]) === void 0)
      throw new Error('"aria-valuemin" is not supported on role "' + t + '".');
  }
  if (g !== void 0) {
    var L;
    if (((L = lt$1.roles.get(t)) == null ? void 0 : L.props["aria-valuetext"]) === void 0)
      throw new Error('"aria-valuetext" is not supported on role "' + t + '".');
  }
  if (m !== void 0) {
    var q;
    if (((q = lt$1.roles.get(t)) == null ? void 0 : q.props["aria-expanded"]) === void 0)
      throw new Error('"aria-expanded" is not supported on role "' + t + '".');
  }
  let D = /* @__PURE__ */ new WeakMap();
  function H(M7) {
    return D.has(M7) || D.set(M7, a$(M7)), D.get(M7);
  }
  return o(H, "cachedIsSubtreeInaccessible"), Array.from(e.querySelectorAll(
    // Only query elements that can be matched by the following filters
    ibe(t)
  )).filter((M7) => {
    if (M7.hasAttribute("role")) {
      let W = M7.getAttribute("role");
      if (a)
        return W.split(" ").filter(Boolean).some((ae) => ae === t);
      let [Y] = W.split(" ");
      return Y === t;
    }
    return sT(M7).some((W) => W === t);
  }).filter((M7) => {
    if (l !== void 0)
      return l === Oye(M7);
    if (u !== void 0)
      return u === qye(M7);
    if (c !== void 0)
      return c === Iye(M7);
    if (d !== void 0)
      return d === Mye(M7);
    if (p5 !== void 0)
      return p5 === Nye(M7);
    if (m !== void 0)
      return m === jye(M7);
    if (f !== void 0)
      return f === kye(M7);
    if (h5 !== void 0 || v5 !== void 0 || b !== void 0 || g !== void 0) {
      let N = true;
      if (h5 !== void 0 && N && (N = h5 === Lye(M7)), v5 !== void 0 && N && (N = v5 === Fye(M7)), b !== void 0 && N && (N = b === Dye(M7)), g !== void 0) {
        var U;
        N && (N = br$1((U = $ye(M7)) != null ? U : null, M7, g, (W) => W));
      }
      return N;
    }
    return true;
  }).filter((M7) => i === void 0 ? true : br$1(Ys(M7, {
    computedStyleSupportsPseudoElements: ie$1().computedStyleSupportsPseudoElements
  }), M7, i, (U) => U)).filter((M7) => s === void 0 ? true : br$1(Ip(M7, {
    computedStyleSupportsPseudoElements: ie$1().computedStyleSupportsPseudoElements
  }), M7, s, (U) => U)).filter((M7) => n === false ? Mh(M7, {
    isSubtreeInaccessible: H
  }) === false : true);
}, "queryAllByRole");
function ibe(e) {
  var t;
  let r7 = '*[role~="' + e + '"]', n = (t = lt$1.roleElements.get(e)) != null ? t : /* @__PURE__ */ new Set(), i = new Set(Array.from(n).map((s) => {
    let {
      name: a
    } = s;
    return a;
  }));
  return [r7].concat(Array.from(i)).join(",");
}
o(ibe, "makeRoleSelector");
var X$ = /* @__PURE__ */ o((e) => {
  let t = "";
  return e === void 0 ? t = "" : typeof e == "string" ? t = ' and name "' + e + '"' : t = " and name `" + e + "`", t;
}, "getNameHint"), sbe = /* @__PURE__ */ o(function(e, t, r7) {
  let {
    name: n
  } = r7 === void 0 ? {} : r7;
  return 'Found multiple elements with the role "' + t + '"' + X$(n);
}, "getMultipleError$1"), abe = /* @__PURE__ */ o(function(e, t, r7) {
  let {
    hidden: n = ie$1().defaultHidden,
    name: i,
    description: s
  } = r7 === void 0 ? {} : r7;
  if (ie$1()._disableExpensiveErrorDiagnostics)
    return 'Unable to find role="' + t + '"' + X$(i);
  let a = "";
  Array.from(e.children).forEach((d) => {
    a += u$(d, {
      hidden: n,
      includeDescription: s !== void 0
    });
  });
  let l;
  a.length === 0 ? n === false ? l = "There are no accessible roles. But there might be some inaccessible roles. If you wish to access them, then set the `hidden` option to `true`. Learn more about this here: https://testing-library.com/docs/dom-testing-library/api-queries#byrole" : l = "There are no available roles." : l = (`
Here are the ` + (n === false ? "accessible" : "available") + ` roles:

  ` + a.replace(/\n/g, `
  `).replace(/\n\s\s\n/g, `

`) + `
`).trim();
  let u = "";
  i === void 0 ? u = "" : typeof i == "string" ? u = ' and name "' + i + '"' : u = " and name `" + i + "`";
  let c = "";
  return s === void 0 ? c = "" : typeof s == "string" ? c = ' and description "' + s + '"' : c = " and description `" + s + "`", (`
Unable to find an ` + (n === false ? "accessible " : "") + 'element with the role "' + t + '"' + u + c + `

` + l).trim();
}, "getMissingError$1"), J$ = mt$1(eT, eT.name, "queryAll"), [Q$, Z$, eB, tB, rB] = vr$1(eT, sbe, abe), uT = /* @__PURE__ */ o(
  () => ie$1().testIdAttribute,
  "getTestIdAttribute"
), tT = /* @__PURE__ */ o(function() {
  for (var e = arguments.length, t = new Array(e), r7 = 0; r7 < e; r7++)
    t[r7] = arguments[r7];
  return gr$1(t[0]), Nn(uT(), ...t);
}, "queryAllByTestId"), lbe = /* @__PURE__ */ o((e, t) => "Found multiple elements by: [" + uT() + '="' + t + '"]', "getMultipleError"), ube = /* @__PURE__ */ o(
  (e, t) => "Unable to find an element by: [" + uT() + '="' + t + '"]',
  "getMissingError"
), nB = mt$1(tT, tT.name, "queryAll"), [
  oB,
  iB,
  sB,
  aB,
  lB
] = vr$1(tT, lbe, ube), Ih = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  queryAllByLabelText: v$,
  queryByLabelText: f$,
  getAllByLabelText: b$,
  getByLabelText: g$,
  findAllByLabelText: h$,
  findByLabelText: y$,
  queryByPlaceholderText: x$,
  queryAllByPlaceholderText: E$,
  getByPlaceholderText: T$,
  getAllByPlaceholderText: w$,
  findAllByPlaceholderText: R$,
  findByPlaceholderText: S$,
  queryByText: C$,
  queryAllByText: _$,
  getByText: A$,
  getAllByText: P$,
  findAllByText: O$,
  findByText: q$,
  queryByDisplayValue: M$,
  queryAllByDisplayValue: I$,
  getByDisplayValue: j$,
  getAllByDisplayValue: N$,
  findAllByDisplayValue: k$,
  findByDisplayValue: L$,
  queryByAltText: D$,
  queryAllByAltText: F$,
  getByAltText: B$,
  getAllByAltText: $$,
  findAllByAltText: H$,
  findByAltText: U$,
  queryByTitle: z$,
  queryAllByTitle: V$,
  getByTitle: W$,
  getAllByTitle: G$,
  findAllByTitle: Y$,
  findByTitle: K$,
  queryByRole: Q$,
  queryAllByRole: J$,
  getAllByRole: Z$,
  getByRole: eB,
  findAllByRole: tB,
  findByRole: rB,
  queryByTestId: oB,
  queryAllByTestId: nB,
  getByTestId: sB,
  getAllByTestId: iB,
  findAllByTestId: aB,
  findByTestId: lB
});
function uB(e, t, r7) {
  return t === void 0 && (t = Ih), r7 === void 0 && (r7 = {}), Object.keys(t).reduce((n, i) => {
    let s = t[i];
    return n[i] = s.bind(null, e), n;
  }, r7);
}
o(uB, "getQueriesForElement");
var cB = /* @__PURE__ */ o((e) => !e || Array.isArray(e) && !e.length, "isRemoved");
function HD(e) {
  if (cB(e))
    throw new Error("The element(s) given to waitForElementToBeRemoved are already removed. waitForElementToBeRemoved requires that the element(s) exist(s) before waiting for removal.");
}
o(HD, "initialCheck");
async function cbe(e, t) {
  let r7 = new Error("Timed out in waitForElementToBeRemoved.");
  if (typeof e != "function") {
    HD(e);
    let i = (Array.isArray(e) ? e : [e]).map((s) => {
      let a = s.parentElement;
      if (a === null) return () => null;
      for (; a.parentElement; ) a = a.parentElement;
      return () => a.contains(s) ? s : null;
    });
    e = /* @__PURE__ */ o(() => i.map((s) => s()).filter(Boolean), "callback");
  }
  return HD(e()), aT(() => {
    let n;
    try {
      n = e();
    } catch (i) {
      if (i.name === "TestingLibraryElementError")
        return;
      throw i;
    }
    if (!cB(n))
      throw r7;
  }, t);
}
o(cbe, "waitForElementToBeRemoved");
var UD = {
  // Clipboard Events
  copy: {
    EventType: "ClipboardEvent",
    defaultInit: {
      bubbles: true,
      cancelable: true,
      composed: true
    }
  },
  cut: {
    EventType: "ClipboardEvent",
    defaultInit: {
      bubbles: true,
      cancelable: true,
      composed: true
    }
  },
  paste: {
    EventType: "ClipboardEvent",
    defaultInit: {
      bubbles: true,
      cancelable: true,
      composed: true
    }
  },
  // Composition Events
  compositionEnd: {
    EventType: "CompositionEvent",
    defaultInit: {
      bubbles: true,
      cancelable: true,
      composed: true
    }
  },
  compositionStart: {
    EventType: "CompositionEvent",
    defaultInit: {
      bubbles: true,
      cancelable: true,
      composed: true
    }
  },
  compositionUpdate: {
    EventType: "CompositionEvent",
    defaultInit: {
      bubbles: true,
      cancelable: true,
      composed: true
    }
  },
  // Keyboard Events
  keyDown: {
    EventType: "KeyboardEvent",
    defaultInit: {
      bubbles: true,
      cancelable: true,
      charCode: 0,
      composed: true
    }
  },
  keyPress: {
    EventType: "KeyboardEvent",
    defaultInit: {
      bubbles: true,
      cancelable: true,
      charCode: 0,
      composed: true
    }
  },
  keyUp: {
    EventType: "KeyboardEvent",
    defaultInit: {
      bubbles: true,
      cancelable: true,
      charCode: 0,
      composed: true
    }
  },
  // Focus Events
  focus: {
    EventType: "FocusEvent",
    defaultInit: {
      bubbles: false,
      cancelable: false,
      composed: true
    }
  },
  blur: {
    EventType: "FocusEvent",
    defaultInit: {
      bubbles: false,
      cancelable: false,
      composed: true
    }
  },
  focusIn: {
    EventType: "FocusEvent",
    defaultInit: {
      bubbles: true,
      cancelable: false,
      composed: true
    }
  },
  focusOut: {
    EventType: "FocusEvent",
    defaultInit: {
      bubbles: true,
      cancelable: false,
      composed: true
    }
  },
  // Form Events
  change: {
    EventType: "Event",
    defaultInit: {
      bubbles: true,
      cancelable: false
    }
  },
  input: {
    EventType: "InputEvent",
    defaultInit: {
      bubbles: true,
      cancelable: false,
      composed: true
    }
  },
  invalid: {
    EventType: "Event",
    defaultInit: {
      bubbles: false,
      cancelable: true
    }
  },
  submit: {
    EventType: "Event",
    defaultInit: {
      bubbles: true,
      cancelable: true
    }
  },
  reset: {
    EventType: "Event",
    defaultInit: {
      bubbles: true,
      cancelable: true
    }
  },
  // Mouse Events
  click: {
    EventType: "MouseEvent",
    defaultInit: {
      bubbles: true,
      cancelable: true,
      button: 0,
      composed: true
    }
  },
  contextMenu: {
    EventType: "MouseEvent",
    defaultInit: {
      bubbles: true,
      cancelable: true,
      composed: true
    }
  },
  dblClick: {
    EventType: "MouseEvent",
    defaultInit: {
      bubbles: true,
      cancelable: true,
      composed: true
    }
  },
  drag: {
    EventType: "DragEvent",
    defaultInit: {
      bubbles: true,
      cancelable: true,
      composed: true
    }
  },
  dragEnd: {
    EventType: "DragEvent",
    defaultInit: {
      bubbles: true,
      cancelable: false,
      composed: true
    }
  },
  dragEnter: {
    EventType: "DragEvent",
    defaultInit: {
      bubbles: true,
      cancelable: true,
      composed: true
    }
  },
  dragExit: {
    EventType: "DragEvent",
    defaultInit: {
      bubbles: true,
      cancelable: false,
      composed: true
    }
  },
  dragLeave: {
    EventType: "DragEvent",
    defaultInit: {
      bubbles: true,
      cancelable: false,
      composed: true
    }
  },
  dragOver: {
    EventType: "DragEvent",
    defaultInit: {
      bubbles: true,
      cancelable: true,
      composed: true
    }
  },
  dragStart: {
    EventType: "DragEvent",
    defaultInit: {
      bubbles: true,
      cancelable: true,
      composed: true
    }
  },
  drop: {
    EventType: "DragEvent",
    defaultInit: {
      bubbles: true,
      cancelable: true,
      composed: true
    }
  },
  mouseDown: {
    EventType: "MouseEvent",
    defaultInit: {
      bubbles: true,
      cancelable: true,
      composed: true
    }
  },
  mouseEnter: {
    EventType: "MouseEvent",
    defaultInit: {
      bubbles: false,
      cancelable: false,
      composed: true
    }
  },
  mouseLeave: {
    EventType: "MouseEvent",
    defaultInit: {
      bubbles: false,
      cancelable: false,
      composed: true
    }
  },
  mouseMove: {
    EventType: "MouseEvent",
    defaultInit: {
      bubbles: true,
      cancelable: true,
      composed: true
    }
  },
  mouseOut: {
    EventType: "MouseEvent",
    defaultInit: {
      bubbles: true,
      cancelable: true,
      composed: true
    }
  },
  mouseOver: {
    EventType: "MouseEvent",
    defaultInit: {
      bubbles: true,
      cancelable: true,
      composed: true
    }
  },
  mouseUp: {
    EventType: "MouseEvent",
    defaultInit: {
      bubbles: true,
      cancelable: true,
      composed: true
    }
  },
  // Selection Events
  select: {
    EventType: "Event",
    defaultInit: {
      bubbles: true,
      cancelable: false
    }
  },
  // Touch Events
  touchCancel: {
    EventType: "TouchEvent",
    defaultInit: {
      bubbles: true,
      cancelable: false,
      composed: true
    }
  },
  touchEnd: {
    EventType: "TouchEvent",
    defaultInit: {
      bubbles: true,
      cancelable: true,
      composed: true
    }
  },
  touchMove: {
    EventType: "TouchEvent",
    defaultInit: {
      bubbles: true,
      cancelable: true,
      composed: true
    }
  },
  touchStart: {
    EventType: "TouchEvent",
    defaultInit: {
      bubbles: true,
      cancelable: true,
      composed: true
    }
  },
  // UI Events
  resize: {
    EventType: "UIEvent",
    defaultInit: {
      bubbles: false,
      cancelable: false
    }
  },
  scroll: {
    EventType: "UIEvent",
    defaultInit: {
      bubbles: false,
      cancelable: false
    }
  },
  // Wheel Events
  wheel: {
    EventType: "WheelEvent",
    defaultInit: {
      bubbles: true,
      cancelable: true,
      composed: true
    }
  },
  // Media Events
  abort: {
    EventType: "Event",
    defaultInit: {
      bubbles: false,
      cancelable: false
    }
  },
  canPlay: {
    EventType: "Event",
    defaultInit: {
      bubbles: false,
      cancelable: false
    }
  },
  canPlayThrough: {
    EventType: "Event",
    defaultInit: {
      bubbles: false,
      cancelable: false
    }
  },
  durationChange: {
    EventType: "Event",
    defaultInit: {
      bubbles: false,
      cancelable: false
    }
  },
  emptied: {
    EventType: "Event",
    defaultInit: {
      bubbles: false,
      cancelable: false
    }
  },
  encrypted: {
    EventType: "Event",
    defaultInit: {
      bubbles: false,
      cancelable: false
    }
  },
  ended: {
    EventType: "Event",
    defaultInit: {
      bubbles: false,
      cancelable: false
    }
  },
  loadedData: {
    EventType: "Event",
    defaultInit: {
      bubbles: false,
      cancelable: false
    }
  },
  loadedMetadata: {
    EventType: "Event",
    defaultInit: {
      bubbles: false,
      cancelable: false
    }
  },
  loadStart: {
    EventType: "ProgressEvent",
    defaultInit: {
      bubbles: false,
      cancelable: false
    }
  },
  pause: {
    EventType: "Event",
    defaultInit: {
      bubbles: false,
      cancelable: false
    }
  },
  play: {
    EventType: "Event",
    defaultInit: {
      bubbles: false,
      cancelable: false
    }
  },
  playing: {
    EventType: "Event",
    defaultInit: {
      bubbles: false,
      cancelable: false
    }
  },
  progress: {
    EventType: "ProgressEvent",
    defaultInit: {
      bubbles: false,
      cancelable: false
    }
  },
  rateChange: {
    EventType: "Event",
    defaultInit: {
      bubbles: false,
      cancelable: false
    }
  },
  seeked: {
    EventType: "Event",
    defaultInit: {
      bubbles: false,
      cancelable: false
    }
  },
  seeking: {
    EventType: "Event",
    defaultInit: {
      bubbles: false,
      cancelable: false
    }
  },
  stalled: {
    EventType: "Event",
    defaultInit: {
      bubbles: false,
      cancelable: false
    }
  },
  suspend: {
    EventType: "Event",
    defaultInit: {
      bubbles: false,
      cancelable: false
    }
  },
  timeUpdate: {
    EventType: "Event",
    defaultInit: {
      bubbles: false,
      cancelable: false
    }
  },
  volumeChange: {
    EventType: "Event",
    defaultInit: {
      bubbles: false,
      cancelable: false
    }
  },
  waiting: {
    EventType: "Event",
    defaultInit: {
      bubbles: false,
      cancelable: false
    }
  },
  // Events
  load: {
    // TODO: load events can be UIEvent or Event depending on what generated them
    // This is where this abstraction breaks down.
    // But the common targets are <img />, <script /> and window.
    // Neither of these targets receive a UIEvent
    EventType: "Event",
    defaultInit: {
      bubbles: false,
      cancelable: false
    }
  },
  error: {
    EventType: "Event",
    defaultInit: {
      bubbles: false,
      cancelable: false
    }
  },
  // Animation Events
  animationStart: {
    EventType: "AnimationEvent",
    defaultInit: {
      bubbles: true,
      cancelable: false
    }
  },
  animationEnd: {
    EventType: "AnimationEvent",
    defaultInit: {
      bubbles: true,
      cancelable: false
    }
  },
  animationIteration: {
    EventType: "AnimationEvent",
    defaultInit: {
      bubbles: true,
      cancelable: false
    }
  },
  // Transition Events
  transitionCancel: {
    EventType: "TransitionEvent",
    defaultInit: {
      bubbles: true,
      cancelable: false
    }
  },
  transitionEnd: {
    EventType: "TransitionEvent",
    defaultInit: {
      bubbles: true,
      cancelable: true
    }
  },
  transitionRun: {
    EventType: "TransitionEvent",
    defaultInit: {
      bubbles: true,
      cancelable: false
    }
  },
  transitionStart: {
    EventType: "TransitionEvent",
    defaultInit: {
      bubbles: true,
      cancelable: false
    }
  },
  // pointer events
  pointerOver: {
    EventType: "PointerEvent",
    defaultInit: {
      bubbles: true,
      cancelable: true,
      composed: true
    }
  },
  pointerEnter: {
    EventType: "PointerEvent",
    defaultInit: {
      bubbles: false,
      cancelable: false
    }
  },
  pointerDown: {
    EventType: "PointerEvent",
    defaultInit: {
      bubbles: true,
      cancelable: true,
      composed: true
    }
  },
  pointerMove: {
    EventType: "PointerEvent",
    defaultInit: {
      bubbles: true,
      cancelable: true,
      composed: true
    }
  },
  pointerUp: {
    EventType: "PointerEvent",
    defaultInit: {
      bubbles: true,
      cancelable: true,
      composed: true
    }
  },
  pointerCancel: {
    EventType: "PointerEvent",
    defaultInit: {
      bubbles: true,
      cancelable: false,
      composed: true
    }
  },
  pointerOut: {
    EventType: "PointerEvent",
    defaultInit: {
      bubbles: true,
      cancelable: true,
      composed: true
    }
  },
  pointerLeave: {
    EventType: "PointerEvent",
    defaultInit: {
      bubbles: false,
      cancelable: false
    }
  },
  gotPointerCapture: {
    EventType: "PointerEvent",
    defaultInit: {
      bubbles: true,
      cancelable: false,
      composed: true
    }
  },
  lostPointerCapture: {
    EventType: "PointerEvent",
    defaultInit: {
      bubbles: true,
      cancelable: false,
      composed: true
    }
  },
  // history events
  popState: {
    EventType: "PopStateEvent",
    defaultInit: {
      bubbles: true,
      cancelable: false
    }
  },
  // window events
  offline: {
    EventType: "Event",
    defaultInit: {
      bubbles: false,
      cancelable: false
    }
  },
  online: {
    EventType: "Event",
    defaultInit: {
      bubbles: false,
      cancelable: false
    }
  },
  pageHide: {
    EventType: "PageTransitionEvent",
    defaultInit: {
      bubbles: true,
      cancelable: true
    }
  },
  pageShow: {
    EventType: "PageTransitionEvent",
    defaultInit: {
      bubbles: true,
      cancelable: true
    }
  }
}, VD = {
  doubleClick: "dblClick"
};
function ea(e, t) {
  return ie$1().eventWrapper(() => {
    if (!t)
      throw new Error("Unable to fire an event - please provide an event object.");
    if (!e)
      throw new Error('Unable to fire a "' + t.type + '" event - please provide a DOM element.');
    return e.dispatchEvent(t);
  });
}
o(ea, "fireEvent");
function Oh(e, t, r7, n) {
  let {
    EventType: i = "Event",
    defaultInit: s = {}
  } = n === void 0 ? {} : n;
  if (!t)
    throw new Error('Unable to fire a "' + e + '" event - please provide a DOM element.');
  let a = {
    ...s,
    ...r7
  }, {
    target: {
      value: l,
      files: u,
      ...c
    } = {}
  } = a;
  l !== void 0 && dbe(t, l), u !== void 0 && Object.defineProperty(t, "files", {
    configurable: true,
    enumerable: true,
    writable: true,
    value: u
  }), Object.assign(t, c);
  let d = t$(t), p5 = d[i] || d.Event, f;
  if (typeof p5 == "function")
    f = new p5(e, a);
  else {
    f = d.document.createEvent(i);
    let {
      bubbles: h5,
      cancelable: b,
      detail: v5,
      ...g
    } = a;
    f.initEvent(e, h5, b, v5), Object.keys(g).forEach((w5) => {
      f[w5] = g[w5];
    });
  }
  return ["dataTransfer", "clipboardData"].forEach((h5) => {
    let b = a[h5];
    typeof b == "object" && (typeof d.DataTransfer == "function" ? Object.defineProperty(f, h5, {
      value: Object.getOwnPropertyNames(b).reduce((v5, g) => (Object.defineProperty(v5, g, {
        value: b[g]
      }), v5), new d.DataTransfer())
    }) : Object.defineProperty(f, h5, {
      value: b
    }));
  }), f;
}
o(Oh, "createEvent");
Object.keys(UD).forEach((e) => {
  let {
    EventType: t,
    defaultInit: r7
  } = UD[e], n = e.toLowerCase();
  Oh[e] = (i, s) => Oh(n, i, s, {
    EventType: t,
    defaultInit: r7
  }), ea[e] = (i, s) => ea(i, Oh[e](i, s));
});
function dbe(e, t) {
  let {
    set: r7
  } = Object.getOwnPropertyDescriptor(e, "value") || {}, n = Object.getPrototypeOf(e), {
    set: i
  } = Object.getOwnPropertyDescriptor(n, "value") || {};
  if (i && r7 !== i)
    i.call(e, t);
  else if (r7)
    r7.call(e, t);
  else
    throw new Error("The given element does not have a value setter");
}
o(dbe, "setNativeValue");
Object.keys(VD).forEach((e) => {
  let t = VD[e];
  ea[e] = function() {
    return ea[t](...arguments);
  };
});
function pbe(e) {
  return e.replace(/[ \t]*[\n][ \t]*/g, `
`);
}
o(pbe, "unindent");
function fbe(e) {
  return GD.default.compressToEncodedURIComponent(pbe(e));
}
o(fbe, "encode");
function mbe(e) {
  return "https://testing-playground.com/#markup=" + fbe(e);
}
o(mbe, "getPlaygroundUrl");
var hbe = /* @__PURE__ */ o((e, t, r7) => Array.isArray(e) ? e.forEach((n) => Ww(n, t, r7)) : Ww(e, t, r7), "debug"), ybe = /* @__PURE__ */ o(function(e) {
  if (e === void 0 && (e = oT().body), !e || !("innerHTML" in e)) {
    console.log("The element you're providing isn't a valid DOM element.");
    return;
  }
  if (!e.innerHTML) {
    console.log("The provided element doesn't have any children.");
    return;
  }
  let t = mbe(e.innerHTML);
  return console.log(`Open this URL in your browser

` + t), t;
}, "logTestingPlaygroundURL"), zD = {
  debug: hbe,
  logTestingPlaygroundURL: ybe
}, bbe = typeof document < "u" && document.body ? uB(document.body, Ih, zD) : Object.keys(Ih).reduce((e, t) => (e[t] = () => {
  throw new TypeError("For queries bound to document.body a global document has to be available... Learn more: https://testing-library.com/s/screen-global-error");
}, e), zD);
function X$1(e, t, r7) {
  return e.namespaceURI && e.namespaceURI !== "http://www.w3.org/1999/xhtml" || (t = Array.isArray(t) ? t : [
    t
  ], !t.includes(e.tagName.toLowerCase())) ? false : r7 ? Object.entries(r7).every(([n, i]) => e[n] === i) : true;
}
o(X$1, "isElementType");
function Ae(e) {
  var t;
  if (gbe(e) && e.defaultView)
    return e.defaultView;
  if (!((t = e.ownerDocument) === null || t === void 0) && t.defaultView)
    return e.ownerDocument.defaultView;
  throw new Error(`Could not determine window of node. Node was ${vbe(e)}`);
}
o(Ae, "getWindow");
function gbe(e) {
  return e.nodeType === 9;
}
o(gbe, "isDocument");
function vbe(e) {
  return typeof e == "function" ? `function ${e.name}` : e === null ? "null" : String(e);
}
o(vbe, "describe");
function dT(e, t) {
  return new Promise((r7, n) => {
    let i = new t();
    i.onerror = n, i.onabort = n, i.onload = () => {
      r7(String(i.result));
    }, i.readAsText(e);
  });
}
o(dT, "readBlobText");
function oa(e, t) {
  let r7 = {
    ...t,
    length: t.length,
    item: /* @__PURE__ */ o((n) => r7[n], "item"),
    [Symbol.iterator]: /* @__PURE__ */ o(function* () {
      for (let i = 0; i < r7.length; i++)
        yield r7[i];
    }, "nextFile")
  };
  return r7.constructor = e.FileList, e.FileList && Object.setPrototypeOf(r7, e.FileList.prototype), Object.freeze(r7), r7;
}
o(oa, "createFileList");
function on$1(e, t, r7) {
  return t in e ? Object.defineProperty(e, t, {
    value: r7,
    enumerable: true,
    configurable: true,
    writable: true
  }) : e[t] = r7, e;
}
o(on$1, "_define_property");
var fT = class fT2 {
  getAsFile() {
    return this.file;
  }
  getAsString(t) {
    typeof this.data == "string" && t(this.data);
  }
  /* istanbul ignore next */
  webkitGetAsEntry() {
    throw new Error("not implemented");
  }
  constructor(t, r7) {
    on$1(this, "kind", void 0), on$1(this, "type", void 0), on$1(this, "file", null), on$1(this, "data", void 0), typeof t == "string" ? (this.kind = "string", this.type = String(r7), this.data = t) : (this.kind = "file", this.type = t.type, this.file = t);
  }
};
o(fT, "DataTransferItemStub");
var Lh = fT, mT = class mT2 extends Array {
  add(...t) {
    let r7 = new Lh(t[0], t[1]);
    return this.push(r7), r7;
  }
  clear() {
    this.splice(0, this.length);
  }
  remove(t) {
    this.splice(t, 1);
  }
};
o(mT, "DataTransferItemListStub");
var pT = mT;
function kh(e, t) {
  let [r7, n] = e.split("/"), i = !n || n === "*";
  return (s) => t ? s.type === (i ? r7 : e) : i ? s.type.startsWith(`${r7}/`) : s.type === r7;
}
o(kh, "getTypeMatcher");
function Ebe(e) {
  var t;
  return new (t = class {
    getData(n) {
      var i;
      let s = (i = this.items.find(kh(n, true))) !== null && i !== void 0 ? i : this.items.find(kh(n, false)), a = "";
      return s?.getAsString((l) => {
        a = l;
      }), a;
    }
    setData(n, i) {
      let s = this.items.findIndex(kh(n, true)), a = new Lh(i, n);
      s >= 0 ? this.items.splice(s, 1, a) : this.items.push(a);
    }
    clearData(n) {
      if (n) {
        let i = this.items.findIndex(kh(n, true));
        i >= 0 && this.items.remove(i);
      } else
        this.items.clear();
    }
    get types() {
      let n = [];
      return this.files.length && n.push("Files"), this.items.forEach((i) => n.push(i.type)), Object.freeze(n), n;
    }
    /* istanbul ignore next */
    setDragImage() {
    }
    constructor() {
      on$1(this, "dropEffect", "none"), on$1(this, "effectAllowed", "uninitialized"), on$1(this, "items", new pT()), on$1(this, "files", oa(e, []));
    }
  }, o(t, "DataTransferStub"), t)();
}
o(Ebe, "createDataTransferStub");
function ni(e, t = []) {
  let r7 = typeof e.DataTransfer > "u" ? Ebe(e) : (
    /* istanbul ignore next */
    new e.DataTransfer()
  );
  return Object.defineProperty(r7, "files", {
    get: /* @__PURE__ */ o(() => oa(e, t), "get")
  }), r7;
}
o(ni, "createDataTransfer");
async function dB(e, t) {
  return t.kind === "file" ? t.getAsFile() : new e.Blob([
    await new Promise((r7) => t.getAsString(r7))
  ], {
    type: t.type
  });
}
o(dB, "getBlobFromDataTransferItem");
function fB(e, t, r7) {
  return t in e ? Object.defineProperty(e, t, {
    value: r7,
    enumerable: true,
    configurable: true,
    writable: true
  }) : e[t] = r7, e;
}
o(fB, "_define_property");
function mB(e, ...t) {
  var n;
  let r7 = Object.fromEntries(t.map((i) => [
    typeof i == "string" ? "text/plain" : i.type,
    Promise.resolve(i)
  ]));
  return typeof e.ClipboardItem < "u" ? new e.ClipboardItem(r7) : new (n = class {
    get types() {
      return Array.from(Object.keys(this.data));
    }
    async getType(s) {
      let a = await this.data[s];
      if (!a)
        throw new Error(`${s} is not one of the available MIME types on this item.`);
      return a instanceof e.Blob ? a : new e.Blob([
        a
      ], {
        type: s
      });
    }
    constructor(s) {
      fB(this, "data", void 0), this.data = s;
    }
  }, o(n, "ClipboardItem"), n)(r7);
}
o(mB, "createClipboardItem");
var oi = Symbol("Manage ClipboardSub");
function pB(e, t) {
  var r7;
  return Object.assign(new (r7 = class extends e.EventTarget {
    async read() {
      return Array.from(this.items);
    }
    async readText() {
      let i = "";
      for (let s of this.items) {
        let a = s.types.includes("text/plain") ? "text/plain" : s.types.find((l) => l.startsWith("text/"));
        a && (i += await s.getType(a).then((l) => dT(l, e.FileReader)));
      }
      return i;
    }
    async write(i) {
      this.items = i;
    }
    async writeText(i) {
      this.items = [
        mB(e, i)
      ];
    }
    constructor(...i) {
      super(...i), fB(this, "items", []);
    }
  }, o(r7, "Clipboard"), r7)(), {
    [oi]: t
  });
}
o(pB, "createClipboardStub");
function hT(e) {
  return !!e?.[oi];
}
o(hT, "isClipboardStub");
function hB(e) {
  if (hT(e.navigator.clipboard))
    return e.navigator.clipboard[oi];
  let t = Object.getOwnPropertyDescriptor(e.navigator, "clipboard"), r7, n = {
    resetClipboardStub: /* @__PURE__ */ o(() => {
      r7 = pB(e, n);
    }, "resetClipboardStub"),
    detachClipboardStub: /* @__PURE__ */ o(() => {
      t ? Object.defineProperty(e.navigator, "clipboard", t) : Object.defineProperty(e.navigator, "clipboard", {
        value: void 0,
        configurable: true
      });
    }, "detachClipboardStub")
  };
  return r7 = pB(e, n), Object.defineProperty(e.navigator, "clipboard", {
    get: /* @__PURE__ */ o(() => r7, "get"),
    configurable: true
  }), r7[oi];
}
o(hB, "attachClipboardStubToView");
function xbe(e) {
  hT(e.navigator.clipboard) && e.navigator.clipboard[oi].resetClipboardStub();
}
o(xbe, "resetClipboardStubOnView");
function wbe(e) {
  hT(e.navigator.clipboard) && e.navigator.clipboard[oi].detachClipboardStub();
}
o(wbe, "detachClipboardStubFromView");
async function yB(e) {
  let t = e.defaultView, r7 = t?.navigator.clipboard, n = r7 && await r7.read();
  if (!n)
    throw new Error("The Clipboard API is unavailable.");
  let i = ni(t);
  for (let s of n)
    for (let a of s.types)
      i.setData(a, await s.getType(a).then((l) => dT(l, t.FileReader)));
  return i;
}
o(yB, "readDataTransferFromClipboard");
async function Dh(e, t) {
  let r7 = Ae(e), n = r7.navigator.clipboard, i = [];
  for (let a = 0; a < t.items.length; a++) {
    let l = t.items[a], u = await dB(r7, l);
    i.push(mB(r7, u));
  }
  if (!(n && await n.write(i).then(
    () => true,
    // Can happen with other implementations that e.g. require permissions
    /* istanbul ignore next */
    () => false
  )))
    throw new Error("The Clipboard API is unavailable.");
}
o(Dh, "writeDataTransferToClipboard");
var Fh = globalThis;
typeof Fh.afterEach == "function" && Fh.afterEach(() => {
  typeof globalThis.window < "u" && xbe(globalThis.window);
});
typeof Fh.afterAll == "function" && Fh.afterAll(() => {
  typeof globalThis.window < "u" && wbe(globalThis.window);
});
var $h = [
  "input:not([type=hidden]):not([disabled])",
  "button:not([disabled])",
  "select:not([disabled])",
  "textarea:not([disabled])",
  '[contenteditable=""]',
  '[contenteditable="true"]',
  "a[href]",
  "[tabindex]:not([disabled])"
].join(", ");
function ia$1(e) {
  return e.matches($h);
}
o(ia$1, "isFocusable");
function bB(e) {
  return new e.constructor(e.type, e);
}
o(bB, "cloneEvent");
function rt(e) {
  for (let r7 = e; r7; r7 = r7.parentElement)
    if (X$1(r7, [
      "button",
      "input",
      "select",
      "textarea",
      "optgroup",
      "option"
    ])) {
      if (r7.hasAttribute("disabled"))
        return true;
    } else if (X$1(r7, "fieldset")) {
      var t;
      if (r7.hasAttribute("disabled") && !(!((t = r7.querySelector(":scope > legend")) === null || t === void 0) && t.contains(e)))
        return true;
    } else if (r7.tagName.includes("-") && r7.constructor.formAssociated && r7.hasAttribute("disabled"))
      return true;
  return false;
}
o(rt, "isDisabled");
function jn(e) {
  let t = e.activeElement;
  return t?.shadowRoot ? jn(t.shadowRoot) : rt(t) ? e.ownerDocument ? (
    /* istanbul ignore next */
    e.ownerDocument.body
  ) : e.body : t;
}
o(jn, "getActiveElement");
function Bh(e) {
  var t;
  return (t = jn(e)) !== null && t !== void 0 ? t : (
    /* istanbul ignore next */
    e.body
  );
}
o(Bh, "getActiveElementOrBody");
function gB(e, t) {
  let r7 = e;
  do {
    if (t(r7))
      return r7;
    r7 = r7.parentElement;
  } while (r7 && r7 !== e.ownerDocument.body);
}
o(gB, "findClosest");
function wt$1(e) {
  return e.hasAttribute("contenteditable") && (e.getAttribute("contenteditable") == "true" || e.getAttribute("contenteditable") == "");
}
o(wt$1, "isContentEditable");
function sn$1(e) {
  let t = Tbe(e);
  return t && (t.closest('[contenteditable=""]') || t.closest('[contenteditable="true"]'));
}
o(sn$1, "getContentEditable");
function Tbe(e) {
  return e.nodeType === 1 ? e : e.parentElement;
}
o(Tbe, "getElement");
var vB = /* @__PURE__ */ (function(e) {
  return e.button = "button", e.color = "color", e.file = "file", e.image = "image", e.reset = "reset", e.submit = "submit", e.checkbox = "checkbox", e.radio = "radio", e;
})(vB || {});
function Hh(e) {
  return X$1(e, "button") || X$1(e, "input") && e.type in vB;
}
o(Hh, "isClickableInput");
function Wt(e) {
  return yT(e) && !e.readOnly || wt$1(e);
}
o(Wt, "isEditable");
var EB = /* @__PURE__ */ (function(e) {
  return e.text = "text", e.date = "date", e["datetime-local"] = "datetime-local", e.email = "email", e.month = "month", e.number = "number", e.password = "password", e.search = "search", e.tel = "tel", e.time = "time", e.url = "url", e.week = "week", e;
})(EB || {});
function yT(e) {
  return X$1(e, "textarea") || X$1(e, "input") && e.type in EB;
}
o(yT, "isEditableInputOrTextArea");
function $e$1(e) {
  return wB(e) && yT(e);
}
o($e$1, "hasOwnSelection");
function xB(e) {
  return wB(e) && Hh(e);
}
o(xB, "hasNoSelection");
function wB(e) {
  return e.nodeType === 1;
}
o(wB, "isElement");
function TB(e) {
  let t = e.ownerDocument.getSelection();
  if (t?.focusNode && $e$1(e)) {
    let n = sn$1(t.focusNode);
    if (n) {
      if (!t.isCollapsed) {
        var r7;
        let i = ((r7 = n.firstChild) === null || r7 === void 0 ? void 0 : r7.nodeType) === 3 ? n.firstChild : n;
        t.setBaseAndExtent(i, 0, i, 0);
      }
    } else
      t.setBaseAndExtent(e, 0, e, 0);
  }
}
o(TB, "updateSelectionOnFocus");
function an$1(e, t) {
  return ie$1().eventWrapper(e);
}
o(an$1, "wrapEvent");
function ht$1(e) {
  let t = gB(e, ia$1), r7 = jn(e.ownerDocument);
  (t ?? e.ownerDocument.body) !== r7 && (t ? an$1(() => t.focus()) : an$1(() => r7?.blur()), TB(t ?? e.ownerDocument.body));
}
o(ht$1, "focusElement");
function RB(e) {
  !ia$1(e) || !(jn(e.ownerDocument) === e) || an$1(() => e.blur());
}
o(RB, "blurElement");
var ut$1 = {};
ut$1.click = (e, t, r7) => {
  let n = t.closest("button,input,label,select,textarea"), i = n && X$1(n, "label") && n.control;
  if (i && i !== t)
    return () => {
      ia$1(i) && (ht$1(i), r7.dispatchEvent(i, bB(e)));
    };
  if (X$1(t, "input", {
    type: "file"
  }))
    return () => {
      RB(t), t.dispatchEvent(new (Ae(t)).Event("fileDialog")), ht$1(t);
    };
};
var ii = Symbol("Displayed value in UI"), Er$1 = Symbol("Displayed selection in UI"), Uh = Symbol("Initial value to compare on blur");
function SB(e) {
  return typeof e == "object" && ii in e;
}
o(SB, "isUIValue");
function _B(e) {
  return !!e && typeof e == "object" && Er$1 in e;
}
o(_B, "isUISelectionStart");
function CB(e, t) {
  e[Uh] === void 0 && (e[Uh] = e.value), e[ii] = t, e.value = Object.assign(new String(t), {
    [ii]: true
  });
}
o(CB, "setUIValue");
function Ge(e) {
  return e[ii] === void 0 ? e.value : String(e[ii]);
}
o(Ge, "getUIValue");
function sa(e) {
  e[ii] = void 0;
}
o(sa, "setUIValueClean");
function Vh(e) {
  e[Uh] = void 0;
}
o(Vh, "clearInitialValue");
function PB(e) {
  return e[Uh];
}
o(PB, "getInitialValue");
function AB(e, t) {
  e[Er$1] = t;
}
o(AB, "setUISelectionRaw");
function Yt(e, { focusOffset: t, anchorOffset: r7 = t }, n = "replace") {
  let i = Ge(e).length, s = /* @__PURE__ */ o((p5) => Math.max(0, Math.min(i, p5)), "sanitizeOffset"), a = n === "replace" || e[Er$1] === void 0 ? s(r7) : e[Er$1].anchorOffset, l = s(t), u = Math.min(a, l), c = Math.max(a, l);
  if (e[Er$1] = {
    anchorOffset: a,
    focusOffset: l
  }, e.selectionStart === u && e.selectionEnd === c)
    return;
  let d = Object.assign(new Number(u), {
    [Er$1]: true
  });
  try {
    e.setSelectionRange(d, c);
  } catch {
  }
}
o(Yt, "setUISelection");
function xr$1(e) {
  var t, r7, n;
  let i = (n = e[Er$1]) !== null && n !== void 0 ? n : {
    anchorOffset: (t = e.selectionStart) !== null && t !== void 0 ? t : 0,
    focusOffset: (r7 = e.selectionEnd) !== null && r7 !== void 0 ? r7 : 0
  };
  return {
    ...i,
    startOffset: Math.min(i.anchorOffset, i.focusOffset),
    endOffset: Math.max(i.anchorOffset, i.focusOffset)
  };
}
o(xr$1, "getUISelection");
function OB(e) {
  return !!e[Er$1];
}
o(OB, "hasUISelection");
function aa$1(e) {
  e[Er$1] = void 0;
}
o(aa$1, "setUISelectionClean");
var zh = globalThis.parseInt;
function IB(e) {
  let t = e.replace(/\D/g, "");
  if (t.length < 2)
    return e;
  let r7 = zh(t[0], 10), n = zh(t[1], 10);
  if (r7 >= 3 || r7 === 2 && n >= 4) {
    let i;
    return r7 >= 3 ? i = 1 : i = 2, qB(t, i);
  }
  return e.length === 2 ? e : qB(t, 2);
}
o(IB, "buildTimeValue");
function qB(e, t) {
  let r7 = e.slice(0, t), n = Math.min(zh(r7, 10), 23), i = e.slice(t), s = zh(i, 10), a = Math.min(s, 59);
  return `${n.toString().padStart(2, "0")}:${a.toString().padStart(2, "0")}`;
}
o(qB, "build");
function bT(e, t) {
  let r7 = e.cloneNode();
  return r7.value = t, r7.value === t;
}
o(bT, "isValidDateOrTimeValue");
var MB = /* @__PURE__ */ (function(e) {
  return e.email = "email", e.password = "password", e.search = "search", e.telephone = "telephone", e.text = "text", e.url = "url", e;
})(MB || {});
function NB(e) {
  var t;
  let r7 = (t = e.getAttribute("maxlength")) !== null && t !== void 0 ? t : "";
  return /^\d+$/.test(r7) && Number(r7) >= 0 ? Number(r7) : void 0;
}
o(NB, "getMaxLength");
function jB(e) {
  return X$1(e, "textarea") || X$1(e, "input") && e.type in MB;
}
o(jB, "supportsMaxLength");
function Yh(e, t, r7, n) {
  if (Wh(e) && t + r7 >= 0 && t + r7 <= e.nodeValue.length)
    return {
      node: e,
      offset: t + r7
    };
  let i = kB(e, t, r7);
  if (i) {
    if (Wh(i))
      return {
        node: i,
        offset: r7 > 0 ? Math.min(1, i.nodeValue.length) : Math.max(i.nodeValue.length - 1, 0)
      };
    if (X$1(i, "br")) {
      let s = kB(i, void 0, r7);
      return s ? Wh(s) ? {
        node: s,
        offset: r7 > 0 ? 0 : s.nodeValue.length
      } : r7 < 0 && X$1(s, "br") ? {
        node: i.parentNode,
        offset: Gh(i)
      } : {
        node: s.parentNode,
        offset: Gh(s) + (r7 > 0 ? 0 : 1)
      } : r7 < 0 && n === "deleteContentBackward" ? {
        node: i.parentNode,
        offset: Gh(i)
      } : void 0;
    } else
      return {
        node: i.parentNode,
        offset: Gh(i) + (r7 > 0 ? 1 : 0)
      };
  }
}
o(Yh, "getNextCursorPosition");
function kB(e, t, r7) {
  let n = Number(t) + (r7 < 0 ? -1 : 0);
  return t !== void 0 && gT(e) && n >= 0 && n < e.children.length && (e = e.children[n]), Sbe(e, r7 === 1 ? "next" : "previous", Rbe);
}
o(kB, "getNextCharacterContentNode");
function Rbe(e) {
  if (Wh(e))
    return true;
  if (gT(e)) {
    if (X$1(e, [
      "input",
      "textarea"
    ]))
      return e.type !== "hidden";
    if (X$1(e, "br"))
      return true;
  }
  return false;
}
o(Rbe, "isTreatedAsCharacterContent");
function Gh(e) {
  let t = 0;
  for (; e.previousSibling; )
    t++, e = e.previousSibling;
  return t;
}
o(Gh, "getOffset");
function gT(e) {
  return e.nodeType === 1;
}
o(gT, "isElement");
function Wh(e) {
  return e.nodeType === 3;
}
o(Wh, "isTextNode");
function Sbe(e, t, r7) {
  for (; ; ) {
    var n;
    let i = e[`${t}Sibling`];
    if (i) {
      if (e = _be(i, t === "next" ? "first" : "last"), r7(e))
        return e;
    } else if (e.parentNode && (!gT(e.parentNode) || !wt$1(e.parentNode) && e.parentNode !== ((n = e.ownerDocument) === null || n === void 0 ? void 0 : n.body)))
      e = e.parentNode;
    else
      break;
  }
}
o(Sbe, "walkNodes");
function _be(e, t) {
  for (; e.hasChildNodes(); )
    e = e[`${t}Child`];
  return e;
}
o(_be, "getDescendant");
var la = Symbol("Track programmatic changes for React workaround");
function Cbe(e) {
  return Object.getOwnPropertyNames(e).some((t) => t.startsWith("__react")) && Ae(e).REACT_VERSION === 17;
}
o(Cbe, "isReact17Element");
function LB(e) {
  Cbe(e) && (e[la] = {
    previousValue: String(e.value),
    tracked: []
  });
}
o(LB, "startTrackValue");
function FB(e, t) {
  var r7, n;
  (n = e[la]) === null || n === void 0 || (r7 = n.tracked) === null || r7 === void 0 || r7.push(t), e[la] || (sa(e), Yt(e, {
    focusOffset: t.length
  }));
}
o(FB, "trackOrSetValue");
function DB(e, t) {
  var r7;
  let n = e[la];
  if (e[la] = void 0, !(!(n == null || (r7 = n.tracked) === null || r7 === void 0) && r7.length))
    return;
  let i = n.tracked.length === 2 && n.tracked[0] === n.previousValue && n.tracked[1] === e.value;
  i || sa(e), OB(e) && Yt(e, {
    focusOffset: i ? t : e.value.length
  });
}
o(DB, "commitValueAfterInput");
function Kh(e) {
  let t = Pbe(e);
  if (t && $e$1(t))
    return {
      type: "input",
      selection: xr$1(t)
    };
  let r7 = t?.ownerDocument.getSelection();
  return {
    type: sn$1(e) && r7?.anchorNode && sn$1(r7.anchorNode) ? "contenteditable" : "default",
    selection: r7
  };
}
o(Kh, "getTargetTypeAndSelection");
function Pbe(e) {
  return e.nodeType === 1 ? e : e.parentElement;
}
o(Pbe, "getElement");
function $B(e) {
  let t = Kh(e);
  if (t.type === "input")
    return t.selection;
  if (t.type === "contenteditable") {
    var r7;
    return (r7 = t.selection) === null || r7 === void 0 ? void 0 : r7.getRangeAt(0);
  }
}
o($B, "getInputRange");
function Kt({ focusNode: e, focusOffset: t, anchorNode: r7 = e, anchorOffset: n = t }) {
  var i, s;
  if (Kh(e).type === "input")
    return Yt(e, {
      anchorOffset: n,
      focusOffset: t
    });
  (s = r7.ownerDocument) === null || s === void 0 || (i = s.getSelection()) === null || i === void 0 || i.setBaseAndExtent(r7, n, e, t);
}
o(Kt, "setSelection");
function HB(e) {
  return X$1(e, "input") && [
    "date",
    "time"
  ].includes(e.type);
}
o(HB, "isDateOrTime");
function Xt(e, t, r7, n = "insertText") {
  let i = $B(t);
  i && (!HB(t) && !e.dispatchUIEvent(t, "beforeinput", {
    inputType: n,
    data: r7
  }) || ("startContainer" in i ? Abe(e, t, i, r7, n) : Obe(e, t, i, r7, n)));
}
o(Xt, "input");
function Abe(e, t, r7, n, i) {
  let s = false;
  if (!r7.collapsed)
    s = true, r7.deleteContents();
  else if ([
    "deleteContentBackward",
    "deleteContentForward"
  ].includes(i)) {
    let a = Yh(r7.startContainer, r7.startOffset, i === "deleteContentBackward" ? -1 : 1, i);
    if (a) {
      s = true;
      let l = r7.cloneRange();
      l.comparePoint(a.node, a.offset) < 0 ? l.setStart(a.node, a.offset) : l.setEnd(a.node, a.offset), l.deleteContents();
    }
  }
  if (n)
    if (r7.endContainer.nodeType === 3) {
      let a = r7.endOffset;
      r7.endContainer.insertData(a, n), r7.setStart(r7.endContainer, a + n.length), r7.setEnd(r7.endContainer, a + n.length);
    } else {
      let a = t.ownerDocument.createTextNode(n);
      r7.insertNode(a), r7.setStart(a, n.length), r7.setEnd(a, n.length);
    }
  (s || n) && e.dispatchUIEvent(t, "input", {
    inputType: i
  });
}
o(Abe, "editContenteditable");
function Obe(e, t, r7, n, i) {
  let s = n;
  if (jB(t)) {
    let c = NB(t);
    if (c !== void 0 && n.length > 0) {
      let d = c - t.value.length;
      if (d > 0)
        s = n.substring(0, d);
      else
        return;
    }
  }
  let { newValue: a, newOffset: l, oldValue: u } = qbe(s, t, r7, i);
  a === u && l === r7.startOffset && l === r7.endOffset || X$1(t, "input", {
    type: "number"
  }) && !Ibe(a) || (CB(t, a), Kt({
    focusNode: t,
    anchorOffset: l,
    focusOffset: l
  }), HB(t) ? bT(t, a) && (BB(e, t, l, {}), e.dispatchUIEvent(t, "change"), Vh(t)) : BB(e, t, l, {
    data: n,
    inputType: i
  }));
}
o(Obe, "editInputElement");
function qbe(e, t, { startOffset: r7, endOffset: n }, i) {
  let s = Ge(t), a = Math.max(0, r7 === n && i === "deleteContentBackward" ? r7 - 1 : r7), l = s.substring(0, a), u = Math.min(s.length, r7 === n && i === "deleteContentForward" ? r7 + 1 : n), c = s.substring(u, s.length), d = `${l}${e}${c}`, p5 = a + e.length;
  if (X$1(t, "input", {
    type: "time"
  })) {
    let f = IB(d);
    f !== "" && bT(t, f) && (d = f, p5 = f.length);
  }
  return {
    oldValue: s,
    newValue: d,
    newOffset: p5
  };
}
o(qbe, "calculateNewValue");
function BB(e, t, r7, n) {
  e.dispatchUIEvent(t, "input", n), DB(t, r7);
}
o(BB, "commitInput");
function Ibe(e) {
  var t, r7;
  let n = e.split("e", 2);
  return !(/[^\d.\-e]/.test(e) || Number((t = e.match(/-/g)) === null || t === void 0 ? void 0 : t.length) > 2 || Number((r7 = e.match(/\./g)) === null || r7 === void 0 ? void 0 : r7.length) > 1 || n[1] && !/^-?\d*$/.test(n[1]));
}
o(Ibe, "isValidNumberInput");
ut$1.cut = (e, t, r7) => () => {
  Wt(t) && Xt(r7, t, "", "deleteByCut");
};
function UB(e) {
  return e ? wt$1(e) ? e.textContent : Ge(e) : null;
}
o(UB, "getValueOrTextContent");
function VB(e) {
  let t = Ae(e);
  for (let r7 = e; r7?.ownerDocument; r7 = r7.parentElement) {
    let { display: n, visibility: i } = t.getComputedStyle(r7);
    if (n === "none" || i === "hidden")
      return false;
  }
  return true;
}
o(VB, "isVisible");
function zB(e, t) {
  let r7 = e.ownerDocument, n = r7.querySelectorAll($h), i = Array.from(n).filter((u) => u === e || !(Number(u.getAttribute("tabindex")) < 0 || rt(u)));
  Number(e.getAttribute("tabindex")) >= 0 && i.sort((u, c) => {
    let d = Number(u.getAttribute("tabindex")), p5 = Number(c.getAttribute("tabindex"));
    return d === p5 ? 0 : d === 0 ? 1 : p5 === 0 ? -1 : d - p5;
  });
  let s = {}, a = [
    r7.body
  ], l = X$1(e, "input", {
    type: "radio"
  }) ? e.name : void 0;
  i.forEach((u) => {
    let c = u;
    if (X$1(c, "input", {
      type: "radio"
    }) && c.name) {
      if (c === e) {
        a.push(c);
        return;
      } else if (c.name === l)
        return;
      if (c.checked) {
        a = a.filter((d) => !X$1(d, "input", {
          type: "radio",
          name: c.name
        })), a.push(c), s[c.name] = c;
        return;
      }
      if (typeof s[c.name] < "u")
        return;
    }
    a.push(c);
  });
  for (let u = a.findIndex((c) => c === e); ; )
    if (u += t ? -1 : 1, u === a.length ? u = 0 : u === -1 && (u = a.length - 1), a[u] === e || a[u] === r7.body || VB(a[u]))
      return a[u];
}
o(zB, "getTabDestination");
function vT(e, t) {
  if ($e$1(e)) {
    let r7 = xr$1(e);
    Kt({
      focusNode: e,
      focusOffset: r7.startOffset === r7.endOffset ? r7.focusOffset + t : t < 0 ? r7.startOffset : r7.endOffset
    });
  } else {
    let r7 = e.ownerDocument.getSelection();
    if (!r7?.focusNode)
      return;
    if (r7.isCollapsed) {
      let n = Yh(r7.focusNode, r7.focusOffset, t);
      n && Kt({
        focusNode: n.node,
        focusOffset: n.offset
      });
    } else
      r7[t < 0 ? "collapseToStart" : "collapseToEnd"]();
  }
}
o(vT, "moveSelection");
function Xh(e) {
  if ($e$1(e))
    return Kt({
      focusNode: e,
      anchorOffset: 0,
      focusOffset: Ge(e).length
    });
  var t;
  let r7 = (t = sn$1(e)) !== null && t !== void 0 ? t : e.ownerDocument.body;
  Kt({
    focusNode: r7,
    anchorOffset: 0,
    focusOffset: r7.childNodes.length
  });
}
o(Xh, "selectAll");
function GB(e) {
  if ($e$1(e))
    return xr$1(e).startOffset === 0 && xr$1(e).endOffset === Ge(e).length;
  var t;
  let r7 = (t = sn$1(e)) !== null && t !== void 0 ? t : e.ownerDocument.body, n = e.ownerDocument.getSelection();
  return n?.anchorNode === r7 && n.focusNode === r7 && n.anchorOffset === 0 && n.focusOffset === r7.childNodes.length;
}
o(GB, "isAllSelected");
function kn(e, t, r7) {
  var n;
  if ($e$1(e))
    return Kt({
      focusNode: e,
      anchorOffset: t,
      focusOffset: r7
    });
  if (wt$1(e) && ((n = e.firstChild) === null || n === void 0 ? void 0 : n.nodeType) === 3)
    return Kt({
      focusNode: e.firstChild,
      anchorOffset: t,
      focusOffset: r7
    });
  throw new Error("Not implemented. The result of this interaction is unreliable.");
}
o(kn, "setSelectionRange");
function ua(e, t, r7) {
  let n = Ae(t), i = Array.from(t.ownerDocument.querySelectorAll(t.name ? `input[type="radio"][name="${n.CSS.escape(t.name)}"]` : 'input[type="radio"][name=""], input[type="radio"]:not([name])'));
  for (let s = i.findIndex((a) => a === t) + r7; ; s += r7) {
    if (i[s] || (s = r7 > 0 ? 0 : i.length - 1), i[s] === t)
      return;
    if (!rt(i[s])) {
      ht$1(i[s]), e.dispatchUIEvent(i[s], "click");
      return;
    }
  }
}
o(ua, "walkRadio");
ut$1.keydown = (e, t, r7) => {
  var n, i;
  return (i = (n = WB[e.key]) === null || n === void 0 ? void 0 : n.call(WB, e, t, r7)) !== null && i !== void 0 ? i : Mbe(e, t, r7);
};
var WB = {
  ArrowDown: /* @__PURE__ */ o((e, t, r7) => {
    if (X$1(t, "input", {
      type: "radio"
    }))
      return () => ua(r7, t, 1);
  }, "ArrowDown"),
  ArrowLeft: /* @__PURE__ */ o((e, t, r7) => X$1(t, "input", {
    type: "radio"
  }) ? () => ua(r7, t, -1) : () => vT(t, -1), "ArrowLeft"),
  ArrowRight: /* @__PURE__ */ o((e, t, r7) => X$1(t, "input", {
    type: "radio"
  }) ? () => ua(r7, t, 1) : () => vT(t, 1), "ArrowRight"),
  ArrowUp: /* @__PURE__ */ o((e, t, r7) => {
    if (X$1(t, "input", {
      type: "radio"
    }))
      return () => ua(r7, t, -1);
  }, "ArrowUp"),
  Backspace: /* @__PURE__ */ o((e, t, r7) => {
    if (Wt(t))
      return () => {
        Xt(r7, t, "", "deleteContentBackward");
      };
  }, "Backspace"),
  Delete: /* @__PURE__ */ o((e, t, r7) => {
    if (Wt(t))
      return () => {
        Xt(r7, t, "", "deleteContentForward");
      };
  }, "Delete"),
  End: /* @__PURE__ */ o((e, t) => {
    if (X$1(t, [
      "input",
      "textarea"
    ]) || wt$1(t))
      return () => {
        var r7, n;
        let i = (n = (r7 = UB(t)) === null || r7 === void 0 ? void 0 : r7.length) !== null && n !== void 0 ? n : (
          /* istanbul ignore next */
          0
        );
        kn(t, i, i);
      };
  }, "End"),
  Home: /* @__PURE__ */ o((e, t) => {
    if (X$1(t, [
      "input",
      "textarea"
    ]) || wt$1(t))
      return () => {
        kn(t, 0, 0);
      };
  }, "Home"),
  PageDown: /* @__PURE__ */ o((e, t) => {
    if (X$1(t, [
      "input"
    ]))
      return () => {
        let r7 = Ge(t).length;
        kn(t, r7, r7);
      };
  }, "PageDown"),
  PageUp: /* @__PURE__ */ o((e, t) => {
    if (X$1(t, [
      "input"
    ]))
      return () => {
        kn(t, 0, 0);
      };
  }, "PageUp"),
  Tab: /* @__PURE__ */ o((e, t, r7) => () => {
    let n = zB(t, r7.system.keyboard.modifiers.Shift);
    ht$1(n), $e$1(n) && Yt(n, {
      anchorOffset: 0,
      focusOffset: n.value.length
    });
  }, "Tab")
}, Mbe = /* @__PURE__ */ o((e, t, r7) => {
  if (e.code === "KeyA" && r7.system.keyboard.modifiers.Control)
    return () => Xh(t);
}, "combinationBehavior");
ut$1.keypress = (e, t, r7) => {
  if (e.key === "Enter") {
    if (X$1(t, "button") || X$1(t, "input") && Nbe.includes(t.type) || X$1(t, "a") && t.href)
      return () => {
        r7.dispatchUIEvent(t, "click");
      };
    if (X$1(t, "input")) {
      let n = t.form, i = n?.querySelector('input[type="submit"], button:not([type]), button[type="submit"]');
      return i ? () => r7.dispatchUIEvent(i, "click") : n && jbe.includes(t.type) && n.querySelectorAll("input").length === 1 ? () => r7.dispatchUIEvent(
        n,
        "submit"
      ) : void 0;
    }
  }
  if (Wt(t)) {
    let n = e.key === "Enter" ? wt$1(t) && !r7.system.keyboard.modifiers.Shift ? "insertParagraph" : "insertLineBreak" : "insertText", i = e.key === "Enter" ? `
` : e.key;
    return () => Xt(r7, t, i, n);
  }
};
var Nbe = [
  "button",
  "color",
  "file",
  "image",
  "reset",
  "submit"
], jbe = [
  "email",
  "month",
  "password",
  "search",
  "tel",
  "text",
  "url",
  "week"
];
ut$1.keyup = (e, t, r7) => {
  var n;
  return (n = YB[e.key]) === null || n === void 0 ? void 0 : n.call(YB, e, t, r7);
};
var YB = {
  " ": /* @__PURE__ */ o((e, t, r7) => {
    if (Hh(t))
      return () => r7.dispatchUIEvent(t, "click");
  }, " ")
};
ut$1.paste = (e, t, r7) => {
  if (Wt(t))
    return () => {
      var n;
      let i = (n = e.clipboardData) === null || n === void 0 ? void 0 : n.getData("text");
      i && Xt(r7, t, i, "insertFromPaste");
    };
};
var ET = {
  auxclick: {
    EventType: "PointerEvent",
    defaultInit: {
      bubbles: true,
      cancelable: true,
      composed: true
    }
  },
  beforeinput: {
    EventType: "InputEvent",
    defaultInit: {
      bubbles: true,
      cancelable: true,
      composed: true
    }
  },
  blur: {
    EventType: "FocusEvent",
    defaultInit: {
      bubbles: false,
      cancelable: false,
      composed: true
    }
  },
  click: {
    EventType: "PointerEvent",
    defaultInit: {
      bubbles: true,
      cancelable: true,
      composed: true
    }
  },
  contextmenu: {
    EventType: "PointerEvent",
    defaultInit: {
      bubbles: true,
      cancelable: true,
      composed: true
    }
  },
  copy: {
    EventType: "ClipboardEvent",
    defaultInit: {
      bubbles: true,
      cancelable: true,
      composed: true
    }
  },
  change: {
    EventType: "Event",
    defaultInit: {
      bubbles: true,
      cancelable: false
    }
  },
  cut: {
    EventType: "ClipboardEvent",
    defaultInit: {
      bubbles: true,
      cancelable: true,
      composed: true
    }
  },
  dblclick: {
    EventType: "MouseEvent",
    defaultInit: {
      bubbles: true,
      cancelable: true,
      composed: true
    }
  },
  focus: {
    EventType: "FocusEvent",
    defaultInit: {
      bubbles: false,
      cancelable: false,
      composed: true
    }
  },
  focusin: {
    EventType: "FocusEvent",
    defaultInit: {
      bubbles: true,
      cancelable: false,
      composed: true
    }
  },
  focusout: {
    EventType: "FocusEvent",
    defaultInit: {
      bubbles: true,
      cancelable: false,
      composed: true
    }
  },
  keydown: {
    EventType: "KeyboardEvent",
    defaultInit: {
      bubbles: true,
      cancelable: true,
      composed: true
    }
  },
  keypress: {
    EventType: "KeyboardEvent",
    defaultInit: {
      bubbles: true,
      cancelable: true,
      composed: true
    }
  },
  keyup: {
    EventType: "KeyboardEvent",
    defaultInit: {
      bubbles: true,
      cancelable: true,
      composed: true
    }
  },
  paste: {
    EventType: "ClipboardEvent",
    defaultInit: {
      bubbles: true,
      cancelable: true,
      composed: true
    }
  },
  input: {
    EventType: "InputEvent",
    defaultInit: {
      bubbles: true,
      cancelable: false,
      composed: true
    }
  },
  mousedown: {
    EventType: "MouseEvent",
    defaultInit: {
      bubbles: true,
      cancelable: true,
      composed: true
    }
  },
  mouseenter: {
    EventType: "MouseEvent",
    defaultInit: {
      bubbles: false,
      cancelable: false,
      composed: true
    }
  },
  mouseleave: {
    EventType: "MouseEvent",
    defaultInit: {
      bubbles: false,
      cancelable: false,
      composed: true
    }
  },
  mousemove: {
    EventType: "MouseEvent",
    defaultInit: {
      bubbles: true,
      cancelable: true,
      composed: true
    }
  },
  mouseout: {
    EventType: "MouseEvent",
    defaultInit: {
      bubbles: true,
      cancelable: true,
      composed: true
    }
  },
  mouseover: {
    EventType: "MouseEvent",
    defaultInit: {
      bubbles: true,
      cancelable: true,
      composed: true
    }
  },
  mouseup: {
    EventType: "MouseEvent",
    defaultInit: {
      bubbles: true,
      cancelable: true,
      composed: true
    }
  },
  pointerover: {
    EventType: "PointerEvent",
    defaultInit: {
      bubbles: true,
      cancelable: true,
      composed: true
    }
  },
  pointerenter: {
    EventType: "PointerEvent",
    defaultInit: {
      bubbles: false,
      cancelable: false
    }
  },
  pointerdown: {
    EventType: "PointerEvent",
    defaultInit: {
      bubbles: true,
      cancelable: true,
      composed: true
    }
  },
  pointermove: {
    EventType: "PointerEvent",
    defaultInit: {
      bubbles: true,
      cancelable: true,
      composed: true
    }
  },
  pointerup: {
    EventType: "PointerEvent",
    defaultInit: {
      bubbles: true,
      cancelable: true,
      composed: true
    }
  },
  pointercancel: {
    EventType: "PointerEvent",
    defaultInit: {
      bubbles: true,
      cancelable: false,
      composed: true
    }
  },
  pointerout: {
    EventType: "PointerEvent",
    defaultInit: {
      bubbles: true,
      cancelable: true,
      composed: true
    }
  },
  pointerleave: {
    EventType: "PointerEvent",
    defaultInit: {
      bubbles: false,
      cancelable: false
    }
  },
  submit: {
    EventType: "Event",
    defaultInit: {
      bubbles: true,
      cancelable: true
    }
  }
};
function KB(e) {
  return ET[e].EventType;
}
o(KB, "getEventClass");
var kbe = [
  "MouseEvent",
  "PointerEvent"
];
function XB(e) {
  return kbe.includes(KB(e));
}
o(XB, "isMouseEvent");
function JB(e) {
  return KB(e) === "KeyboardEvent";
}
o(JB, "isKeyboardEvent");
var Lbe = {
  ClipboardEvent: [
    Dbe
  ],
  Event: [],
  FocusEvent: [
    ca,
    $be
  ],
  InputEvent: [
    ca,
    Bbe
  ],
  MouseEvent: [
    ca,
    xT,
    QB
  ],
  PointerEvent: [
    ca,
    xT,
    QB,
    Ube
  ],
  KeyboardEvent: [
    ca,
    xT,
    Hbe
  ]
};
function wT(e, t, r7) {
  let n = Ae(t), { EventType: i, defaultInit: s } = ET[e], a = new (Fbe(n))[i](e, s);
  return Lbe[i].forEach((l) => l(a, r7 ?? {})), a;
}
o(wT, "createEvent");
function Fbe(e) {
  var U, N, W, Y, ae, pe2, Oe, F, j, K7, G, Z, ve, qe2, Qe;
  var t;
  let r7 = (t = e.Event) !== null && t !== void 0 ? t : (U = class {
  }, o(U, "Event"), U);
  var n;
  let i = (n = e.AnimationEvent) !== null && n !== void 0 ? n : (N = class extends r7 {
  }, o(N, "AnimationEvent"), N);
  var s;
  let a = (s = e.ClipboardEvent) !== null && s !== void 0 ? s : (W = class extends r7 {
  }, o(W, "ClipboardEvent"), W);
  var l;
  let u = (l = e.PopStateEvent) !== null && l !== void 0 ? l : (Y = class extends r7 {
  }, o(Y, "PopStateEvent"), Y);
  var c;
  let d = (c = e.ProgressEvent) !== null && c !== void 0 ? c : (ae = class extends r7 {
  }, o(ae, "ProgressEvent"), ae);
  var p5;
  let f = (p5 = e.TransitionEvent) !== null && p5 !== void 0 ? p5 : (pe2 = class extends r7 {
  }, o(pe2, "TransitionEvent"), pe2);
  var m;
  let h5 = (m = e.UIEvent) !== null && m !== void 0 ? m : (Oe = class extends r7 {
  }, o(Oe, "UIEvent"), Oe);
  var b;
  let v5 = (b = e.CompositionEvent) !== null && b !== void 0 ? b : (F = class extends h5 {
  }, o(F, "CompositionEvent"), F);
  var g;
  let w5 = (g = e.FocusEvent) !== null && g !== void 0 ? g : (j = class extends h5 {
  }, o(j, "FocusEvent"), j);
  var E;
  let R = (E = e.InputEvent) !== null && E !== void 0 ? E : (K7 = class extends h5 {
  }, o(K7, "InputEvent"), K7);
  var S;
  let P = (S = e.KeyboardEvent) !== null && S !== void 0 ? S : (G = class extends h5 {
  }, o(G, "KeyboardEvent"), G);
  var _5;
  let C5 = (_5 = e.MouseEvent) !== null && _5 !== void 0 ? _5 : (Z = class extends h5 {
  }, o(Z, "MouseEvent"), Z);
  var O;
  let L = (O = e.DragEvent) !== null && O !== void 0 ? O : (ve = class extends C5 {
  }, o(ve, "DragEvent"), ve);
  var q;
  let D = (q = e.PointerEvent) !== null && q !== void 0 ? q : (qe2 = class extends C5 {
  }, o(qe2, "PointerEvent"), qe2);
  var H;
  let M7 = (H = e.TouchEvent) !== null && H !== void 0 ? H : (Qe = class extends h5 {
  }, o(Qe, "TouchEvent"), Qe);
  return {
    Event: r7,
    AnimationEvent: i,
    ClipboardEvent: a,
    PopStateEvent: u,
    ProgressEvent: d,
    TransitionEvent: f,
    UIEvent: h5,
    CompositionEvent: v5,
    FocusEvent: w5,
    InputEvent: R,
    KeyboardEvent: P,
    MouseEvent: C5,
    DragEvent: L,
    PointerEvent: D,
    TouchEvent: M7
  };
}
o(Fbe, "getEventConstructors");
function ln$1(e, t) {
  for (let [r7, n] of Object.entries(t))
    Object.defineProperty(e, r7, {
      get: /* @__PURE__ */ o(() => n ?? null, "get")
    });
}
o(ln$1, "assignProps");
function Me(e) {
  return Number(e ?? 0);
}
o(Me, "sanitizeNumber");
function Dbe(e, { clipboardData: t }) {
  ln$1(e, {
    clipboardData: t
  });
}
o(Dbe, "initClipboardEvent");
function $be(e, { relatedTarget: t }) {
  ln$1(e, {
    relatedTarget: t
  });
}
o($be, "initFocusEvent");
function Bbe(e, { data: t, inputType: r7, isComposing: n }) {
  ln$1(e, {
    data: t,
    isComposing: !!n,
    inputType: String(r7)
  });
}
o(Bbe, "initInputEvent");
function ca(e, { view: t, detail: r7 }) {
  ln$1(e, {
    view: t,
    detail: Me(r7 ?? 0)
  });
}
o(ca, "initUIEvent");
function xT(e, {
  altKey: t,
  ctrlKey: r7,
  metaKey: n,
  shiftKey: i,
  modifierAltGraph: s,
  modifierCapsLock: a,
  modifierFn: l,
  modifierFnLock: u,
  modifierNumLock: c,
  modifierScrollLock: d,
  modifierSymbol: p5,
  modifierSymbolLock: f
}) {
  ln$1(e, {
    altKey: !!t,
    ctrlKey: !!r7,
    metaKey: !!n,
    shiftKey: !!i,
    getModifierState(m) {
      return !!{
        Alt: t,
        AltGraph: s,
        CapsLock: a,
        Control: r7,
        Fn: l,
        FnLock: u,
        Meta: n,
        NumLock: c,
        ScrollLock: d,
        Shift: i,
        Symbol: p5,
        SymbolLock: f
      }[m];
    }
  });
}
o(xT, "initUIEventModifiers");
function Hbe(e, { key: t, code: r7, location: n, repeat: i, isComposing: s, charCode: a }) {
  ln$1(e, {
    key: String(t),
    code: String(r7),
    location: Me(n),
    repeat: !!i,
    isComposing: !!s,
    charCode: a
  });
}
o(Hbe, "initKeyboardEvent");
function QB(e, {
  x: t,
  y: r7,
  screenX: n,
  screenY: i,
  clientX: s = t,
  clientY: a = r7,
  button: l,
  buttons: u,
  relatedTarget: c,
  offsetX: d,
  offsetY: p5,
  pageX: f,
  pageY: m
}) {
  ln$1(e, {
    screenX: Me(n),
    screenY: Me(i),
    clientX: Me(s),
    x: Me(s),
    clientY: Me(a),
    y: Me(a),
    button: Me(l),
    buttons: Me(u),
    relatedTarget: c,
    offsetX: Me(d),
    offsetY: Me(p5),
    pageX: Me(f),
    pageY: Me(m)
  });
}
o(QB, "initMouseEvent");
function Ube(e, { pointerId: t, width: r7, height: n, pressure: i, tangentialPressure: s, tiltX: a, tiltY: l, twist: u, pointerType: c, isPrimary: d }) {
  ln$1(e, {
    pointerId: Me(t),
    width: Me(r7 ?? 1),
    height: Me(n ?? 1),
    pressure: Me(i),
    tangentialPressure: Me(s),
    tiltX: Me(a),
    tiltY: Me(l),
    twist: Me(u),
    pointerType: String(c),
    isPrimary: !!d
  });
}
o(Ube, "initPointerEvent");
function ZB(e, t, r7, n = false) {
  (XB(t) || JB(t)) && (r7 = {
    ...r7,
    ...this.system.getUIEventModifiers()
  });
  let i = wT(t, e, r7);
  return TT.call(this, e, i, n);
}
o(ZB, "dispatchUIEvent");
function TT(e, t, r7 = false) {
  var n;
  let i = t.type, s = r7 ? () => {
  } : (n = ut$1[i]) === null || n === void 0 ? void 0 : n.call(ut$1, t, e, this);
  if (s) {
    t.preventDefault();
    let a = false;
    return Object.defineProperty(t, "defaultPrevented", {
      get: /* @__PURE__ */ o(() => a, "get")
    }), Object.defineProperty(t, "preventDefault", {
      value: /* @__PURE__ */ o(() => {
        a = t.cancelable;
      }, "value")
    }), an$1(() => e.dispatchEvent(t)), a || s(), !a;
  }
  return an$1(() => e.dispatchEvent(t));
}
o(TT, "dispatchEvent");
function wr$1(e, t, r7) {
  let n = wT(t, e, r7);
  an$1(() => e.dispatchEvent(n));
}
o(wr$1, "dispatchDOMEvent");
var e2 = Symbol("patched focus/blur methods");
function RT(e) {
  if (e.prototype[e2])
    return;
  let { focus: t, blur: r7 } = e.prototype;
  Object.defineProperties(e.prototype, {
    focus: {
      configurable: true,
      get: /* @__PURE__ */ o(() => i, "get")
    },
    blur: {
      configurable: true,
      get: /* @__PURE__ */ o(() => s, "get")
    },
    [e2]: {
      configurable: true,
      get: /* @__PURE__ */ o(() => ({
        focus: t,
        blur: r7
      }), "get")
    }
  });
  let n;
  function i(a) {
    if (this.ownerDocument.visibilityState !== "hidden")
      return t.call(this, a);
    let l = t2(this.ownerDocument);
    if (l === this)
      return;
    let u = Symbol("focus call");
    n = u, l && (r7.call(l), wr$1(l, "blur", {
      relatedTarget: this
    }), wr$1(l, "focusout", {
      relatedTarget: n === u ? this : null
    })), n === u && (t.call(this, a), wr$1(this, "focus", {
      relatedTarget: l
    })), n === u && wr$1(this, "focusin", {
      relatedTarget: l
    });
  }
  o(i, "patchedFocus");
  function s() {
    if (this.ownerDocument.visibilityState !== "hidden")
      return r7.call(this);
    let a = t2(this.ownerDocument);
    if (a !== this)
      return;
    n = Symbol("blur call"), r7.call(this), wr$1(a, "blur", {
      relatedTarget: null
    }), wr$1(a, "focusout", {
      relatedTarget: null
    });
  }
  o(s, "patchedBlur");
}
o(RT, "patchFocus");
function t2(e) {
  let t = jn(e);
  return t?.tagName === "BODY" ? null : t;
}
o(t2, "getActiveTarget");
var ST = Symbol("Interceptor for programmatical calls");
function si(e, t, r7) {
  let n = Object.getOwnPropertyDescriptor(e.constructor.prototype, t), i = Object.getOwnPropertyDescriptor(e, t), s = n?.set ? "set" : "value";
  if (typeof n?.[s] != "function" || n[s][ST])
    throw new Error(`Element ${e.tagName} does not implement "${String(t)}".`);
  function a(...l) {
    let { applyNative: u = false, realArgs: c, then: d } = r7.call(this, ...l), p5 = (!u && i || n)[s];
    s === "set" ? p5.call(this, c) : p5.call(this, ...c), d?.();
  }
  o(a, "intercept"), a[ST] = ST, Object.defineProperty(e, t, {
    ...i ?? n,
    [s]: a
  });
}
o(si, "prepareInterceptor");
function r2(e) {
  si(e, "value", /* @__PURE__ */ o(function(r7) {
    let n = SB(r7);
    return n && LB(this), {
      applyNative: !!n,
      realArgs: Vbe(this, r7),
      then: n ? void 0 : () => FB(this, String(r7))
    };
  }, "interceptorImpl"));
}
o(r2, "prepareValueInterceptor");
function Vbe(e, t) {
  return X$1(e, "input", {
    type: "number"
  }) && String(t) !== "" && !Number.isNaN(Number(t)) ? String(Number(t)) : String(t);
}
o(Vbe, "sanitizeValue");
function n2(e) {
  si(e, "setSelectionRange", /* @__PURE__ */ o(function(r7, ...n) {
    let i = _B(r7);
    return {
      applyNative: !!i,
      realArgs: [
        Number(r7),
        ...n
      ],
      then: /* @__PURE__ */ o(() => i ? void 0 : aa$1(e), "then")
    };
  }, "interceptorImpl")), si(e, "selectionStart", /* @__PURE__ */ o(function(r7) {
    return {
      realArgs: r7,
      then: /* @__PURE__ */ o(() => aa$1(e), "then")
    };
  }, "interceptorImpl")), si(e, "selectionEnd", /* @__PURE__ */ o(function(r7) {
    return {
      realArgs: r7,
      then: /* @__PURE__ */ o(() => aa$1(e), "then")
    };
  }, "interceptorImpl")), si(e, "select", /* @__PURE__ */ o(function() {
    return {
      realArgs: [],
      then: /* @__PURE__ */ o(() => AB(e, {
        anchorOffset: 0,
        focusOffset: Ge(e).length
      }), "then")
    };
  }, "interceptorImpl"));
}
o(n2, "prepareSelectionInterceptor");
function o2(e) {
  si(e, "setRangeText", /* @__PURE__ */ o(function(...r7) {
    return {
      realArgs: r7,
      then: /* @__PURE__ */ o(() => {
        sa(e), aa$1(e);
      }, "then")
    };
  }, "interceptorImpl"));
}
o(o2, "prepareRangeTextInterceptor");
var ai = Symbol("Node prepared with document state workarounds");
function _T(e) {
  e[ai] || (e.addEventListener("focus", (t) => {
    let r7 = t.target;
    i2(r7);
  }, {
    capture: true,
    passive: true
  }), e.activeElement && i2(e.activeElement), e.addEventListener("blur", (t) => {
    let r7 = t.target, n = PB(r7);
    n !== void 0 && (r7.value !== n && wr$1(r7, "change"), Vh(r7));
  }, {
    capture: true,
    passive: true
  }), e[ai] = ai);
}
o(_T, "prepareDocument");
function i2(e) {
  e[ai] || (X$1(e, [
    "input",
    "textarea"
  ]) && (r2(e), n2(e), o2(e)), e[ai] = ai);
}
o(i2, "prepareElement");
function s2(e) {
  return zbe(e) ? e : e.ownerDocument;
}
o(s2, "getDocumentFromNode");
function zbe(e) {
  return e.nodeType === 9;
}
o(zbe, "isDocument");
var nt = /* @__PURE__ */ (function(e) {
  return e[e.Trigger = 2] = "Trigger", e[e.Call = 1] = "Call", e;
})({});
function Ln(e, t) {
  e.levelRefs[t] = {};
}
o(Ln, "setLevelRef");
function da(e, t) {
  return e.levelRefs[t];
}
o(da, "getLevelRef");
function ir(e) {
  let t = e.delay;
  if (typeof t == "number")
    return Promise.all([
      new Promise((r7) => globalThis.setTimeout(() => r7(), t)),
      e.advanceTimers(t)
    ]);
}
o(ir, "wait");
var Fn = /* @__PURE__ */ (function(e) {
  return e[e.EachTrigger = 4] = "EachTrigger", e[e.EachApiCall = 2] = "EachApiCall", e[e.EachTarget = 1] = "EachTarget", e[e.Never = 0] = "Never", e;
})({});
function Dn(e, t, r7) {
  return t in e ? Object.defineProperty(e, t, {
    value: r7,
    enumerable: true,
    configurable: true,
    writable: true
  }) : e[t] = r7, e;
}
o(Dn, "_define_property");
var Jt$1 = /* @__PURE__ */ (function(e) {
  return e[e.STANDARD = 0] = "STANDARD", e[e.LEFT = 1] = "LEFT", e[e.RIGHT = 2] = "RIGHT", e[e.NUMPAD = 3] = "NUMPAD", e;
})({}), Gbe = [
  "Alt",
  "AltGraph",
  "Control",
  "Fn",
  "Meta",
  "Shift",
  "Symbol"
];
function a2(e) {
  return Gbe.includes(e);
}
o(a2, "isModifierKey");
var Wbe = [
  "CapsLock",
  "FnLock",
  "NumLock",
  "ScrollLock",
  "SymbolLock"
];
function l2(e) {
  return Wbe.includes(e);
}
o(l2, "isModifierLock");
var CT = class CT2 {
  isKeyPressed(t) {
    return this.pressed.has(String(t.code));
  }
  getPressedKeys() {
    return this.pressed.values().map((t) => t.keyDef);
  }
  /** Press a key */
  async keydown(t, r7) {
    let n = String(r7.key), i = String(r7.code), s = Bh(t.config.document);
    this.setKeydownTarget(s), this.pressed.add(i, r7), a2(n) && (this.modifiers[n] = true);
    let a = t.dispatchUIEvent(s, "keydown", {
      key: n,
      code: i
    });
    l2(n) && !this.modifiers[n] && (this.modifiers[n] = true, this.modifierLockStart[n] = true), a && this.pressed.setUnprevented(i), a && this.hasKeyPress(n) && t.dispatchUIEvent(Bh(t.config.document), "keypress", {
      key: n,
      code: i,
      charCode: r7.key === "Enter" ? 13 : String(r7.key).charCodeAt(0)
    });
  }
  /** Release a key */
  async keyup(t, r7) {
    let n = String(r7.key), i = String(r7.code), s = this.pressed.isUnprevented(i);
    this.pressed.delete(i), a2(n) && !this.pressed.values().find((a) => a.keyDef.key === n) && (this.modifiers[n] = false), t.dispatchUIEvent(Bh(
      t.config.document
    ), "keyup", {
      key: n,
      code: i
    }, !s), l2(n) && this.modifiers[n] && (this.modifierLockStart[n] ? this.modifierLockStart[n] = false : this.modifiers[n] = false);
  }
  setKeydownTarget(t) {
    t !== this.lastKeydownTarget && (this.carryChar = ""), this.lastKeydownTarget = t;
  }
  hasKeyPress(t) {
    return (t.length === 1 || t === "Enter") && !this.modifiers.Control && !this.modifiers.Alt;
  }
  constructor(t) {
    Dn(this, "system", void 0), Dn(this, "modifiers", {
      Alt: false,
      AltGraph: false,
      CapsLock: false,
      Control: false,
      Fn: false,
      FnLock: false,
      Meta: false,
      NumLock: false,
      ScrollLock: false,
      Shift: false,
      Symbol: false,
      SymbolLock: false
    }), Dn(this, "pressed", new class {
      add(r7, n) {
        var i, s, a;
        (a = (i = this.registry)[s = r7]) !== null && a !== void 0 || (i[s] = {
          keyDef: n,
          unpreventedDefault: false
        });
      }
      has(r7) {
        return !!this.registry[r7];
      }
      setUnprevented(r7) {
        let n = this.registry[r7];
        n && (n.unpreventedDefault = true);
      }
      isUnprevented(r7) {
        var n;
        return !!(!((n = this.registry[r7]) === null || n === void 0) && n.unpreventedDefault);
      }
      delete(r7) {
        delete this.registry[r7];
      }
      values() {
        return Object.values(this.registry);
      }
      constructor() {
        Dn(this, "registry", {});
      }
    }()), Dn(this, "carryChar", ""), Dn(this, "lastKeydownTarget", void 0), Dn(this, "modifierLockStart", {}), this.system = t;
  }
};
o(CT, "KeyboardHost");
var Jh = CT;
var u2 = [
  // alphanumeric block - writing system
  ..."0123456789".split("").map((e) => ({
    code: `Digit${e}`,
    key: e
  })),
  ...")!@#$%^&*(".split("").map((e, t) => ({
    code: `Digit${t}`,
    key: e,
    shiftKey: true
  })),
  ..."abcdefghijklmnopqrstuvwxyz".split("").map((e) => ({
    code: `Key${e.toUpperCase()}`,
    key: e
  })),
  ..."ABCDEFGHIJKLMNOPQRSTUVWXYZ".split("").map((e) => ({
    code: `Key${e}`,
    key: e,
    shiftKey: true
  })),
  {
    code: "BracketLeft",
    key: "["
  },
  {
    code: "BracketLeft",
    key: "{",
    shiftKey: true
  },
  {
    code: "BracketRight",
    key: "]"
  },
  {
    code: "BracketRight",
    key: "}",
    shiftKey: true
  },
  // alphanumeric block - functional
  {
    code: "Space",
    key: " "
  },
  {
    code: "AltLeft",
    key: "Alt",
    location: Jt$1.LEFT
  },
  {
    code: "AltRight",
    key: "Alt",
    location: Jt$1.RIGHT
  },
  {
    code: "ShiftLeft",
    key: "Shift",
    location: Jt$1.LEFT
  },
  {
    code: "ShiftRight",
    key: "Shift",
    location: Jt$1.RIGHT
  },
  {
    code: "ControlLeft",
    key: "Control",
    location: Jt$1.LEFT
  },
  {
    code: "ControlRight",
    key: "Control",
    location: Jt$1.RIGHT
  },
  {
    code: "MetaLeft",
    key: "Meta",
    location: Jt$1.LEFT
  },
  {
    code: "MetaRight",
    key: "Meta",
    location: Jt$1.RIGHT
  },
  {
    code: "OSLeft",
    key: "OS",
    location: Jt$1.LEFT
  },
  {
    code: "OSRight",
    key: "OS",
    location: Jt$1.RIGHT
  },
  {
    code: "ContextMenu",
    key: "ContextMenu"
  },
  {
    code: "Tab",
    key: "Tab"
  },
  {
    code: "CapsLock",
    key: "CapsLock"
  },
  {
    code: "Backspace",
    key: "Backspace"
  },
  {
    code: "Enter",
    key: "Enter"
  },
  // function
  {
    code: "Escape",
    key: "Escape"
  },
  // arrows
  {
    code: "ArrowUp",
    key: "ArrowUp"
  },
  {
    code: "ArrowDown",
    key: "ArrowDown"
  },
  {
    code: "ArrowLeft",
    key: "ArrowLeft"
  },
  {
    code: "ArrowRight",
    key: "ArrowRight"
  },
  // control pad
  {
    code: "Home",
    key: "Home"
  },
  {
    code: "End",
    key: "End"
  },
  {
    code: "Delete",
    key: "Delete"
  },
  {
    code: "PageUp",
    key: "PageUp"
  },
  {
    code: "PageDown",
    key: "PageDown"
  },
  // Special keys that are not part of a default US-layout but included for specific behavior
  {
    code: "Fn",
    key: "Fn"
  },
  {
    code: "Symbol",
    key: "Symbol"
  },
  {
    code: "AltRight",
    key: "AltGraph"
  }
];
var c2 = [
  {
    name: "MouseLeft",
    pointerType: "mouse",
    button: "primary"
  },
  {
    name: "MouseRight",
    pointerType: "mouse",
    button: "secondary"
  },
  {
    name: "MouseMiddle",
    pointerType: "mouse",
    button: "auxiliary"
  },
  {
    name: "TouchA",
    pointerType: "touch"
  },
  {
    name: "TouchB",
    pointerType: "touch"
  },
  {
    name: "TouchC",
    pointerType: "touch"
  }
];
function Ybe(e, t, r7) {
  return t in e ? Object.defineProperty(e, t, {
    value: r7,
    enumerable: true,
    configurable: true,
    writable: true
  }) : e[t] = r7, e;
}
o(Ybe, "_define_property");
var AT = class AT2 {
  getButtons() {
    let t = 0;
    for (let r7 of Object.keys(this.pressed))
      t |= 2 ** Number(r7);
    return t;
  }
  down(t) {
    let r7 = PT(t.button);
    if (r7 in this.pressed) {
      this.pressed[r7].push(t);
      return;
    }
    return this.pressed[r7] = [
      t
    ], r7;
  }
  up(t) {
    let r7 = PT(t.button);
    if (r7 in this.pressed && (this.pressed[r7] = this.pressed[r7].filter((n) => n.name !== t.name), this.pressed[r7].length === 0))
      return delete this.pressed[r7], r7;
  }
  constructor() {
    Ybe(this, "pressed", {});
  }
};
o(AT, "Buttons");
var li = AT, d2 = {
  primary: 0,
  secondary: 1,
  auxiliary: 2,
  back: 3,
  X1: 3,
  forward: 4,
  X2: 4
};
function PT(e = 0) {
  return e in d2 ? d2[e] : Number(e);
}
o(PT, "getMouseButtonId");
var p2 = {
  1: 2,
  2: 1
};
function pa(e) {
  return e = PT(e), e in p2 ? p2[e] : e;
}
o(pa, "getMouseEventButton");
function Kbe(e, t, r7) {
  return t in e ? Object.defineProperty(e, t, {
    value: r7,
    enumerable: true,
    configurable: true,
    writable: true
  }) : e[t] = r7, e;
}
o(Kbe, "_define_property");
var OT = class OT2 {
  get countPressed() {
    return this.pressedKeys.size;
  }
  isPressed(t) {
    return this.pressedKeys.has(t.name);
  }
  addPressed(t) {
    return this.pressedKeys.add(t.name);
  }
  removePressed(t) {
    return this.pressedKeys.delete(t.name);
  }
  constructor() {
    Kbe(this, "pressedKeys", /* @__PURE__ */ new Set());
  }
};
o(OT, "Device");
var Qh = OT;
function $n(e, t) {
  let r7 = [];
  for (let s = e; s; s = s.parentElement)
    r7.push(s);
  let n = [];
  for (let s = t; s; s = s.parentElement)
    n.push(s);
  let i = 0;
  for (; !(i >= r7.length || i >= n.length || r7[r7.length - 1 - i] !== n[n.length - 1 - i]); i++)
    ;
  return [
    r7.slice(0, r7.length - i),
    n.slice(0, n.length - i),
    n.slice(n.length - i)
  ];
}
o($n, "getTreeDiff");
function fa({ target: e, node: t, offset: r7 }) {
  return $e$1(e) ? {
    node: e,
    offset: r7 ?? Ge(e).length
  } : t ? {
    node: t,
    offset: r7 ?? (t.nodeType === 3 ? t.nodeValue.length : t.childNodes.length)
  } : f2(e, r7);
}
o(fa, "resolveCaretPosition");
function f2(e, t, r7 = true) {
  let n = t === void 0 ? e.childNodes.length - 1 : 0, i = t === void 0 ? -1 : 1;
  for (; t === void 0 ? n >= (r7 ? Math.max(e.childNodes.length - 1, 0) : 0) : n <= e.childNodes.length; ) {
    if (t && n === e.childNodes.length)
      throw new Error("The given offset is out of bounds.");
    let s = e.childNodes.item(n), a = String(s.textContent);
    if (a.length)
      if (t !== void 0 && a.length < t)
        t -= a.length;
      else {
        if (s.nodeType === 1)
          return f2(s, t, false);
        if (s.nodeType === 3)
          return {
            node: s,
            offset: t ?? s.nodeValue.length
          };
      }
    n += i;
  }
  return {
    node: e,
    offset: e.childNodes.length
  };
}
o(f2, "findNodeAtTextOffset");
function m2({ document: e, target: t, clickCount: r7, node: n, offset: i }) {
  if (xB(t))
    return;
  let s = $e$1(t), a = String(s ? Ge(t) : t.textContent), [l, u] = n ? (
    // which elements might be considered in the same line of text.
    // TODO: support expanding initial range on multiple clicks if node is given
    [
      i,
      i
    ]
  ) : Xbe(a, i, r7);
  if (s)
    return Yt(t, {
      anchorOffset: l ?? a.length,
      focusOffset: u ?? a.length
    }), {
      node: t,
      start: l ?? 0,
      end: u ?? a.length
    };
  {
    let { node: c, offset: d } = fa({
      target: t,
      node: n,
      offset: l
    }), { node: p5, offset: f } = fa({
      target: t,
      node: n,
      offset: u
    }), m = t.ownerDocument.createRange();
    try {
      m.setStart(c, d), m.setEnd(p5, f);
    } catch {
      throw new Error("The given offset is out of bounds.");
    }
    let h5 = e.getSelection();
    return h5?.removeAllRanges(), h5?.addRange(m.cloneRange()), m;
  }
}
o(m2, "setSelectionPerMouseDown");
function Xbe(e, t, r7) {
  if (r7 % 3 === 1 || e.length === 0)
    return [
      t,
      t
    ];
  let n = t ?? e.length;
  return r7 % 3 === 2 ? [
    n - e.substr(0, t).match(/(\w+|\s+|\W)?$/)[0].length,
    t === void 0 ? t : t + e.substr(t).match(/^(\w+|\s+|\W)?/)[0].length
  ] : [
    n - e.substr(0, t).match(/[^\r\n]*$/)[0].length,
    t === void 0 ? t : t + e.substr(t).match(/^[^\r\n]*/)[0].length
  ];
}
o(Xbe, "getTextRange");
function h2(e, { document: t, target: r7, node: n, offset: i }) {
  let s = fa({
    target: r7,
    node: n,
    offset: i
  });
  if ("node" in e) {
    if (s.node === e.node) {
      let a = s.offset < e.start ? e.end : e.start, l = s.offset > e.end || s.offset < e.start ? s.offset : e.end;
      Yt(e.node, {
        anchorOffset: a,
        focusOffset: l
      });
    }
  } else {
    let a = e.cloneRange(), l = a.comparePoint(s.node, s.offset);
    l < 0 ? a.setStart(s.node, s.offset) : l > 0 && a.setEnd(s.node, s.offset);
    let u = t.getSelection();
    u?.removeAllRanges(), u?.addRange(a.cloneRange());
  }
}
o(h2, "modifySelectionPerMouseMove");
function Zh(e, t) {
  var r7, n, i, s, a, l, u, c, d, p5, f, m, h5, b, v5, g, w5, E, R, S, P, _5, C5, O;
  return e.target !== t.target || ((r7 = e.coords) === null || r7 === void 0 ? void 0 : r7.x) !== ((n = t.coords) === null || n === void 0 ? void 0 : n.x) || ((i = e.coords) === null || i === void 0 ? void 0 : i.y) !== ((s = t.coords) === null || s === void 0 ? void 0 : s.y) || ((a = e.coords) === null || a === void 0 ? void 0 : a.clientX) !== ((l = t.coords) === null || l === void 0 ? void 0 : l.clientX) || ((u = e.coords) === null || u === void 0 ? void 0 : u.clientY) !== ((c = t.coords) === null || c === void 0 ? void 0 : c.clientY) || ((d = e.coords) === null || d === void 0 ? void 0 : d.offsetX) !== ((p5 = t.coords) === null || p5 === void 0 ? void 0 : p5.offsetX) || ((f = e.coords) === null || f === void 0 ? void 0 : f.offsetY) !== ((m = t.coords) === null || m === void 0 ? void 0 : m.offsetY) || ((h5 = e.coords) === null || h5 === void 0 ? void 0 : h5.pageX) !== ((b = t.coords) === null || b === void 0 ? void 0 : b.pageX) || ((v5 = e.coords) === null || v5 === void 0 ? void 0 : v5.pageY) !== ((g = t.coords) === null || g === void 0 ? void 0 : g.pageY) || ((w5 = e.coords) === null || w5 === void 0 ? void 0 : w5.screenX) !== ((E = t.coords) === null || E === void 0 ? void 0 : E.screenX) || ((R = e.coords) === null || R === void 0 ? void 0 : R.screenY) !== ((S = t.coords) === null || S === void 0 ? void 0 : S.screenY) || ((P = e.caret) === null || P === void 0 ? void 0 : P.node) !== ((_5 = t.caret) === null || _5 === void 0 ? void 0 : _5.node) || ((C5 = e.caret) === null || C5 === void 0 ? void 0 : C5.offset) !== ((O = t.caret) === null || O === void 0 ? void 0 : O.offset);
}
o(Zh, "isDifferentPointerPosition");
function Bn(e, t, r7) {
  return t in e ? Object.defineProperty(e, t, {
    value: r7,
    enumerable: true,
    configurable: true,
    writable: true
  }) : e[t] = r7, e;
}
o(Bn, "_define_property");
var qT = class qT2 {
  move(t, r7, n) {
    let i = this.position, s = this.getTarget(t);
    if (this.position = r7, !Zh(i, r7))
      return;
    let a = this.getTarget(t), l = this.getEventInit("mousemove"), [u, c] = $n(s, a);
    return {
      leave: /* @__PURE__ */ o(() => {
        s !== a && (t.dispatchUIEvent(s, "mouseout", l), u.forEach((d) => t.dispatchUIEvent(d, "mouseleave", l)));
      }, "leave"),
      enter: /* @__PURE__ */ o(() => {
        s !== a && (t.dispatchUIEvent(a, "mouseover", l), c.forEach((d) => t.dispatchUIEvent(d, "mouseenter", l)));
      }, "enter"),
      move: /* @__PURE__ */ o(() => {
        n || (t.dispatchUIEvent(a, "mousemove", l), this.modifySelecting(t));
      }, "move")
    };
  }
  down(t, r7, n) {
    let i = this.buttons.down(r7);
    if (i === void 0)
      return;
    let s = this.getTarget(t);
    this.buttonDownTarget[i] = s;
    let a = this.getEventInit("mousedown", r7.button), l = rt(s);
    !n && (l || t.dispatchUIEvent(s, "mousedown", a)) && (this.startSelecting(t, a.detail), ht$1(s)), !l && pa(r7.button) === 2 && t.dispatchUIEvent(
      s,
      "contextmenu",
      this.getEventInit("contextmenu", r7.button)
    );
  }
  up(t, r7, n) {
    let i = this.buttons.up(r7);
    if (i === void 0)
      return;
    let s = this.getTarget(t);
    if (!rt(s)) {
      if (!n) {
        let l = this.getEventInit("mouseup", r7.button);
        t.dispatchUIEvent(s, "mouseup", l), this.endSelecting();
      }
      let a = $n(this.buttonDownTarget[i], s)[2][0];
      if (a) {
        let l = this.getEventInit("click", r7.button);
        l.detail && (t.dispatchUIEvent(a, l.button === 0 ? "click" : "auxclick", l), l.button === 0 && l.detail === 2 && t.dispatchUIEvent(
          a,
          "dblclick",
          {
            ...this.getEventInit("dblclick", r7.button),
            detail: l.detail
          }
        ));
      }
    }
  }
  resetClickCount() {
    this.clickCount.reset();
  }
  getEventInit(t, r7) {
    let n = {
      ...this.position.coords
    };
    return n.button = pa(r7), n.buttons = this.buttons.getButtons(), t === "mousedown" ? n.detail = this.clickCount.getOnDown(n.button) : t === "mouseup" ? n.detail = this.clickCount.getOnUp(n.button) : (t === "click" || t === "auxclick") && (n.detail = this.clickCount.incOnClick(
      n.button
    )), n;
  }
  getTarget(t) {
    var r7;
    return (r7 = this.position.target) !== null && r7 !== void 0 ? r7 : t.config.document.body;
  }
  startSelecting(t, r7) {
    var n, i;
    this.selecting = m2({
      document: t.config.document,
      target: this.getTarget(t),
      node: (n = this.position.caret) === null || n === void 0 ? void 0 : n.node,
      offset: (i = this.position.caret) === null || i === void 0 ? void 0 : i.offset,
      clickCount: r7
    });
  }
  modifySelecting(t) {
    var r7, n;
    this.selecting && h2(this.selecting, {
      document: t.config.document,
      target: this.getTarget(t),
      node: (r7 = this.position.caret) === null || r7 === void 0 ? void 0 : r7.node,
      offset: (n = this.position.caret) === null || n === void 0 ? void 0 : n.offset
    });
  }
  endSelecting() {
    this.selecting = void 0;
  }
  constructor() {
    Bn(this, "position", {}), Bn(this, "buttons", new li()), Bn(this, "selecting", void 0), Bn(this, "buttonDownTarget", {}), Bn(this, "clickCount", new class {
      incOnClick(t) {
        let r7 = this.down[t] === void 0 ? void 0 : Number(this.down[t]) + 1;
        return this.count = this.count[t] === void 0 ? {} : {
          [t]: Number(this.count[t]) + 1
        }, r7;
      }
      getOnDown(t) {
        var r7;
        this.down = {
          [t]: (r7 = this.count[t]) !== null && r7 !== void 0 ? r7 : 0
        };
        var n;
        return this.count = {
          [t]: (n = this.count[t]) !== null && n !== void 0 ? n : 0
        }, Number(this.count[t]) + 1;
      }
      getOnUp(t) {
        return this.down[t] === void 0 ? void 0 : Number(this.down[t]) + 1;
      }
      reset() {
        this.count = {};
      }
      constructor() {
        Bn(this, "down", {}), Bn(this, "count", {});
      }
    }());
  }
};
o(qT, "Mouse");
var ey = qT;
function ui(e, t) {
  var r7;
  return ((r7 = g2(e, t)) === null || r7 === void 0 ? void 0 : r7.pointerEvents) !== "none";
}
o(ui, "hasPointerEvents");
function Jbe(e) {
  let t = Ae(e);
  for (let r7 = e, n = []; r7?.ownerDocument; r7 = r7.parentElement) {
    n.push(r7);
    let i = t.getComputedStyle(r7).pointerEvents;
    if (i && ![
      "inherit",
      "unset"
    ].includes(i))
      return {
        pointerEvents: i,
        tree: n
      };
  }
}
o(Jbe, "closestPointerEventsDeclaration");
var y2 = Symbol("Last check for pointer-events");
function g2(e, t) {
  let r7 = t[y2];
  if (!(e.config.pointerEventsCheck !== Fn.Never && (!r7 || b2(e.config.pointerEventsCheck, Fn.EachApiCall) && r7[nt.Call] !== da(e, nt.Call) || b2(e.config.pointerEventsCheck, Fn.EachTrigger) && r7[nt.Trigger] !== da(e, nt.Trigger))))
    return r7?.result;
  let i = Jbe(t);
  return t[y2] = {
    [nt.Call]: da(e, nt.Call),
    [nt.Trigger]: da(e, nt.Trigger),
    result: i
  }, i;
}
o(g2, "checkPointerEvents");
function Hn(e, t) {
  let r7 = g2(e, t);
  if (r7?.pointerEvents === "none")
    throw new Error([
      `Unable to perform pointer interaction as the element ${r7.tree.length > 1 ? "inherits" : "has"} \`pointer-events: none\`:`,
      "",
      Qbe(r7.tree)
    ].join(`
`));
}
o(Hn, "assertPointerEvents");
function Qbe(e) {
  return e.reverse().map((t, r7) => [
    "".padEnd(r7),
    t.tagName,
    t.id && `#${t.id}`,
    t.hasAttribute("data-testid") && `(testId=${t.getAttribute("data-testid")})`,
    Zbe(t),
    e.length > 1 && r7 === 0 && "  <-- This element declared `pointer-events: none`",
    e.length > 1 && r7 === e.length - 1 && "  <-- Asserted pointer events here"
  ].filter(Boolean).join("")).join(`
`);
}
o(Qbe, "printTree");
function Zbe(e) {
  var t;
  let r7;
  if (e.hasAttribute("aria-label"))
    r7 = e.getAttribute("aria-label");
  else if (e.hasAttribute("aria-labelledby")) {
    var n, i;
    r7 = (i = e.ownerDocument.getElementById(e.getAttribute("aria-labelledby"))) === null || i === void 0 || (n = i.textContent) === null || n === void 0 ? void 0 : n.trim();
  } else if (X$1(e, [
    "button",
    "input",
    "meter",
    "output",
    "progress",
    "select",
    "textarea"
  ]) && (!((t = e.labels) === null || t === void 0) && t.length))
    r7 = Array.from(e.labels).map((a) => {
      var l;
      return (l = a.textContent) === null || l === void 0 ? void 0 : l.trim();
    }).join("|");
  else if (X$1(e, "button")) {
    var s;
    r7 = (s = e.textContent) === null || s === void 0 ? void 0 : s.trim();
  }
  return r7 = r7?.replace(/\n/g, "  "), Number(r7?.length) > 30 && (r7 = `${r7?.substring(0, 29)}…`), r7 ? `(label=${r7})` : "";
}
o(Zbe, "getLabelDescr");
function b2(e, t) {
  return (e & t) > 0;
}
o(b2, "hasBitFlag");
function Tr$1(e, t, r7) {
  return t in e ? Object.defineProperty(e, t, {
    value: r7,
    enumerable: true,
    configurable: true,
    writable: true
  }) : e[t] = r7, e;
}
o(Tr$1, "_define_property");
var IT = class IT2 {
  init(t) {
    let r7 = this.getTarget(t), [, n] = $n(null, r7), i = this.getEventInit();
    return Hn(t, r7), t.dispatchUIEvent(r7, "pointerover", i), n.forEach((s) => t.dispatchUIEvent(s, "pointerenter", i)), this;
  }
  move(t, r7) {
    let n = this.position, i = this.getTarget(t);
    if (this.position = r7, !Zh(n, r7))
      return;
    let s = this.getTarget(t), a = this.getEventInit(-1), [l, u] = $n(i, s);
    return {
      leave: /* @__PURE__ */ o(() => {
        ui(t, i) && i !== s && (t.dispatchUIEvent(i, "pointerout", a), l.forEach((c) => t.dispatchUIEvent(c, "pointerleave", a)));
      }, "leave"),
      enter: /* @__PURE__ */ o(() => {
        Hn(t, s), i !== s && (t.dispatchUIEvent(s, "pointerover", a), u.forEach((c) => t.dispatchUIEvent(c, "pointerenter", a)));
      }, "enter"),
      move: /* @__PURE__ */ o(() => {
        t.dispatchUIEvent(s, "pointermove", a);
      }, "move")
    };
  }
  down(t, r7 = 0) {
    if (this.isDown)
      return;
    let n = this.getTarget(t);
    Hn(t, n), this.isDown = true, this.isPrevented = !t.dispatchUIEvent(n, "pointerdown", this.getEventInit(r7));
  }
  up(t, r7 = 0) {
    if (!this.isDown)
      return;
    let n = this.getTarget(t);
    Hn(t, n), this.isPrevented = false, this.isDown = false, t.dispatchUIEvent(n, "pointerup", this.getEventInit(r7));
  }
  release(t) {
    let r7 = this.getTarget(t), [n] = $n(r7, null), i = this.getEventInit();
    ui(t, r7) && (t.dispatchUIEvent(r7, "pointerout", i), n.forEach((s) => t.dispatchUIEvent(s, "pointerleave", i))), this.isCancelled = true;
  }
  getTarget(t) {
    var r7;
    return (r7 = this.position.target) !== null && r7 !== void 0 ? r7 : t.config.document.body;
  }
  getEventInit(t) {
    return {
      ...this.position.coords,
      pointerId: this.pointerId,
      pointerType: this.pointerType,
      isPrimary: this.isPrimary,
      button: pa(t),
      buttons: this.buttons.getButtons()
    };
  }
  constructor({ pointerId: t, pointerType: r7, isPrimary: n }, i) {
    Tr$1(this, "pointerId", void 0), Tr$1(this, "pointerType", void 0), Tr$1(this, "isPrimary", void 0), Tr$1(this, "buttons", void 0), Tr$1(this, "isMultitouch", false), Tr$1(this, "isCancelled", false), Tr$1(this, "isDown", false), Tr$1(this, "isPrevented", false), Tr$1(this, "position", {}), this.pointerId = t, this.pointerType = r7, this.isPrimary = n, this.isMultitouch = !n, this.buttons = i;
  }
};
o(IT, "Pointer");
var ty = IT;
function un$1(e, t, r7) {
  return t in e ? Object.defineProperty(e, t, {
    value: r7,
    enumerable: true,
    configurable: true,
    writable: true
  }) : e[t] = r7, e;
}
o(un$1, "_define_property");
var MT = class MT2 {
  isKeyPressed(t) {
    return this.devices.get(t.pointerType).isPressed(t);
  }
  async press(t, r7, n) {
    this.devices.get(r7.pointerType).addPressed(r7), this.buttons.down(r7);
    let i = this.getPointerName(r7), s = r7.pointerType === "touch" ? this.pointers.new(i, r7.pointerType, this.buttons) : this.pointers.get(i);
    s.position = n, s.pointerType !== "touch" && (this.mouse.position = n), s.pointerType === "touch" && s.init(t), s.down(t, r7.button), s.pointerType !== "touch" && this.mouse.down(t, r7, s.isPrevented);
  }
  async move(t, r7, n) {
    let i = this.pointers.get(r7), s = i.move(t, n), a = i.pointerType === "touch" ? void 0 : this.mouse.move(t, n, i.isPrevented);
    s?.leave(), a?.leave(), s?.enter(), a?.enter(), s?.move(), a?.move();
  }
  async release(t, r7, n) {
    let i = this.devices.get(r7.pointerType);
    i.removePressed(r7), this.buttons.up(r7);
    let s = this.pointers.get(this.getPointerName(r7)), a = s.isPrevented;
    if (s.position = n, s.pointerType !== "touch" && (this.mouse.position = n), i.countPressed === 0 && s.up(t, r7.button), s.pointerType === "touch" && s.release(t), s.pointerType === "touch" && !s.isMultitouch) {
      let l = this.mouse.move(t, n, a);
      l?.leave(), l?.enter(), l?.move(), this.mouse.down(t, r7, a);
    }
    if (!s.isMultitouch) {
      let l = this.mouse.move(t, n, a);
      l?.leave(), l?.enter(), l?.move(), this.mouse.up(t, r7, a);
    }
  }
  getPointerName(t) {
    return t.pointerType === "touch" ? t.name : t.pointerType;
  }
  getPreviousPosition(t) {
    return this.pointers.has(t) ? this.pointers.get(t).position : void 0;
  }
  resetClickCount() {
    this.mouse.resetClickCount();
  }
  getMouseTarget(t) {
    var r7;
    return (r7 = this.mouse.position.target) !== null && r7 !== void 0 ? r7 : t.config.document.body;
  }
  setMousePosition(t) {
    this.mouse.position = t, this.pointers.get("mouse").position = t;
  }
  constructor(t) {
    un$1(this, "system", void 0), un$1(this, "mouse", void 0), un$1(this, "buttons", void 0), un$1(this, "devices", new class {
      get(r7) {
        var n, i, s;
        return (s = (n = this.registry)[i = r7]) !== null && s !== void 0 ? s : n[i] = new Qh();
      }
      constructor() {
        un$1(this, "registry", {});
      }
    }()), un$1(this, "pointers", new class {
      new(r7, n, i) {
        let s = n !== "touch" || !Object.values(this.registry).some((a) => a.pointerType === "touch" && !a.isCancelled);
        return s || Object.values(this.registry).forEach((a) => {
          a.pointerType === n && !a.isCancelled && (a.isMultitouch = true);
        }), this.registry[r7] = new ty({
          pointerId: this.nextId++,
          pointerType: n,
          isPrimary: s
        }, i), this.registry[r7];
      }
      get(r7) {
        if (!this.has(r7))
          throw new Error(`Trying to access pointer "${r7}" which does not exist.`);
        return this.registry[r7];
      }
      has(r7) {
        return r7 in this.registry;
      }
      constructor() {
        un$1(this, "registry", {}), un$1(this, "nextId", 1);
      }
    }()), this.system = t, this.buttons = new li(), this.mouse = new ey(), this.pointers.new("mouse", "mouse", this.buttons);
  }
};
o(MT, "PointerHost");
var ry = MT;
function v2(e, t, r7) {
  return t in e ? Object.defineProperty(e, t, {
    value: r7,
    enumerable: true,
    configurable: true,
    writable: true
  }) : e[t] = r7, e;
}
o(v2, "_define_property");
var NT = class NT2 {
  getUIEventModifiers() {
    return {
      altKey: this.keyboard.modifiers.Alt,
      ctrlKey: this.keyboard.modifiers.Control,
      metaKey: this.keyboard.modifiers.Meta,
      shiftKey: this.keyboard.modifiers.Shift,
      modifierAltGraph: this.keyboard.modifiers.AltGraph,
      modifierCapsLock: this.keyboard.modifiers.CapsLock,
      modifierFn: this.keyboard.modifiers.Fn,
      modifierFnLock: this.keyboard.modifiers.FnLock,
      modifierNumLock: this.keyboard.modifiers.NumLock,
      modifierScrollLock: this.keyboard.modifiers.ScrollLock,
      modifierSymbol: this.keyboard.modifiers.Symbol,
      modifierSymbolLock: this.keyboard.modifiers.SymbolLock
    };
  }
  constructor() {
    v2(this, "keyboard", new Jh(this)), v2(this, "pointer", new ry(this));
  }
};
o(NT, "System");
var ma = NT;
async function E2(e) {
  let t = [];
  return this.config.skipHover || t.push({
    target: e
  }), t.push({
    keys: "[MouseLeft]",
    target: e
  }), this.pointer(t);
}
o(E2, "click");
async function x2(e) {
  return this.pointer([
    {
      target: e
    },
    "[MouseLeft][MouseLeft]"
  ]);
}
o(x2, "dblClick");
async function w2(e) {
  return this.pointer([
    {
      target: e
    },
    "[MouseLeft][MouseLeft][MouseLeft]"
  ]);
}
o(w2, "tripleClick");
async function T2(e) {
  return this.pointer({
    target: e
  });
}
o(T2, "hover");
async function R2(e) {
  return Hn(this, this.system.pointer.getMouseTarget(this)), this.pointer({
    target: e.ownerDocument.body
  });
}
o(R2, "unhover");
async function S2({ shift: e } = {}) {
  return this.keyboard(e === true ? "{Shift>}{Tab}{/Shift}" : e === false ? "[/ShiftLeft][/ShiftRight]{Tab}" : "{Tab}");
}
o(S2, "tab");
var jT = /* @__PURE__ */ (function(e) {
  return e["{"] = "}", e["["] = "]", e;
})(jT || {});
function ny(e, t) {
  let r7 = 0, n = e[r7] in jT ? e[r7] : "";
  r7 += n.length;
  let s = new RegExp(`^\\${n}{2}`).test(e) ? "" : n;
  return {
    type: s,
    ...s === "" ? ege(e, r7, t) : tge(e, r7, s, t)
  };
}
o(ny, "readNextDescriptor");
function ege(e, t, r7) {
  let n = e[t];
  return _2(n, e, t, r7), t += n.length, {
    consumedLength: t,
    descriptor: n,
    releasePrevious: false,
    releaseSelf: true,
    repeat: 1
  };
}
o(ege, "readPrintableChar");
function tge(e, t, r7, n) {
  var i, s;
  let a = e[t] === "/" ? "/" : "";
  t += a.length;
  let l = r7 === "{" && e[t] === "\\";
  t += Number(l);
  let u = l ? e[t] : (i = e.slice(t).match(r7 === "{" ? /^\w+|^[^}>/]/ : /^\w+/)) === null || i === void 0 ? void 0 : i[0];
  _2(u, e, t, n), t += u.length;
  var c;
  let d = (c = (s = e.slice(t).match(/^>\d+/)) === null || s === void 0 ? void 0 : s[0]) !== null && c !== void 0 ? c : "";
  t += d.length;
  let p5 = e[t] === "/" || !d && e[t] === ">" ? e[t] : "";
  t += p5.length;
  let f = jT[r7], m = e[t] === f ? f : "";
  if (!m)
    throw new Error(C2([
      !d && "repeat modifier",
      !p5 && "release modifier",
      `"${f}"`
    ].filter(Boolean).join(" or "), e[t], e, n));
  return t += m.length, {
    consumedLength: t,
    descriptor: u,
    releasePrevious: !!a,
    repeat: d ? Math.max(Number(d.substr(1)), 1) : 1,
    releaseSelf: rge(p5, d)
  };
}
o(tge, "readTag");
function _2(e, t, r7, n) {
  if (!e)
    throw new Error(C2("key descriptor", t[r7], t, n));
}
o(_2, "assertDescriptor");
function rge(e, t) {
  if (e)
    return e === "/";
  if (t)
    return false;
}
o(rge, "hasReleaseSelf");
function C2(e, t, r7, n) {
  return `Expected ${e} but found "${t ?? ""}" in "${r7}"
    See ${n === "pointer" ? "https://testing-library.com/docs/user-event/pointer#pressing-a-button-or-touching-the-screen" : "https://testing-library.com/docs/user-event/keyboard"}
    for more information about how userEvent parses your input.`;
}
o(C2, "getErrorMessage");
function P2(e, t) {
  let r7 = [];
  do {
    let { type: i, descriptor: s, consumedLength: a, releasePrevious: l, releaseSelf: u = true, repeat: c } = ny(t, "keyboard");
    var n;
    let d = (n = e.find((p5) => {
      if (i === "[") {
        var f;
        return ((f = p5.code) === null || f === void 0 ? void 0 : f.toLowerCase()) === s.toLowerCase();
      } else if (i === "{") {
        var m;
        return ((m = p5.key) === null || m === void 0 ? void 0 : m.toLowerCase()) === s.toLowerCase();
      }
      return p5.key === s;
    })) !== null && n !== void 0 ? n : {
      key: "Unknown",
      code: "Unknown",
      [i === "[" ? "code" : "key"]: s
    };
    r7.push({
      keyDef: d,
      releasePrevious: l,
      releaseSelf: u,
      repeat: c
    }), t = t.slice(a);
  } while (t);
  return r7;
}
o(P2, "parseKeyDef");
async function A2(e) {
  let t = P2(this.config.keyboardMap, e);
  for (let r7 = 0; r7 < t.length; r7++)
    await ir(this.config), await nge(this, t[r7]);
}
o(A2, "keyboard");
async function nge(e, { keyDef: t, releasePrevious: r7, releaseSelf: n, repeat: i }) {
  let { system: s } = e;
  if (s.keyboard.isKeyPressed(t) && await s.keyboard.keyup(e, t), !r7) {
    for (let a = 1; a <= i; a++)
      await s.keyboard.keydown(e, t), a < i && await ir(e.config);
    n && await s.keyboard.keyup(e, t);
  }
}
o(nge, "keyboardAction");
async function O2(e) {
  for (let t of e.system.keyboard.getPressedKeys())
    await e.system.keyboard.keyup(e, t);
}
o(O2, "releaseAllKeys");
function oy(e) {
  let t = $e$1(e) ? {
    "text/plain": oge(e)
  } : {
    "text/plain": String(e.ownerDocument.getSelection())
  }, r7 = ni(Ae(e));
  for (let n in t)
    t[n] && r7.setData(n, t[n]);
  return r7;
}
o(oy, "copySelection");
function oge(e) {
  let t = xr$1(e);
  return Ge(e).substring(t.startOffset, t.endOffset);
}
o(oge, "readSelectedValueFromInput");
async function q2() {
  let e = this.config.document;
  var t;
  let r7 = (t = e.activeElement) !== null && t !== void 0 ? t : (
    /* istanbul ignore next */
    e.body
  ), n = oy(r7);
  if (n.items.length !== 0)
    return this.dispatchUIEvent(r7, "copy", {
      clipboardData: n
    }) && this.config.writeToClipboard && await Dh(e, n), n;
}
o(q2, "copy");
async function I2() {
  let e = this.config.document;
  var t;
  let r7 = (t = e.activeElement) !== null && t !== void 0 ? t : (
    /* istanbul ignore next */
    e.body
  ), n = oy(r7);
  if (n.items.length !== 0)
    return this.dispatchUIEvent(r7, "cut", {
      clipboardData: n
    }) && this.config.writeToClipboard && await Dh(r7.ownerDocument, n), n;
}
o(I2, "cut");
async function M2(e) {
  let t = this.config.document;
  var r7;
  let n = (r7 = t.activeElement) !== null && r7 !== void 0 ? r7 : (
    /* istanbul ignore next */
    t.body
  );
  var i;
  let s = (i = typeof e == "string" ? ige(t, e) : e) !== null && i !== void 0 ? i : await yB(t).catch(() => {
    throw new Error("`userEvent.paste()` without `clipboardData` requires the `ClipboardAPI` to be available.");
  });
  this.dispatchUIEvent(n, "paste", {
    clipboardData: s
  });
}
o(M2, "paste");
function ige(e, t) {
  let r7 = ni(Ae(e));
  return r7.setData("text", t), r7;
}
o(ige, "getClipboardDataFromString");
function kT(e, t) {
  let r7 = [];
  do {
    let { descriptor: n, consumedLength: i, releasePrevious: s, releaseSelf: a = true } = ny(t, "pointer"), l = e.find((u) => u.name === n);
    l && r7.push({
      keyDef: l,
      releasePrevious: s,
      releaseSelf: a
    }), t = t.slice(i);
  } while (t);
  return r7;
}
o(kT, "parseKeyDef");
async function j2(e) {
  let { pointerMap: t } = this.config, r7 = [];
  (Array.isArray(e) ? e : [
    e
  ]).forEach((n) => {
    typeof n == "string" ? r7.push(...kT(t, n)) : "keys" in n ? r7.push(...kT(t, n.keys).map((i) => ({
      ...n,
      ...i
    }))) : r7.push(n);
  });
  for (let n = 0; n < r7.length; n++)
    await ir(this.config), await sge(this, r7[n]);
  this.system.pointer.resetClickCount();
}
o(j2, "pointer");
async function sge(e, t) {
  var r7, n;
  let i = "pointerName" in t && t.pointerName ? t.pointerName : "keyDef" in t ? e.system.pointer.getPointerName(t.keyDef) : "mouse", s = e.system.pointer.getPreviousPosition(i);
  var a, l, u, c;
  let d = {
    target: (a = t.target) !== null && a !== void 0 ? a : age(e, s),
    coords: (l = t.coords) !== null && l !== void 0 ? l : s?.coords,
    caret: {
      node: (u = t.node) !== null && u !== void 0 ? u : N2(t) || s == null || (r7 = s.caret) === null || r7 === void 0 ? void 0 : r7.node,
      offset: (c = t.offset) !== null && c !== void 0 ? c : N2(t) || s == null || (n = s.caret) === null || n === void 0 ? void 0 : n.offset
    }
  };
  "keyDef" in t ? (e.system.pointer.isKeyPressed(t.keyDef) && (Ln(e, nt.Trigger), await e.system.pointer.release(e, t.keyDef, d)), t.releasePrevious || (Ln(e, nt.Trigger), await e.system.pointer.press(e, t.keyDef, d), t.releaseSelf && (Ln(e, nt.Trigger), await e.system.pointer.release(e, t.keyDef, d)))) : (Ln(e, nt.Trigger), await e.system.pointer.move(e, i, d));
}
o(sge, "pointerAction");
function N2(e) {
  var t, r7;
  return !!((r7 = (t = e.target) !== null && t !== void 0 ? t : e.node) !== null && r7 !== void 0 ? r7 : e.offset !== void 0);
}
o(N2, "hasCaretPosition");
function age(e, t) {
  if (!t)
    throw new Error("This pointer has no previous position. Provide a target property!");
  var r7;
  return (r7 = t.target) !== null && r7 !== void 0 ? r7 : e.config.document.body;
}
o(age, "getPrevTarget");
async function k2(e) {
  if (!Wt(e) || rt(e))
    throw new Error("clear()` is only supported on editable elements.");
  if (ht$1(e), e.ownerDocument.activeElement !== e)
    throw new Error("The element to be cleared could not be focused.");
  if (Xh(e), !GB(e))
    throw new Error("The element content to be cleared could not be selected.");
  Xt(this, e, "", "deleteContentBackward");
}
o(k2, "clear");
async function L2(e, t) {
  return D2.call(this, true, e, t);
}
o(L2, "selectOptions");
async function F2(e, t) {
  return D2.call(this, false, e, t);
}
o(F2, "deselectOptions");
async function D2(e, t, r7) {
  if (!e && !t.multiple)
    throw ie$1().getElementError("Unable to deselect an option in a non-multiple select. Use selectOptions to change the selection instead.", t);
  let n = Array.isArray(r7) ? r7 : [
    r7
  ], i = Array.from(t.querySelectorAll('option, [role="option"]')), s = n.map((l) => {
    if (typeof l != "string" && i.includes(l))
      return l;
    {
      let u = i.find((c) => c.value === l || c.innerHTML === l);
      if (u)
        return u;
      throw ie$1().getElementError(`Value "${String(l)}" not found in options`, t);
    }
  }).filter((l) => !rt(l));
  if (rt(t) || !s.length) return;
  let a = /* @__PURE__ */ o((l) => {
    l.selected = e, this.dispatchUIEvent(t, "input", {
      bubbles: true,
      cancelable: false,
      composed: true
    }), this.dispatchUIEvent(t, "change");
  }, "selectOption");
  if (X$1(t, "select"))
    if (t.multiple)
      for (let l of s) {
        let u = this.config.pointerEventsCheck === 0 ? true : ui(this, l);
        u && (this.dispatchUIEvent(l, "pointerover"), this.dispatchUIEvent(t, "pointerenter"), this.dispatchUIEvent(l, "mouseover"), this.dispatchUIEvent(
          t,
          "mouseenter"
        ), this.dispatchUIEvent(l, "pointermove"), this.dispatchUIEvent(l, "mousemove"), this.dispatchUIEvent(l, "pointerdown"), this.dispatchUIEvent(l, "mousedown")), ht$1(t), u && (this.dispatchUIEvent(l, "pointerup"), this.dispatchUIEvent(l, "mouseup")), a(l), u && this.dispatchUIEvent(l, "click"), await ir(this.config);
      }
    else if (s.length === 1) {
      let l = this.config.pointerEventsCheck === 0 ? true : ui(this, t);
      l ? await this.click(t) : ht$1(t), a(s[0]), l && (this.dispatchUIEvent(t, "pointerover"), this.dispatchUIEvent(t, "pointerenter"), this.dispatchUIEvent(t, "mouseover"), this.dispatchUIEvent(t, "mouseenter"), this.dispatchUIEvent(t, "pointerup"), this.dispatchUIEvent(t, "mouseup"), this.dispatchUIEvent(t, "click")), await ir(this.config);
    } else
      throw ie$1().getElementError("Cannot select multiple options on a non-multiple select", t);
  else if (t.getAttribute("role") === "listbox")
    for (let l of s)
      await this.click(l), await this.unhover(l);
  else
    throw ie$1().getElementError("Cannot select options on elements that are neither select nor listbox elements", t);
}
o(D2, "selectOptionsBase");
async function $2(e, t, { skipClick: r7 = this.config.skipClick, skipAutoClose: n = this.config.skipAutoClose, initialSelectionStart: i, initialSelectionEnd: s } = {}) {
  e.disabled || (r7 || await this.click(e), i !== void 0 && kn(e, i, s ?? i), await this.keyboard(t), n || await O2(this));
}
o($2, "type");
var B2 = Symbol("files and value properties are mocked");
function LT(e, t, r7) {
  r7 ? Object.defineProperty(e, t, r7) : delete e[t];
}
o(LT, "restoreProperty");
function H2(e, t) {
  var r7;
  (r7 = e[B2]) === null || r7 === void 0 || r7.restore();
  let n = Object.getOwnPropertyDescriptor(e, "type"), i = Object.getOwnPropertyDescriptor(e, "value"), s = Object.getOwnPropertyDescriptor(
    e,
    "files"
  );
  function a() {
    LT(e, "type", n), LT(e, "value", i), LT(e, "files", s);
  }
  o(a, "restore"), e[B2] = {
    restore: a
  }, Object.defineProperties(e, {
    files: {
      configurable: true,
      get: /* @__PURE__ */ o(() => t, "get")
    },
    value: {
      configurable: true,
      get: /* @__PURE__ */ o(() => t.length ? `C:\\fakepath\\${t[0].name}` : "", "get"),
      set(l) {
        if (l === "")
          a();
        else {
          var u;
          i == null || (u = i.set) === null || u === void 0 || u.call(e, l);
        }
      }
    },
    type: {
      configurable: true,
      get: /* @__PURE__ */ o(() => "file", "get"),
      set(l) {
        l !== "file" && (a(), e.type = l);
      }
    }
  });
}
o(H2, "setFiles");
async function U2(e, t) {
  let r7 = X$1(e, "label") ? e.control : e;
  if (!r7 || !X$1(r7, "input", {
    type: "file"
  }))
    throw new TypeError(`The ${r7 === e ? "given" : "associated"} ${r7?.tagName} element does not accept file uploads`);
  if (rt(e)) return;
  let n = (Array.isArray(t) ? t : [
    t
  ]).filter((s) => !this.config.applyAccept || lge(s, r7.accept)).slice(0, r7.multiple ? void 0 : 1), i = /* @__PURE__ */ o(() => {
    var s;
    n.length === ((s = r7.files) === null || s === void 0 ? void 0 : s.length) && n.every((a, l) => {
      var u;
      return a === ((u = r7.files) === null || u === void 0 ? void 0 : u.item(l));
    }) || (H2(r7, oa(Ae(e), n)), this.dispatchUIEvent(r7, "input"), this.dispatchUIEvent(r7, "change"));
  }, "fileDialog");
  r7.addEventListener("fileDialog", i), await this.click(e), r7.removeEventListener("fileDialog", i);
}
o(U2, "upload");
function iy(e) {
  return e.toLowerCase().replace(/(\.|\/)jpg\b/g, "$1jpeg");
}
o(iy, "normalize");
function lge(e, t) {
  if (!t)
    return true;
  let r7 = [
    "audio/*",
    "image/*",
    "video/*"
  ];
  return iy(t).trim().split(/\s*,\s*/).some((n) => n.startsWith(".") ? iy(e.name).endsWith(n) : r7.includes(n) ? iy(e.type).startsWith(n.replace(
    "*",
    ""
  )) : iy(e.type) === n);
}
o(lge, "isAcceptableFile");
var FT = {
  click: E2,
  dblClick: x2,
  tripleClick: w2,
  hover: T2,
  unhover: R2,
  tab: S2,
  keyboard: A2,
  copy: q2,
  cut: I2,
  paste: M2,
  pointer: j2,
  clear: k2,
  deselectOptions: F2,
  selectOptions: L2,
  type: $2,
  upload: U2
};
function V2(e) {
  return ie$1().asyncWrapper(e);
}
o(V2, "wrapAsync");
var z2 = {
  applyAccept: true,
  autoModify: true,
  delay: 0,
  document: globalThis.document,
  keyboardMap: u2,
  pointerMap: c2,
  pointerEventsCheck: Fn.EachApiCall,
  skipAutoClose: false,
  skipClick: false,
  skipHover: false,
  writeToClipboard: false,
  advanceTimers: /* @__PURE__ */ o(() => Promise.resolve(), "advanceTimers")
}, uge = {
  ...z2,
  writeToClipboard: true
};
function G2(e = {}, t = uge, r7) {
  let n = pge(e, r7, t);
  return {
    ...t,
    ...e,
    document: n
  };
}
o(G2, "createConfig");
function W2(e = {}) {
  let t = G2(e);
  _T(t.document), RT(Ae(t.document).HTMLElement);
  var r7;
  let n = (r7 = t.document.defaultView) !== null && r7 !== void 0 ? r7 : (
    /* istanbul ignore next */
    globalThis.window
  );
  return hB(n), DT(t).api;
}
o(W2, "setupMain");
function Je({ keyboardState: e, pointerState: t, ...r7 } = {}, n) {
  let i = G2(r7, z2, n);
  _T(i.document), RT(Ae(i.document).HTMLElement);
  var s;
  let a = (s = t ?? e) !== null && s !== void 0 ? s : new ma();
  return {
    api: DT(i, a).api,
    system: a
  };
}
o(Je, "setupDirect");
function cge(e) {
  return DT({
    ...this.config,
    ...e
  }, this.system).api;
}
o(cge, "setupSub");
function dge(e, t) {
  function r7(...n) {
    return Ln(e, nt.Call), V2(() => t.apply(e, n).then(async (i) => (await ir(e.config), i)));
  }
  return o(r7, "method"), Object.defineProperty(r7, "name", {
    get: /* @__PURE__ */ o(() => t.name, "get")
  }), r7;
}
o(dge, "wrapAndBindImpl");
function DT(e, t = new ma()) {
  let r7 = {};
  return Object.assign(r7, {
    config: e,
    dispatchEvent: TT.bind(r7),
    dispatchUIEvent: ZB.bind(r7),
    system: t,
    levelRefs: {},
    ...FT
  }), {
    instance: r7,
    api: {
      ...Object.fromEntries(Object.entries(FT).map(([n, i]) => [
        n,
        dge(r7, i)
      ])),
      setup: cge.bind(r7)
    }
  };
}
o(DT, "createInstance");
function pge(e, t, r7) {
  var n, i;
  return (i = (n = e.document) !== null && n !== void 0 ? n : t && s2(t)) !== null && i !== void 0 ? i : r7.document;
}
o(pge, "getDocument");
var $T = {};
st$1($T, {
  clear: () => fge,
  click: () => mge,
  copy: () => hge,
  cut: () => yge,
  dblClick: () => bge,
  deselectOptions: () => gge,
  hover: () => vge,
  keyboard: () => Ege,
  paste: () => wge,
  pointer: () => xge,
  selectOptions: () => Tge,
  tab: () => Pge,
  tripleClick: () => Rge,
  type: () => Sge,
  unhover: () => _ge,
  upload: () => Cge
});
function fge(e) {
  return Je().api.clear(e);
}
o(fge, "clear");
function mge(e, t = {}) {
  return Je(t, e).api.click(e);
}
o(mge, "click");
function hge(e = {}) {
  return Je(e).api.copy();
}
o(hge, "copy");
function yge(e = {}) {
  return Je(e).api.cut();
}
o(yge, "cut");
function bge(e, t = {}) {
  return Je(t).api.dblClick(e);
}
o(bge, "dblClick");
function gge(e, t, r7 = {}) {
  return Je(r7).api.deselectOptions(e, t);
}
o(gge, "deselectOptions");
function vge(e, t = {}) {
  return Je(t).api.hover(e);
}
o(vge, "hover");
async function Ege(e, t = {}) {
  let { api: r7, system: n } = Je(t);
  return r7.keyboard(e).then(() => n);
}
o(Ege, "keyboard");
async function xge(e, t = {}) {
  let { api: r7, system: n } = Je(t);
  return r7.pointer(e).then(() => n);
}
o(xge, "pointer");
function wge(e, t) {
  return Je(t).api.paste(e);
}
o(wge, "paste");
function Tge(e, t, r7 = {}) {
  return Je(r7).api.selectOptions(e, t);
}
o(Tge, "selectOptions");
function Rge(e, t = {}) {
  return Je(t).api.tripleClick(e);
}
o(Rge, "tripleClick");
function Sge(e, t, r7 = {}) {
  return Je(r7, e).api.type(e, t, r7);
}
o(Sge, "type");
function _ge(e, t = {}) {
  let { api: r7, system: n } = Je(t);
  return n.pointer.setMousePosition({
    target: e
  }), r7.unhover(e);
}
o(_ge, "unhover");
function Cge(e, t, r7 = {}) {
  return Je(r7).api.upload(e, t);
}
o(Cge, "upload");
function Pge(e = {}) {
  return Je().api.tab(e);
}
o(Pge, "tab");
var ha$1 = {
  ...$T,
  setup: W2
};
var BT = rr(
  { ...cT },
  {
    intercept: /* @__PURE__ */ o((e, t) => t[0] === "fireEvent" || e.startsWith("find") || e.startsWith("waitFor"), "intercept")
  }
);
BT.screen = new Proxy(BT.screen, {
  get(e, t, r7) {
    return be.warn(mS`
          You are using Testing Library's \`screen\` object. Use \`within(canvasElement)\` instead.
          More info: https://storybook.js.org/docs/writing-tests/interaction-testing?ref=error
        `), Reflect.get(e, t, r7);
  }
});
var {
  buildQueries: Oge,
  configure: qge,
  createEvent: Ige,
  fireEvent: Mge,
  findAllByAltText: Nge,
  findAllByDisplayValue: jge,
  findAllByLabelText: kge,
  findAllByPlaceholderText: Lge,
  findAllByRole: Fge,
  findAllByTestId: Dge,
  findAllByText: $ge,
  findAllByTitle: Bge,
  findByAltText: Hge,
  findByDisplayValue: Uge,
  findByLabelText: Vge,
  findByPlaceholderText: zge,
  findByRole: Gge,
  findByTestId: Wge,
  findByText: Yge,
  findByTitle: Kge,
  getAllByAltText: Xge,
  getAllByDisplayValue: Jge,
  getAllByLabelText: Qge,
  getAllByPlaceholderText: Zge,
  getAllByRole: eve,
  getAllByTestId: tve,
  getAllByText: rve,
  getAllByTitle: nve,
  getByAltText: ove,
  getByDisplayValue: ive,
  getByLabelText: sve,
  getByPlaceholderText: ave,
  getByRole: lve,
  getByTestId: uve,
  getByText: cve,
  getByTitle: dve,
  getConfig: pve,
  getDefaultNormalizer: fve,
  getElementError: mve,
  getNodeText: hve,
  getQueriesForElement: yve,
  getRoles: bve,
  getSuggestedQuery: gve,
  isInaccessible: vve,
  logDOM: Eve,
  logRoles: xve,
  prettyDOM: wve,
  queries: Tve,
  queryAllByAltText: Rve,
  queryAllByAttribute: Sve,
  queryAllByDisplayValue: _ve,
  queryAllByLabelText: Cve,
  queryAllByPlaceholderText: Pve,
  queryAllByRole: Ave,
  queryAllByTestId: Ove,
  queryAllByText: qve,
  queryAllByTitle: Ive,
  queryByAltText: Mve,
  queryByAttribute: Nve,
  queryByDisplayValue: jve,
  queryByLabelText: kve,
  queryByPlaceholderText: Lve,
  queryByRole: Fve,
  queryByTestId: Dve,
  queryByText: $ve,
  queryByTitle: Bve,
  queryHelpers: Hve,
  screen: Uve,
  waitFor: Vve,
  waitForElementToBeRemoved: zve,
  within: HT,
  prettyFormat: Gve
} = BT, UT = ha$1, { userEvent: Wve } = rr(
  { userEvent: ha$1 },
  { intercept: true }
);
var { expect: Yve } = rr(
  { expect: sw },
  {
    getKeys: /* @__PURE__ */ o((e, t) => {
      if ("constructor" in e && e.constructor === T) {
        let r7 = ["assert", "__methods", "__flags", "_obj"], n = Object.keys(Object.getPrototypeOf(e)).filter(
          (i) => !r7.includes(i)
        );
        return t > 2 ? n : [...n, "not"];
      }
      return "any" in e ? Object.keys(e).filter((r7) => r7 !== "any") : Object.keys(e);
    }, "getKeys"),
    mutate: true,
    intercept: /* @__PURE__ */ o((e) => e !== "expect", "intercept")
  }
), Kve = {
  mock: /* @__PURE__ */ o(() => {
  }, "mock")
};
var Y2 = false, Xve = /* @__PURE__ */ o((e) => {
  let { parameters: t } = e;
  t?.actions?.disable || Y2 || (lw((r7, n) => {
    let i = r7.getMockName();
    i !== "spy" && (!/^next\/.*::/.test(i) || [
      "next/router::useRouter()",
      "next/navigation::useRouter()",
      "next/navigation::redirect",
      "next/cache::",
      "next/headers::cookies().set",
      "next/headers::cookies().delete",
      "next/headers::headers().set",
      "next/headers::headers().delete"
    ].some((s) => i.startsWith(s))) && Ir(i)(n);
  }), Y2 = true);
}, "logActionsWhenMockCalled"), Jve = [Xve];
var GT = /* @__PURE__ */ o(() => ({
  ...bg,
  ...zT
}), "default");
var ci = "backgrounds";
var K2 = {
  light: { name: "light", value: "#F8F8F8" },
  dark: { name: "dark", value: "#333" }
};
var { document: Qt } = globalThis, X2 = /* @__PURE__ */ o(() => globalThis?.matchMedia ? !!globalThis.matchMedia("(prefers-reduced-motion: reduce)")?.matches : false, "isReduceMotionEnabled"), WT = /* @__PURE__ */ o((e) => {
  (Array.isArray(e) ? e : [e]).forEach(Zve);
}, "clearStyles"), Zve = /* @__PURE__ */ o((e) => {
  if (!Qt)
    return;
  let t = Qt.getElementById(e);
  t && t.parentElement && t.parentElement.removeChild(t);
}, "clearStyle"), J22 = /* @__PURE__ */ o((e, t) => {
  if (!Qt)
    return;
  let r7 = Qt.getElementById(e);
  if (r7)
    r7.innerHTML !== t && (r7.innerHTML = t);
  else {
    let n = Qt.createElement("style");
    n.setAttribute("id", e), n.innerHTML = t, Qt.head.appendChild(n);
  }
}, "addGridStyle"), Q2 = /* @__PURE__ */ o((e, t, r7) => {
  if (!Qt)
    return;
  let n = Qt.getElementById(e);
  if (n)
    n.innerHTML !== t && (n.innerHTML = t);
  else {
    let i = Qt.createElement("style");
    i.setAttribute("id", e), i.innerHTML = t;
    let s = `addon-backgrounds-grid${r7 ? `-docs-${r7}` : ""}`, a = Qt.getElementById(s);
    a ? a.parentElement?.insertBefore(i, a) : Qt.head.appendChild(i);
  }
}, "addBackgroundStyle");
var eEe = {
  cellSize: 100,
  cellAmount: 10,
  opacity: 0.8
}, Z2 = "addon-backgrounds", eH = "addon-backgrounds-grid", tEe = X2() ? "" : "transition: background-color 0.3s;", tH = /* @__PURE__ */ o((e, t) => {
  let { globals: r7 = {}, parameters: n = {}, viewMode: i, id: s } = t, {
    options: a = K2,
    disable: l,
    grid: u = eEe
  } = n[ci] || {}, c = r7[ci] || {}, d = typeof c == "string" ? c : c?.value, p5 = d ? a[d] : void 0, f = typeof p5 == "string" ? p5 : p5?.value || "transparent", m = typeof c == "string" ? false : c.grid || false, h5 = !!p5 && !l, b = i === "docs" ? `#anchor--${s} .docs-story` : ".sb-show-main", v5 = i === "docs" ? `#anchor--${s} .docs-story` : ".sb-show-main", g = n.layout === void 0 || n.layout === "padded", w5 = i === "docs" ? 20 : g ? 16 : 0, { cellAmount: E, cellSize: R, opacity: S, offsetX: P = w5, offsetY: _5 = w5 } = u, C5 = i === "docs" ? `${Z2}-docs-${s}` : `${Z2}-color`, O = i === "docs" ? s : null;
  kt$1(() => {
    let q = `
    ${b} {
      background: ${f} !important;
      ${tEe}
      }`;
    if (!h5) {
      WT(C5);
      return;
    }
    Q2(C5, q, O);
  }, [b, C5, O, h5, f]);
  let L = i === "docs" ? `${eH}-docs-${s}` : `${eH}`;
  return kt$1(() => {
    if (!m) {
      WT(L);
      return;
    }
    let q = [
      `${R * E}px ${R * E}px`,
      `${R * E}px ${R * E}px`,
      `${R}px ${R}px`,
      `${R}px ${R}px`
    ].join(", "), D = `
        ${v5} {
          background-size: ${q} !important;
          background-position: ${P}px ${_5}px, ${P}px ${_5}px, ${P}px ${_5}px, ${P}px ${_5}px !important;
          background-blend-mode: difference !important;
          background-image: linear-gradient(rgba(130, 130, 130, ${S}) 1px, transparent 1px),
           linear-gradient(90deg, rgba(130, 130, 130, ${S}) 1px, transparent 1px),
           linear-gradient(rgba(130, 130, 130, ${S / 2}) 1px, transparent 1px),
           linear-gradient(90deg, rgba(130, 130, 130, ${S / 2}) 1px, transparent 1px) !important;
        }
      `;
    J22(L, D);
  }, [E, R, v5, L, m, P, _5, S]), e();
}, "withBackgroundAndGrid");
var rEe = globalThis.FEATURES?.backgrounds ? [tH] : [], nEe = {
  [ci]: {
    grid: {
      cellSize: 20,
      opacity: 0.5,
      cellAmount: 5
    },
    disable: false
  }
}, oEe = {
  [ci]: { value: void 0, grid: false }
}, YT = /* @__PURE__ */ o(() => ({
  decorators: rEe,
  parameters: nEe,
  initialGlobals: oEe
}), "default");
var { step: iEe } = rr(
  {
    // It seems like the label is unused, but the instrumenter has access to it
    // The context will be bounded later in StoryRender, so that the user can write just:
    // await step("label", (context) => {
    //   // labeled step
    // });
    step: /* @__PURE__ */ o(async (e, t, r7) => t(r7), "step")
  },
  { intercept: true }
), KT = /* @__PURE__ */ o(() => ({
  parameters: {
    throwPlayFunctionExceptions: false
  },
  runStep: iEe
}), "default");
var sy = "storybook/highlight", rH = `${sy}/add`, nH = `${sy}/remove`, oH = `${sy}/reset`, iH = `${sy}/scroll-into-view`, XT = 2147483647, sr = 28;
var JT = {
  chevronLeft: [
    "M9.10355 10.1464C9.29882 10.3417 9.29882 10.6583 9.10355 10.8536C8.90829 11.0488 8.59171 11.0488 8.39645 10.8536L4.89645 7.35355C4.70118 7.15829 4.70118 6.84171 4.89645 6.64645L8.39645 3.14645C8.59171 2.95118 8.90829 2.95118 9.10355 3.14645C9.29882 3.34171 9.29882 3.65829 9.10355 3.85355L5.95711 7L9.10355 10.1464Z"
  ],
  chevronRight: [
    "M4.89645 10.1464C4.70118 10.3417 4.70118 10.6583 4.89645 10.8536C5.09171 11.0488 5.40829 11.0488 5.60355 10.8536L9.10355 7.35355C9.29882 7.15829 9.29882 6.84171 9.10355 6.64645L5.60355 3.14645C5.40829 2.95118 5.09171 2.95118 4.89645 3.14645C4.70118 3.34171 4.70118 3.65829 4.89645 3.85355L8.04289 7L4.89645 10.1464Z"
  ],
  info: [
    "M7 5.5a.5.5 0 01.5.5v4a.5.5 0 01-1 0V6a.5.5 0 01.5-.5zM7 4.5A.75.75 0 107 3a.75.75 0 000 1.5z",
    "M7 14A7 7 0 107 0a7 7 0 000 14zm0-1A6 6 0 107 1a6 6 0 000 12z"
  ],
  shareAlt: [
    "M2 1.004a1 1 0 00-1 1v10a1 1 0 001 1h10a1 1 0 001-1v-4.5a.5.5 0 00-1 0v4.5H2v-10h4.5a.5.5 0 000-1H2z",
    "M7.354 7.357L12 2.711v1.793a.5.5 0 001 0v-3a.5.5 0 00-.5-.5h-3a.5.5 0 100 1h1.793L6.646 6.65a.5.5 0 10.708.707z"
  ]
};
var sEe = "svg,path,rect,circle,line,polyline,polygon,ellipse,text".split(","), Le$1 = /* @__PURE__ */ o((e, t = {}, r7) => {
  let n = sEe.includes(e) ? document.createElementNS("http://www.w3.org/2000/svg", e) : document.createElement(e);
  return Object.entries(t).forEach(([i, s]) => {
    /[A-Z]/.test(i) ? (i === "onClick" && (n.addEventListener("click", s), n.addEventListener("keydown", (a) => {
      (a.key === "Enter" || a.key === " ") && (a.preventDefault(), s());
    })), i === "onMouseEnter" && n.addEventListener("mouseenter", s), i === "onMouseLeave" && n.addEventListener("mouseleave", s)) : n.setAttribute(
      i,
      s
    );
  }), r7?.forEach((i) => {
    if (!(i == null || i === false))
      try {
        n.appendChild(i);
      } catch {
        n.appendChild(document.createTextNode(String(i)));
      }
  }), n;
}, "createElement"), ba = /* @__PURE__ */ o((e) => JT[e] && Le$1(
  "svg",
  { width: "14", height: "14", viewBox: "0 0 14 14", xmlns: "http://www.w3.org/2000/svg" },
  JT[e].map(
    (t) => Le$1("path", {
      fill: "currentColor",
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      d: t
    })
  )
), "createIcon"), sH = /* @__PURE__ */ o((e) => {
  if ("elements" in e) {
    let { elements: n, color: i, style: s } = e;
    return {
      id: void 0,
      priority: 0,
      selectors: n,
      styles: {
        outline: `2px ${s} ${i}`,
        outlineOffset: "2px",
        boxShadow: "0 0 0 6px rgba(255,255,255,0.6)"
      },
      menu: void 0
    };
  }
  let { menu: t, ...r7 } = e;
  return {
    id: void 0,
    priority: 0,
    styles: {
      outline: "2px dashed #029cfd"
    },
    ...r7,
    menu: Array.isArray(t) ? t.every(Array.isArray) ? t : [t] : void 0
  };
}, "normalizeOptions"), aEe = /* @__PURE__ */ o((e) => e instanceof Function, "isFunction"), ya$1 = /* @__PURE__ */ new Map(), Un = /* @__PURE__ */ new Map(), ay = /* @__PURE__ */ new Map(), ar = /* @__PURE__ */ o((e) => {
  let t = Symbol();
  return Un.set(t, []), ya$1.set(t, e), { get: /* @__PURE__ */ o(() => ya$1.get(t), "get"), set: /* @__PURE__ */ o((a) => {
    let l = ya$1.get(t), u = aEe(a) ? a(l) : a;
    u !== l && (ya$1.set(t, u), Un.get(t)?.forEach((c) => {
      ay.get(c)?.(), ay.set(c, c(u));
    }));
  }, "set"), subscribe: /* @__PURE__ */ o((a) => (Un.get(t)?.push(a), () => {
    let l = Un.get(t);
    l && Un.set(
      t,
      l.filter((u) => u !== a)
    );
  }), "subscribe"), teardown: /* @__PURE__ */ o(() => {
    Un.get(t)?.forEach((a) => {
      ay.get(a)?.(), ay.delete(a);
    }), Un.delete(t), ya$1.delete(t);
  }, "teardown") };
}, "useStore"), QT = /* @__PURE__ */ o((e) => {
  let t = document.getElementById("storybook-root"), r7 = /* @__PURE__ */ new Map();
  for (let n of e) {
    let { priority: i = 0 } = n;
    for (let s of n.selectors) {
      let a = [
        ...document.querySelectorAll(
          // Elements matching the selector, excluding storybook elements and their descendants.
          // Necessary to find portaled elements (e.g. children of `body`).
          `:is(${s}):not([id^="storybook-"], [id^="storybook-"] *, [class^="sb-"], [class^="sb-"] *)`
        ),
        // Elements matching the selector inside the storybook root, as these were excluded above.
        ...t?.querySelectorAll(s) || []
      ];
      for (let l of a) {
        let u = r7.get(l);
        (!u || u.priority <= i) && r7.set(l, {
          ...n,
          priority: i,
          selectors: Array.from(new Set((u?.selectors || []).concat(s)))
        });
      }
    }
  }
  return r7;
}, "mapElements"), aH = /* @__PURE__ */ o((e) => Array.from(e.entries()).map(([t, {
  selectors: r7,
  styles: n,
  hoverStyles: i,
  focusStyles: s,
  menu: a
}]) => {
  let { top: l, left: u, width: c, height: d } = t.getBoundingClientRect(), { position: p5 } = getComputedStyle(t);
  return {
    element: t,
    selectors: r7,
    styles: n,
    hoverStyles: i,
    focusStyles: s,
    menu: a,
    top: p5 === "fixed" ? l : l + window.scrollY,
    left: p5 === "fixed" ? u : u + window.scrollX,
    width: c,
    height: d
  };
}).sort((t, r7) => r7.width * r7.height - t.width * t.height), "mapBoxes"), ZT = /* @__PURE__ */ o((e, t) => {
  let r7 = e.getBoundingClientRect(), { x: n, y: i } = t;
  return r7?.top && r7?.left && n >= r7.left && n <= r7.left + r7.width && i >= r7.top && i <= r7.top + r7.height;
}, "isOverMenu"), eR = /* @__PURE__ */ o((e, t, r7) => {
  if (!t || !r7)
    return false;
  let { left: n, top: i, width: s, height: a } = e;
  a < sr && (i = i - Math.round((sr - a) / 2), a = sr), s < sr && (n = n - Math.round((sr - s) / 2), s = sr), t.style.position === "fixed" && (n += window.scrollX, i += window.scrollY);
  let { x: l, y: u } = r7;
  return l >= n && l <= n + s && u >= i && u <= i + a;
}, "isTargeted"), lH = /* @__PURE__ */ o((e, t, r7 = {}) => {
  let { x: n, y: i } = t, { margin: s = 5, topOffset: a = 0, centered: l = false } = r7, { scrollX: u, scrollY: c, innerHeight: d, innerWidth: p5 } = window, f = Math.min(
    e.style.position === "fixed" ? i - c : i,
    d - e.clientHeight - s - a + c
  ), m = l ? e.clientWidth / 2 : 0, h5 = e.style.position === "fixed" ? Math.max(Math.min(n - u, p5 - m - s), m + s) : Math.max(
    Math.min(n, p5 - m - s + u),
    m + s + u
  );
  Object.assign(e.style, {
    ...h5 !== n && { left: `${h5}px` },
    ...f !== i && { top: `${f}px` }
  });
}, "keepInViewport"), tR = /* @__PURE__ */ o((e) => {
  window.HTMLElement.prototype.hasOwnProperty("showPopover") && e.showPopover();
}, "showPopover"), uH = /* @__PURE__ */ o((e) => {
  window.HTMLElement.prototype.hasOwnProperty("showPopover") && e.hidePopover();
}, "hidePopover"), cH = /* @__PURE__ */ o((e) => ({
  top: e.top,
  left: e.left,
  width: e.width,
  height: e.height,
  selectors: e.selectors,
  element: {
    attributes: Object.fromEntries(
      Array.from(e.element.attributes).map((t) => [t.name, t.value])
    ),
    localName: e.element.localName,
    tagName: e.element.tagName,
    outerHTML: e.element.outerHTML
  }
}), "getEventDetails");
var Ce$1 = "storybook-highlights-menu", dH = "storybook-highlights-root", lEe = "storybook-root", pH = /* @__PURE__ */ o((e) => {
  if (globalThis.__STORYBOOK_HIGHLIGHT_INITIALIZED)
    return;
  globalThis.__STORYBOOK_HIGHLIGHT_INITIALIZED = true;
  let { document: t } = globalThis, r7 = ar([]), n = ar(/* @__PURE__ */ new Map()), i = ar([]), s = ar(), a = ar(), l = ar([]), u = ar([]), c = ar(), d = ar(), p5 = t.getElementById(dH);
  r7.subscribe(() => {
    p5 || (p5 = Le$1("div", { id: dH }), t.body.appendChild(p5));
  }), r7.subscribe((_5) => {
    let C5 = t.getElementById(lEe);
    if (!C5)
      return;
    n.set(QT(_5));
    let O = new MutationObserver(() => n.set(QT(_5)));
    return O.observe(C5, { subtree: true, childList: true }), () => {
      O.disconnect();
    };
  }), n.subscribe((_5) => {
    let C5 = /* @__PURE__ */ o(() => requestAnimationFrame(() => i.set(aH(_5))), "updateBoxes"), O = new ResizeObserver(C5);
    O.observe(t.body), Array.from(_5.keys()).forEach((q) => O.observe(q));
    let L = Array.from(t.body.querySelectorAll("*")).filter((q) => {
      let { overflow: D, overflowX: H, overflowY: M7 } = window.getComputedStyle(q);
      return ["auto", "scroll"].some((U) => [D, H, M7].includes(U));
    });
    return L.forEach((q) => q.addEventListener("scroll", C5)), () => {
      O.disconnect(), L.forEach((q) => q.removeEventListener("scroll", C5));
    };
  }), n.subscribe((_5) => {
    let C5 = Array.from(_5.keys()).filter(({ style: L }) => L.position === "sticky"), O = /* @__PURE__ */ o(() => requestAnimationFrame(() => {
      i.set(
        (L) => L.map((q) => {
          if (C5.includes(q.element)) {
            let { top: D, left: H } = q.element.getBoundingClientRect();
            return { ...q, top: D + window.scrollY, left: H + window.scrollX };
          }
          return q;
        })
      );
    }), "updateBoxes");
    return t.addEventListener("scroll", O), () => t.removeEventListener("scroll", O);
  }), n.subscribe((_5) => {
    l.set((C5) => C5.filter(({ element: O }) => _5.has(O)));
  }), l.subscribe((_5) => {
    _5.length ? (d.set((C5) => _5.some((O) => O.element === C5?.element) ? C5 : void 0), c.set((C5) => _5.some((O) => O.element === C5?.element) ? C5 : void 0)) : (d.set(void 0), c.set(void 0), s.set(void 0));
  });
  let f = new Map(/* @__PURE__ */ new Map());
  r7.subscribe((_5) => {
    _5.forEach(({ keyframes: C5 }) => {
      if (C5) {
        let O = f.get(C5);
        O || (O = t.createElement("style"), O.setAttribute("data-highlight", "keyframes"), f.set(C5, O), t.head.appendChild(O)), O.innerHTML = C5;
      }
    }), f.forEach((C5, O) => {
      _5.some((L) => L.keyframes === O) || (C5.remove(), f.delete(O));
    });
  });
  let m = new Map(/* @__PURE__ */ new Map());
  i.subscribe((_5) => {
    _5.forEach((C5) => {
      let O = m.get(C5.element);
      if (p5 && !O) {
        let L = {
          popover: "manual",
          "data-highlight-dimensions": `w${C5.width.toFixed(0)}h${C5.height.toFixed(0)}`,
          "data-highlight-coordinates": `x${C5.left.toFixed(0)}y${C5.top.toFixed(0)}`
        };
        O = p5.appendChild(
          Le$1("div", L, [Le$1("div")])
        ), m.set(C5.element, O);
      }
    }), m.forEach((C5, O) => {
      _5.some(({ element: L }) => L === O) || (C5.remove(), m.delete(O));
    });
  }), i.subscribe((_5) => {
    let C5 = _5.filter((L) => L.menu);
    if (!C5.length)
      return;
    let O = /* @__PURE__ */ o((L) => {
      requestAnimationFrame(() => {
        let q = t.getElementById(Ce$1), D = { x: L.pageX, y: L.pageY };
        if (q && !ZT(q, D)) {
          let H = C5.filter((M7) => {
            let U = m.get(M7.element);
            return eR(M7, U, D);
          });
          s.set(H.length ? D : void 0), l.set(H);
        }
      });
    }, "onClick");
    return t.addEventListener("click", O), () => t.removeEventListener("click", O);
  });
  let h5 = /* @__PURE__ */ o(() => {
    let _5 = t.getElementById(Ce$1), C5 = a.get();
    !C5 || _5 && ZT(_5, C5) || u.set((O) => {
      let L = i.get().filter((M7) => {
        let U = m.get(M7.element);
        return eR(M7, U, C5);
      }), q = O.filter((M7) => L.includes(M7)), D = L.filter((M7) => !O.includes(M7)), H = O.length - q.length;
      return D.length || H ? [...q, ...D] : O;
    });
  }, "updateHovered");
  a.subscribe(h5), i.subscribe(h5);
  let b = /* @__PURE__ */ o(() => {
    let _5 = d.get(), C5 = _5 ? [_5] : l.get(), O = C5.length === 1 ? C5[0] : c.get(), L = s.get() !== void 0;
    i.get().forEach((q) => {
      let D = m.get(q.element);
      if (D) {
        let H = O === q, M7 = L ? O ? H : C5.includes(q) : u.get()?.includes(q);
        Object.assign(D.style, {
          animation: "none",
          background: "transparent",
          border: "none",
          boxSizing: "border-box",
          outline: "none",
          outlineOffset: "0px",
          ...q.styles,
          ...M7 ? q.hoverStyles : {},
          ...H ? q.focusStyles : {},
          position: getComputedStyle(q.element).position === "fixed" ? "fixed" : "absolute",
          zIndex: XT - 10,
          top: `${q.top}px`,
          left: `${q.left}px`,
          width: `${q.width}px`,
          height: `${q.height}px`,
          margin: 0,
          padding: 0,
          cursor: q.menu && M7 ? "pointer" : "default",
          pointerEvents: q.menu ? "auto" : "none",
          display: "flex",
          alignItems: "center",
          justifyContent: "center",
          overflow: "visible"
        }), Object.assign(D.children[0].style, {
          width: "100%",
          height: "100%",
          minHeight: `${sr}px`,
          minWidth: `${sr}px`,
          boxSizing: "content-box",
          padding: D.style.outlineWidth || "0px"
        }), tR(D);
      }
    });
  }, "updateBoxStyles");
  i.subscribe(b), l.subscribe(b), u.subscribe(b), c.subscribe(b), d.subscribe(b);
  let v5 = /* @__PURE__ */ o(() => {
    if (!p5)
      return;
    let _5 = t.getElementById(Ce$1);
    if (_5)
      _5.innerHTML = "";
    else {
      let q = { id: Ce$1, popover: "manual" };
      _5 = p5.appendChild(Le$1("div", q)), p5.appendChild(
        Le$1("style", {}, [
          `
            #${Ce$1} {
              position: absolute;
              z-index: ${XT};
              width: 300px;
              padding: 0px;
              margin: 15px 0 0 0;
              transform: translateX(-50%);
              font-family: "Nunito Sans", -apple-system, ".SFNSText-Regular", "San Francisco", BlinkMacSystemFont, "Segoe UI", "Helvetica Neue", Helvetica, Arial, sans-serif;
              font-size: 12px;
              background: white;
              border: none;
              border-radius: 6px;
              box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.05), 0 5px 15px 0 rgba(0, 0, 0, 0.1);
              color: #2E3438;
            }
            #${Ce$1} ul {
              list-style: none;
              margin: 0;
              padding: 0;
            }
            #${Ce$1} > ul {
              max-height: 300px;
              overflow-y: auto;
              padding: 4px 0;
            }
            #${Ce$1} li {
              padding: 0 4px;
              margin: 0;
            }
            #${Ce$1} li > :not(ul) {
              display: flex;
              padding: 8px;
              margin: 0;
              align-items: center;
              gap: 8px;
              border-radius: 4px;
            }
            #${Ce$1} button {
              width: 100%;
              border: 0;
              background: transparent;
              color: inherit;
              text-align: left;
              font-family: inherit;
              font-size: inherit;
            }
            #${Ce$1} button:focus-visible {
              outline-color: #029CFD;
            }
            #${Ce$1} button:hover {
              background: rgba(2, 156, 253, 0.07);
              color: #029CFD;
              cursor: pointer;
            }
            #${Ce$1} li code {
              white-space: nowrap;
              overflow: hidden;
              text-overflow: ellipsis;
              line-height: 16px;
              font-size: 11px;
            }
            #${Ce$1} li svg {
              flex-shrink: 0;
              margin: 1px;
              color: #73828C;
            }
            #${Ce$1} li > button:hover svg, #${Ce$1} li > button:focus-visible svg {
              color: #029CFD;
            }
            #${Ce$1} .element-list li svg {
              display: none;
            }
            #${Ce$1} li.selectable svg, #${Ce$1} li.selected svg {
              display: block;
            }
            #${Ce$1} .menu-list {
              border-top: 1px solid rgba(38, 85, 115, 0.15);
            }
            #${Ce$1} .menu-list > li:not(:last-child) {
              padding-bottom: 4px;
              margin-bottom: 4px;
              border-bottom: 1px solid rgba(38, 85, 115, 0.15);
            }
            #${Ce$1} .menu-items, #${Ce$1} .menu-items li {
              padding: 0;
            }
            #${Ce$1} .menu-item {
              display: flex;
            }
            #${Ce$1} .menu-item-content {
              display: flex;
              flex-direction: column;
              flex-grow: 1;
            }
          `
        ])
      );
    }
    let C5 = d.get(), O = C5 ? [C5] : l.get();
    if (O.length && (_5.style.position = getComputedStyle(O[0].element).position === "fixed" ? "fixed" : "absolute", _5.appendChild(
      Le$1(
        "ul",
        { class: "element-list" },
        O.map((q) => {
          let D = O.length > 1 && !!q.menu?.some(
            (U) => U.some(
              (N) => !N.selectors || N.selectors.some((W) => q.selectors.includes(W))
            )
          ), H = D ? {
            class: "selectable",
            onClick: /* @__PURE__ */ o(() => d.set(q), "onClick"),
            onMouseEnter: /* @__PURE__ */ o(() => c.set(q), "onMouseEnter"),
            onMouseLeave: /* @__PURE__ */ o(() => c.set(void 0), "onMouseLeave")
          } : C5 ? { class: "selected", onClick: /* @__PURE__ */ o(() => d.set(void 0), "onClick") } : {}, M7 = D || C5;
          return Le$1("li", H, [
            Le$1(M7 ? "button" : "div", M7 ? { type: "button" } : {}, [
              C5 ? ba("chevronLeft") : null,
              Le$1("code", {}, [q.element.outerHTML]),
              D ? ba("chevronRight") : null
            ])
          ]);
        })
      )
    )), d.get() || l.get().length === 1) {
      let q = d.get() || l.get()[0], D = q.menu?.filter(
        (H) => H.some(
          (M7) => !M7.selectors || M7.selectors.some((U) => q.selectors.includes(U))
        )
      );
      D?.length && _5.appendChild(
        Le$1(
          "ul",
          { class: "menu-list" },
          D.map(
            (H) => Le$1("li", {}, [
              Le$1(
                "ul",
                { class: "menu-items" },
                H.map(
                  ({ id: M7, title: U, description: N, iconLeft: W, iconRight: Y, clickEvent: ae }) => {
                    let pe2 = ae && (() => e.emit(ae, M7, cH(q)));
                    return Le$1("li", {}, [
                      Le$1(
                        pe2 ? "button" : "div",
                        pe2 ? { class: "menu-item", type: "button", onClick: pe2 } : { class: "menu-item" },
                        [
                          W ? ba(W) : null,
                          Le$1("div", { class: "menu-item-content" }, [
                            Le$1(N ? "strong" : "span", {}, [U]),
                            N && Le$1("span", {}, [N])
                          ]),
                          Y ? ba(Y) : null
                        ]
                      )
                    ]);
                  }
                )
              )
            ])
          )
        )
      );
    }
    let L = s.get();
    L ? (Object.assign(_5.style, {
      display: "block",
      left: `${_5.style.position === "fixed" ? L.x - window.scrollX : L.x}px`,
      top: `${_5.style.position === "fixed" ? L.y - window.scrollY : L.y}px`
    }), tR(_5), requestAnimationFrame(() => lH(_5, L, { topOffset: 15, centered: true }))) : (uH(_5), Object.assign(_5.style, { display: "none" }));
  }, "renderMenu");
  l.subscribe(v5), d.subscribe(v5);
  let g = /* @__PURE__ */ o((_5) => {
    let C5 = sH(_5);
    r7.set((O) => {
      let L = C5.id ? O.filter((q) => q.id !== C5.id) : O;
      return C5.selectors?.length ? [...L, C5] : L;
    });
  }, "addHighlight"), w5 = /* @__PURE__ */ o((_5) => {
    _5 && r7.set((C5) => C5.filter((O) => O.id !== _5));
  }, "removeHighlight"), E = /* @__PURE__ */ o(() => {
    r7.set([]), n.set(/* @__PURE__ */ new Map()), i.set([]), s.set(void 0), a.set(void 0), l.set([]), u.set([]), c.set(void 0), d.set(void 0);
  }, "resetState"), R, S = /* @__PURE__ */ o((_5, C5) => {
    let O = "scrollIntoView-highlight";
    clearTimeout(R), w5(O);
    let L = t.querySelector(_5);
    if (!L) {
      console.warn(`Cannot scroll into view: ${_5} not found`);
      return;
    }
    L.scrollIntoView({ behavior: "smooth", block: "center", ...C5 });
    let q = `kf-${Math.random().toString(36).substring(2, 15)}`;
    r7.set((D) => [
      ...D,
      {
        id: O,
        priority: 1e3,
        selectors: [_5],
        styles: {
          outline: "2px solid #1EA7FD",
          outlineOffset: "-1px",
          animation: `${q} 3s linear forwards`
        },
        keyframes: `@keyframes ${q} {
          0% { outline: 2px solid #1EA7FD; }
          20% { outline: 2px solid #1EA7FD00; }
          40% { outline: 2px solid #1EA7FD; }
          60% { outline: 2px solid #1EA7FD00; }
          80% { outline: 2px solid #1EA7FD; }
          100% { outline: 2px solid #1EA7FD00; }
        }`
      }
    ]), R = setTimeout(() => w5(O), 3500);
  }, "scrollIntoView"), P = /* @__PURE__ */ o((_5) => {
    requestAnimationFrame(() => a.set({ x: _5.pageX, y: _5.pageY }));
  }, "onMouseMove");
  t.body.addEventListener("mousemove", P), e.on(rH, g), e.on(nH, w5), e.on(oH, E), e.on(iH, S), e.on(jt, ({ newPhase: _5 }) => {
    _5 === "loading" && E();
  });
}, "useHighlights");
globalThis?.FEATURES?.highlight && He?.ready && He.ready().then(pH);
var rR = /* @__PURE__ */ o(() => ({}), "default");
var fH = "measureEnabled";
function mH() {
  let e = k.document.documentElement, t = Math.max(e.scrollHeight, e.offsetHeight);
  return { width: Math.max(e.scrollWidth, e.offsetWidth), height: t };
}
o(mH, "getDocumentWidthAndHeight");
function uEe() {
  let e = k.document.createElement("canvas");
  e.id = "storybook-addon-measure";
  let t = e.getContext("2d");
  gt$1(t != null);
  let { width: r7, height: n } = mH();
  return nR(e, t, { width: r7, height: n }), e.style.position = "absolute", e.style.left = "0", e.style.top = "0", e.style.zIndex = "2147483647", e.style.pointerEvents = "none", k.document.body.appendChild(e), { canvas: e, context: t, width: r7, height: n };
}
o(uEe, "createCanvas");
function nR(e, t, { width: r7, height: n }) {
  e.style.width = `${r7}px`, e.style.height = `${n}px`;
  let i = k.window.devicePixelRatio;
  e.width = Math.floor(r7 * i), e.height = Math.floor(n * i), t.scale(i, i);
}
o(nR, "setCanvasWidthAndHeight");
var Be$1 = {};
function hH() {
  Be$1.canvas || (Be$1 = uEe());
}
o(hH, "init");
function yH() {
  Be$1.context && Be$1.context.clearRect(0, 0, Be$1.width ?? 0, Be$1.height ?? 0);
}
o(yH, "clear");
function bH(e) {
  yH(), e(Be$1.context);
}
o(bH, "draw");
function gH() {
  gt$1(Be$1.canvas), gt$1(Be$1.context), nR(Be$1.canvas, Be$1.context, {
    width: 0,
    height: 0
  });
  let { width: e, height: t } = mH();
  nR(Be$1.canvas, Be$1.context, { width: e, height: t }), Be$1.width = e, Be$1.height = t;
}
o(gH, "rescale");
function vH() {
  Be$1.canvas && (yH(), Be$1.canvas.parentNode?.removeChild(Be$1.canvas), Be$1 = {});
}
o(vH, "destroy");
var di = {
  margin: "#f6b26b",
  border: "#ffe599",
  padding: "#93c47d",
  content: "#6fa8dc",
  text: "#232020"
}, Rr$1 = 6;
function EH(e, { x: t, y: r7, w: n, h: i, r: s }) {
  t = t - n / 2, r7 = r7 - i / 2, n < 2 * s && (s = n / 2), i < 2 * s && (s = i / 2), e.beginPath(), e.moveTo(t + s, r7), e.arcTo(t + n, r7, t + n, r7 + i, s), e.arcTo(t + n, r7 + i, t, r7 + i, s), e.arcTo(t, r7 + i, t, r7, s), e.arcTo(t, r7, t + n, r7, s), e.closePath();
}
o(EH, "roundedRect");
function cEe(e, { padding: t, border: r7, width: n, height: i, top: s, left: a }) {
  let l = n - r7.left - r7.right - t.left - t.right, u = i - t.top - t.bottom - r7.top - r7.bottom, c = a + r7.left + t.left, d = s + r7.top + t.top;
  return e === "top" ? c += l / 2 : e === "right" ? (c += l, d += u / 2) : e === "bottom" ? (c += l / 2, d += u) : e === "left" ? d += u / 2 : e === "center" && (c += l / 2, d += u / 2), { x: c, y: d };
}
o(cEe, "positionCoordinate");
function dEe(e, t, { margin: r7, border: n, padding: i }, s, a) {
  let l = /* @__PURE__ */ o((f) => 0, "shift"), u = 0, c = 0, d = a ? 1 : 0.5, p5 = a ? s * 2 : 0;
  return e === "padding" ? l = /* @__PURE__ */ o((f) => i[f] * d + p5, "shift") : e === "border" ? l = /* @__PURE__ */ o((f) => i[f] + n[f] * d + p5, "shift") : e === "margin" && (l = /* @__PURE__ */ o((f) => i[f] + n[f] + r7[f] * d + p5, "shift")), t === "top" ? c = -l("top") : t === "right" ? u = l("right") : t === "bottom" ? c = l("bottom") : t === "left" && (u = -l("left")), { offsetX: u, offsetY: c };
}
o(dEe, "offset");
function pEe(e, t) {
  return Math.abs(e.x - t.x) < Math.abs(e.w + t.w) / 2 && Math.abs(e.y - t.y) < Math.abs(e.h + t.h) / 2;
}
o(pEe, "collide");
function fEe(e, t, r7) {
  return e === "top" ? t.y = r7.y - r7.h - Rr$1 : e === "right" ? t.x = r7.x + r7.w / 2 + Rr$1 + t.w / 2 : e === "bottom" ? t.y = r7.y + r7.h + Rr$1 : e === "left" && (t.x = r7.x - r7.w / 2 - Rr$1 - t.w / 2), { x: t.x, y: t.y };
}
o(fEe, "overlapAdjustment");
function xH(e, t, { x: r7, y: n, w: i, h: s }, a) {
  return EH(e, { x: r7, y: n, w: i, h: s, r: 3 }), e.fillStyle = `${di[t]}dd`, e.fill(), e.strokeStyle = di[t], e.stroke(), e.fillStyle = di.text, e.fillText(a, r7, n), EH(e, { x: r7, y: n, w: i, h: s, r: 3 }), e.fillStyle = `${di[t]}dd`, e.fill(), e.strokeStyle = di[t], e.stroke(), e.fillStyle = di.text, e.fillText(a, r7, n), { x: r7, y: n, w: i, h: s };
}
o(xH, "textWithRect");
function wH(e, t) {
  e.font = "600 12px monospace", e.textBaseline = "middle", e.textAlign = "center";
  let r7 = e.measureText(t), n = r7.actualBoundingBoxAscent + r7.actualBoundingBoxDescent, i = r7.width + Rr$1 * 2, s = n + Rr$1 * 2;
  return { w: i, h: s };
}
o(wH, "configureText");
function mEe(e, t, { type: r7, position: n = "center", text: i }, s, a = false) {
  let { x: l, y: u } = cEe(n, t), { offsetX: c, offsetY: d } = dEe(r7, n, t, Rr$1 + 1, a);
  l += c, u += d;
  let { w: p5, h: f } = wH(e, i);
  if (s && pEe({ x: l, y: u, w: p5, h: f }, s)) {
    let m = fEe(n, { x: l, y: u, w: p5 }, s);
    l = m.x, u = m.y;
  }
  return xH(e, r7, { x: l, y: u, w: p5, h: f }, i);
}
o(mEe, "drawLabel");
function hEe(e, { w: t, h: r7 }) {
  let n = t * 0.5 + Rr$1, i = r7 * 0.5 + Rr$1;
  return {
    offsetX: (e.x === "left" ? -1 : 1) * n,
    offsetY: (e.y === "top" ? -1 : 1) * i
  };
}
o(hEe, "floatingOffset");
function yEe(e, t, { type: r7, text: n }) {
  let { floatingAlignment: i, extremities: s } = t, a = s[i.x], l = s[i.y], { w: u, h: c } = wH(e, n), { offsetX: d, offsetY: p5 } = hEe(i, {
    w: u,
    h: c
  });
  return a += d, l += p5, xH(e, r7, { x: a, y: l, w: u, h: c }, n);
}
o(yEe, "drawFloatingLabel");
function ga(e, t, r7, n) {
  let i = [];
  r7.forEach((s, a) => {
    let l = n && s.position === "center" ? yEe(e, t, s) : mEe(e, t, s, i[a - 1], n);
    i[a] = l;
  });
}
o(ga, "drawStack");
function TH(e, t, r7, n) {
  let i = r7.reduce((s, a) => (Object.prototype.hasOwnProperty.call(s, a.position) || (s[a.position] = []), s[a.position]?.push(a), s), {});
  i.top && ga(e, t, i.top, n), i.right && ga(e, t, i.right, n), i.bottom && ga(e, t, i.bottom, n), i.left && ga(e, t, i.left, n), i.center && ga(e, t, i.center, n);
}
o(TH, "labelStacks");
var uy = {
  margin: "#f6b26ba8",
  border: "#ffe599a8",
  padding: "#93c47d8c",
  content: "#6fa8dca8"
}, RH = 30;
function Nt$1(e) {
  return parseInt(e.replace("px", ""), 10);
}
o(Nt$1, "pxToNumber");
function pi(e) {
  return Number.isInteger(e) ? e : e.toFixed(2);
}
o(pi, "round");
function oR(e) {
  return e.filter((t) => t.text !== 0 && t.text !== "0");
}
o(oR, "filterZeroValues");
function bEe(e) {
  let t = {
    top: k.window.scrollY,
    bottom: k.window.scrollY + k.window.innerHeight,
    left: k.window.scrollX,
    right: k.window.scrollX + k.window.innerWidth
  }, r7 = {
    top: Math.abs(t.top - e.top),
    bottom: Math.abs(t.bottom - e.bottom),
    left: Math.abs(t.left - e.left),
    right: Math.abs(t.right - e.right)
  };
  return {
    x: r7.left > r7.right ? "left" : "right",
    y: r7.top > r7.bottom ? "top" : "bottom"
  };
}
o(bEe, "floatingAlignment");
function gEe(e) {
  let t = k.getComputedStyle(e), { top: r7, left: n, right: i, bottom: s, width: a, height: l } = e.getBoundingClientRect(), {
    marginTop: u,
    marginBottom: c,
    marginLeft: d,
    marginRight: p5,
    paddingTop: f,
    paddingBottom: m,
    paddingLeft: h5,
    paddingRight: b,
    borderBottomWidth: v5,
    borderTopWidth: g,
    borderLeftWidth: w5,
    borderRightWidth: E
  } = t;
  r7 = r7 + k.window.scrollY, n = n + k.window.scrollX, s = s + k.window.scrollY, i = i + k.window.scrollX;
  let R = {
    top: Nt$1(u),
    bottom: Nt$1(c),
    left: Nt$1(d),
    right: Nt$1(p5)
  }, S = {
    top: Nt$1(f),
    bottom: Nt$1(m),
    left: Nt$1(h5),
    right: Nt$1(b)
  }, P = {
    top: Nt$1(g),
    bottom: Nt$1(v5),
    left: Nt$1(w5),
    right: Nt$1(E)
  }, _5 = {
    top: r7 - R.top,
    bottom: s + R.bottom,
    left: n - R.left,
    right: i + R.right
  };
  return {
    margin: R,
    padding: S,
    border: P,
    top: r7,
    left: n,
    bottom: s,
    right: i,
    width: a,
    height: l,
    extremities: _5,
    floatingAlignment: bEe(_5)
  };
}
o(gEe, "measureElement");
function vEe(e, { margin: t, width: r7, height: n, top: i, left: s, bottom: a, right: l }) {
  let u = n + t.bottom + t.top;
  e.fillStyle = uy.margin, e.fillRect(s, i - t.top, r7, t.top), e.fillRect(l, i - t.top, t.right, u), e.fillRect(s, a, r7, t.bottom), e.fillRect(
    s - t.left,
    i - t.top,
    t.left,
    u
  );
  let c = [
    {
      type: "margin",
      text: pi(t.top),
      position: "top"
    },
    {
      type: "margin",
      text: pi(t.right),
      position: "right"
    },
    {
      type: "margin",
      text: pi(t.bottom),
      position: "bottom"
    },
    {
      type: "margin",
      text: pi(t.left),
      position: "left"
    }
  ];
  return oR(c);
}
o(vEe, "drawMargin");
function EEe(e, { padding: t, border: r7, width: n, height: i, top: s, left: a, bottom: l, right: u }) {
  let c = n - r7.left - r7.right, d = i - t.top - t.bottom - r7.top - r7.bottom;
  e.fillStyle = uy.padding, e.fillRect(a + r7.left, s + r7.top, c, t.top), e.fillRect(
    u - t.right - r7.right,
    s + t.top + r7.top,
    t.right,
    d
  ), e.fillRect(
    a + r7.left,
    l - t.bottom - r7.bottom,
    c,
    t.bottom
  ), e.fillRect(a + r7.left, s + t.top + r7.top, t.left, d);
  let p5 = [
    {
      type: "padding",
      text: t.top,
      position: "top"
    },
    {
      type: "padding",
      text: t.right,
      position: "right"
    },
    {
      type: "padding",
      text: t.bottom,
      position: "bottom"
    },
    {
      type: "padding",
      text: t.left,
      position: "left"
    }
  ];
  return oR(p5);
}
o(EEe, "drawPadding");
function xEe(e, { border: t, width: r7, height: n, top: i, left: s, bottom: a, right: l }) {
  let u = n - t.top - t.bottom;
  e.fillStyle = uy.border, e.fillRect(s, i, r7, t.top), e.fillRect(s, a - t.bottom, r7, t.bottom), e.fillRect(s, i + t.top, t.left, u), e.fillRect(
    l - t.right,
    i + t.top,
    t.right,
    u
  );
  let c = [
    {
      type: "border",
      text: t.top,
      position: "top"
    },
    {
      type: "border",
      text: t.right,
      position: "right"
    },
    {
      type: "border",
      text: t.bottom,
      position: "bottom"
    },
    {
      type: "border",
      text: t.left,
      position: "left"
    }
  ];
  return oR(c);
}
o(xEe, "drawBorder");
function wEe(e, { padding: t, border: r7, width: n, height: i, top: s, left: a }) {
  let l = n - r7.left - r7.right - t.left - t.right, u = i - t.top - t.bottom - r7.top - r7.bottom;
  return e.fillStyle = uy.content, e.fillRect(
    a + r7.left + t.left,
    s + r7.top + t.top,
    l,
    u
  ), [
    {
      type: "content",
      position: "center",
      text: `${pi(l)} x ${pi(u)}`
    }
  ];
}
o(wEe, "drawContent");
function TEe(e) {
  return (t) => {
    if (e && t) {
      let r7 = gEe(e), n = vEe(t, r7), i = EEe(t, r7), s = xEe(t, r7), a = wEe(t, r7), l = r7.width <= RH * 3 || r7.height <= RH;
      TH(
        t,
        r7,
        [...a, ...i, ...s, ...n],
        l
      );
    }
  };
}
o(TEe, "drawBoxModel");
function SH(e) {
  bH(TEe(e));
}
o(SH, "drawSelectedElement");
var _H = /* @__PURE__ */ o((e, t) => {
  let r7 = k.document.elementFromPoint(e, t), n = /* @__PURE__ */ o((s) => {
    if (s && s.shadowRoot) {
      let a = s.shadowRoot.elementFromPoint(e, t);
      return s.isEqualNode(a) ? s : a.shadowRoot ? n(a) : a;
    }
    return s;
  }, "crawlShadows");
  return n(r7) || r7;
}, "deepElementFromPoint");
var CH, cy = { x: 0, y: 0 };
function PH(e, t) {
  CH = _H(e, t), SH(CH);
}
o(PH, "findAndDrawElement");
var AH = /* @__PURE__ */ o((e, t) => {
  let { measureEnabled: r7 } = t.globals || {};
  return kt$1(() => {
    if (typeof globalThis.document > "u")
      return;
    let n = /* @__PURE__ */ o((i) => {
      window.requestAnimationFrame(() => {
        i.stopPropagation(), cy.x = i.clientX, cy.y = i.clientY;
      });
    }, "onPointerMove");
    return globalThis.document.addEventListener("pointermove", n), () => {
      globalThis.document.removeEventListener("pointermove", n);
    };
  }, []), kt$1(() => {
    let n = /* @__PURE__ */ o((s) => {
      window.requestAnimationFrame(() => {
        s.stopPropagation(), PH(s.clientX, s.clientY);
      });
    }, "onPointerOver"), i = /* @__PURE__ */ o(() => {
      window.requestAnimationFrame(() => {
        gH();
      });
    }, "onResize");
    return t.viewMode === "story" && r7 && (globalThis.document.addEventListener("pointerover", n), hH(), globalThis.window.addEventListener(
      "resize",
      i
    ), PH(cy.x, cy.y)), () => {
      globalThis.window.removeEventListener("resize", i), vH();
    };
  }, [r7, t.viewMode]), e();
}, "withMeasure");
var REe = globalThis.FEATURES?.measure ? [AH] : [], SEe = {
  [fH]: false
}, iR = /* @__PURE__ */ o(() => ({
  decorators: REe,
  initialGlobals: SEe
}), "default");
var dy = "outline";
var sR = /* @__PURE__ */ o((e) => {
  (Array.isArray(e) ? e : [e]).forEach(_Ee);
}, "clearStyles"), _Ee = /* @__PURE__ */ o((e) => {
  let t = typeof e == "string" ? e : e.join(""), r7 = k.document.getElementById(t);
  r7 && r7.parentElement && r7.parentElement.removeChild(r7);
}, "clearStyle"), OH = /* @__PURE__ */ o((e, t) => {
  let r7 = k.document.getElementById(e);
  if (r7)
    r7.innerHTML !== t && (r7.innerHTML = t);
  else {
    let n = k.document.createElement("style");
    n.setAttribute("id", e), n.innerHTML = t, k.document.head.appendChild(n);
  }
}, "addOutlineStyles");
function aR(e) {
  return Q`
    ${e} body {
      outline: 1px solid #2980b9 !important;
    }

    ${e} article {
      outline: 1px solid #3498db !important;
    }

    ${e} nav {
      outline: 1px solid #0088c3 !important;
    }

    ${e} aside {
      outline: 1px solid #33a0ce !important;
    }

    ${e} section {
      outline: 1px solid #66b8da !important;
    }

    ${e} header {
      outline: 1px solid #99cfe7 !important;
    }

    ${e} footer {
      outline: 1px solid #cce7f3 !important;
    }

    ${e} h1 {
      outline: 1px solid #162544 !important;
    }

    ${e} h2 {
      outline: 1px solid #314e6e !important;
    }

    ${e} h3 {
      outline: 1px solid #3e5e85 !important;
    }

    ${e} h4 {
      outline: 1px solid #449baf !important;
    }

    ${e} h5 {
      outline: 1px solid #c7d1cb !important;
    }

    ${e} h6 {
      outline: 1px solid #4371d0 !important;
    }

    ${e} main {
      outline: 1px solid #2f4f90 !important;
    }

    ${e} address {
      outline: 1px solid #1a2c51 !important;
    }

    ${e} div {
      outline: 1px solid #036cdb !important;
    }

    ${e} p {
      outline: 1px solid #ac050b !important;
    }

    ${e} hr {
      outline: 1px solid #ff063f !important;
    }

    ${e} pre {
      outline: 1px solid #850440 !important;
    }

    ${e} blockquote {
      outline: 1px solid #f1b8e7 !important;
    }

    ${e} ol {
      outline: 1px solid #ff050c !important;
    }

    ${e} ul {
      outline: 1px solid #d90416 !important;
    }

    ${e} li {
      outline: 1px solid #d90416 !important;
    }

    ${e} dl {
      outline: 1px solid #fd3427 !important;
    }

    ${e} dt {
      outline: 1px solid #ff0043 !important;
    }

    ${e} dd {
      outline: 1px solid #e80174 !important;
    }

    ${e} figure {
      outline: 1px solid #ff00bb !important;
    }

    ${e} figcaption {
      outline: 1px solid #bf0032 !important;
    }

    ${e} table {
      outline: 1px solid #00cc99 !important;
    }

    ${e} caption {
      outline: 1px solid #37ffc4 !important;
    }

    ${e} thead {
      outline: 1px solid #98daca !important;
    }

    ${e} tbody {
      outline: 1px solid #64a7a0 !important;
    }

    ${e} tfoot {
      outline: 1px solid #22746b !important;
    }

    ${e} tr {
      outline: 1px solid #86c0b2 !important;
    }

    ${e} th {
      outline: 1px solid #a1e7d6 !important;
    }

    ${e} td {
      outline: 1px solid #3f5a54 !important;
    }

    ${e} col {
      outline: 1px solid #6c9a8f !important;
    }

    ${e} colgroup {
      outline: 1px solid #6c9a9d !important;
    }

    ${e} button {
      outline: 1px solid #da8301 !important;
    }

    ${e} datalist {
      outline: 1px solid #c06000 !important;
    }

    ${e} fieldset {
      outline: 1px solid #d95100 !important;
    }

    ${e} form {
      outline: 1px solid #d23600 !important;
    }

    ${e} input {
      outline: 1px solid #fca600 !important;
    }

    ${e} keygen {
      outline: 1px solid #b31e00 !important;
    }

    ${e} label {
      outline: 1px solid #ee8900 !important;
    }

    ${e} legend {
      outline: 1px solid #de6d00 !important;
    }

    ${e} meter {
      outline: 1px solid #e8630c !important;
    }

    ${e} optgroup {
      outline: 1px solid #b33600 !important;
    }

    ${e} option {
      outline: 1px solid #ff8a00 !important;
    }

    ${e} output {
      outline: 1px solid #ff9619 !important;
    }

    ${e} progress {
      outline: 1px solid #e57c00 !important;
    }

    ${e} select {
      outline: 1px solid #e26e0f !important;
    }

    ${e} textarea {
      outline: 1px solid #cc5400 !important;
    }

    ${e} details {
      outline: 1px solid #33848f !important;
    }

    ${e} summary {
      outline: 1px solid #60a1a6 !important;
    }

    ${e} command {
      outline: 1px solid #438da1 !important;
    }

    ${e} menu {
      outline: 1px solid #449da6 !important;
    }

    ${e} del {
      outline: 1px solid #bf0000 !important;
    }

    ${e} ins {
      outline: 1px solid #400000 !important;
    }

    ${e} img {
      outline: 1px solid #22746b !important;
    }

    ${e} iframe {
      outline: 1px solid #64a7a0 !important;
    }

    ${e} embed {
      outline: 1px solid #98daca !important;
    }

    ${e} object {
      outline: 1px solid #00cc99 !important;
    }

    ${e} param {
      outline: 1px solid #37ffc4 !important;
    }

    ${e} video {
      outline: 1px solid #6ee866 !important;
    }

    ${e} audio {
      outline: 1px solid #027353 !important;
    }

    ${e} source {
      outline: 1px solid #012426 !important;
    }

    ${e} canvas {
      outline: 1px solid #a2f570 !important;
    }

    ${e} track {
      outline: 1px solid #59a600 !important;
    }

    ${e} map {
      outline: 1px solid #7be500 !important;
    }

    ${e} area {
      outline: 1px solid #305900 !important;
    }

    ${e} a {
      outline: 1px solid #ff62ab !important;
    }

    ${e} em {
      outline: 1px solid #800b41 !important;
    }

    ${e} strong {
      outline: 1px solid #ff1583 !important;
    }

    ${e} i {
      outline: 1px solid #803156 !important;
    }

    ${e} b {
      outline: 1px solid #cc1169 !important;
    }

    ${e} u {
      outline: 1px solid #ff0430 !important;
    }

    ${e} s {
      outline: 1px solid #f805e3 !important;
    }

    ${e} small {
      outline: 1px solid #d107b2 !important;
    }

    ${e} abbr {
      outline: 1px solid #4a0263 !important;
    }

    ${e} q {
      outline: 1px solid #240018 !important;
    }

    ${e} cite {
      outline: 1px solid #64003c !important;
    }

    ${e} dfn {
      outline: 1px solid #b4005a !important;
    }

    ${e} sub {
      outline: 1px solid #dba0c8 !important;
    }

    ${e} sup {
      outline: 1px solid #cc0256 !important;
    }

    ${e} time {
      outline: 1px solid #d6606d !important;
    }

    ${e} code {
      outline: 1px solid #e04251 !important;
    }

    ${e} kbd {
      outline: 1px solid #5e001f !important;
    }

    ${e} samp {
      outline: 1px solid #9c0033 !important;
    }

    ${e} var {
      outline: 1px solid #d90047 !important;
    }

    ${e} mark {
      outline: 1px solid #ff0053 !important;
    }

    ${e} bdi {
      outline: 1px solid #bf3668 !important;
    }

    ${e} bdo {
      outline: 1px solid #6f1400 !important;
    }

    ${e} ruby {
      outline: 1px solid #ff7b93 !important;
    }

    ${e} rt {
      outline: 1px solid #ff2f54 !important;
    }

    ${e} rp {
      outline: 1px solid #803e49 !important;
    }

    ${e} span {
      outline: 1px solid #cc2643 !important;
    }

    ${e} br {
      outline: 1px solid #db687d !important;
    }

    ${e} wbr {
      outline: 1px solid #db175b !important;
    }`;
}
o(aR, "outlineCSS");
var qH = /* @__PURE__ */ o((e, t) => {
  let r7 = t.globals || {}, n = [true, "true"].includes(r7[dy]), i = t.viewMode === "docs", s = Qa(() => aR(i ? '[data-story-block="true"]' : ".sb-show-main"), [t]);
  return kt$1(() => {
    let a = i ? `addon-outline-docs-${t.id}` : "addon-outline";
    return n ? OH(a, s) : sR(a), () => {
      sR(a);
    };
  }, [n, s, t]), e();
}, "withOutline");
var CEe = globalThis.FEATURES?.outline ? [qH] : [], PEe = {
  [dy]: false
}, lR = /* @__PURE__ */ o(() => ({ decorators: CEe, initialGlobals: PEe }), "default");
var AEe = /* @__PURE__ */ o(({ parameters: e }) => {
  e?.test?.mockReset === true ? dw() : e?.test?.clearMocks === true ? cw() : e?.test?.restoreMocks !== false && pw();
}, "resetAllMocksLoader"), uR = /* @__PURE__ */ o((e, t = 0, r7) => {
  if (t > 5 || e == null)
    return e;
  if (hr$1(e))
    return r7 && e.mockName(r7), e;
  if (typeof e == "function" && "isAction" in e && e.isAction && !("implicit" in e && e.implicit)) {
    let n = uw(e);
    return r7 && n.mockName(r7), n;
  }
  if (Array.isArray(e)) {
    t++;
    for (let n = 0; n < e.length; n++)
      Object.getOwnPropertyDescriptor(e, n)?.writable && (e[n] = uR(e[n], t));
    return e;
  }
  if (typeof e == "object" && e.constructor === Object) {
    t++;
    for (let [n, i] of Object.entries(e))
      Object.getOwnPropertyDescriptor(e, n)?.writable && (e[n] = uR(i, t, n));
    return e;
  }
  return e;
}, "traverseArgs"), OEe = /* @__PURE__ */ o(({ initialArgs: e }) => {
  uR(e);
}, "nameSpiesAndWrapActionsInSpies"), IH = false, qEe = /* @__PURE__ */ o(async (e) => {
  globalThis.HTMLElement && e.canvasElement instanceof globalThis.HTMLElement && (e.canvas = HT(e.canvasElement));
  let t = globalThis.window?.navigator?.clipboard;
  if (t) {
    e.userEvent = rr(
      { userEvent: UT.setup() },
      { intercept: true }
    ).userEvent, Object.defineProperty(globalThis.window.navigator, "clipboard", {
      get: /* @__PURE__ */ o(() => t, "get"),
      configurable: true
    });
    let r7 = HTMLElement.prototype.focus;
    IH || Object.defineProperties(HTMLElement.prototype, {
      focus: {
        configurable: true,
        set: /* @__PURE__ */ o((n) => {
          r7 = n, IH = true;
        }, "set"),
        get: /* @__PURE__ */ o(() => r7, "get")
      }
    });
  }
}, "enhanceContext"), cR = /* @__PURE__ */ o(() => ({
  loaders: [AEe, OEe, qEe]
}), "default");
var NH = "viewport";
var IEe = {
  [NH]: { value: void 0, isRotated: false }
}, dR = /* @__PURE__ */ o(() => ({
  initialGlobals: IEe
}), "default");
function py() {
  return [
    // @ts-expect-error CJS fallback
    (iR.default ?? iR)(),
    // @ts-expect-error CJS fallback
    (YT.default ?? YT)(),
    // @ts-expect-error CJS fallback
    (rR.default ?? rR)(),
    // @ts-expect-error CJS fallback
    (lR.default ?? lR)(),
    // @ts-expect-error CJS fallback
    (dR.default ?? dR)(),
    // @ts-expect-error CJS fallback
    (GT.default ?? GT)(),
    // @ts-expect-error CJS fallback
    (KT.default ?? KT)(),
    // @ts-expect-error CJS fallback
    (cR.default ?? cR)()
  ];
}
o(py, "getCoreAnnotations");
function fi(e) {
  return e != null && typeof e == "object" && "_tag" in e && e?._tag === "Story";
}
o(fi, "isStory");
var pR = /* @__PURE__ */ o((e) => e.toLowerCase().replace(/[ ’–—―′¿'`~!@#$%^&*()_|+\-=?;:'",.<>\{\}\[\]\\\/]/gi, "-").replace(
  /-+/g,
  "-"
).replace(/^-+/, "").replace(/-+$/, ""), "sanitize"), jH = /* @__PURE__ */ o((e, t) => {
  let r7 = pR(e);
  if (r7 === "")
    throw new Error(`Invalid ${t} '${e}', must include alphanumeric characters`);
  return r7;
}, "sanitizeSafe"), LH = /* @__PURE__ */ o((e, t) => `${jH(e, "kind")}${t ? `--${jH(t, "name")}` : ""}`, "toId"), FH = /* @__PURE__ */ o((e) => o_(
  e
), "storyNameFromExport");
function kH(e, t) {
  return Array.isArray(t) ? t.includes(e) : e.match(t);
}
o(kH, "matches");
function va(e, { includeStories: t, excludeStories: r7 }) {
  return (
    // https://babeljs.io/docs/en/babel-plugin-transform-modules-commonjs
    e !== "__esModule" && (!t || kH(e, t)) && (!r7 || !kH(e, r7))
  );
}
o(va, "isExportStory");
var DH = /* @__PURE__ */ o((...e) => {
  let t = e.reduce((r7, n) => (n.startsWith("!") ? r7.delete(n.slice(1)) : r7.add(n), r7), /* @__PURE__ */ new Set());
  return Array.from(t);
}, "combineTags");
function $H() {
}
o($H, "noop");
function fR(e) {
  return Object.getOwnPropertySymbols(e).filter((t) => Object.prototype.propertyIsEnumerable.call(e, t));
}
o(fR, "getSymbols");
function mR(e) {
  return e == null ? e === void 0 ? "[object Undefined]" : "[object Null]" : Object.prototype.toString.call(e);
}
o(mR, "getTag");
var BH = "[object RegExp]", HH = "[object String]", UH = "[object Number]", VH = "[object Boolean]", hR = "[object Arguments]", zH = "[object Symbol]", GH = "[object Date]", WH = "[object Map]", YH = "[object Set]", KH = "[object Array]", XH = "[object Function]", JH = "[object ArrayBuffer]", fy = "[object Object]", QH = "[object Error]", ZH = "[object DataView]", eU = "[object Uint8Array]", tU = "[object Uint8ClampedArray]", rU = "[object Uint16Array]", nU = "[object Uint32Array]", oU = "[object BigUint64Array]", iU = "[object Int8Array]", sU = "[object Int16Array]", aU = "[object Int32Array]", lU = "[object BigInt64Array]", uU = "[object Float32Array]", cU = "[object Float64Array]";
function ct$1(e) {
  if (!e || typeof e != "object")
    return false;
  let t = Object.getPrototypeOf(e);
  return t === null || t === Object.prototype || Object.getPrototypeOf(t) === null ? Object.prototype.toString.call(e) === "[object Object]" : false;
}
o(ct$1, "isPlainObject");
function Sr$1(e, t) {
  let r7 = {}, n = Object.keys(e);
  for (let i = 0; i < n.length; i++) {
    let s = n[i], a = e[s];
    r7[s] = t(a, s, e);
  }
  return r7;
}
o(Sr$1, "mapValues");
function yR(e, t) {
  let r7 = {}, n = Object.keys(e);
  for (let i = 0; i < n.length; i++) {
    let s = n[i], a = e[s];
    t(a, s) && (r7[s] = a);
  }
  return r7;
}
o(yR, "pickBy");
function dU(e, t) {
  return e === t || Number.isNaN(e) && Number.isNaN(t);
}
o(dU, "eq");
function pU(e, t, r7) {
  return Ea(e, t, void 0, void 0, void 0, void 0, r7);
}
o(pU, "isEqualWith");
function Ea(e, t, r7, n, i, s, a) {
  let l = a(e, t, r7, n, i, s);
  if (l !== void 0)
    return l;
  if (typeof e == typeof t)
    switch (typeof e) {
      case "bigint":
      case "string":
      case "boolean":
      case "symbol":
      case "undefined":
        return e === t;
      case "number":
        return e === t || Object.is(e, t);
      case "function":
        return e === t;
      case "object":
        return xa(e, t, s, a);
    }
  return xa(e, t, s, a);
}
o(Ea, "isEqualWithImpl");
function xa(e, t, r7, n) {
  if (Object.is(e, t))
    return true;
  let i = mR(e), s = mR(t);
  if (i === hR && (i = fy), s === hR && (s = fy), i !== s)
    return false;
  switch (i) {
    case HH:
      return e.toString() === t.toString();
    case UH: {
      let u = e.valueOf(), c = t.valueOf();
      return dU(u, c);
    }
    case VH:
    case GH:
    case zH:
      return Object.is(e.valueOf(), t.valueOf());
    case BH:
      return e.source === t.source && e.flags === t.flags;
    case XH:
      return e === t;
  }
  r7 = r7 ?? /* @__PURE__ */ new Map();
  let a = r7.get(e), l = r7.get(t);
  if (a != null && l != null)
    return a === t;
  r7.set(e, t), r7.set(t, e);
  try {
    switch (i) {
      case WH: {
        if (e.size !== t.size)
          return false;
        for (let [u, c] of e.entries())
          if (!t.has(u) || !Ea(c, t.get(u), u, e, t, r7, n))
            return false;
        return true;
      }
      case YH: {
        if (e.size !== t.size)
          return false;
        let u = Array.from(e.values()), c = Array.from(t.values());
        for (let d = 0; d < u.length; d++) {
          let p5 = u[d], f = c.findIndex((m) => Ea(p5, m, void 0, e, t, r7, n));
          if (f === -1)
            return false;
          c.splice(f, 1);
        }
        return true;
      }
      case KH:
      case eU:
      case tU:
      case rU:
      case nU:
      case oU:
      case iU:
      case sU:
      case aU:
      case lU:
      case uU:
      case cU: {
        if (typeof Buffer < "u" && Buffer.isBuffer(e) !== Buffer.isBuffer(t) || e.length !== t.length)
          return false;
        for (let u = 0; u < e.length; u++)
          if (!Ea(e[u], t[u], u, e, t, r7, n))
            return false;
        return true;
      }
      case JH:
        return e.byteLength !== t.byteLength ? false : xa(new Uint8Array(e), new Uint8Array(t), r7, n);
      case ZH:
        return e.byteLength !== t.byteLength || e.byteOffset !== t.byteOffset ? false : xa(new Uint8Array(e), new Uint8Array(t), r7, n);
      case QH:
        return e.name === t.name && e.message === t.message;
      case fy: {
        if (!(xa(e.constructor, t.constructor, r7, n) || ct$1(e) && ct$1(t)))
          return false;
        let c = [...Object.keys(e), ...fR(e)], d = [...Object.keys(t), ...fR(t)];
        if (c.length !== d.length)
          return false;
        for (let p5 = 0; p5 < c.length; p5++) {
          let f = c[p5], m = e[f];
          if (!Object.hasOwn(t, f))
            return false;
          let h5 = t[f];
          if (!Ea(m, h5, f, e, t, r7, n))
            return false;
        }
        return true;
      }
      default:
        return false;
    }
  } finally {
    r7.delete(e), r7.delete(t);
  }
}
o(xa, "areObjectsEqual");
function bR(e, t) {
  return pU(e, t, $H);
}
o(bR, "isEqual");
var _y = Ne(vR(), 1);
var mi = Symbol("incompatible"), ER = /* @__PURE__ */ o((e, t) => {
  let r7 = t.type;
  if (e == null || !r7 || t.mapping)
    return e;
  switch (r7.name) {
    case "string":
      return String(e);
    case "enum":
      return e;
    case "number":
      return Number(e);
    case "boolean":
      return String(e) === "true";
    case "array":
      return !r7.value || !Array.isArray(e) ? mi : e.reduce((n, i, s) => {
        let a = ER(i, { type: r7.value });
        return a !== mi && (n[s] = a), n;
      }, new Array(e.length));
    case "object":
      return typeof e == "string" || typeof e == "number" ? e : !r7.value || typeof e != "object" ? mi : Object.entries(e).reduce((n, [i, s]) => {
        let a = ER(s, { type: r7.value[i] });
        return a === mi ? n : Object.assign(n, { [i]: a });
      }, {});
    default:
      return mi;
  }
}, "map"), mU = /* @__PURE__ */ o((e, t) => Object.entries(e).reduce((r7, [n, i]) => {
  if (!t[n])
    return r7;
  let s = ER(i, t[n]);
  return s === mi ? r7 : Object.assign(r7, { [n]: s });
}, {}), "mapArgsToTypes"), hi = /* @__PURE__ */ o((e, t) => Array.isArray(e) && Array.isArray(t) ? t.reduce(
  (r7, n, i) => (r7[i] = hi(e[i], t[i]), r7),
  [...e]
).filter((r7) => r7 !== void 0) : !ct$1(e) || !ct$1(t) ? t : Object.keys({ ...e, ...t }).reduce((r7, n) => {
  if (n in t) {
    let i = hi(e[n], t[n]);
    i !== void 0 && (r7[n] = i);
  } else
    r7[n] = e[n];
  return r7;
}, {}), "combineArgs"), hU = /* @__PURE__ */ o((e, t) => Object.entries(t).reduce((r7, [n, { options: i }]) => {
  function s() {
    return n in e && (r7[n] = e[n]), r7;
  }
  if (o(s, "allowArg"), !i)
    return s();
  if (!Array.isArray(i))
    return be.error(Q`
        Invalid argType: '${n}.options' should be an array.

        More info: https://storybook.js.org/docs/api/arg-types?ref=error
      `), s();
  if (i.some((p5) => p5 && ["object", "function"].includes(typeof p5)))
    return be.error(Q`
        Invalid argType: '${n}.options' should only contain primitives. Use a 'mapping' for complex values.

        More info: https://storybook.js.org/docs/writing-stories/args?ref=error#mapping-to-complex-arg-values
      `), s();
  let a = Array.isArray(e[n]), l = a && e[n].findIndex((p5) => !i.includes(p5)), u = a && l === -1;
  if (e[n] === void 0 || i.includes(e[n]) || u)
    return s();
  let c = a ? `${n}[${l}]` : n, d = i.map((p5) => typeof p5 == "string" ? `'${p5}'` : String(p5)).join(", ");
  return be.warn(`Received illegal value for '${c}'. Supported options: ${d}`), r7;
}, {}), "validateOptions"), Vn = Symbol("Deeply equal"), yi = /* @__PURE__ */ o((e, t) => {
  if (typeof e != typeof t)
    return t;
  if (bR(e, t))
    return Vn;
  if (Array.isArray(e) && Array.isArray(t)) {
    let r7 = t.reduce((n, i, s) => {
      let a = yi(e[s], i);
      return a !== Vn && (n[s] = a), n;
    }, new Array(t.length));
    return t.length >= e.length ? r7 : r7.concat(new Array(e.length - t.length).fill(void 0));
  }
  return ct$1(e) && ct$1(t) ? Object.keys({ ...e, ...t }).reduce((r7, n) => {
    let i = yi(e?.[n], t?.[n]);
    return i === Vn ? r7 : Object.assign(r7, { [n]: i });
  }, {}) : t;
}, "deepDiff"), xR = "UNTARGETED";
function yU({
  args: e,
  argTypes: t
}) {
  let r7 = {};
  return Object.entries(e).forEach(([n, i]) => {
    let { target: s = xR } = t[n] || {};
    r7[s] = r7[s] || {}, r7[s][n] = i;
  }), r7;
}
o(yU, "groupArgsByTarget");
function MEe(e) {
  return Object.keys(e).forEach((t) => e[t] === void 0 && delete e[t]), e;
}
o(MEe, "deleteUndefined");
var wR = class wR2 {
  constructor() {
    this.initialArgsByStoryId = {};
    this.argsByStoryId = {};
  }
  get(t) {
    if (!(t in this.argsByStoryId))
      throw new Error(`No args known for ${t} -- has it been rendered yet?`);
    return this.argsByStoryId[t];
  }
  setInitial(t) {
    if (!this.initialArgsByStoryId[t.id])
      this.initialArgsByStoryId[t.id] = t.initialArgs, this.argsByStoryId[t.id] = t.initialArgs;
    else if (this.initialArgsByStoryId[t.id] !== t.initialArgs) {
      let r7 = yi(this.initialArgsByStoryId[t.id], this.argsByStoryId[t.id]);
      this.initialArgsByStoryId[t.id] = t.initialArgs, this.argsByStoryId[t.id] = t.initialArgs, r7 !== Vn && this.updateFromDelta(t, r7);
    }
  }
  updateFromDelta(t, r7) {
    let n = hU(r7, t.argTypes);
    this.argsByStoryId[t.id] = hi(this.argsByStoryId[t.id], n);
  }
  updateFromPersisted(t, r7) {
    let n = mU(r7, t.argTypes);
    return this.updateFromDelta(t, n);
  }
  update(t, r7) {
    if (!(t in this.argsByStoryId))
      throw new Error(`No args known for ${t} -- has it been rendered yet?`);
    this.argsByStoryId[t] = MEe({
      ...this.argsByStoryId[t],
      ...r7
    });
  }
};
o(wR, "ArgsStore");
var my = wR;
var hy = /* @__PURE__ */ o((e = {}) => Object.entries(e).reduce((t, [r7, { defaultValue: n }]) => (typeof n < "u" && (t[r7] = n), t), {}), "getValuesFromArgTypes");
var TR = class TR2 {
  constructor({
    globals: t = {},
    globalTypes: r7 = {}
  }) {
    this.set({ globals: t, globalTypes: r7 });
  }
  set({ globals: t = {}, globalTypes: r7 = {} }) {
    let n = this.initialGlobals && yi(this.initialGlobals, this.globals);
    this.allowedGlobalNames = /* @__PURE__ */ new Set([...Object.keys(t), ...Object.keys(r7)]);
    let i = hy(r7);
    this.initialGlobals = { ...i, ...t }, this.globals = this.initialGlobals, n && n !== Vn && this.updateFromPersisted(n);
  }
  filterAllowedGlobals(t) {
    return Object.entries(t).reduce((r7, [n, i]) => (this.allowedGlobalNames.has(n) ? r7[n] = i : se.warn(
      `Attempted to set a global (${n}) that is not defined in initial globals or globalTypes`
    ), r7), {});
  }
  updateFromPersisted(t) {
    let r7 = this.filterAllowedGlobals(t);
    this.globals = { ...this.globals, ...r7 };
  }
  get() {
    return this.globals;
  }
  update(t) {
    this.globals = { ...this.globals, ...this.filterAllowedGlobals(t) };
    for (let r7 in t)
      t[r7] === void 0 && (this.globals[r7] = this.initialGlobals[r7]);
  }
};
o(TR, "GlobalsStore");
var yy = TR;
var bU = Ne(vR(), 1);
var NEe = (0, bU.default)(1)(
  (e) => Object.values(e).reduce(
    (t, r7) => (t[r7.importPath] = t[r7.importPath] || r7, t),
    {}
  )
), RR = class RR2 {
  constructor({ entries: t } = { v: 5, entries: {} }) {
    this.entries = t;
  }
  entryFromSpecifier(t) {
    let r7 = Object.values(this.entries);
    if (t === "*")
      return r7[0];
    if (typeof t == "string")
      return this.entries[t] ? this.entries[t] : r7.find((s) => s.id.startsWith(t));
    let { name: n, title: i } = t;
    return r7.find((s) => s.name === n && s.title === i);
  }
  storyIdToEntry(t) {
    let r7 = this.entries[t];
    if (!r7)
      throw new Mi({ storyId: t });
    return r7;
  }
  importPathToEntry(t) {
    return NEe(this.entries)[t];
  }
};
o(RR, "StoryIndexStore");
var by = RR;
var jEe = /* @__PURE__ */ o((e) => typeof e == "string" ? { name: e } : e, "normalizeType"), kEe = /* @__PURE__ */ o((e) => typeof e == "string" ? { type: e } : e, "normalizeControl"), LEe = /* @__PURE__ */ o((e, t) => {
  let { type: r7, control: n, ...i } = e, s = {
    name: t,
    ...i
  };
  return r7 && (s.type = jEe(r7)), n ? s.control = kEe(n) : n === false && (s.control = { disable: true }), s;
}, "normalizeInputType"), zn = /* @__PURE__ */ o((e) => Sr$1(e, LEe), "normalizeInputTypes");
var de = /* @__PURE__ */ o((e) => Array.isArray(e) ? e : e ? [e] : [], "normalizeArrays");
var FEe = Q`
CSF .story annotations deprecated; annotate story functions directly:
- StoryFn.story.name => StoryFn.storyName
- StoryFn.story.(parameters|decorators) => StoryFn.(parameters|decorators)
See https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#hoisted-csf-annotations for details and codemod.
`;
function Gn(e, t, r7) {
  let n = t, i = typeof t == "function" ? t : null, { story: s } = n;
  s && (se.debug("deprecated story", s), Ai(FEe));
  let a = FH(e), l = typeof n != "function" && n.name || n.storyName || s?.name || a, u = [
    ...de(n.decorators),
    ...de(s?.decorators)
  ], c = { ...s?.parameters, ...n.parameters }, d = { ...s?.args, ...n.args }, p5 = { ...s?.argTypes, ...n.argTypes }, f = [
    ...de(n.loaders),
    ...de(s?.loaders)
  ], m = [
    ...de(n.beforeEach),
    ...de(s?.beforeEach)
  ], h5 = [
    ...de(n.afterEach),
    ...de(s?.afterEach)
  ], { render: b, play: v5, tags: g = [], globals: w5 = {} } = n, E = c.__id || LH(r7.id, a);
  return {
    moduleExport: t,
    id: E,
    name: l,
    tags: g,
    decorators: u,
    parameters: c,
    args: d,
    argTypes: zn(p5),
    loaders: f,
    beforeEach: m,
    afterEach: h5,
    globals: w5,
    ...b && { render: b },
    ...i && { userStoryFn: i },
    ...v5 && { play: v5 }
  };
}
o(Gn, "normalizeStory");
function wa(e, t = e.title, r7) {
  let { id: n, argTypes: i } = e;
  return {
    id: pR(n || t),
    ...e,
    title: t,
    ...i && { argTypes: zn(i) },
    parameters: {
      fileName: r7,
      ...e.parameters
    }
  };
}
o(wa, "normalizeComponentAnnotations");
var DEe = /* @__PURE__ */ o((e) => {
  let { globals: t, globalTypes: r7 } = e;
  (t || r7) && se.error(
    "Global args/argTypes can only be set globally",
    JSON.stringify({
      globals: t,
      globalTypes: r7
    })
  );
}, "checkGlobals"), $Ee = /* @__PURE__ */ o((e) => {
  let { options: t } = e;
  t?.storySort && se.error("The storySort option parameter can only be set globally");
}, "checkStorySort"), gy = /* @__PURE__ */ o((e) => {
  e && (DEe(e), $Ee(e));
}, "checkDisallowedParameters");
function gU(e, t, r7) {
  let { default: n, __namedExportsOrder: i, ...s } = e, a = Object.values(s)[0];
  if (fi(a)) {
    let c = wa(a.meta.input, r7, t);
    gy(c.parameters);
    let d = { meta: c, stories: {}, moduleExports: e };
    return Object.keys(s).forEach((p5) => {
      if (va(p5, c)) {
        let f = Gn(p5, s[p5].input, c);
        gy(f.parameters), d.stories[f.id] = f;
      }
    }), d.projectAnnotations = a.meta.preview.composed, d;
  }
  let l = wa(
    n,
    r7,
    t
  );
  gy(l.parameters);
  let u = { meta: l, stories: {}, moduleExports: e };
  return Object.keys(s).forEach((c) => {
    if (va(c, l)) {
      let d = Gn(c, s[c], l);
      gy(d.parameters), u.stories[d.id] = d;
    }
  }), u;
}
o(gU, "processCSFFile");
function EU(e) {
  return e != null && BEe(e).includes("mount");
}
o(EU, "mountDestructured");
function BEe(e) {
  let t = e.toString().match(/[^(]*\(([^)]*)/);
  if (!t)
    return [];
  let r7 = vU(t[1]);
  if (!r7.length)
    return [];
  let n = r7[0];
  return n.startsWith("{") && n.endsWith("}") ? vU(n.slice(1, -1).replace(/\s/g, "")).map((s) => s.replace(/:.*|=.*/g, "")) : [];
}
o(BEe, "getUsedProps");
function vU(e) {
  let t = [], r7 = [], n = 0;
  for (let s = 0; s < e.length; s++)
    if (e[s] === "{" || e[s] === "[")
      r7.push(e[s] === "{" ? "}" : "]");
    else if (e[s] === r7[r7.length - 1])
      r7.pop();
    else if (!r7.length && e[s] === ",") {
      let a = e.substring(n, s).trim();
      a && t.push(a), n = s + 1;
    }
  let i = e.substring(n).trim();
  return i && t.push(i), t;
}
o(vU, "splitByComma");
function SR(e, t, r7) {
  let n = r7(e);
  return (i) => t(n, i);
}
o(SR, "decorateStory");
function _R({
  componentId: e,
  title: t,
  kind: r7,
  id: n,
  name: i,
  story: s,
  parameters: a,
  initialArgs: l,
  argTypes: u,
  ...c
} = {}) {
  return c;
}
o(_R, "sanitizeStoryContextUpdate");
function vy(e, t) {
  let r7 = {}, n = /* @__PURE__ */ o((s) => (a) => {
    if (!r7.value)
      throw new Error("Decorated function called without init");
    return r7.value = {
      ...r7.value,
      ..._R(a)
    }, s(r7.value);
  }, "bindWithContext"), i = t.reduce(
    (s, a) => SR(s, a, n),
    e
  );
  return (s) => (r7.value = s, i(s));
}
o(vy, "defaultDecorateStory");
var Tt$1 = /* @__PURE__ */ o((...e) => {
  let t = {}, r7 = e.filter(Boolean), n = r7.reduce((i, s) => (Object.entries(s).forEach(([a, l]) => {
    let u = i[a];
    Array.isArray(l) || typeof u > "u" ? i[a] = l : ct$1(l) && ct$1(u) ? t[a] = true : typeof l < "u" && (i[a] = l);
  }), i), {});
  return Object.keys(t).forEach((i) => {
    let s = r7.filter(Boolean).map((a) => a[i]).filter((a) => typeof a < "u");
    s.every((a) => ct$1(a)) ? n[i] = Tt$1(...s) : n[i] = s[s.length - 1];
  }), n;
}, "combineParameters");
function bi(e, t, r7) {
  let { moduleExport: n, id: i, name: s } = e || {}, a = xU(
    e,
    t,
    r7
  ), l = /* @__PURE__ */ o(async (P) => {
    let _5 = {};
    for (let C5 of [
      de(r7.loaders),
      de(t.loaders),
      de(e.loaders)
    ]) {
      if (P.abortSignal.aborted)
        return _5;
      let O = await Promise.all(C5.map((L) => L(P)));
      Object.assign(_5, ...O);
    }
    return _5;
  }, "applyLoaders"), u = /* @__PURE__ */ o(async (P) => {
    let _5 = new Array();
    for (let C5 of [
      ...de(r7.beforeEach),
      ...de(t.beforeEach),
      ...de(e.beforeEach)
    ]) {
      if (P.abortSignal.aborted)
        return _5;
      let O = await C5(P);
      O && _5.push(O);
    }
    return _5;
  }, "applyBeforeEach"), c = /* @__PURE__ */ o(async (P) => {
    let _5 = [
      ...de(r7.afterEach),
      ...de(t.afterEach),
      ...de(e.afterEach)
    ].reverse();
    for (let C5 of _5) {
      if (P.abortSignal.aborted)
        return;
      await C5(P);
    }
  }, "applyAfterEach"), d = /* @__PURE__ */ o((P) => P.originalStoryFn(P.args, P), "undecoratedStoryFn"), { applyDecorators: p5 = vy, runStep: f } = r7, m = [
    ...de(e?.decorators),
    ...de(t?.decorators),
    ...de(r7?.decorators)
  ], h5 = e?.userStoryFn || e?.render || t.render || r7.render, b = Xa(p5)(d, m), v5 = /* @__PURE__ */ o((P) => b(P), "unboundStoryFn"), g = e?.play ?? t?.play, w5 = EU(g);
  if (!h5 && !w5)
    throw new Ui({ id: i });
  let E = /* @__PURE__ */ o((P) => async () => (await P.renderToCanvas(), P.canvas), "defaultMount"), R = e.mount ?? t.mount ?? r7.mount ?? E, S = r7.testingLibraryRender;
  return {
    storyGlobals: {},
    ...a,
    moduleExport: n,
    id: i,
    name: s,
    story: s,
    originalStoryFn: h5,
    undecoratedStoryFn: d,
    unboundStoryFn: v5,
    applyLoaders: l,
    applyBeforeEach: u,
    applyAfterEach: c,
    playFunction: g,
    runStep: f,
    mount: R,
    testingLibraryRender: S,
    renderToCanvas: r7.renderToCanvas,
    usesMount: w5
  };
}
o(bi, "prepareStory");
function Ey(e, t, r7) {
  return {
    ...xU(void 0, e, t),
    moduleExport: r7
  };
}
o(Ey, "prepareMeta");
function xU(e, t, r7) {
  let n = ["dev", "test"], i = k.DOCS_OPTIONS?.autodocs === true ? ["autodocs"] : [], s = DH(
    ...n,
    ...i,
    ...r7.tags ?? [],
    ...t.tags ?? [],
    ...e?.tags ?? []
  ), a = Tt$1(
    r7.parameters,
    t.parameters,
    e?.parameters
  ), { argTypesEnhancers: l = [], argsEnhancers: u = [] } = r7, c = Tt$1(
    r7.argTypes,
    t.argTypes,
    e?.argTypes
  );
  if (e) {
    let g = e?.userStoryFn || e?.render || t.render || r7.render;
    a.__isArgsStory = g && g.length > 0;
  }
  let d = {
    ...r7.args,
    ...t.args,
    ...e?.args
  }, p5 = {
    ...t.globals,
    ...e?.globals
  }, f = {
    componentId: t.id,
    title: t.title,
    kind: t.title,
    // Back compat
    id: e?.id || t.id,
    // if there's no story name, we create a fake one since enhancers expect a name
    name: e?.name || "__meta",
    story: e?.name || "__meta",
    // Back compat
    component: t.component,
    subcomponents: t.subcomponents,
    tags: s,
    parameters: a,
    initialArgs: d,
    argTypes: c,
    storyGlobals: p5
  };
  f.argTypes = l.reduce(
    (g, w5) => w5({ ...f, argTypes: g }),
    f.argTypes
  );
  let m = { ...d };
  f.initialArgs = [...u].reduce(
    (g, w5) => ({
      ...g,
      ...w5({
        ...f,
        initialArgs: g
      })
    }),
    m
  );
  let { name: h5, story: b, ...v5 } = f;
  return v5;
}
o(xU, "preparePartialAnnotations");
function xy(e) {
  let { args: t } = e, r7 = {
    ...e,
    allArgs: void 0,
    argsByTarget: void 0
  };
  if (k.FEATURES?.argTypeTargetsV7) {
    let s = yU(e);
    r7 = {
      ...e,
      allArgs: e.args,
      argsByTarget: s,
      args: s[xR] || {}
    };
  }
  let n = Object.entries(r7.args).reduce((s, [a, l]) => {
    if (!r7.argTypes[a]?.mapping)
      return s[a] = l, s;
    let u = /* @__PURE__ */ o((c) => {
      let d = r7.argTypes[a].mapping;
      return d && c in d ? d[c] : c;
    }, "mappingFn");
    return s[a] = Array.isArray(l) ? l.map(u) : u(l), s;
  }, {}), i = Object.entries(n).reduce((s, [a, l]) => {
    let u = r7.argTypes[a] || {};
    return yg(u, n, r7.globals) && (s[a] = l), s;
  }, {});
  return { ...r7, unmappedArgs: t, args: i };
}
o(xy, "prepareContext");
var CR = /* @__PURE__ */ o((e, t, r7) => {
  let n = typeof e;
  switch (n) {
    case "boolean":
    case "string":
    case "number":
    case "function":
    case "symbol":
      return { name: n };
  }
  return e ? r7.has(e) ? (se.warn(Q`
        We've detected a cycle in arg '${t}'. Args should be JSON-serializable.

        Consider using the mapping feature or fully custom args:
        - Mapping: https://storybook.js.org/docs/writing-stories/args#mapping-to-complex-arg-values
        - Custom args: https://storybook.js.org/docs/essentials/controls#fully-custom-args
      `), { name: "other", value: "cyclic object" }) : (r7.add(e), Array.isArray(e) ? { name: "array", value: e.length > 0 ? CR(e[0], t, new Set(
    r7
  )) : { name: "other", value: "unknown" } } : { name: "object", value: Sr$1(e, (s) => CR(s, t, new Set(r7))) }) : { name: "object", value: {} };
}, "inferType"), PR = /* @__PURE__ */ o((e) => {
  let { id: t, argTypes: r7 = {}, initialArgs: n = {} } = e, i = Sr$1(n, (a, l) => ({
    name: l,
    type: CR(a, `${t}.${l}`, /* @__PURE__ */ new Set())
  })), s = Sr$1(r7, (a, l) => ({
    name: l
  }));
  return Tt$1(i, s, r7);
}, "inferArgTypes");
PR.secondPass = true;
var wU = /* @__PURE__ */ o((e, t) => Array.isArray(t) ? t.includes(e) : e.match(t), "matches"), Ta = /* @__PURE__ */ o((e, t, r7) => !t && !r7 ? e : e && yR(e, (n, i) => {
  let s = n.name || i.toString();
  return !!(!t || wU(s, t)) && (!r7 || !wU(s, r7));
}), "filterArgTypes");
var HEe = /* @__PURE__ */ o((e, t, r7) => {
  let { type: n, options: i } = e;
  if (n) {
    if (r7.color && r7.color.test(t)) {
      let s = n.name;
      if (s === "string")
        return { control: { type: "color" } };
      s !== "enum" && se.warn(
        `Addon controls: Control of type color only supports string, received "${s}" instead`
      );
    }
    if (r7.date && r7.date.test(t))
      return { control: { type: "date" } };
    switch (n.name) {
      case "array":
        return { control: { type: "object" } };
      case "boolean":
        return { control: { type: "boolean" } };
      case "string":
        return { control: { type: "text" } };
      case "number":
        return { control: { type: "number" } };
      case "enum": {
        let { value: s } = n;
        return { control: { type: s?.length <= 5 ? "radio" : "select" }, options: s };
      }
      case "function":
      case "symbol":
        return null;
      default:
        return { control: { type: i ? "select" : "object" } };
    }
  }
}, "inferControl"), gi = /* @__PURE__ */ o((e) => {
  let {
    argTypes: t,
    parameters: { __isArgsStory: r7, controls: { include: n = null, exclude: i = null, matchers: s = {} } = {} }
  } = e;
  if (!r7)
    return t;
  let a = Ta(t, n, i), l = Sr$1(a, (u, c) => u?.type && HEe(u, c.toString(), s));
  return Tt$1(l, a);
}, "inferControls");
gi.secondPass = true;
function Wn({
  argTypes: e,
  globalTypes: t,
  argTypesEnhancers: r7,
  decorators: n,
  loaders: i,
  beforeEach: s,
  afterEach: a,
  initialGlobals: l,
  ...u
}) {
  return {
    ...e && { argTypes: zn(e) },
    ...t && { globalTypes: zn(t) },
    decorators: de(n),
    loaders: de(i),
    beforeEach: de(s),
    afterEach: de(a),
    argTypesEnhancers: [
      ...r7 || [],
      PR,
      // There's an architectural decision to be made regarding embedded addons in core:
      //
      // Option 1: Keep embedded addons but ensure consistency by moving addon-specific code
      // (like inferControls) to live alongside the addon code itself. This maintains the
      // concept of core addons while improving code organization.
      //
      // Option 2: Fully integrate these addons into core, potentially moving UI components
      // into the manager and treating them as core features rather than addons. This is a
      // bigger architectural change requiring careful consideration.
      //
      // For now, we're keeping inferControls here as we need time to properly evaluate
      // these options and their implications. Some features (like Angular's cleanArgsDecorator)
      // currently rely on this behavior.
      //
      // TODO: Make an architectural decision on the handling of core addons
      gi
    ],
    initialGlobals: l,
    ...u
  };
}
o(Wn, "normalizeProjectAnnotations");
var TU = /* @__PURE__ */ o((e) => async () => {
  let t = [];
  for (let r7 of e) {
    let n = await r7();
    n && t.unshift(n);
  }
  return async () => {
    for (let r7 of t)
      await r7();
  };
}, "composeBeforeAllHooks");
function wy(e) {
  return async (t, r7, n) => {
    await e.reduceRight(
      (s, a) => async () => a(t, s, n),
      async () => r7(n)
    )();
  };
}
o(wy, "composeStepRunners");
function Sa(e, t) {
  return e.map((r7) => r7.default?.[t] ?? r7[t]).filter(Boolean);
}
o(Sa, "getField");
function cn$1(e, t, r7 = {}) {
  return Sa(e, t).reduce((n, i) => {
    let s = de(i);
    return r7.reverseFileOrder ? [...s, ...n] : [...n, ...s];
  }, []);
}
o(cn$1, "getArrayField");
function Ty(e, t) {
  return Object.assign({}, ...Sa(e, t));
}
o(Ty, "getObjectField");
function Ra(e, t) {
  return Sa(e, t).pop();
}
o(Ra, "getSingletonField");
function _r$1(e) {
  let t = cn$1(e, "argTypesEnhancers"), r7 = Sa(e, "runStep"), n = cn$1(e, "beforeAll");
  return {
    parameters: Tt$1(...Sa(e, "parameters")),
    decorators: cn$1(e, "decorators", {
      reverseFileOrder: !(k.FEATURES?.legacyDecoratorFileOrder ?? false)
    }),
    args: Ty(e, "args"),
    argsEnhancers: cn$1(e, "argsEnhancers"),
    argTypes: Ty(e, "argTypes"),
    argTypesEnhancers: [
      ...t.filter((i) => !i.secondPass),
      ...t.filter((i) => i.secondPass)
    ],
    initialGlobals: Ty(e, "initialGlobals"),
    globalTypes: Ty(e, "globalTypes"),
    loaders: cn$1(e, "loaders"),
    beforeAll: TU(n),
    beforeEach: cn$1(e, "beforeEach"),
    afterEach: cn$1(e, "afterEach"),
    render: Ra(e, "render"),
    renderToCanvas: Ra(e, "renderToCanvas"),
    applyDecorators: Ra(e, "applyDecorators"),
    runStep: wy(r7),
    tags: cn$1(e, "tags"),
    mount: Ra(e, "mount"),
    testingLibraryRender: Ra(e, "testingLibraryRender")
  };
}
o(_r$1, "composeConfigs");
function Ry() {
  try {
    return (
      // @ts-expect-error This property exists in Vitest browser mode
      !!globalThis.__vitest_browser__ || !!globalThis.window?.navigator?.userAgent?.match(/StorybookTestRunner/)
    );
  } catch {
    return false;
  }
}
o(Ry, "isTestEnvironment");
function Yn(e = true) {
  if (!("document" in globalThis && "createElement" in globalThis.document))
    return () => {
    };
  let t = document.createElement("style");
  t.textContent = `*, *:before, *:after {
    animation: none !important;
  }`, document.head.appendChild(t);
  let r7 = document.createElement("style");
  return r7.textContent = `*, *:before, *:after {
    animation-delay: 0s !important;
    animation-direction: ${e ? "reverse" : "normal"} !important;
    animation-play-state: paused !important;
    transition: none !important;
  }`, document.head.appendChild(r7), document.body.clientHeight, document.head.removeChild(t), () => {
    r7.parentNode?.removeChild(r7);
  };
}
o(Yn, "pauseAnimations");
async function Kn(e) {
  if (!("document" in globalThis && "getAnimations" in globalThis.document && "querySelectorAll" in globalThis.document))
    return;
  let t = false;
  await Promise.race([
    // After 50ms, retrieve any running animations and wait for them to finish
    // If new animations are created while waiting, we'll wait for them too
    new Promise((r7) => {
      setTimeout(() => {
        let n = [globalThis.document, ...RU(globalThis.document)], i = /* @__PURE__ */ o(async () => {
          if (t || e?.aborted)
            return;
          let s = n.flatMap((a) => a?.getAnimations?.() || []).filter((a) => a.playState === "running" && !UEe(a));
          s.length > 0 && (await Promise.all(s.map((a) => a.finished)), await i());
        }, "checkAnimationsFinished");
        i().then(r7);
      }, 100);
    }),
    // If animations don't finish within the timeout, continue without waiting
    new Promise(
      (r7) => setTimeout(() => {
        t = true, r7(void 0);
      }, 5e3)
    )
  ]);
}
o(Kn, "waitForAnimations");
function RU(e) {
  return [e, ...e.querySelectorAll("*")].reduce(
    (t, r7) => ("shadowRoot" in r7 && r7.shadowRoot && t.push(r7.shadowRoot, ...RU(r7.shadowRoot)), t),
    []
  );
}
o(RU, "getShadowRoots");
function UEe(e) {
  if (e instanceof CSSAnimation && e.effect instanceof KeyframeEffect && e.effect.target) {
    let t = getComputedStyle(e.effect.target, e.effect.pseudoElement), r7 = t.animationName?.split(", ").indexOf(e.animationName);
    return t.animationIterationCount.split(", ")[r7] === "infinite";
  }
  return false;
}
o(UEe, "isInfiniteAnimation");
var AR = class AR2 {
  constructor() {
    this.reports = [];
  }
  async addReport(t) {
    this.reports.push(t);
  }
};
o(AR, "ReporterAPI");
var dn$1 = AR;
function Sy(e, t, r7) {
  return fi(e) ? {
    story: e.input,
    meta: e.meta.input,
    preview: e.meta.preview.composed
  } : { story: e, meta: t, preview: r7 };
}
o(Sy, "getCsfFactoryAnnotations");
function SU(e) {
  globalThis.defaultProjectAnnotations = e;
}
o(SU, "setDefaultProjectAnnotations");
var VEe = "ComposedStory", zEe = "Unnamed Story";
function GEe(e) {
  return e ? _r$1([e]) : {};
}
o(GEe, "extractAnnotation");
function _U(e) {
  let t = Array.isArray(e) ? e : [e];
  return globalThis.globalProjectAnnotations = _r$1([
    ...py(),
    globalThis.defaultProjectAnnotations ?? {},
    _r$1(t.map(GEe))
  ]), globalThis.globalProjectAnnotations ?? {};
}
o(_U, "setProjectAnnotations");
var pn$1 = [];
function OR(e, t, r7, n, i) {
  if (e === void 0)
    throw new Error("Expected a story but received undefined.");
  t.title = t.title ?? VEe;
  let s = wa(t), a = i || e.storyName || e.story?.name || e.name || zEe, l = Gn(
    a,
    e,
    s
  ), u = Wn(
    _r$1([
      n ?? globalThis.globalProjectAnnotations ?? {},
      r7 ?? {}
    ])
  ), c = bi(
    l,
    s,
    u
  ), p5 = {
    ...hy(u.globalTypes),
    ...u.initialGlobals,
    ...c.storyGlobals
  }, f = new dn$1(), m = /* @__PURE__ */ o(() => {
    let E = xy({
      hooks: new qr$1(),
      globals: p5,
      args: { ...c.initialArgs },
      viewMode: "story",
      reporting: f,
      loaded: {},
      abortSignal: new AbortController().signal,
      step: /* @__PURE__ */ o((R, S) => c.runStep(R, S, E), "step"),
      canvasElement: null,
      canvas: {},
      userEvent: {},
      globalTypes: u.globalTypes,
      ...c,
      context: null,
      mount: null
    });
    return E.parameters.__isPortableStory = true, E.context = E, c.renderToCanvas && (E.renderToCanvas = async () => {
      let R = await c.renderToCanvas?.(
        {
          componentId: c.componentId,
          title: c.title,
          id: c.id,
          name: c.name,
          tags: c.tags,
          showMain: /* @__PURE__ */ o(() => {
          }, "showMain"),
          showError: /* @__PURE__ */ o((S) => {
            throw new Error(`${S.title}
${S.description}`);
          }, "showError"),
          showException: /* @__PURE__ */ o((S) => {
            throw S;
          }, "showException"),
          forceRemount: true,
          storyContext: E,
          storyFn: /* @__PURE__ */ o(() => c.unboundStoryFn(E), "storyFn"),
          unboundStoryFn: c.unboundStoryFn
        },
        E.canvasElement
      );
      R && pn$1.push(R);
    }), E.mount = c.mount(E), E;
  }, "initializeContext"), h5, b = /* @__PURE__ */ o(async (E) => {
    let R = m();
    return R.canvasElement ?? (R.canvasElement = globalThis?.document?.body), h5 && (R.loaded = h5.loaded), Object.assign(R, E), c.playFunction(R);
  }, "play"), v5 = /* @__PURE__ */ o((E) => {
    let R = m();
    return Object.assign(R, E), YEe(c, R);
  }, "run"), g = c.playFunction ? b : void 0;
  return Object.assign(
    /* @__PURE__ */ o(function(R) {
      let S = m();
      return h5 && (S.loaded = h5.loaded), S.args = {
        ...S.initialArgs,
        ...R
      }, c.unboundStoryFn(S);
    }, "storyFn"),
    {
      id: c.id,
      storyName: a,
      load: /* @__PURE__ */ o(async () => {
        for (let R of [...pn$1].reverse())
          await R();
        pn$1.length = 0;
        let E = m();
        E.loaded = await c.applyLoaders(E), pn$1.push(...(await c.applyBeforeEach(E)).filter(Boolean)), h5 = E;
      }, "load"),
      globals: p5,
      args: c.initialArgs,
      parameters: c.parameters,
      argTypes: c.argTypes,
      play: g,
      run: v5,
      reporting: f,
      tags: c.tags
    }
  );
}
o(OR, "composeStory");
var WEe = /* @__PURE__ */ o((e, t, r7, n) => OR(e, t, r7, {}, n), "defaultComposeStory");
function CU(e, t, r7 = WEe) {
  let { default: n, __esModule: i, __namedExportsOrder: s, ...a } = e, l = n;
  return Object.entries(a).reduce(
    (c, [d, p5]) => {
      let { story: f, meta: m } = Sy(p5);
      return !l && m && (l = m), va(d, l) ? Object.assign(c, {
        [d]: r7(f, l, t, d)
      }) : c;
    },
    {}
  );
}
o(CU, "composeStories");
function PU(e) {
  return e.extend({
    mount: /* @__PURE__ */ o(async ({ mount: t, page: r7 }, n) => {
      await n(async (i, ...s) => {
        if (!("__pw_type" in i) || "__pw_type" in i && i.__pw_type !== "jsx")
          throw new Error(Q`
              Portable stories in Playwright CT only work when referencing JSX elements.
              Please use JSX format for your components such as:

              instead of:
              await mount(MyComponent, { props: { foo: 'bar' } })

              do:
              await mount(<MyComponent foo="bar"/>)

              More info: https://storybook.js.org/docs/api/portable-stories/portable-stories-playwright?ref=error
            `);
        let { props: a, ...l } = i;
        await r7.evaluate(async (c) => {
          let d = await globalThis.__pwUnwrapObject?.(c);
          return ("__pw_type" in d ? d.type : d)?.load?.();
        }, l);
        let u = await t(i, ...s);
        return await r7.evaluate(async (c) => {
          let d = await globalThis.__pwUnwrapObject?.(c), p5 = "__pw_type" in d ? d.type : d, f = document.querySelector("#root");
          return p5?.play?.({ canvasElement: f });
        }, l), u;
      });
    }, "mount")
  });
}
o(PU, "createPlaywrightTest");
async function YEe(e, t) {
  for (let s of [...pn$1].reverse())
    await s();
  if (pn$1.length = 0, !t.canvasElement) {
    let s = document.createElement("div");
    globalThis?.document?.body?.appendChild(s), t.canvasElement = s, pn$1.push(() => {
      globalThis?.document?.body?.contains(s) && globalThis?.document?.body?.removeChild(s);
    });
  }
  if (t.loaded = await e.applyLoaders(t), t.abortSignal.aborted)
    return;
  pn$1.push(...(await e.applyBeforeEach(t)).filter(Boolean));
  let r7 = e.playFunction, n = e.usesMount;
  if (n || await t.mount(), t.abortSignal.aborted)
    return;
  r7 && (n || (t.mount = async () => {
    throw new gn({ playFunction: r7.toString() });
  }), await r7(t));
  let i;
  Ry() ? i = Yn() : await Kn(t.abortSignal), await e.applyAfterEach(t), await i?.();
}
o(YEe, "runStory");
var AU = 1e3, KEe = 1e4, qR = class qR2 {
  constructor(t, r7, n) {
    this.importFn = r7;
    this.storyIndex = new by(t), this.projectAnnotations = Wn(
      _r$1([...py(), n])
    );
    let { initialGlobals: i, globalTypes: s } = this.projectAnnotations;
    this.args = new my(), this.userGlobals = new yy({ globals: i, globalTypes: s }), this.hooks = {}, this.cleanupCallbacks = {}, this.processCSFFileWithCache = (0, _y.default)(AU)(gU), this.prepareMetaWithCache = (0, _y.default)(AU)(Ey), this.prepareStoryWithCache = (0, _y.default)(KEe)(bi);
  }
  setProjectAnnotations(t) {
    this.projectAnnotations = Wn(t);
    let { initialGlobals: r7, globalTypes: n } = t;
    this.userGlobals.set({ globals: r7, globalTypes: n });
  }
  // This means that one of the CSF files has changed.
  // If the `importFn` has changed, we will invalidate both caches.
  // If the `storyIndex` data has changed, we may or may not invalidate the caches, depending
  // on whether we've loaded the relevant files yet.
  async onStoriesChanged({
    importFn: t,
    storyIndex: r7
  }) {
    t && (this.importFn = t), r7 && (this.storyIndex.entries = r7.entries), this.cachedCSFFiles && await this.cacheAllCSFFiles();
  }
  // Get an entry from the index, waiting on initialization if necessary
  async storyIdToEntry(t) {
    return this.storyIndex.storyIdToEntry(t);
  }
  // To load a single CSF file to service a story we need to look up the importPath in the index
  async loadCSFFileByStoryId(t) {
    let { importPath: r7, title: n } = this.storyIndex.storyIdToEntry(t), i = await this.importFn(r7);
    return this.processCSFFileWithCache(i, r7, n);
  }
  async loadAllCSFFiles() {
    let t = {};
    return Object.entries(this.storyIndex.entries).forEach(([n, { importPath: i }]) => {
      t[i] = n;
    }), (await Promise.all(
      Object.entries(t).map(async ([n, i]) => ({
        importPath: n,
        csfFile: await this.loadCSFFileByStoryId(i)
      }))
    )).reduce(
      (n, { importPath: i, csfFile: s }) => (n[i] = s, n),
      {}
    );
  }
  async cacheAllCSFFiles() {
    this.cachedCSFFiles = await this.loadAllCSFFiles();
  }
  preparedMetaFromCSFFile({ csfFile: t }) {
    let r7 = t.meta;
    return this.prepareMetaWithCache(
      r7,
      this.projectAnnotations,
      t.moduleExports.default
    );
  }
  // Load the CSF file for a story and prepare the story from it and the project annotations.
  async loadStory({ storyId: t }) {
    let r7 = await this.loadCSFFileByStoryId(t);
    return this.storyFromCSFFile({ storyId: t, csfFile: r7 });
  }
  // This function is synchronous for convenience -- often times if you have a CSF file already
  // it is easier not to have to await `loadStory`.
  storyFromCSFFile({
    storyId: t,
    csfFile: r7
  }) {
    let n = r7.stories[t];
    if (!n)
      throw new Bi({ storyId: t });
    let i = r7.meta, s = this.prepareStoryWithCache(
      n,
      i,
      r7.projectAnnotations ?? this.projectAnnotations
    );
    return this.args.setInitial(s), this.hooks[s.id] = this.hooks[s.id] || new qr$1(), s;
  }
  // If we have a CSF file we can get all the stories from it synchronously
  componentStoriesFromCSFFile({
    csfFile: t
  }) {
    return Object.keys(this.storyIndex.entries).filter((r7) => !!t.stories[r7]).map((r7) => this.storyFromCSFFile({ storyId: r7, csfFile: t }));
  }
  async loadEntry(t) {
    let r7 = await this.storyIdToEntry(t), n = r7.type === "docs" ? r7.storiesImports : [], [i, ...s] = await Promise.all([
      this.importFn(r7.importPath),
      ...n.map((a) => {
        let l = this.storyIndex.importPathToEntry(a);
        return this.loadCSFFileByStoryId(l.id);
      })
    ]);
    return { entryExports: i, csfFiles: s };
  }
  // A prepared story does not include args, globals or hooks. These are stored in the story store
  // and updated separtely to the (immutable) story.
  getStoryContext(t, { forceInitialArgs: r7 = false } = {}) {
    let n = this.userGlobals.get(), { initialGlobals: i } = this.userGlobals, s = new dn$1();
    return xy({
      ...t,
      args: r7 ? t.initialArgs : this.args.get(t.id),
      initialGlobals: i,
      globalTypes: this.projectAnnotations.globalTypes,
      userGlobals: n,
      reporting: s,
      globals: {
        ...n,
        ...t.storyGlobals
      },
      hooks: this.hooks[t.id]
    });
  }
  addCleanupCallbacks(t, ...r7) {
    this.cleanupCallbacks[t.id] = (this.cleanupCallbacks[t.id] || []).concat(r7);
  }
  async cleanupStory(t) {
    this.hooks[t.id].clean();
    let r7 = this.cleanupCallbacks[t.id];
    if (r7)
      for (let n of [...r7].reverse())
        await n();
    delete this.cleanupCallbacks[t.id];
  }
  extract(t = { includeDocsOnly: false }) {
    let { cachedCSFFiles: r7 } = this;
    if (!r7)
      throw new ji();
    return Object.entries(this.storyIndex.entries).reduce(
      (n, [i, { type: s, importPath: a }]) => {
        if (s === "docs")
          return n;
        let l = r7[a], u = this.storyFromCSFFile({ storyId: i, csfFile: l });
        return !t.includeDocsOnly && u.parameters.docsOnly || (n[i] = Object.entries(u).reduce(
          (c, [d, p5]) => d === "moduleExport" || typeof p5 == "function" ? c : Array.isArray(p5) ? Object.assign(c, { [d]: p5.slice().sort() }) : Object.assign(c, { [d]: p5 }),
          {
            //
            args: u.initialArgs,
            globals: {
              ...this.userGlobals.initialGlobals,
              ...this.userGlobals.globals,
              ...u.storyGlobals
            }
          }
        )), n;
      },
      {}
    );
  }
};
o(qR, "StoryStore");
var Xn = qR;
function IR(e) {
  return e.startsWith("\\\\?\\") ? e : e.replace(/\\/g, "/");
}
o(IR, "slash");
var XEe = /* @__PURE__ */ o((e) => {
  if (e.length === 0)
    return e;
  let t = e[e.length - 1], r7 = t?.replace(/(?:[.](?:story|stories))?([.][^.]+)$/i, "");
  if (e.length === 1)
    return [r7];
  let n = e[e.length - 2];
  return r7 && n && r7.toLowerCase() === n.toLowerCase() ? [...e.slice(0, -2), r7] : r7 && (/^(story|stories)([.][^.]+)$/i.test(t) || /^index$/i.test(r7)) ? e.slice(0, -1) : [...e.slice(0, -1), r7];
}, "sanitize");
function OU(e) {
  return e.flatMap((t) => t.split("/")).filter(Boolean).join("/");
}
o(OU, "pathJoin");
var MR = /* @__PURE__ */ o((e, t, r7) => {
  let { directory: n, importPathMatcher: i, titlePrefix: s = "" } = t || {};
  typeof e == "number" && be.warn(Q`
      CSF Auto-title received a numeric fileName. This typically happens when
      webpack is mis-configured in production mode. To force webpack to produce
      filenames, set optimization.moduleIds = "named" in your webpack config.
    `);
  let a = IR(String(e));
  if (i.exec(a)) {
    if (!r7) {
      let l = a.replace(n, ""), u = OU([s, l]).split("/");
      return u = XEe(u), u.join("/");
    }
    return s ? OU([s, r7]) : r7;
  }
}, "userOrAutoTitleFromSpecifier"), qU = /* @__PURE__ */ o((e, t, r7) => {
  for (let n = 0; n < t.length; n += 1) {
    let i = MR(e, t[n], r7);
    if (i)
      return i;
  }
  return r7 || void 0;
}, "userOrAutoTitle");
var IU = /\s*\/\s*/, MU = /* @__PURE__ */ o((e = {}) => (t, r7) => {
  if (t.title === r7.title && !e.includeNames)
    return 0;
  let n = e.method || "configure", i = e.order || [], s = t.title.trim().split(IU), a = r7.title.trim().split(IU);
  e.includeNames && (s.push(t.name), a.push(r7.name));
  let l = 0;
  for (; s[l] || a[l]; ) {
    if (!s[l])
      return -1;
    if (!a[l])
      return 1;
    let u = s[l], c = a[l];
    if (u !== c) {
      let p5 = i.indexOf(u), f = i.indexOf(c), m = i.indexOf("*");
      return p5 !== -1 || f !== -1 ? (p5 === -1 && (m !== -1 ? p5 = m : p5 = i.length), f === -1 && (m !== -1 ? f = m : f = i.length), p5 - f) : n === "configure" ? 0 : u.localeCompare(c, e.locales ? e.locales : void 0, {
        numeric: true,
        sensitivity: "accent"
      });
    }
    let d = i.indexOf(u);
    d === -1 && (d = i.indexOf("*")), i = d !== -1 && Array.isArray(i[d + 1]) ? i[d + 1] : [], l += 1;
  }
  return 0;
}, "storySort");
var JEe = /* @__PURE__ */ o((e, t, r7) => {
  if (t) {
    let n;
    typeof t == "function" ? n = t : n = MU(t), e.sort(n);
  } else
    e.sort(
      (n, i) => r7.indexOf(n.importPath) - r7.indexOf(i.importPath)
    );
  return e;
}, "sortStoriesCommon"), NU = /* @__PURE__ */ o((e, t, r7) => {
  try {
    return JEe(e, t, r7);
  } catch (n) {
    throw new Error(Q`
    Error sorting stories with sort parameter ${t}:

    > ${n.message}
    
    Are you using a V6-style sort function in V7 mode?

    More info: https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#v7-style-story-sort
  `);
  }
}, "sortStoriesV7");
var fn$1 = new Error("prepareAborted");
var { AbortController: jU } = globalThis;
function kU(e) {
  try {
    let { name: t = "Error", message: r7 = String(e), stack: n } = e;
    return { name: t, message: r7, stack: n };
  } catch {
    return { name: "Error", message: String(e) };
  }
}
o(kU, "serializeError");
var NR = class NR2 {
  constructor(t, r7, n, i, s, a, l = { autoplay: true, forceInitialArgs: false }, u) {
    this.channel = t;
    this.store = r7;
    this.renderToScreen = n;
    this.callbacks = i;
    this.id = s;
    this.viewMode = a;
    this.renderOptions = l;
    this.type = "story";
    this.notYetRendered = true;
    this.rerenderEnqueued = false;
    this.disableKeyListeners = false;
    this.teardownRender = /* @__PURE__ */ o(() => {
    }, "teardownRender");
    this.torndown = false;
    this.abortController = new jU(), this.renderId = Date.now(), u && (this.story = u, this.phase = "preparing");
  }
  async runPhase(t, r7, n) {
    this.phase = r7, this.channel.emit(jt, {
      newPhase: this.phase,
      renderId: this.renderId,
      storyId: this.id
    }), n && (await n(), this.checkIfAborted(t));
  }
  checkIfAborted(t) {
    return t.aborted ? (this.phase = "aborted", this.channel.emit(jt, {
      newPhase: this.phase,
      renderId: this.renderId,
      storyId: this.id
    }), true) : false;
  }
  async prepare() {
    if (await this.runPhase(this.abortController.signal, "preparing", async () => {
      this.story = await this.store.loadStory({ storyId: this.id });
    }), this.abortController.signal.aborted)
      throw await this.store.cleanupStory(this.story), fn$1;
  }
  // The two story "renders" are equal and have both loaded the same story
  isEqual(t) {
    return !!(this.id === t.id && this.story && this.story === t.story);
  }
  isPreparing() {
    return ["preparing"].includes(this.phase);
  }
  isPending() {
    return ["loading", "beforeEach", "rendering", "playing", "afterEach"].includes(
      this.phase
    );
  }
  async renderToElement(t) {
    return this.canvasElement = t, this.render({ initial: true, forceRemount: true });
  }
  storyContext() {
    if (!this.story)
      throw new Error("Cannot call storyContext before preparing");
    let { forceInitialArgs: t } = this.renderOptions;
    return this.store.getStoryContext(this.story, { forceInitialArgs: t });
  }
  async render({
    initial: t = false,
    forceRemount: r7 = false
  } = {}) {
    let { canvasElement: n } = this;
    if (!this.story)
      throw new Error("cannot render when not prepared");
    let i = this.story;
    if (!n)
      throw new Error("cannot render when canvasElement is unset");
    let {
      id: s,
      componentId: a,
      title: l,
      name: u,
      tags: c,
      applyLoaders: d,
      applyBeforeEach: p5,
      applyAfterEach: f,
      unboundStoryFn: m,
      playFunction: h5,
      runStep: b
    } = i;
    r7 && !t && (this.cancelRender(), this.abortController = new jU());
    let v5 = this.abortController.signal, g = false, w5 = i.usesMount;
    try {
      let E = {
        ...this.storyContext(),
        viewMode: this.viewMode,
        abortSignal: v5,
        canvasElement: n,
        loaded: {},
        step: /* @__PURE__ */ o((H, M7) => b(H, M7, E), "step"),
        context: null,
        canvas: {},
        userEvent: {},
        renderToCanvas: /* @__PURE__ */ o(async () => {
          let H = await this.renderToScreen(R, n);
          this.teardownRender = H || (() => {
          }), g = true;
        }, "renderToCanvas"),
        // The story provides (set in a renderer) a mount function that is a higher order function
        // (context) => (...args) => Canvas
        //
        // Before assigning it to the context, we resolve the context dependency,
        // so that a user can just call it as await mount(...args) in their play function.
        mount: /* @__PURE__ */ o(async (...H) => {
          this.callbacks.showStoryDuringRender?.();
          let M7 = null;
          return await this.runPhase(v5, "rendering", async () => {
            M7 = await i.mount(E)(...H);
          }), w5 && await this.runPhase(v5, "playing"), M7;
        }, "mount")
      };
      E.context = E;
      let R = {
        componentId: a,
        title: l,
        kind: l,
        id: s,
        name: u,
        story: u,
        tags: c,
        ...this.callbacks,
        showError: /* @__PURE__ */ o((H) => (this.phase = "errored", this.callbacks.showError(H)), "showError"),
        showException: /* @__PURE__ */ o((H) => (this.phase = "errored", this.callbacks.showException(H)), "showException"),
        forceRemount: r7 || this.notYetRendered,
        storyContext: E,
        storyFn: /* @__PURE__ */ o(() => m(E), "storyFn"),
        unboundStoryFn: m
      };
      if (await this.runPhase(v5, "loading", async () => {
        E.loaded = await d(E);
      }), v5.aborted)
        return;
      let S = await p5(E);
      if (this.store.addCleanupCallbacks(i, ...S), this.checkIfAborted(v5) || (!g && !w5 && await E.mount(), this.notYetRendered = false, v5.aborted))
        return;
      let P = this.story.parameters?.test?.dangerouslyIgnoreUnhandledErrors === true, _5 = /* @__PURE__ */ new Set(), C5 = /* @__PURE__ */ o((H) => {
        H.error && _5.add(H.error);
      }, "onError"), O = /* @__PURE__ */ o((H) => {
        H.reason && _5.add(H.reason);
      }, "onUnhandledRejection");
      if (this.renderOptions.autoplay && r7 && h5 && this.phase !== "errored") {
        window?.addEventListener?.("error", C5), window?.addEventListener?.("unhandledrejection", O), this.disableKeyListeners = true;
        try {
          if (w5 ? await h5(E) : (E.mount = async () => {
            throw new gn({ playFunction: h5.toString() });
          }, await this.runPhase(v5, "playing", async () => h5(E))), !g)
            throw new Vi();
          this.checkIfAborted(v5), !P && _5.size > 0 ? await this.runPhase(v5, "errored") : await this.runPhase(v5, "played");
        } catch (H) {
          if (this.callbacks.showStoryDuringRender?.(), await this.runPhase(v5, "errored", async () => {
            this.channel.emit(zy, kU(H));
          }), this.story.parameters.throwPlayFunctionExceptions !== false)
            throw H;
          console.error(H);
        }
        if (!P && _5.size > 0 && this.channel.emit(
          Gy,
          Array.from(_5).map(kU)
        ), this.disableKeyListeners = false, window?.removeEventListener?.("unhandledrejection", O), window?.removeEventListener?.("error", C5), v5.aborted)
          return;
      }
      await this.runPhase(v5, "completing", async () => {
        Ry() ? this.store.addCleanupCallbacks(i, Yn()) : await Kn(v5);
      }), await this.runPhase(v5, "completed", async () => {
        this.channel.emit(uo, s);
      }), this.phase !== "errored" && await this.runPhase(v5, "afterEach", async () => {
        await f(E);
      });
      let L = !P && _5.size > 0, q = E.reporting.reports.some(
        (H) => H.status === "failed"
      ), D = L || q;
      await this.runPhase(
        v5,
        "finished",
        async () => this.channel.emit(Da, {
          storyId: s,
          status: D ? "error" : "success",
          reporters: E.reporting.reports
        })
      );
    } catch (E) {
      this.phase = "errored", this.callbacks.showException(E), await this.runPhase(
        v5,
        "finished",
        async () => this.channel.emit(Da, {
          storyId: s,
          status: "error",
          reporters: []
        })
      );
    }
    this.rerenderEnqueued && (this.rerenderEnqueued = false, this.render());
  }
  /**
   * Rerender the story. If the story is currently pending (loading/rendering), the rerender will be
   * enqueued, and will be executed after the current render is completed. Rerendering while playing
   * will not be enqueued, and will be executed immediately, to support rendering args changes while
   * playing.
   */
  async rerender() {
    if (this.isPending() && this.phase !== "playing")
      this.rerenderEnqueued = true;
    else
      return this.render();
  }
  async remount() {
    return await this.teardown(), this.render({ forceRemount: true });
  }
  // If the story is torn down (either a new story is rendered or the docs page removes it)
  // we need to consider the fact that the initial render may not be finished
  // (possibly the loaders or the play function are still running). We use the controller
  // as a method to abort them, ASAP, but this is not foolproof as we cannot control what
  // happens inside the user's code.
  cancelRender() {
    this.abortController.abort();
  }
  cancelPlayFunction() {
    this.phase === "playing" && (this.abortController.abort(), this.runPhase(this.abortController.signal, "aborted"));
  }
  async teardown() {
    this.torndown = true, this.cancelRender(), this.story && await this.store.cleanupStory(this.story);
    for (let t = 0; t < 3; t += 1) {
      if (!this.isPending()) {
        await this.teardownRender();
        return;
      }
      await new Promise((r7) => setTimeout(r7, 0));
    }
    window?.location?.reload?.(), await new Promise(() => {
    });
  }
};
o(NR, "StoryRender");
var Jn = NR;
var { fetch: QEe } = k, ZEe = "./index.json", jR = class jR2 {
  constructor(t, r7, n = He.getChannel(), i = true) {
    this.importFn = t;
    this.getProjectAnnotations = r7;
    this.channel = n;
    this.storyRenders = [];
    this.storeInitializationPromise = new Promise((s, a) => {
      this.resolveStoreInitializationPromise = s, this.rejectStoreInitializationPromise = a;
    }), i && this.initialize();
  }
  // Create a proxy object for `__STORYBOOK_STORY_STORE__` and `__STORYBOOK_PREVIEW__.storyStore`
  // That proxies through to the store once ready, and errors beforehand. This means we can set
  // `__STORYBOOK_STORY_STORE__ = __STORYBOOK_PREVIEW__.storyStore` without having to wait, and
  // similarly integrators can access the `storyStore` on the preview at any time, although
  // it is considered deprecated and we will no longer allow access in 9.0
  get storyStore() {
    return new Proxy(
      {},
      {
        get: /* @__PURE__ */ o((t, r7) => {
          if (this.storyStoreValue)
            return Ai("Accessing the Story Store is deprecated and will be removed in 9.0"), this.storyStoreValue[r7];
          throw new Hi();
        }, "get")
      }
    );
  }
  // INITIALIZATION
  async initialize() {
    this.setupListeners();
    try {
      let t = await this.getProjectAnnotationsOrRenderError();
      await this.runBeforeAllHook(t), await this.initializeWithProjectAnnotations(t);
    } catch (t) {
      this.rejectStoreInitializationPromise(t);
    }
  }
  ready() {
    return this.storeInitializationPromise;
  }
  setupListeners() {
    this.channel.on(Zy, this.onStoryIndexChanged.bind(this)), this.channel.on(Ci, this.onUpdateGlobals.bind(this)), this.channel.on(Pi, this.onUpdateArgs.bind(this)), this.channel.on(ab, this.onRequestArgTypesInfo.bind(this)), this.channel.on(Si, this.onResetArgs.bind(this)), this.channel.on(Ri, this.onForceReRender.bind(this)), this.channel.on(lo, this.onForceRemount.bind(this)), this.channel.on(ob, this.onStoryHotUpdated.bind(this));
  }
  async getProjectAnnotationsOrRenderError() {
    try {
      let t = await this.getProjectAnnotations();
      if (this.renderToCanvas = t.renderToCanvas, !this.renderToCanvas)
        throw new ki();
      return t;
    } catch (t) {
      throw this.renderPreviewEntryError("Error reading preview.js:", t), t;
    }
  }
  // If initialization gets as far as project annotations, this function runs.
  async initializeWithProjectAnnotations(t) {
    this.projectAnnotationsBeforeInitialization = t;
    try {
      let r7 = await this.getStoryIndexFromServer();
      return this.initializeWithStoryIndex(r7);
    } catch (r7) {
      throw this.renderPreviewEntryError("Error loading story index:", r7), r7;
    }
  }
  async runBeforeAllHook(t) {
    try {
      await this.beforeAllCleanup?.(), this.beforeAllCleanup = await t.beforeAll?.();
    } catch (r7) {
      throw this.renderPreviewEntryError("Error in beforeAll hook:", r7), r7;
    }
  }
  async getStoryIndexFromServer() {
    let t = await QEe(ZEe);
    if (t.status === 200)
      return t.json();
    throw new Li({ text: await t.text() });
  }
  // If initialization gets as far as the story index, this function runs.
  initializeWithStoryIndex(t) {
    if (!this.projectAnnotationsBeforeInitialization)
      throw new Error("Cannot call initializeWithStoryIndex until project annotations resolve");
    this.storyStoreValue = new Xn(
      t,
      this.importFn,
      this.projectAnnotationsBeforeInitialization
    ), delete this.projectAnnotationsBeforeInitialization, this.setInitialGlobals(), this.resolveStoreInitializationPromise();
  }
  async setInitialGlobals() {
    this.emitGlobals();
  }
  emitGlobals() {
    if (!this.storyStoreValue)
      throw new We({ methodName: "emitGlobals" });
    let t = {
      globals: this.storyStoreValue.userGlobals.get() || {},
      globalTypes: this.storyStoreValue.projectAnnotations.globalTypes || {}
    };
    this.channel.emit(Ky, t);
  }
  // EVENT HANDLERS
  // This happens when a config file gets reloaded
  async onGetProjectAnnotationsChanged({
    getProjectAnnotations: t
  }) {
    delete this.previewEntryError, this.getProjectAnnotations = t;
    let r7 = await this.getProjectAnnotationsOrRenderError();
    if (await this.runBeforeAllHook(r7), !this.storyStoreValue) {
      await this.initializeWithProjectAnnotations(r7);
      return;
    }
    this.storyStoreValue.setProjectAnnotations(r7), this.emitGlobals();
  }
  async onStoryIndexChanged() {
    if (delete this.previewEntryError, !(!this.storyStoreValue && !this.projectAnnotationsBeforeInitialization))
      try {
        let t = await this.getStoryIndexFromServer();
        if (this.projectAnnotationsBeforeInitialization) {
          this.initializeWithStoryIndex(t);
          return;
        }
        await this.onStoriesChanged({ storyIndex: t });
      } catch (t) {
        throw this.renderPreviewEntryError("Error loading story index:", t), t;
      }
  }
  // This happens when a glob gets HMR-ed
  async onStoriesChanged({
    importFn: t,
    storyIndex: r7
  }) {
    if (!this.storyStoreValue)
      throw new We({ methodName: "onStoriesChanged" });
    await this.storyStoreValue.onStoriesChanged({ importFn: t, storyIndex: r7 });
  }
  async onUpdateGlobals({
    globals: t,
    currentStory: r7
  }) {
    if (this.storyStoreValue || await this.storeInitializationPromise, !this.storyStoreValue)
      throw new We({ methodName: "onUpdateGlobals" });
    if (this.storyStoreValue.userGlobals.update(t), r7) {
      let { initialGlobals: n, storyGlobals: i, userGlobals: s, globals: a } = this.storyStoreValue.getStoryContext(r7);
      this.channel.emit(bn, {
        initialGlobals: n,
        userGlobals: s,
        storyGlobals: i,
        globals: a
      });
    } else {
      let { initialGlobals: n, globals: i } = this.storyStoreValue.userGlobals;
      this.channel.emit(bn, {
        initialGlobals: n,
        userGlobals: i,
        storyGlobals: {},
        globals: i
      });
    }
    await Promise.all(this.storyRenders.map((n) => n.rerender()));
  }
  async onUpdateArgs({ storyId: t, updatedArgs: r7 }) {
    if (!this.storyStoreValue)
      throw new We({ methodName: "onUpdateArgs" });
    this.storyStoreValue.args.update(t, r7), await Promise.all(
      this.storyRenders.filter((n) => n.id === t && !n.renderOptions.forceInitialArgs).map(
        (n) => (
          // We only run the play function, with in a force remount.
          // But when mount is destructured, the rendering happens inside of the play function.
          n.story && n.story.usesMount ? n.remount() : n.rerender()
        )
      )
    ), this.channel.emit(Xy, {
      storyId: t,
      args: this.storyStoreValue.args.get(t)
    });
  }
  async onRequestArgTypesInfo({ id: t, payload: r7 }) {
    try {
      await this.storeInitializationPromise;
      let n = await this.storyStoreValue?.loadStory(r7);
      this.channel.emit($a, {
        id: t,
        success: true,
        payload: { argTypes: n?.argTypes || {} },
        error: null
      });
    } catch (n) {
      this.channel.emit($a, {
        id: t,
        success: false,
        error: n?.message
      });
    }
  }
  async onResetArgs({ storyId: t, argNames: r7 }) {
    if (!this.storyStoreValue)
      throw new We({ methodName: "onResetArgs" });
    let i = this.storyRenders.find((l) => l.id === t)?.story || await this.storyStoreValue.loadStory({ storyId: t }), a = (r7 || [
      .../* @__PURE__ */ new Set([
        ...Object.keys(i.initialArgs),
        ...Object.keys(this.storyStoreValue.args.get(t))
      ])
    ]).reduce((l, u) => (l[u] = i.initialArgs[u], l), {});
    await this.onUpdateArgs({ storyId: t, updatedArgs: a });
  }
  // ForceReRender does not include a story id, so we simply must
  // re-render all stories in case they are relevant
  async onForceReRender() {
    await Promise.all(this.storyRenders.map((t) => t.rerender()));
  }
  async onForceRemount({ storyId: t }) {
    await Promise.all(this.storyRenders.filter((r7) => r7.id === t).map((r7) => r7.remount()));
  }
  async onStoryHotUpdated() {
    await Promise.all(this.storyRenders.map((t) => t.cancelPlayFunction()));
  }
  // Used by docs to render a story to a given element
  // Note this short-circuits the `prepare()` phase of the StoryRender,
  // main to be consistent with the previous behaviour. In the future,
  // we will change it to go ahead and load the story, which will end up being
  // "instant", although async.
  renderStoryToElement(t, r7, n, i) {
    if (!this.renderToCanvas || !this.storyStoreValue)
      throw new We({
        methodName: "renderStoryToElement"
      });
    let s = new Jn(
      this.channel,
      this.storyStoreValue,
      this.renderToCanvas,
      n,
      t.id,
      "docs",
      i,
      t
    );
    return s.renderToElement(r7), this.storyRenders.push(s), async () => {
      await this.teardownRender(s);
    };
  }
  async teardownRender(t, { viewModeChanged: r7 } = {}) {
    this.storyRenders = this.storyRenders.filter((n) => n !== t), await t?.teardown?.({ viewModeChanged: r7 });
  }
  // API
  async loadStory({ storyId: t }) {
    if (!this.storyStoreValue)
      throw new We({ methodName: "loadStory" });
    return this.storyStoreValue.loadStory({ storyId: t });
  }
  getStoryContext(t, { forceInitialArgs: r7 = false } = {}) {
    if (!this.storyStoreValue)
      throw new We({ methodName: "getStoryContext" });
    return this.storyStoreValue.getStoryContext(t, { forceInitialArgs: r7 });
  }
  async extract(t) {
    if (!this.storyStoreValue)
      throw new We({ methodName: "extract" });
    if (this.previewEntryError)
      throw this.previewEntryError;
    return await this.storyStoreValue.cacheAllCSFFiles(), this.storyStoreValue.extract(t);
  }
  // UTILITIES
  renderPreviewEntryError(t, r7) {
    this.previewEntryError = r7, se.error(t), se.error(r7), this.channel.emit(Uy, r7);
  }
};
o(jR, "Preview");
var Qn = jR;
var kR = class kR2 {
  constructor(t, r7, n, i) {
    this.channel = t;
    this.store = r7;
    this.renderStoryToElement = n;
    this.storyIdByName = /* @__PURE__ */ o((t7) => {
      let r72 = this.nameToStoryId.get(t7);
      if (r72)
        return r72;
      throw new Error(`No story found with that name: ${t7}`);
    }, "storyIdByName");
    this.componentStories = /* @__PURE__ */ o(() => this.componentStoriesValue, "componentStories");
    this.componentStoriesFromCSFFile = /* @__PURE__ */ o((t7) => this.store.componentStoriesFromCSFFile({ csfFile: t7 }), "componentStoriesFromCSFFile");
    this.storyById = /* @__PURE__ */ o((t7) => {
      if (!t7) {
        if (!this.primaryStory)
          throw new Error(
            "No primary story defined for docs entry. Did you forget to use `<Meta>`?"
          );
        return this.primaryStory;
      }
      let r72 = this.storyIdToCSFFile.get(t7);
      if (!r72)
        throw new Error(`Called \`storyById\` for story that was never loaded: ${t7}`);
      return this.store.storyFromCSFFile({ storyId: t7, csfFile: r72 });
    }, "storyById");
    this.getStoryContext = /* @__PURE__ */ o((t7) => ({
      ...this.store.getStoryContext(t7),
      loaded: {},
      viewMode: "docs"
    }), "getStoryContext");
    this.loadStory = /* @__PURE__ */ o((t7) => this.store.loadStory({ storyId: t7 }), "loadStory");
    this.componentStoriesValue = [], this.storyIdToCSFFile = /* @__PURE__ */ new Map(), this.exportToStory = /* @__PURE__ */ new Map(), this.exportsToCSFFile = /* @__PURE__ */ new Map(), this.nameToStoryId = /* @__PURE__ */ new Map(), this.attachedCSFFiles = /* @__PURE__ */ new Set(), i.forEach((s, a) => {
      this.referenceCSFFile(s);
    });
  }
  // This docs entry references this CSF file and can synchronously load the stories, as well
  // as reference them by module export. If the CSF is part of the "component" stories, they
  // can also be referenced by name and are in the componentStories list.
  referenceCSFFile(t) {
    this.exportsToCSFFile.set(t.moduleExports, t), this.exportsToCSFFile.set(t.moduleExports.default, t), this.store.componentStoriesFromCSFFile(
      { csfFile: t }
    ).forEach((n) => {
      let i = t.stories[n.id];
      this.storyIdToCSFFile.set(i.id, t), this.exportToStory.set(i.moduleExport, n);
    });
  }
  attachCSFFile(t) {
    if (!this.exportsToCSFFile.has(t.moduleExports))
      throw new Error("Cannot attach a CSF file that has not been referenced");
    if (this.attachedCSFFiles.has(t))
      return;
    this.attachedCSFFiles.add(t), this.store.componentStoriesFromCSFFile({ csfFile: t }).forEach((n) => {
      this.nameToStoryId.set(n.name, n.id), this.componentStoriesValue.push(n), this.primaryStory || (this.primaryStory = n);
    });
  }
  referenceMeta(t, r7) {
    let n = this.resolveModuleExport(t);
    if (n.type !== "meta")
      throw new Error(
        "<Meta of={} /> must reference a CSF file module export or meta export. Did you mistakenly reference your component instead of your CSF file?"
      );
    r7 && this.attachCSFFile(n.csfFile);
  }
  get projectAnnotations() {
    let { projectAnnotations: t } = this.store;
    if (!t)
      throw new Error("Can't get projectAnnotations from DocsContext before they are initialized");
    return t;
  }
  resolveAttachedModuleExportType(t) {
    if (t === "story") {
      if (!this.primaryStory)
        throw new Error(
          "No primary story attached to this docs file, did you forget to use <Meta of={} />?"
        );
      return { type: "story", story: this.primaryStory };
    }
    if (this.attachedCSFFiles.size === 0)
      throw new Error(
        "No CSF file attached to this docs file, did you forget to use <Meta of={} />?"
      );
    let r7 = Array.from(this.attachedCSFFiles)[0];
    if (t === "meta")
      return { type: "meta", csfFile: r7 };
    let { component: n } = r7.meta;
    if (!n)
      throw new Error(
        "Attached CSF file does not defined a component, did you forget to export one?"
      );
    return { type: "component", component: n };
  }
  resolveModuleExport(t) {
    let r7 = this.exportsToCSFFile.get(t);
    if (r7)
      return { type: "meta", csfFile: r7 };
    let n = this.exportToStory.get(
      fi(t) ? t.input : t
    );
    return n ? { type: "story", story: n } : { type: "component", component: t };
  }
  resolveOf(t, r7 = []) {
    let n;
    if (["component", "meta", "story"].includes(t)) {
      let i = t;
      n = this.resolveAttachedModuleExportType(i);
    } else
      n = this.resolveModuleExport(t);
    if (r7.length && !r7.includes(n.type)) {
      let i = n.type === "component" ? "component or unknown" : n.type;
      throw new Error(Q`Invalid value passed to the 'of' prop. The value was resolved to a '${i}' type but the only types for this block are: ${r7.join(
        ", "
      )}.
        - Did you pass a component to the 'of' prop when the block only supports a story or a meta?
        - ... or vice versa?
        - Did you pass a story, CSF file or meta to the 'of' prop that is not indexed, ie. is not targeted by the 'stories' globs in the main configuration?`);
    }
    switch (n.type) {
      case "component":
        return {
          ...n,
          projectAnnotations: this.projectAnnotations
        };
      case "meta":
        return {
          ...n,
          preparedMeta: this.store.preparedMetaFromCSFFile({ csfFile: n.csfFile })
        };
      case "story":
      default:
        return n;
    }
  }
};
o(kR, "DocsContext");
var Cr$1 = kR;
var LR = class LR2 {
  constructor(t, r7, n, i) {
    this.channel = t;
    this.store = r7;
    this.entry = n;
    this.callbacks = i;
    this.type = "docs";
    this.subtype = "csf";
    this.torndown = false;
    this.disableKeyListeners = false;
    this.preparing = false;
    this.id = n.id, this.renderId = Date.now();
  }
  isPreparing() {
    return this.preparing;
  }
  async prepare() {
    this.preparing = true;
    let { entryExports: t, csfFiles: r7 = [] } = await this.store.loadEntry(this.id);
    if (this.torndown)
      throw fn$1;
    let { importPath: n, title: i } = this.entry, s = this.store.processCSFFileWithCache(
      t,
      n,
      i
    ), a = Object.keys(s.stories)[0];
    this.story = this.store.storyFromCSFFile({ storyId: a, csfFile: s }), this.csfFiles = [s, ...r7], this.preparing = false;
  }
  isEqual(t) {
    return !!(this.id === t.id && this.story && this.story === t.story);
  }
  docsContext(t) {
    if (!this.csfFiles)
      throw new Error("Cannot render docs before preparing");
    let r7 = new Cr$1(
      this.channel,
      this.store,
      t,
      this.csfFiles
    );
    return this.csfFiles.forEach((n) => r7.attachCSFFile(n)), r7;
  }
  async renderToElement(t, r7) {
    if (!this.story || !this.csfFiles)
      throw new Error("Cannot render docs before preparing");
    let n = this.docsContext(r7), { docs: i } = this.story.parameters || {};
    if (!i)
      throw new Error(
        "Cannot render a story in viewMode=docs if `@storybook/addon-docs` is not installed"
      );
    let s = await i.renderer(), { render: a } = s, l = /* @__PURE__ */ o(async () => {
      try {
        await a(n, i, t), this.channel.emit(Ti, this.id);
      } catch (u) {
        this.callbacks.showException(u);
      }
    }, "renderDocs");
    return this.rerender = async () => l(), this.teardownRender = async ({ viewModeChanged: u }) => {
      !u || !t || s.unmount(t);
    }, l();
  }
  async teardown({ viewModeChanged: t } = {}) {
    this.teardownRender?.({ viewModeChanged: t }), this.torndown = true;
  }
};
o(LR, "CsfDocsRender");
var _a = LR;
var FR = class FR2 {
  constructor(t, r7, n, i) {
    this.channel = t;
    this.store = r7;
    this.entry = n;
    this.callbacks = i;
    this.type = "docs";
    this.subtype = "mdx";
    this.torndown = false;
    this.disableKeyListeners = false;
    this.preparing = false;
    this.id = n.id, this.renderId = Date.now();
  }
  isPreparing() {
    return this.preparing;
  }
  async prepare() {
    this.preparing = true;
    let { entryExports: t, csfFiles: r7 = [] } = await this.store.loadEntry(this.id);
    if (this.torndown)
      throw fn$1;
    this.csfFiles = r7, this.exports = t, this.preparing = false;
  }
  isEqual(t) {
    return !!(this.id === t.id && this.exports && this.exports === t.exports);
  }
  docsContext(t) {
    if (!this.csfFiles)
      throw new Error("Cannot render docs before preparing");
    return new Cr$1(
      this.channel,
      this.store,
      t,
      this.csfFiles
    );
  }
  async renderToElement(t, r7) {
    if (!this.exports || !this.csfFiles || !this.store.projectAnnotations)
      throw new Error("Cannot render docs before preparing");
    let n = this.docsContext(r7), { docs: i } = this.store.projectAnnotations.parameters ?? {};
    if (!i)
      throw new Error(
        "Cannot render a story in viewMode=docs if `@storybook/addon-docs` is not installed"
      );
    let s = { ...i, page: this.exports.default }, a = await i.renderer(), { render: l } = a, u = /* @__PURE__ */ o(async () => {
      try {
        await l(n, s, t), this.channel.emit(Ti, this.id);
      } catch (c) {
        this.callbacks.showException(c);
      }
    }, "renderDocs");
    return this.rerender = async () => u(), this.teardownRender = async ({ viewModeChanged: c } = {}) => {
      !c || !t || (a.unmount(t), this.torndown = true);
    }, u();
  }
  async teardown({ viewModeChanged: t } = {}) {
    this.teardownRender?.({ viewModeChanged: t }), this.torndown = true;
  }
};
o(FR, "MdxDocsRender");
var Ca = FR;
var exe = globalThis;
function txe(e) {
  let t = e.composedPath && e.composedPath()[0] || e.target;
  return /input|textarea/i.test(t.tagName) || t.getAttribute("contenteditable") !== null;
}
o(txe, "focusInInput");
var LU = "attached-mdx", rxe = "unattached-mdx";
function nxe({ tags: e }) {
  return e?.includes(rxe) || e?.includes(LU);
}
o(nxe, "isMdxEntry");
function DR(e) {
  return e.type === "story";
}
o(DR, "isStoryRender");
function oxe(e) {
  return e.type === "docs";
}
o(oxe, "isDocsRender");
function ixe(e) {
  return oxe(e) && e.subtype === "csf";
}
o(ixe, "isCsfDocsRender");
var $R = class $R2 extends Qn {
  constructor(r7, n, i, s) {
    super(r7, n, void 0, false);
    this.importFn = r7;
    this.getProjectAnnotations = n;
    this.selectionStore = i;
    this.view = s;
    this.initialize();
  }
  setupListeners() {
    super.setupListeners(), exe.onkeydown = this.onKeydown.bind(this), this.channel.on(_i, this.onSetCurrentStory.bind(this)), this.channel.on(ib, this.onUpdateQueryParams.bind(this)), this.channel.on(Wy, this.onPreloadStories.bind(this));
  }
  async setInitialGlobals() {
    if (!this.storyStoreValue)
      throw new We({ methodName: "setInitialGlobals" });
    let { globals: r7 } = this.selectionStore.selectionSpecifier || {};
    r7 && this.storyStoreValue.userGlobals.updateFromPersisted(r7), this.emitGlobals();
  }
  // If initialization gets as far as the story index, this function runs.
  async initializeWithStoryIndex(r7) {
    return await super.initializeWithStoryIndex(r7), this.selectSpecifiedStory();
  }
  // Use the selection specifier to choose a story, then render it
  async selectSpecifiedStory() {
    if (!this.storyStoreValue)
      throw new We({
        methodName: "selectSpecifiedStory"
      });
    if (this.selectionStore.selection) {
      await this.renderSelection();
      return;
    }
    if (!this.selectionStore.selectionSpecifier) {
      this.renderMissingStory();
      return;
    }
    let { storySpecifier: r7, args: n } = this.selectionStore.selectionSpecifier, i = this.storyStoreValue.storyIndex.entryFromSpecifier(r7);
    if (!i) {
      r7 === "*" ? this.renderStoryLoadingException(r7, new Di()) : this.renderStoryLoadingException(
        r7,
        new $i({ storySpecifier: r7.toString() })
      );
      return;
    }
    let { id: s, type: a } = i;
    this.selectionStore.setSelection({ storyId: s, viewMode: a }), this.channel.emit(tb, this.selectionStore.selection), this.channel.emit(
      La,
      this.selectionStore.selection
    ), await this.renderSelection({ persistedArgs: n });
  }
  // EVENT HANDLERS
  // This happens when a config file gets reloaded
  async onGetProjectAnnotationsChanged({
    getProjectAnnotations: r7
  }) {
    await super.onGetProjectAnnotationsChanged({ getProjectAnnotations: r7 }), this.selectionStore.selection && this.renderSelection();
  }
  // This happens when a glob gets HMR-ed
  async onStoriesChanged({
    importFn: r7,
    storyIndex: n
  }) {
    await super.onStoriesChanged({ importFn: r7, storyIndex: n }), this.selectionStore.selection ? await this.renderSelection() : await this.selectSpecifiedStory();
  }
  onKeydown(r7) {
    if (!this.storyRenders.find((n) => n.disableKeyListeners) && !txe(r7)) {
      let { altKey: n, ctrlKey: i, metaKey: s, shiftKey: a, key: l, code: u, keyCode: c } = r7;
      this.channel.emit(Yy, {
        event: { altKey: n, ctrlKey: i, metaKey: s, shiftKey: a, key: l, code: u, keyCode: c }
      });
    }
  }
  async onSetCurrentStory(r7) {
    this.selectionStore.setSelection({ viewMode: "story", ...r7 }), await this.storeInitializationPromise, this.channel.emit(La, this.selectionStore.selection), this.renderSelection();
  }
  onUpdateQueryParams(r7) {
    this.selectionStore.setQueryParams(r7);
  }
  async onUpdateGlobals({ globals: r7 }) {
    let n = this.currentRender instanceof Jn && this.currentRender.story || void 0;
    super.onUpdateGlobals({ globals: r7, currentStory: n }), (this.currentRender instanceof Ca || this.currentRender instanceof _a) && await this.currentRender.rerender?.();
  }
  async onUpdateArgs({ storyId: r7, updatedArgs: n }) {
    super.onUpdateArgs({ storyId: r7, updatedArgs: n });
  }
  async onPreloadStories({ ids: r7 }) {
    await this.storeInitializationPromise, this.storyStoreValue && await Promise.allSettled(r7.map((n) => this.storyStoreValue?.loadEntry(n)));
  }
  // RENDERING
  // We can either have:
  // - a story selected in "story" viewMode,
  //     in which case we render it to the root element, OR
  // - a story selected in "docs" viewMode,
  //     in which case we render the docsPage for that story
  async renderSelection({ persistedArgs: r7 } = {}) {
    let { renderToCanvas: n } = this;
    if (!this.storyStoreValue || !n)
      throw new We({ methodName: "renderSelection" });
    let { selection: i } = this.selectionStore;
    if (!i)
      throw new Error("Cannot call renderSelection as no selection was made");
    let { storyId: s } = i, a;
    try {
      a = await this.storyStoreValue.storyIdToEntry(s);
    } catch (m) {
      this.currentRender && await this.teardownRender(this.currentRender), this.renderStoryLoadingException(s, m);
      return;
    }
    let l = this.currentSelection?.storyId !== s, u = this.currentRender?.type !== a.type;
    a.type === "story" ? this.view.showPreparingStory({ immediate: u }) : this.view.showPreparingDocs({ immediate: u }), this.currentRender?.isPreparing() && await this.teardownRender(this.currentRender);
    let c;
    a.type === "story" ? c = new Jn(
      this.channel,
      this.storyStoreValue,
      n,
      this.mainStoryCallbacks(s),
      s,
      "story"
    ) : nxe(a) ? c = new Ca(
      this.channel,
      this.storyStoreValue,
      a,
      this.mainStoryCallbacks(s)
    ) : c = new _a(
      this.channel,
      this.storyStoreValue,
      a,
      this.mainStoryCallbacks(s)
    );
    let d = this.currentSelection;
    this.currentSelection = i;
    let p5 = this.currentRender;
    this.currentRender = c;
    try {
      await c.prepare();
    } catch (m) {
      p5 && await this.teardownRender(p5), m !== fn$1 && this.renderStoryLoadingException(s, m);
      return;
    }
    let f = !l && p5 && !c.isEqual(p5);
    if (r7 && DR(c) && (gt$1(!!c.story), this.storyStoreValue.args.updateFromPersisted(c.story, r7)), p5 && !p5.torndown && !l && !f && !u) {
      this.currentRender = p5, this.channel.emit(nb, s), this.view.showMain();
      return;
    }
    if (p5 && await this.teardownRender(p5, { viewModeChanged: u }), d && (l || u) && this.channel.emit(Jy, s), DR(c)) {
      gt$1(!!c.story);
      let {
        parameters: m,
        initialArgs: h5,
        argTypes: b,
        unmappedArgs: v5,
        initialGlobals: g,
        userGlobals: w5,
        storyGlobals: E,
        globals: R
      } = this.storyStoreValue.getStoryContext(c.story);
      this.channel.emit(eb, {
        id: s,
        parameters: m,
        initialArgs: h5,
        argTypes: b,
        args: v5
      }), this.channel.emit(bn, { userGlobals: w5, storyGlobals: E, globals: R, initialGlobals: g });
    } else {
      let { parameters: m } = this.storyStoreValue.projectAnnotations, { initialGlobals: h5, globals: b } = this.storyStoreValue.userGlobals;
      if (this.channel.emit(bn, {
        globals: b,
        initialGlobals: h5,
        storyGlobals: {},
        userGlobals: b
      }), ixe(c) || c.entry.tags?.includes(LU)) {
        if (!c.csfFiles)
          throw new Fi({ storyId: s });
        ({ parameters: m } = this.storyStoreValue.preparedMetaFromCSFFile({
          csfFile: c.csfFiles[0]
        }));
      }
      this.channel.emit(Vy, {
        id: s,
        parameters: m
      });
    }
    DR(c) ? (gt$1(!!c.story), this.storyRenders.push(c), this.currentRender.renderToElement(
      this.view.prepareForStory(c.story)
    )) : this.currentRender.renderToElement(
      this.view.prepareForDocs(),
      // This argument is used for docs, which is currently only compatible with HTMLElements
      this.renderStoryToElement.bind(this)
    );
  }
  async teardownRender(r7, { viewModeChanged: n = false } = {}) {
    this.storyRenders = this.storyRenders.filter((i) => i !== r7), await r7?.teardown?.({ viewModeChanged: n });
  }
  // UTILITIES
  mainStoryCallbacks(r7) {
    return {
      showStoryDuringRender: /* @__PURE__ */ o(() => this.view.showStoryDuringRender(), "showStoryDuringRender"),
      showMain: /* @__PURE__ */ o(() => this.view.showMain(), "showMain"),
      showError: /* @__PURE__ */ o((n) => this.renderError(r7, n), "showError"),
      showException: /* @__PURE__ */ o((n) => this.renderException(r7, n), "showException")
    };
  }
  renderPreviewEntryError(r7, n) {
    super.renderPreviewEntryError(r7, n), this.view.showErrorDisplay(n);
  }
  renderMissingStory() {
    this.view.showNoPreview(), this.channel.emit(Fa);
  }
  renderStoryLoadingException(r7, n) {
    se.error(n), this.view.showErrorDisplay(n), this.channel.emit(Fa, r7);
  }
  // renderException is used if we fail to render the story and it is uncaught by the app layer
  renderException(r7, n) {
    let { name: i = "Error", message: s = String(n), stack: a } = n, l = this.currentRender?.renderId;
    this.channel.emit(rb, { name: i, message: s, stack: a }), this.channel.emit(jt, { newPhase: "errored", renderId: l, storyId: r7 }), this.view.showErrorDisplay(n), se.error(`Error rendering story '${r7}':`), se.error(n);
  }
  // renderError is used by the various app layers to inform the user they have done something
  // wrong -- for instance returned the wrong thing from a story
  renderError(r7, { title: n, description: i }) {
    let s = this.currentRender?.renderId;
    this.channel.emit(Qy, { title: n, description: i }), this.channel.emit(jt, { newPhase: "errored", renderId: s, storyId: r7 }), this.view.showErrorDisplay({ message: n, stack: i }), se.error(`Error rendering story ${n}: ${i}`);
  }
};
o($R, "PreviewWithSelection");
var Zn = $R;
var Aa = Ne(qy(), 1);
var XU = Ne(qy(), 1);
var KU = /^[a-zA-Z0-9 _-]*$/, JU = /^-?[0-9]+(\.[0-9]+)?$/, qxe = /^#([a-f0-9]{3,4}|[a-f0-9]{6}|[a-f0-9]{8})$/i, QU = /^(rgba?|hsla?)\(([0-9]{1,3}),\s?([0-9]{1,3})%?,\s?([0-9]{1,3})%?,?\s?([0-9](\.[0-9]{1,2})?)?\)$/i, WR = /* @__PURE__ */ o((e = "", t) => e === null || e === "" || !KU.test(e) ? false : t == null || t instanceof Date || typeof t == "number" || typeof t == "boolean" ? true : typeof t == "string" ? KU.test(t) || JU.test(t) || qxe.test(t) || QU.test(t) : Array.isArray(t) ? t.every((r7) => WR(
  e,
  r7
)) : ct$1(t) ? Object.entries(t).every(([r7, n]) => WR(r7, n)) : false, "validateArgs"), Ixe = {
  delimiter: ";",
  // we're parsing a single query param
  nesting: true,
  arrayRepeat: true,
  arrayRepeatSyntax: "bracket",
  nestingSyntax: "js",
  // objects are encoded using dot notation
  valueDeserializer(e) {
    if (e.startsWith("!")) {
      if (e === "!undefined")
        return;
      if (e === "!null")
        return null;
      if (e === "!true")
        return true;
      if (e === "!false")
        return false;
      if (e.startsWith("!date(") && e.endsWith(")"))
        return new Date(e.replaceAll(" ", "+").slice(6, -1));
      if (e.startsWith("!hex(") && e.endsWith(")"))
        return `#${e.slice(5, -1)}`;
      let t = e.slice(1).match(QU);
      if (t)
        return e.startsWith("!rgba") || e.startsWith("!RGBA") ? `${t[1]}(${t[2]}, ${t[3]}, ${t[4]}, ${t[5]})` : e.startsWith("!hsla") || e.startsWith(
          "!HSLA"
        ) ? `${t[1]}(${t[2]}, ${t[3]}%, ${t[4]}%, ${t[5]})` : e.startsWith("!rgb") || e.startsWith("!RGB") ? `${t[1]}(${t[2]}, ${t[3]}, ${t[4]})` : `${t[1]}(${t[2]}, ${t[3]}%, ${t[4]}%)`;
    }
    return JU.test(e) ? Number(e) : e;
  }
}, YR = /* @__PURE__ */ o((e) => {
  let t = e.split(";").map((r7) => r7.replace("=", "~").replace(":", "="));
  return Object.entries((0, XU.parse)(t.join(";"), Ixe)).reduce((r7, [n, i]) => WR(n, i) ? Object.assign(r7, { [n]: i }) : (be.warn(Q`
      Omitted potentially unsafe URL args.

      More info: https://storybook.js.org/docs/writing-stories/args#setting-args-through-the-url?ref=error
    `), r7), {});
}, "parseArgsParam");
var { history: ZU, document: mn$1 } = k;
function Mxe(e) {
  let t = (e || "").match(/^\/story\/(.+)/);
  if (!t)
    throw new Error(`Invalid path '${e}',  must start with '/story/'`);
  return t[1];
}
o(Mxe, "pathToId");
var e5 = /* @__PURE__ */ o(({
  selection: e,
  extraParams: t
}) => {
  let r7 = mn$1?.location.search.slice(1), { path: n, selectedKind: i, selectedStory: s, ...a } = (0, Aa.parse)(r7);
  return `?${(0, Aa.stringify)({
    ...a,
    ...t,
    ...e && { id: e.storyId, viewMode: e.viewMode }
  })}`;
}, "getQueryString"), Nxe = /* @__PURE__ */ o((e) => {
  if (!e)
    return;
  let t = e5({ selection: e }), { hash: r7 = "" } = mn$1.location;
  mn$1.title = e.storyId, ZU.replaceState({}, "", `${mn$1.location.pathname}${t}${r7}`);
}, "setPath"), jxe = /* @__PURE__ */ o((e) => e != null && typeof e == "object" && Array.isArray(e) === false, "isObject"), Pa = /* @__PURE__ */ o(
  (e) => {
    if (e !== void 0) {
      if (typeof e == "string")
        return e;
      if (Array.isArray(e))
        return Pa(e[0]);
      if (jxe(e))
        return Pa(
          Object.values(e).filter(Boolean)
        );
    }
  },
  "getFirstString"
), kxe = /* @__PURE__ */ o(() => {
  if (typeof mn$1 < "u") {
    let e = mn$1.location.search.slice(1), t = (0, Aa.parse)(e), r7 = typeof t.args == "string" ? YR(t.args) : void 0, n = typeof t.globals == "string" ? YR(t.globals) : void 0, i = Pa(t.viewMode);
    (typeof i != "string" || !i.match(/docs|story/)) && (i = "story");
    let s = Pa(t.path), a = s ? Mxe(s) : Pa(t.id);
    if (a)
      return { storySpecifier: a, args: r7, globals: n, viewMode: i };
  }
  return null;
}, "getSelectionSpecifierFromPath"), KR = class KR2 {
  constructor() {
    this.selectionSpecifier = kxe();
  }
  setSelection(t) {
    this.selection = t, Nxe(this.selection);
  }
  setQueryParams(t) {
    let r7 = e5({ extraParams: t }), { hash: n = "" } = mn$1.location;
    ZU.replaceState({}, "", `${mn$1.location.pathname}${r7}${n}`);
  }
};
o(KR, "UrlStore");
var ro = KR;
var I5 = Ne(A5(), 1), M5 = Ne(qy(), 1);
var { document: ot$1 } = k, O5 = 100, N5 = /* @__PURE__ */ ((s) => (s.MAIN = "MAIN", s.NOPREVIEW = "NOPREVIEW", s.PREPARING_STORY = "PREPARING_STORY", s.PREPARING_DOCS = "PREPARING_DOCS", s.ERROR = "ERROR", s))(N5 || {}), rS = {
  PREPARING_STORY: "sb-show-preparing-story",
  PREPARING_DOCS: "sb-show-preparing-docs",
  MAIN: "sb-show-main",
  NOPREVIEW: "sb-show-nopreview",
  ERROR: "sb-show-errordisplay"
}, nS = {
  centered: "sb-main-centered",
  fullscreen: "sb-main-fullscreen",
  padded: "sb-main-padded"
}, q5 = new I5.default({
  escapeXML: true
}), oS = class oS2 {
  constructor() {
    this.testing = false;
    if (typeof ot$1 < "u") {
      let { __SPECIAL_TEST_PARAMETER__: t } = (0, M5.parse)(ot$1.location.search.slice(1));
      switch (t) {
        case "preparing-story": {
          this.showPreparingStory(), this.testing = true;
          break;
        }
        case "preparing-docs": {
          this.showPreparingDocs(), this.testing = true;
          break;
        }
      }
    }
  }
  // Get ready to render a story, returning the element to render to
  prepareForStory(t) {
    return this.showStory(), this.applyLayout(t.parameters.layout), ot$1.documentElement.scrollTop = 0, ot$1.documentElement.scrollLeft = 0, this.storyRoot();
  }
  storyRoot() {
    return ot$1.getElementById("storybook-root");
  }
  prepareForDocs() {
    return this.showMain(), this.showDocs(), this.applyLayout("fullscreen"), ot$1.documentElement.scrollTop = 0, ot$1.documentElement.scrollLeft = 0, this.docsRoot();
  }
  docsRoot() {
    return ot$1.getElementById("storybook-docs");
  }
  applyLayout(t = "padded") {
    if (t === "none") {
      ot$1.body.classList.remove(this.currentLayoutClass), this.currentLayoutClass = null;
      return;
    }
    this.checkIfLayoutExists(t);
    let r7 = nS[t];
    ot$1.body.classList.remove(this.currentLayoutClass), ot$1.body.classList.add(r7), this.currentLayoutClass = r7;
  }
  checkIfLayoutExists(t) {
    nS[t] || se.warn(
      Q`
          The desired layout: ${t} is not a valid option.
          The possible options are: ${Object.keys(nS).join(", ")}, none.
        `
    );
  }
  showMode(t) {
    clearTimeout(this.preparingTimeout), Object.keys(N5).forEach((r7) => {
      r7 === t ? ot$1.body.classList.add(rS[r7]) : ot$1.body.classList.remove(rS[r7]);
    });
  }
  showErrorDisplay({ message: t = "", stack: r7 = "" }) {
    let n = t, i = r7, s = t.split(`
`);
    s.length > 1 && ([n] = s, i = s.slice(1).join(`
`).replace(/^\n/, "")), ot$1.getElementById("error-message").innerHTML = q5.toHtml(n), ot$1.getElementById("error-stack").innerHTML = q5.toHtml(
      i
    ), this.showMode("ERROR");
  }
  showNoPreview() {
    this.testing || (this.showMode("NOPREVIEW"), this.storyRoot()?.setAttribute("hidden", "true"), this.docsRoot()?.setAttribute("hidden", "true"));
  }
  showPreparingStory({ immediate: t = false } = {}) {
    clearTimeout(this.preparingTimeout), t ? this.showMode("PREPARING_STORY") : this.preparingTimeout = setTimeout(
      () => this.showMode("PREPARING_STORY"),
      O5
    );
  }
  showPreparingDocs({ immediate: t = false } = {}) {
    clearTimeout(this.preparingTimeout), t ? this.showMode("PREPARING_DOCS") : this.preparingTimeout = setTimeout(() => this.showMode("PREPARING_DOCS"), O5);
  }
  showMain() {
    this.showMode("MAIN");
  }
  showDocs() {
    this.storyRoot().setAttribute("hidden", "true"), this.docsRoot().removeAttribute("hidden");
  }
  showStory() {
    this.docsRoot().setAttribute("hidden", "true"), this.storyRoot().removeAttribute("hidden");
  }
  showStoryDuringRender() {
    ot$1.body.classList.add(rS.MAIN);
  }
};
o(oS, "WebView");
var oo = oS;
var iS = class iS2 extends Zn {
  constructor(r7, n) {
    super(r7, n, new ro(), new oo());
    this.importFn = r7;
    this.getProjectAnnotations = n;
    k.__STORYBOOK_PREVIEW__ = this;
  }
};
o(iS, "PreviewWeb");
var qa = iS;
var { document: io } = k, bwe = [
  "application/javascript",
  "application/ecmascript",
  "application/x-ecmascript",
  "application/x-javascript",
  "text/ecmascript",
  "text/javascript",
  "text/javascript1.0",
  "text/javascript1.1",
  "text/javascript1.2",
  "text/javascript1.3",
  "text/javascript1.4",
  "text/javascript1.5",
  "text/jscript",
  "text/livescript",
  "text/x-ecmascript",
  "text/x-javascript",
  // Support modern javascript
  "module"
], gwe = "script", j5 = "scripts-root";
function Ia() {
  let e = io.createEvent("Event");
  e.initEvent("DOMContentLoaded", true, true), io.dispatchEvent(e);
}
o(Ia, "simulateDOMContentLoaded");
function vwe(e, t, r7) {
  let n = io.createElement("script");
  n.type = e.type === "module" ? "module" : "text/javascript", e.src ? (n.onload = t, n.onerror = t, n.src = e.src) : n.textContent = e.innerText, r7 ? r7.appendChild(n) : io.head.appendChild(n), e.parentNode.removeChild(e), e.src || t();
}
o(vwe, "insertScript");
function k5(e, t, r7 = 0) {
  e[r7](() => {
    r7++, r7 === e.length ? t() : k5(e, t, r7);
  });
}
o(k5, "insertScriptsSequentially");
function sS(e) {
  let t = io.getElementById(j5);
  t ? t.innerHTML = "" : (t = io.createElement("div"), t.id = j5, io.body.appendChild(t));
  let r7 = Array.from(e.querySelectorAll(gwe));
  if (r7.length) {
    let n = [];
    r7.forEach((i) => {
      let s = i.getAttribute("type");
      (!s || bwe.includes(s)) && n.push((a) => vwe(i, a, t));
    }), n.length && k5(n, Ia, void 0);
  } else
    Ia();
}
o(sS, "simulatePageLoad");
var L5 = "storybook/docs";
var F5 = `${L5}/snippet-rendered`;
async function aS(e, t) {
  let r7 = t.parameters?.docs?.source?.transform, { id: n, unmappedArgs: i } = t, s = r7 && e ? r7?.(e, t) : e, a = s ? await s : void 0;
  He.getChannel().emit(F5, {
    id: n,
    source: a,
    args: i
  });
}
o(aS, "emitTransformCode");
var so = {
  depth: 10,
  clearOnStoryChange: true,
  limit: 50
}, Ewe = /* @__PURE__ */ o((e = {}) => {
  Object.assign(so, e);
}, "configureActions");
var D5 = /* @__PURE__ */ o((e, t) => {
  let r7 = Object.getPrototypeOf(e);
  return !r7 || t(r7) ? r7 : D5(r7, t);
}, "findProto"), xwe = /* @__PURE__ */ o((e) => !!(typeof e == "object" && e && D5(e, (t) => /^Synthetic(?:Base)?Event$/.test(t.constructor.name)) && typeof e.persist == "function"), "isReactSyntheticEvent"), wwe = /* @__PURE__ */ o((e) => {
  if (xwe(e)) {
    let t = Object.create(
      e.constructor.prototype,
      Object.getOwnPropertyDescriptors(e)
    );
    t.persist();
    let r7 = Object.getOwnPropertyDescriptor(t, "view"), n = r7?.value;
    return typeof n == "object" && n?.constructor.name === "Window" && Object.defineProperty(t, "view", {
      ...r7,
      value: Object.create(n.constructor.prototype)
    }), t;
  }
  return e;
}, "serializeArg");
function Ir(e, t = {}) {
  let r7 = {
    ...so,
    ...t
  }, n = /* @__PURE__ */ o(function(...s) {
    if (t.implicit) {
      let m = ("__STORYBOOK_PREVIEW__" in k ? k.__STORYBOOK_PREVIEW__ : void 0)?.storyRenders.find(
        (h5) => h5.phase === "playing" || h5.phase === "rendering"
      );
      if (m) {
        let h5 = !globalThis?.FEATURES?.disallowImplicitActionsInRenderV8, b = new Ni({
          phase: m.phase,
          name: e,
          deprecated: h5
        });
        if (h5)
          console.warn(b);
        else
          throw b;
      }
    }
    let a = He.getChannel(), l = Date.now().toString(36) + Math.random().toString(36).substring(2), u = 5, c = s.map(wwe), d = s.length > 1 ? c : c[0], p5 = {
      id: l,
      count: 0,
      data: { name: e, args: d },
      options: {
        ...r7,
        maxDepth: u + (r7.depth || 3)
      }
    };
    a.emit(sg, p5);
  }, "actionHandler");
  return n.isAction = true, n.implicit = t.implicit, n;
}
o(Ir, "action");
var Twe = /* @__PURE__ */ o((...e) => {
  let t = so, r7 = e;
  r7.length === 1 && Array.isArray(r7[0]) && ([r7] = r7), r7.length !== 1 && typeof r7[r7.length - 1] != "string" && (t = {
    ...so,
    ...r7.pop()
  });
  let n = r7[0];
  (r7.length !== 1 || typeof n == "string") && (n = {}, r7.forEach((s) => {
    n[s] = s;
  }));
  let i = {};
  return Object.keys(n).forEach((s) => {
    i[s] = Ir(n[s], t);
  }), i;
}, "actions");
var $5 = {
  "@storybook/global": lb,
  "storybook/test": VT,
  "storybook/actions": lS,
  "storybook/preview-api": Dy,
  "storybook/internal/channels": qb,
  "storybook/internal/client-logger": fb,
  "storybook/internal/core-events": co,
  "storybook/internal/types": ig,
  "storybook/internal/preview-errors": Fb,
  "storybook/internal/preview-api": Dy
};
async function B5() {
  let e = new URL(window.location.href);
  if (e.searchParams.get("navigator") !== "true" || globalThis.__STORYBOOK_PREVIEW_NAVIGATOR__)
    return;
  globalThis.__STORYBOOK_PREVIEW_NAVIGATOR__ = true;
  let t = await (await fetch("/index.json")).json(), r7 = e.searchParams.get("id");
  if (!r7) {
    let n = Object.values(t.entries)[0];
    n && (e.searchParams.set("id", n.id), e.searchParams.set("viewMode", n.type), window.location.href = e.toString());
    return;
  }
  Rwe(t, r7);
}
o(B5, "maybeSetupPreviewNavigator");
var Rwe = /* @__PURE__ */ o(async (e, t) => {
  let r7 = { entries: {} };
  for (let l of Object.values(e.entries)) {
    let u = l.title.split("/"), c = r7;
    for (let d of u)
      c.entries || (c.entries = {}), c.entries[d] ? t === l.id && (c.entries[d].isActive = true) : c.entries[d] = {
        title: d,
        isActive: t === l.id,
        entries: {}
      }, c = c.entries[d];
    c.entries || (c.entries = {}), c.entries[l.name] = {
      id: l.id,
      name: l.name,
      href: `?id=${l.id}&viewMode=${l.type}&navigator=true`,
      isActive: t === l.id
    };
  }
  let n = /* @__PURE__ */ o((l) => {
    if ("entries" in l && "title" in l) {
      let c = l;
      return `
      <li class="sb-navigator-branch">
        <details${c.isActive ? " open" : ""}>
          <summary class="sb-navigator-title">
            ${c.title}
          </summary>
          <ul class="sb-navigator-entries" aria-label="${c.title}">
            ${Object.values(c.entries).map(n).join("")}
          </ul>
        </details>
      </li>
      `;
    }
    let u = l;
    return `
      <li class="sb-navigator-story-item">
        <a href="${u.href}" 
           class="sb-navigator-story-link${u.isActive ? " active" : ""}" 
           aria-current="${u.isActive ? "location" : "false"}">${u.name}</a>
      </li>
    `;
  }, "createHtmlForNode"), i = Object.values(r7.entries).map(n).join(""), s = document.createElement("nav");
  s.id = "sb-navigator-container", s.setAttribute("role", "navigation"), s.setAttribute("aria-label", "Story navigation"), s.innerHTML = `
    <ul class="sb-navigator-list">${i}</ul>
  `, document.body.insertBefore(s, document.body.firstChild);
  let a = document.createElement("style");
  a.id = "sb-navigator-style", a.textContent = `
    body {
      display: grid !important;
      grid-template-columns: 300px 1fr;
      font-family: 'Nunito', sans-serif;
      height: 100vh;
      margin: 0;

      --text-color: rgb(46, 52, 56);
      --bg-color: rgb(246, 249, 252);

      @media (prefers-color-scheme: dark) {
        --text-color: rgb(201, 205, 207);
        --bg-color: rgb(34, 36, 37);
      }
    }
    #storybook-root, #storybook-docs {
      overflow-y: auto;
      max-height: 100vh;
      max-width: 100%;
    }
    #sb-navigator-container, #sb-navigator-container * {
      box-sizing: border-box;
    }
    #sb-navigator-container {
        height: 100vh;
        overflow-y: auto;
        border-right: 1px solid #eee;
        padding: 1rem;
        font-size: 14px;
        color: var(--text-color);
        background-color: var(--bg-color);
        align-self: start;
        z-index: 1000;
    }
    .sb-main-padded #sb-navigator-container {
      margin: -1rem 1rem -1rem -1rem;
    }
    .sb-navigator-list {
      list-style-type: none;
      padding: 0;
      margin: 0;
    }
    .sb-navigator-branch {
      list-style-type: none;
    }
    .sb-navigator-item {
      margin-bottom: 15px;
    }
    .sb-navigator-title {
      color: var(--text-color);
      text-decoration: none;
      padding-block: 5px;
      cursor: pointer;
    }
    .sb-navigator-entries {
      padding-left: 15px;
    }
    .sb-navigator-story-item {
      margin-bottom: 8px;
      margin-left: 8px;
    }
    .sb-navigator-story-link {
      color: var(--text-color);
    }
    .sb-navigator-story-link.active {
      font-weight: bold;
      color: rgb(2, 156, 253);
    }
  `, document.head.appendChild(a), s.querySelector(".sb-navigator-story-link.active")?.closest("details")?.scrollIntoView({ block: "center" });
}, "setupPreviewNavigator");
var U5 = Ne(H5(), 1);
var dS;
function Swe() {
  return dS || (dS = new U5.default(k.navigator?.userAgent).getBrowserInfo()), dS;
}
o(Swe, "getBrowserInfo");
function V5(e) {
  return e.browserInfo = Swe(), e;
}
o(V5, "prepareForTelemetry");
function _we(e) {
  let t = e.error || e;
  t.fromStorybook && k.sendTelemetryError(t);
}
o(_we, "errorListener");
function Cwe({ reason: e }) {
  e.fromStorybook && k.sendTelemetryError(e);
}
o(Cwe, "unhandledRejectionListener");
function Pwe() {
  fS.forEach((e) => {
    k[ub[e]] = $5[e];
  }), k.sendTelemetryError = (e) => {
    k.__STORYBOOK_ADDONS_CHANNEL__.emit(sb, V5(e));
  }, k.addEventListener("error", _we), k.addEventListener("unhandledrejection", Cwe), B5();
}
o(Pwe, "setup");
Pwe();
const { createBrowserChannel } = __STORYBOOK_MODULE_CHANNELS__;
const { addons: addons$1 } = __STORYBOOK_MODULE_PREVIEW_API__;
const channel$1 = createBrowserChannel({ page: "preview" });
addons$1.setChannel(channel$1);
window.__STORYBOOK_ADDONS_CHANNEL__ = channel$1;
if (window.CONFIG_TYPE === "DEVELOPMENT") {
  window.__STORYBOOK_SERVER_CHANNEL__ = channel$1;
}
const importers = {
  "./src/components/Card.stories.ts": () => __vitePreload(() => import("./Card.stories-PDtVTW-R.js"), true ? __vite__mapDeps([0,1,2,3,4]) : void 0, import.meta.url),
  "./src/stories/Accordeon.stories.ts": () => __vitePreload(() => import("./Accordeon.stories-CjofNCOf.js"), true ? __vite__mapDeps([5,1,2,3,4]) : void 0, import.meta.url),
  "./src/stories/Button.stories.ts": () => __vitePreload(() => import("./Button.stories-C6LuqlGn.js"), true ? __vite__mapDeps([6,7,8,4]) : void 0, import.meta.url),
  "./src/stories/Configure.mdx": () => __vitePreload(() => import("./Configure-DauOSE2U.js"), true ? __vite__mapDeps([9,10,4,2,3,11]) : void 0, import.meta.url),
  "./src/stories/Header.stories.ts": () => __vitePreload(() => import("./Header.stories-CMdiCwyO.js"), true ? __vite__mapDeps([12,13,7,8,14,4]) : void 0, import.meta.url),
  "./src/stories/Page.stories.ts": () => __vitePreload(() => import("./Page.stories-DsMRUBgl.js"), true ? __vite__mapDeps([15,13,7,8,14,4,16]) : void 0, import.meta.url)
};
async function importFn(path) {
  return await importers[path]();
}
var __defProp2 = Object.defineProperty;
var __export = (target, all) => {
  for (var name in all) __defProp2(target, name, { get: all[name], enumerable: true });
};
var dr = Object.create;
var Ie = Object.defineProperty;
var Tr = Object.getOwnPropertyDescriptor;
var gr = Object.getOwnPropertyNames;
var xr = Object.getPrototypeOf, hr = Object.prototype.hasOwnProperty;
var r = (n, s) => Ie(n, "name", { value: s, configurable: true });
var Jr = (n, s) => () => (s || n((s = { exports: {} }).exports, s), s.exports);
var wr = (n, s, a, p5) => {
  if (s && typeof s == "object" || typeof s == "function")
    for (let c of gr(s))
      !hr.call(n, c) && c !== a && Ie(n, c, { get: () => s[c], enumerable: !(p5 = Tr(s, c)) || p5.enumerable });
  return n;
};
var Pr = (n, s, a) => (a = n != null ? dr(xr(n)) : {}, wr(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  Ie(a, "default", { value: n, enumerable: true }),
  n
));
var dt = Jr((fe2, yt) => {
  (function(n, s) {
    typeof fe2 == "object" && typeof yt < "u" ? s(fe2) : typeof define == "function" && define.amd ? define(["exports"], s) : (n = typeof globalThis < "u" ? globalThis : n || self, s(n.jtpp = {}));
  })(fe2, function(n) {
    function s(e) {
      return e.text !== void 0 && e.text !== "" ? `'${e.type}' with value '${e.text}'` : `'${e.type}'`;
    }
    r(s, "tokenToString");
    let ne = class ne2 extends Error {
      constructor(t) {
        super(`No parslet found for token: ${s(t)}`), this.token = t, Object.setPrototypeOf(this, ne2.prototype);
      }
      getToken() {
        return this.token;
      }
    };
    r(ne, "NoParsletFoundError");
    let a = ne, oe = class oe2 extends Error {
      constructor(t) {
        super(`The parsing ended early. The next token was: ${s(t)}`), this.token = t, Object.setPrototypeOf(this, oe2.prototype);
      }
      getToken() {
        return this.token;
      }
    };
    r(oe, "EarlyEndOfParseError");
    let p5 = oe, se2 = class se3 extends Error {
      constructor(t, o7) {
        let i = `Unexpected type: '${t.type}'.`;
        o7 !== void 0 && (i += ` Message: ${o7}`), super(i), Object.setPrototypeOf(this, se3.prototype);
      }
    };
    r(se2, "UnexpectedTypeError");
    let c = se2;
    function u(e) {
      return (t) => t.startsWith(e) ? { type: e, text: e } : null;
    }
    r(u, "makePunctuationRule");
    function m(e) {
      let t = 0, o7, i = e[0], l = false;
      if (i !== "'" && i !== '"')
        return null;
      for (; t < e.length; ) {
        if (t++, o7 = e[t], !l && o7 === i) {
          t++;
          break;
        }
        l = !l && o7 === "\\";
      }
      if (o7 !== i)
        throw new Error("Unterminated String");
      return e.slice(0, t);
    }
    r(m, "getQuoted");
    let T5 = new RegExp("[$_\\p{ID_Start}]|\\\\u\\p{Hex_Digit}{4}|\\\\u\\{0*(?:\\p{Hex_Digit}{1,5}|10\\p{Hex_Digit}{4})\\}", "u"), g = new RegExp(
      "[$\\-\\p{ID_Continue}\\u200C\\u200D]|\\\\u\\p{Hex_Digit}{4}|\\\\u\\{0*(?:\\p{Hex_Digit}{1,5}|10\\p{Hex_Digit}{4})\\}",
      "u"
    );
    function P(e) {
      let t = e[0];
      if (!T5.test(t))
        return null;
      let o7 = 1;
      do {
        if (t = e[o7], !g.test(t))
          break;
        o7++;
      } while (o7 < e.length);
      return e.slice(0, o7);
    }
    r(P, "getIdentifier");
    let b = /^(NaN|-?((\d*\.\d+|\d+)([Ee][+-]?\d+)?|Infinity))/;
    function de2(e) {
      var t, o7;
      return (o7 = (t = b.exec(e)) === null || t === void 0 ? void 0 : t[0]) !== null && o7 !== void 0 ? o7 : null;
    }
    r(de2, "getNumber");
    let q = /* @__PURE__ */ r((e) => {
      let t = P(e);
      return t == null ? null : {
        type: "Identifier",
        text: t
      };
    }, "identifierRule");
    function S(e) {
      return (t) => {
        if (!t.startsWith(e))
          return null;
        let o7 = t[e.length];
        return o7 !== void 0 && g.test(o7) ? null : {
          type: e,
          text: e
        };
      };
    }
    r(S, "makeKeyWordRule");
    let z = /* @__PURE__ */ r((e) => {
      let t = m(e);
      return t == null ? null : {
        type: "StringValue",
        text: t
      };
    }, "stringValueRule"), Te2 = /* @__PURE__ */ r((e) => e.length > 0 ? null : {
      type: "EOF",
      text: ""
    }, "eofRule"), ge = /* @__PURE__ */ r((e) => {
      let t = de2(e);
      return t === null ? null : {
        type: "Number",
        text: t
      };
    }, "numberRule"), Rt2 = [
      Te2,
      u("=>"),
      u("("),
      u(")"),
      u("{"),
      u("}"),
      u("["),
      u("]"),
      u("|"),
      u("&"),
      u("<"),
      u(">"),
      u(","),
      u(";"),
      u("*"),
      u("?"),
      u("!"),
      u("="),
      u(":"),
      u("..."),
      u("."),
      u("#"),
      u("~"),
      u("/"),
      u("@"),
      S("undefined"),
      S("null"),
      S("function"),
      S("this"),
      S("new"),
      S("module"),
      S("event"),
      S("external"),
      S("typeof"),
      S("keyof"),
      S("readonly"),
      S("import"),
      S("is"),
      S("in"),
      S("asserts"),
      ge,
      q,
      z
    ], jt2 = /^\s*\n\s*/, U = class U7 {
      static create(t) {
        let o7 = this.read(t);
        t = o7.text;
        let i = this.read(t);
        return t = i.text, new U7(t, void 0, o7.token, i.token);
      }
      constructor(t, o7, i, l) {
        this.text = "", this.text = t, this.previous = o7, this.current = i, this.next = l;
      }
      static read(t, o7 = false) {
        o7 = o7 || jt2.test(t), t = t.trim();
        for (let i of Rt2) {
          let l = i(t);
          if (l !== null) {
            let f = Object.assign(Object.assign({}, l), { startOfLine: o7 });
            return t = t.slice(f.text.length), { text: t, token: f };
          }
        }
        throw new Error("Unexpected Token " + t);
      }
      advance() {
        let t = U7.read(this.text);
        return new U7(t.text, this.current, this.next, t.token);
      }
    };
    r(U, "Lexer");
    let xe = U;
    function J7(e) {
      if (e === void 0)
        throw new Error("Unexpected undefined");
      if (e.type === "JsdocTypeKeyValue" || e.type === "JsdocTypeParameterList" || e.type === "JsdocTypeProperty" || e.type === "JsdocTypeReadonlyProperty" || e.type === "JsdocTypeObjectField" || e.type === "JsdocTypeJsdocObjectField" || e.type === "JsdocTypeIndexSignature" || e.type === "JsdocTypeMappedType")
        throw new c(e);
      return e;
    }
    r(J7, "assertRootResult");
    function he2(e) {
      return e.type === "JsdocTypeKeyValue" ? H(e) : J7(e);
    }
    r(he2, "assertPlainKeyValueOrRootResult");
    function Ft2(e) {
      return e.type === "JsdocTypeName" ? e : H(e);
    }
    r(Ft2, "assertPlainKeyValueOrNameResult");
    function H(e) {
      if (e.type !== "JsdocTypeKeyValue")
        throw new c(e);
      return e;
    }
    r(H, "assertPlainKeyValueResult");
    function _t2(e) {
      var t;
      if (e.type === "JsdocTypeVariadic") {
        if (((t = e.element) === null || t === void 0 ? void 0 : t.type) === "JsdocTypeName")
          return e;
        throw new c(e);
      }
      if (e.type !== "JsdocTypeNumber" && e.type !== "JsdocTypeName")
        throw new c(e);
      return e;
    }
    r(_t2, "assertNumberOrVariadicNameResult");
    function Je2(e) {
      return e.type === "JsdocTypeIndexSignature" || e.type === "JsdocTypeMappedType";
    }
    r(Je2, "isSquaredProperty");
    var y5;
    (function(e) {
      e[e.ALL = 0] = "ALL", e[e.PARAMETER_LIST = 1] = "PARAMETER_LIST", e[e.OBJECT = 2] = "OBJECT", e[e.KEY_VALUE = 3] = "KEY_VALUE", e[e.INDEX_BRACKETS = 4] = "INDEX_BRACKETS", e[e.UNION = 5] = "UNION", e[e.INTERSECTION = 6] = "INTERSECTION", e[e.PREFIX = 7] = "PREFIX", e[e.INFIX = 8] = "INFIX", e[e.TUPLE = 9] = "TUPLE", e[e.SYMBOL = 10] = "SYMBOL", e[e.OPTIONAL = 11] = "OPTIONAL", e[e.NULLABLE = 12] = "NULLABLE", e[e.KEY_OF_TYPE_OF = 13] = "KEY_OF_TYPE_OF", e[e.FUNCTION = 14] = "FUNCTION", e[e.ARROW = 15] = "ARROW", e[e.ARRAY_BRACKETS = 16] = "ARRAY_BRACKETS", e[e.GENERIC = 17] = "GENERIC", e[e.NAME_PATH = 18] = "NAME_PATH", e[e.PARENTHESIS = 19] = "PARENTHESIS", e[e.SPECIAL_TYPES = 20] = "SPECIAL_TYPES";
    })(y5 || (y5 = {}));
    let Ae2 = class Ae {
      constructor(t, o7, i) {
        this.grammar = t, typeof o7 == "string" ? this._lexer = xe.create(o7) : this._lexer = o7, this.baseParser = i;
      }
      get lexer() {
        return this._lexer;
      }
      /**
       * Parses a given string and throws an error if the parse ended before the end of the string.
       */
      parse() {
        let t = this.parseType(y5.ALL);
        if (this.lexer.current.type !== "EOF")
          throw new p5(this.lexer.current);
        return t;
      }
      /**
       * Parses with the current lexer and asserts that the result is a {@link RootResult}.
       */
      parseType(t) {
        return J7(this.parseIntermediateType(t));
      }
      /**
       * The main parsing function. First it tries to parse the current state in the prefix step, and then it continues
       * to parse the state in the infix step.
       */
      parseIntermediateType(t) {
        let o7 = this.tryParslets(null, t);
        if (o7 === null)
          throw new a(this.lexer.current);
        return this.parseInfixIntermediateType(o7, t);
      }
      /**
       * In the infix parsing step the parser continues to parse the current state with all parslets until none returns
       * a result.
       */
      parseInfixIntermediateType(t, o7) {
        let i = this.tryParslets(t, o7);
        for (; i !== null; )
          t = i, i = this.tryParslets(t, o7);
        return t;
      }
      /**
       * Tries to parse the current state with all parslets in the grammar and returns the first non null result.
       */
      tryParslets(t, o7) {
        for (let i of this.grammar) {
          let l = i(this, o7, t);
          if (l !== null)
            return l;
        }
        return null;
      }
      /**
       * If the given type equals the current type of the {@link Lexer} advance the lexer. Return true if the lexer was
       * advanced.
       */
      consume(t) {
        return Array.isArray(t) || (t = [t]), t.includes(this.lexer.current.type) ? (this._lexer = this.lexer.advance(), true) : false;
      }
      acceptLexerState(t) {
        this._lexer = t.lexer;
      }
    };
    r(Ae2, "Parser");
    let I7 = Ae2;
    function Ye2(e) {
      return e === "EOF" || e === "|" || e === "," || e === ")" || e === ">";
    }
    r(Ye2, "isQuestionMarkUnknownType");
    let we = /* @__PURE__ */ r((e, t, o7) => {
      let i = e.lexer.current.type, l = e.lexer.next.type;
      return o7 == null && i === "?" && !Ye2(l) || o7 != null && i === "?" ? (e.consume("?"), o7 == null ? {
        type: "JsdocTypeNullable",
        element: e.parseType(y5.NULLABLE),
        meta: {
          position: "prefix"
        }
      } : {
        type: "JsdocTypeNullable",
        element: J7(o7),
        meta: {
          position: "suffix"
        }
      }) : null;
    }, "nullableParslet");
    function x5(e) {
      let t = /* @__PURE__ */ r((o7, i, l) => {
        let f = o7.lexer.current.type, d = o7.lexer.next.type;
        if (l === null) {
          if ("parsePrefix" in e && e.accept(f, d))
            return e.parsePrefix(o7);
        } else if ("parseInfix" in e && e.precedence > i && e.accept(f, d))
          return e.parseInfix(o7, l);
        return null;
      }, "parslet");
      return Object.defineProperty(t, "name", {
        value: e.name
      }), t;
    }
    r(x5, "composeParslet");
    let Q7 = x5({
      name: "optionalParslet",
      accept: /* @__PURE__ */ r((e) => e === "=", "accept"),
      precedence: y5.OPTIONAL,
      parsePrefix: /* @__PURE__ */ r((e) => (e.consume("="), {
        type: "JsdocTypeOptional",
        element: e.parseType(y5.OPTIONAL),
        meta: {
          position: "prefix"
        }
      }), "parsePrefix"),
      parseInfix: /* @__PURE__ */ r((e, t) => (e.consume("="), {
        type: "JsdocTypeOptional",
        element: J7(t),
        meta: {
          position: "suffix"
        }
      }), "parseInfix")
    }), Z = x5({
      name: "numberParslet",
      accept: /* @__PURE__ */ r((e) => e === "Number", "accept"),
      parsePrefix: /* @__PURE__ */ r((e) => {
        let t = parseFloat(e.lexer.current.text);
        return e.consume("Number"), {
          type: "JsdocTypeNumber",
          value: t
        };
      }, "parsePrefix")
    }), Vt = x5({
      name: "parenthesisParslet",
      accept: /* @__PURE__ */ r((e) => e === "(", "accept"),
      parsePrefix: /* @__PURE__ */ r((e) => {
        if (e.consume("("), e.consume(")"))
          return {
            type: "JsdocTypeParameterList",
            elements: []
          };
        let t = e.parseIntermediateType(y5.ALL);
        if (!e.consume(")"))
          throw new Error("Unterminated parenthesis");
        return t.type === "JsdocTypeParameterList" ? t : t.type === "JsdocTypeKeyValue" ? {
          type: "JsdocTypeParameterList",
          elements: [t]
        } : {
          type: "JsdocTypeParenthesis",
          element: J7(t)
        };
      }, "parsePrefix")
    }), Lt2 = x5({
      name: "specialTypesParslet",
      accept: /* @__PURE__ */ r((e, t) => e === "?" && Ye2(t) || e === "null" || e === "undefined" || e === "*", "accept"),
      parsePrefix: /* @__PURE__ */ r((e) => {
        if (e.consume("null"))
          return {
            type: "JsdocTypeNull"
          };
        if (e.consume("undefined"))
          return {
            type: "JsdocTypeUndefined"
          };
        if (e.consume("*"))
          return {
            type: "JsdocTypeAny"
          };
        if (e.consume("?"))
          return {
            type: "JsdocTypeUnknown"
          };
        throw new Error("Unacceptable token: " + e.lexer.current.text);
      }, "parsePrefix")
    }), Ut2 = x5({
      name: "notNullableParslet",
      accept: /* @__PURE__ */ r((e) => e === "!", "accept"),
      precedence: y5.NULLABLE,
      parsePrefix: /* @__PURE__ */ r((e) => (e.consume("!"), {
        type: "JsdocTypeNotNullable",
        element: e.parseType(y5.NULLABLE),
        meta: {
          position: "prefix"
        }
      }), "parsePrefix"),
      parseInfix: /* @__PURE__ */ r((e, t) => (e.consume("!"), {
        type: "JsdocTypeNotNullable",
        element: J7(t),
        meta: {
          position: "suffix"
        }
      }), "parseInfix")
    });
    function Bt2({ allowTrailingComma: e }) {
      return x5({
        name: "parameterListParslet",
        accept: /* @__PURE__ */ r((t) => t === ",", "accept"),
        precedence: y5.PARAMETER_LIST,
        parseInfix: /* @__PURE__ */ r((t, o7) => {
          let i = [
            he2(o7)
          ];
          t.consume(",");
          do
            try {
              let l = t.parseIntermediateType(y5.PARAMETER_LIST);
              i.push(he2(l));
            } catch (l) {
              if (e && l instanceof a)
                break;
              throw l;
            }
          while (t.consume(","));
          if (i.length > 0 && i.slice(0, -1).some((l) => l.type === "JsdocTypeVariadic"))
            throw new Error("Only the last parameter may be a rest parameter");
          return {
            type: "JsdocTypeParameterList",
            elements: i
          };
        }, "parseInfix")
      });
    }
    r(Bt2, "createParameterListParslet");
    let Ct2 = x5({
      name: "genericParslet",
      accept: /* @__PURE__ */ r((e, t) => e === "<" || e === "." && t === "<", "accept"),
      precedence: y5.GENERIC,
      parseInfix: /* @__PURE__ */ r((e, t) => {
        let o7 = e.consume(".");
        e.consume("<");
        let i = [];
        do
          i.push(e.parseType(y5.PARAMETER_LIST));
        while (e.consume(","));
        if (!e.consume(">"))
          throw new Error("Unterminated generic parameter list");
        return {
          type: "JsdocTypeGeneric",
          left: J7(t),
          elements: i,
          meta: {
            brackets: "angle",
            dot: o7
          }
        };
      }, "parseInfix")
    }), Mt = x5({
      name: "unionParslet",
      accept: /* @__PURE__ */ r((e) => e === "|", "accept"),
      precedence: y5.UNION,
      parseInfix: /* @__PURE__ */ r((e, t) => {
        e.consume("|");
        let o7 = [];
        do
          o7.push(e.parseType(y5.UNION));
        while (e.consume("|"));
        return {
          type: "JsdocTypeUnion",
          elements: [J7(t), ...o7]
        };
      }, "parseInfix")
    }), Pe2 = [
      we,
      Q7,
      Z,
      Vt,
      Lt2,
      Ut2,
      Bt2({
        allowTrailingComma: true
      }),
      Ct2,
      Mt,
      Q7
    ];
    function ee2({ allowSquareBracketsOnAnyType: e, allowJsdocNamePaths: t, pathGrammar: o7 }) {
      return /* @__PURE__ */ r(function(l, f, d) {
        if (d == null || f >= y5.NAME_PATH)
          return null;
        let h5 = l.lexer.current.type, D = l.lexer.next.type;
        if (!(h5 === "." && D !== "<" || h5 === "[" && (e || d.type === "JsdocTypeName") || t && (h5 === "~" || h5 === "#")))
          return null;
        let O, ae = false;
        l.consume(".") ? O = "property" : l.consume("[") ? (O = "property-brackets", ae = true) : l.consume("~") ? O = "inner" : (l.consume("#"), O = "instance");
        let rt2 = o7 !== null ? new I7(o7, l.lexer, l) : l, k7 = rt2.parseIntermediateType(y5.NAME_PATH);
        l.acceptLexerState(rt2);
        let G;
        switch (k7.type) {
          case "JsdocTypeName":
            G = {
              type: "JsdocTypeProperty",
              value: k7.value,
              meta: {
                quote: void 0
              }
            };
            break;
          case "JsdocTypeNumber":
            G = {
              type: "JsdocTypeProperty",
              value: k7.value.toString(10),
              meta: {
                quote: void 0
              }
            };
            break;
          case "JsdocTypeStringValue":
            G = {
              type: "JsdocTypeProperty",
              value: k7.value,
              meta: {
                quote: k7.meta.quote
              }
            };
            break;
          case "JsdocTypeSpecialNamePath":
            if (k7.specialType === "event")
              G = k7;
            else
              throw new c(k7, "Type 'JsdocTypeSpecialNamePath' is only allowed with specialType 'event'");
            break;
          default:
            throw new c(k7, "Expecting 'JsdocTypeName', 'JsdocTypeNumber', 'JsdocStringValue' or 'JsdocTypeSpecialNamePath'");
        }
        if (ae && !l.consume("]")) {
          let nt2 = l.lexer.current;
          throw new Error(`Unterminated square brackets. Next token is '${nt2.type}' with text '${nt2.text}'`);
        }
        return {
          type: "JsdocTypeNamePath",
          left: J7(d),
          right: G,
          pathType: O
        };
      }, "namePathParslet");
    }
    r(ee2, "createNamePathParslet");
    function R({ allowedAdditionalTokens: e }) {
      return x5({
        name: "nameParslet",
        accept: /* @__PURE__ */ r((t) => t === "Identifier" || t === "this" || t === "new" || e.includes(t), "accept"),
        parsePrefix: /* @__PURE__ */ r((t) => {
          let { type: o7, text: i } = t.lexer.current;
          return t.consume(o7), {
            type: "JsdocTypeName",
            value: i
          };
        }, "parsePrefix")
      });
    }
    r(R, "createNameParslet");
    let Y = x5({
      name: "stringValueParslet",
      accept: /* @__PURE__ */ r((e) => e === "StringValue", "accept"),
      parsePrefix: /* @__PURE__ */ r((e) => {
        let t = e.lexer.current.text;
        return e.consume("StringValue"), {
          type: "JsdocTypeStringValue",
          value: t.slice(1, -1),
          meta: {
            quote: t[0] === "'" ? "single" : "double"
          }
        };
      }, "parsePrefix")
    });
    function te2({ pathGrammar: e, allowedTypes: t }) {
      return x5({
        name: "specialNamePathParslet",
        accept: /* @__PURE__ */ r((o7) => t.includes(o7), "accept"),
        parsePrefix: /* @__PURE__ */ r((o7) => {
          let i = o7.lexer.current.type;
          if (o7.consume(i), !o7.consume(":"))
            return {
              type: "JsdocTypeName",
              value: i
            };
          let l, f = o7.lexer.current;
          if (o7.consume("StringValue"))
            l = {
              type: "JsdocTypeSpecialNamePath",
              value: f.text.slice(1, -1),
              specialType: i,
              meta: {
                quote: f.text[0] === "'" ? "single" : "double"
              }
            };
          else {
            let D = "", E = ["Identifier", "@", "/"];
            for (; E.some((O) => o7.consume(O)); )
              D += f.text, f = o7.lexer.current;
            l = {
              type: "JsdocTypeSpecialNamePath",
              value: D,
              specialType: i,
              meta: {
                quote: void 0
              }
            };
          }
          let d = new I7(e, o7.lexer, o7), h5 = d.parseInfixIntermediateType(l, y5.ALL);
          return o7.acceptLexerState(d), J7(h5);
        }, "parsePrefix")
      });
    }
    r(te2, "createSpecialNamePathParslet");
    let We2 = [
      R({
        allowedAdditionalTokens: ["external", "module"]
      }),
      Y,
      Z,
      ee2({
        allowSquareBracketsOnAnyType: false,
        allowJsdocNamePaths: true,
        pathGrammar: null
      })
    ], L = [
      ...We2,
      te2({
        allowedTypes: ["event"],
        pathGrammar: We2
      })
    ];
    function be2(e) {
      let t;
      if (e.type === "JsdocTypeParameterList")
        t = e.elements;
      else if (e.type === "JsdocTypeParenthesis")
        t = [e.element];
      else
        throw new c(e);
      return t.map((o7) => he2(o7));
    }
    r(be2, "getParameters");
    function Kt2(e) {
      let t = be2(e);
      if (t.some((o7) => o7.type === "JsdocTypeKeyValue"))
        throw new Error("No parameter should be named");
      return t;
    }
    r(Kt2, "getUnnamedParameters");
    function Se({ allowNamedParameters: e, allowNoReturnType: t, allowWithoutParenthesis: o7, allowNewAsFunctionKeyword: i }) {
      return x5({
        name: "functionParslet",
        accept: /* @__PURE__ */ r((l, f) => l === "function" || i && l === "new" && f === "(", "accept"),
        parsePrefix: /* @__PURE__ */ r((l) => {
          let f = l.consume("new");
          l.consume("function");
          let d = l.lexer.current.type === "(";
          if (!d) {
            if (!o7)
              throw new Error("function is missing parameter list");
            return {
              type: "JsdocTypeName",
              value: "function"
            };
          }
          let h5 = {
            type: "JsdocTypeFunction",
            parameters: [],
            arrow: false,
            constructor: f,
            parenthesis: d
          }, D = l.parseIntermediateType(y5.FUNCTION);
          if (e === void 0)
            h5.parameters = Kt2(D);
          else {
            if (f && D.type === "JsdocTypeFunction" && D.arrow)
              return h5 = D, h5.constructor = true, h5;
            h5.parameters = be2(D);
            for (let E of h5.parameters)
              if (E.type === "JsdocTypeKeyValue" && !e.includes(E.key))
                throw new Error(`only allowed named parameters are ${e.join(", ")} but got ${E.type}`);
          }
          if (l.consume(":"))
            h5.returnType = l.parseType(y5.PREFIX);
          else if (!t)
            throw new Error("function is missing return type");
          return h5;
        }, "parsePrefix")
      });
    }
    r(Se, "createFunctionParslet");
    function Ee2({ allowPostfix: e, allowEnclosingBrackets: t }) {
      return x5({
        name: "variadicParslet",
        accept: /* @__PURE__ */ r((o7) => o7 === "...", "accept"),
        precedence: y5.PREFIX,
        parsePrefix: /* @__PURE__ */ r((o7) => {
          o7.consume("...");
          let i = t && o7.consume("[");
          try {
            let l = o7.parseType(y5.PREFIX);
            if (i && !o7.consume("]"))
              throw new Error("Unterminated variadic type. Missing ']'");
            return {
              type: "JsdocTypeVariadic",
              element: J7(l),
              meta: {
                position: "prefix",
                squareBrackets: i
              }
            };
          } catch (l) {
            if (l instanceof a) {
              if (i)
                throw new Error("Empty square brackets for variadic are not allowed.");
              return {
                type: "JsdocTypeVariadic",
                meta: {
                  position: void 0,
                  squareBrackets: false
                }
              };
            } else
              throw l;
          }
        }, "parsePrefix"),
        parseInfix: e ? (o7, i) => (o7.consume("..."), {
          type: "JsdocTypeVariadic",
          element: J7(i),
          meta: {
            position: "suffix",
            squareBrackets: false
          }
        }) : void 0
      });
    }
    r(Ee2, "createVariadicParslet");
    let Ge2 = x5({
      name: "symbolParslet",
      accept: /* @__PURE__ */ r((e) => e === "(", "accept"),
      precedence: y5.SYMBOL,
      parseInfix: /* @__PURE__ */ r((e, t) => {
        if (t.type !== "JsdocTypeName")
          throw new Error("Symbol expects a name on the left side. (Reacting on '(')");
        e.consume("(");
        let o7 = {
          type: "JsdocTypeSymbol",
          value: t.value
        };
        if (!e.consume(")")) {
          let i = e.parseIntermediateType(y5.SYMBOL);
          if (o7.element = _t2(i), !e.consume(")"))
            throw new Error("Symbol does not end after value");
        }
        return o7;
      }, "parseInfix")
    }), Xe2 = x5({
      name: "arrayBracketsParslet",
      precedence: y5.ARRAY_BRACKETS,
      accept: /* @__PURE__ */ r((e, t) => e === "[" && t === "]", "accept"),
      parseInfix: /* @__PURE__ */ r((e, t) => (e.consume("["), e.consume("]"), {
        type: "JsdocTypeGeneric",
        left: {
          type: "JsdocTypeName",
          value: "Array"
        },
        elements: [
          J7(t)
        ],
        meta: {
          brackets: "square",
          dot: false
        }
      }), "parseInfix")
    });
    function Ne2({ objectFieldGrammar: e, allowKeyTypes: t }) {
      return x5({
        name: "objectParslet",
        accept: /* @__PURE__ */ r((o7) => o7 === "{", "accept"),
        parsePrefix: /* @__PURE__ */ r((o7) => {
          o7.consume("{");
          let i = {
            type: "JsdocTypeObject",
            meta: {
              separator: "comma"
            },
            elements: []
          };
          if (!o7.consume("}")) {
            let l, f = new I7(e, o7.lexer, o7);
            for (; ; ) {
              f.acceptLexerState(o7);
              let d = f.parseIntermediateType(y5.OBJECT);
              o7.acceptLexerState(f), d === void 0 && t && (d = o7.parseIntermediateType(y5.OBJECT));
              let h5 = false;
              if (d.type === "JsdocTypeNullable" && (h5 = true, d = d.element), d.type === "JsdocTypeNumber" || d.type === "JsdocTypeName" || d.type === "JsdocTypeStringValue") {
                let E;
                d.type === "JsdocTypeStringValue" && (E = d.meta.quote), i.elements.push({
                  type: "JsdocTypeObjectField",
                  key: d.value.toString(),
                  right: void 0,
                  optional: h5,
                  readonly: false,
                  meta: {
                    quote: E
                  }
                });
              } else if (d.type === "JsdocTypeObjectField" || d.type === "JsdocTypeJsdocObjectField")
                i.elements.push(d);
              else
                throw new c(d);
              if (o7.lexer.current.startOfLine)
                l = "linebreak";
              else if (o7.consume(","))
                l = "comma";
              else if (o7.consume(";"))
                l = "semicolon";
              else
                break;
              if (o7.lexer.current.type === "}")
                break;
            }
            if (i.meta.separator = l ?? "comma", !o7.consume("}"))
              throw new Error("Unterminated record type. Missing '}'");
          }
          return i;
        }, "parsePrefix")
      });
    }
    r(Ne2, "createObjectParslet");
    function De2({ allowSquaredProperties: e, allowKeyTypes: t, allowReadonly: o7, allowOptional: i }) {
      return x5({
        name: "objectFieldParslet",
        precedence: y5.KEY_VALUE,
        accept: /* @__PURE__ */ r((l) => l === ":", "accept"),
        parseInfix: /* @__PURE__ */ r((l, f) => {
          var d;
          let h5 = false, D = false;
          i && f.type === "JsdocTypeNullable" && (h5 = true, f = f.element), o7 && f.type === "JsdocTypeReadonlyProperty" && (D = true, f = f.element);
          let E = (d = l.baseParser) !== null && d !== void 0 ? d : l;
          if (E.acceptLexerState(l), f.type === "JsdocTypeNumber" || f.type === "JsdocTypeName" || f.type === "JsdocTypeStringValue" || Je2(f)) {
            if (Je2(f) && !e)
              throw new c(f);
            E.consume(":");
            let O;
            f.type === "JsdocTypeStringValue" && (O = f.meta.quote);
            let ae = E.parseType(y5.KEY_VALUE);
            return l.acceptLexerState(E), {
              type: "JsdocTypeObjectField",
              key: Je2(f) ? f : f.value.toString(),
              right: ae,
              optional: h5,
              readonly: D,
              meta: {
                quote: O
              }
            };
          } else {
            if (!t)
              throw new c(f);
            E.consume(":");
            let O = E.parseType(y5.KEY_VALUE);
            return l.acceptLexerState(E), {
              type: "JsdocTypeJsdocObjectField",
              left: J7(f),
              right: O
            };
          }
        }, "parseInfix")
      });
    }
    r(De2, "createObjectFieldParslet");
    function Oe({ allowOptional: e, allowVariadic: t }) {
      return x5({
        name: "keyValueParslet",
        precedence: y5.KEY_VALUE,
        accept: /* @__PURE__ */ r((o7) => o7 === ":", "accept"),
        parseInfix: /* @__PURE__ */ r((o7, i) => {
          let l = false, f = false;
          if (e && i.type === "JsdocTypeNullable" && (l = true, i = i.element), t && i.type === "JsdocTypeVariadic" && i.element !== void 0 && (f = true, i = i.element), i.type !== "JsdocTypeName")
            throw new c(i);
          o7.consume(":");
          let d = o7.parseType(y5.KEY_VALUE);
          return {
            type: "JsdocTypeKeyValue",
            key: i.value,
            right: d,
            optional: l,
            variadic: f
          };
        }, "parseInfix")
      });
    }
    r(Oe, "createKeyValueParslet");
    let ze = [
      ...Pe2,
      Se({
        allowWithoutParenthesis: true,
        allowNamedParameters: ["this", "new"],
        allowNoReturnType: true,
        allowNewAsFunctionKeyword: false
      }),
      Y,
      te2({
        allowedTypes: ["module", "external", "event"],
        pathGrammar: L
      }),
      Ee2({
        allowEnclosingBrackets: true,
        allowPostfix: true
      }),
      R({
        allowedAdditionalTokens: ["keyof"]
      }),
      Ge2,
      Xe2,
      ee2({
        allowSquareBracketsOnAnyType: false,
        allowJsdocNamePaths: true,
        pathGrammar: L
      })
    ], $t2 = [
      ...ze,
      Ne2({
        // jsdoc syntax allows full types as keys, so we need to pull in the full grammar here
        // we leave out the object type deliberately
        objectFieldGrammar: [
          R({
            allowedAdditionalTokens: ["module", "in"]
          }),
          De2({
            allowSquaredProperties: false,
            allowKeyTypes: true,
            allowOptional: false,
            allowReadonly: false
          }),
          ...ze
        ],
        allowKeyTypes: true
      }),
      Oe({
        allowOptional: true,
        allowVariadic: true
      })
    ], He2 = x5({
      name: "typeOfParslet",
      accept: /* @__PURE__ */ r((e) => e === "typeof", "accept"),
      parsePrefix: /* @__PURE__ */ r((e) => (e.consume("typeof"), {
        type: "JsdocTypeTypeof",
        element: J7(e.parseType(y5.KEY_OF_TYPE_OF))
      }), "parsePrefix")
    }), qt2 = [
      R({
        allowedAdditionalTokens: ["module", "keyof", "event", "external", "in"]
      }),
      we,
      Q7,
      Y,
      Z,
      De2({
        allowSquaredProperties: false,
        allowKeyTypes: false,
        allowOptional: false,
        allowReadonly: false
      })
    ], Yt2 = [
      ...Pe2,
      Ne2({
        allowKeyTypes: false,
        objectFieldGrammar: qt2
      }),
      R({
        allowedAdditionalTokens: ["event", "external", "in"]
      }),
      He2,
      Se({
        allowWithoutParenthesis: false,
        allowNamedParameters: ["this", "new"],
        allowNoReturnType: true,
        allowNewAsFunctionKeyword: false
      }),
      Ee2({
        allowEnclosingBrackets: false,
        allowPostfix: false
      }),
      // additional name parslet is needed for some special cases
      R({
        allowedAdditionalTokens: ["keyof"]
      }),
      te2({
        allowedTypes: ["module"],
        pathGrammar: L
      }),
      ee2({
        allowSquareBracketsOnAnyType: false,
        allowJsdocNamePaths: true,
        pathGrammar: L
      }),
      Oe({
        allowOptional: false,
        allowVariadic: false
      }),
      Ge2
    ], Wt2 = x5({
      name: "assertsParslet",
      accept: /* @__PURE__ */ r((e) => e === "asserts", "accept"),
      parsePrefix: /* @__PURE__ */ r((e) => {
        e.consume("asserts");
        let t = e.parseIntermediateType(y5.SYMBOL);
        if (t.type !== "JsdocTypeName")
          throw new c(t, "A typescript asserts always has to have a name on the left side.");
        return e.consume("is"), {
          type: "JsdocTypeAsserts",
          left: t,
          right: J7(e.parseIntermediateType(y5.INFIX))
        };
      }, "parsePrefix")
    });
    function Gt2({ allowQuestionMark: e }) {
      return x5({
        name: "tupleParslet",
        accept: /* @__PURE__ */ r((t) => t === "[", "accept"),
        parsePrefix: /* @__PURE__ */ r((t) => {
          t.consume("[");
          let o7 = {
            type: "JsdocTypeTuple",
            elements: []
          };
          if (t.consume("]"))
            return o7;
          let i = t.parseIntermediateType(y5.ALL);
          if (i.type === "JsdocTypeParameterList" ? i.elements[0].type === "JsdocTypeKeyValue" ? o7.elements = i.elements.map(H) : o7.elements = i.elements.map(J7) : i.type === "JsdocTypeKeyValue" ? o7.elements = [H(i)] : o7.elements = [J7(i)], !t.consume("]"))
            throw new Error("Unterminated '['");
          if (!e && o7.elements.some((l) => l.type === "JsdocTypeUnknown"))
            throw new Error("Question mark in tuple not allowed");
          return o7;
        }, "parsePrefix")
      });
    }
    r(Gt2, "createTupleParslet");
    let Xt2 = x5({
      name: "keyOfParslet",
      accept: /* @__PURE__ */ r((e) => e === "keyof", "accept"),
      parsePrefix: /* @__PURE__ */ r((e) => (e.consume("keyof"), {
        type: "JsdocTypeKeyof",
        element: J7(e.parseType(y5.KEY_OF_TYPE_OF))
      }), "parsePrefix")
    }), zt = x5({
      name: "importParslet",
      accept: /* @__PURE__ */ r((e) => e === "import", "accept"),
      parsePrefix: /* @__PURE__ */ r((e) => {
        if (e.consume("import"), !e.consume("("))
          throw new Error("Missing parenthesis after import keyword");
        let t = e.parseType(y5.PREFIX);
        if (t.type !== "JsdocTypeStringValue")
          throw new Error("Only string values are allowed as paths for imports");
        if (!e.consume(")"))
          throw new Error("Missing closing parenthesis after import keyword");
        return {
          type: "JsdocTypeImport",
          element: t
        };
      }, "parsePrefix")
    }), Ht2 = x5({
      name: "readonlyPropertyParslet",
      accept: /* @__PURE__ */ r((e) => e === "readonly", "accept"),
      parsePrefix: /* @__PURE__ */ r((e) => (e.consume("readonly"), {
        type: "JsdocTypeReadonlyProperty",
        element: e.parseType(y5.KEY_VALUE)
      }), "parsePrefix")
    }), Qt2 = x5({
      name: "arrowFunctionParslet",
      precedence: y5.ARROW,
      accept: /* @__PURE__ */ r((e) => e === "=>", "accept"),
      parseInfix: /* @__PURE__ */ r((e, t) => (e.consume("=>"), {
        type: "JsdocTypeFunction",
        parameters: be2(t).map(Ft2),
        arrow: true,
        constructor: false,
        parenthesis: true,
        returnType: e.parseType(y5.OBJECT)
      }), "parseInfix")
    }), Zt = x5({
      name: "intersectionParslet",
      accept: /* @__PURE__ */ r((e) => e === "&", "accept"),
      precedence: y5.INTERSECTION,
      parseInfix: /* @__PURE__ */ r((e, t) => {
        e.consume("&");
        let o7 = [];
        do
          o7.push(e.parseType(y5.INTERSECTION));
        while (e.consume("&"));
        return {
          type: "JsdocTypeIntersection",
          elements: [J7(t), ...o7]
        };
      }, "parseInfix")
    }), er = x5({
      name: "predicateParslet",
      precedence: y5.INFIX,
      accept: /* @__PURE__ */ r((e) => e === "is", "accept"),
      parseInfix: /* @__PURE__ */ r((e, t) => {
        if (t.type !== "JsdocTypeName")
          throw new c(t, "A typescript predicate always has to have a name on the left side.");
        return e.consume("is"), {
          type: "JsdocTypePredicate",
          left: t,
          right: J7(e.parseIntermediateType(y5.INFIX))
        };
      }, "parseInfix")
    }), tr2 = x5({
      name: "objectSquareBracketPropertyParslet",
      accept: /* @__PURE__ */ r((e) => e === "[", "accept"),
      parsePrefix: /* @__PURE__ */ r((e) => {
        if (e.baseParser === void 0)
          throw new Error("Only allowed inside object grammar");
        e.consume("[");
        let t = e.lexer.current.text;
        e.consume("Identifier");
        let o7;
        if (e.consume(":")) {
          let i = e.baseParser;
          i.acceptLexerState(e), o7 = {
            type: "JsdocTypeIndexSignature",
            key: t,
            right: i.parseType(y5.INDEX_BRACKETS)
          }, e.acceptLexerState(i);
        } else if (e.consume("in")) {
          let i = e.baseParser;
          i.acceptLexerState(e), o7 = {
            type: "JsdocTypeMappedType",
            key: t,
            right: i.parseType(y5.ARRAY_BRACKETS)
          }, e.acceptLexerState(i);
        } else
          throw new Error("Missing ':' or 'in' inside square bracketed property.");
        if (!e.consume("]"))
          throw new Error("Unterminated square brackets");
        return o7;
      }, "parsePrefix")
    }), rr2 = [
      Ht2,
      R({
        allowedAdditionalTokens: ["module", "event", "keyof", "event", "external", "in"]
      }),
      we,
      Q7,
      Y,
      Z,
      De2({
        allowSquaredProperties: true,
        allowKeyTypes: false,
        allowOptional: true,
        allowReadonly: true
      }),
      tr2
    ], nr2 = [
      ...Pe2,
      Ne2({
        allowKeyTypes: false,
        objectFieldGrammar: rr2
      }),
      He2,
      Xt2,
      zt,
      Y,
      Se({
        allowWithoutParenthesis: true,
        allowNoReturnType: false,
        allowNamedParameters: ["this", "new", "args"],
        allowNewAsFunctionKeyword: true
      }),
      Gt2({
        allowQuestionMark: false
      }),
      Ee2({
        allowEnclosingBrackets: false,
        allowPostfix: false
      }),
      Wt2,
      R({
        allowedAdditionalTokens: ["event", "external", "in"]
      }),
      te2({
        allowedTypes: ["module"],
        pathGrammar: L
      }),
      Xe2,
      Qt2,
      ee2({
        allowSquareBracketsOnAnyType: true,
        allowJsdocNamePaths: false,
        pathGrammar: L
      }),
      Zt,
      er,
      Oe({
        allowVariadic: true,
        allowOptional: true
      })
    ];
    function Qe(e, t) {
      switch (t) {
        case "closure":
          return new I7(Yt2, e).parse();
        case "jsdoc":
          return new I7($t2, e).parse();
        case "typescript":
          return new I7(nr2, e).parse();
      }
    }
    r(Qe, "parse");
    function or2(e, t = ["typescript", "closure", "jsdoc"]) {
      let o7;
      for (let i of t)
        try {
          return Qe(e, i);
        } catch (l) {
          o7 = l;
        }
      throw o7;
    }
    r(or2, "tryParse");
    function W(e, t) {
      let o7 = e[t.type];
      if (o7 === void 0)
        throw new Error(`In this set of transform rules exists no rule for type ${t.type}.`);
      return o7(t, (i) => W(e, i));
    }
    r(W, "transform");
    function N(e) {
      throw new Error("This transform is not available. Are you trying the correct parsing mode?");
    }
    r(N, "notAvailableTransform");
    function Ze(e) {
      let t = {
        params: []
      };
      for (let o7 of e.parameters)
        o7.type === "JsdocTypeKeyValue" ? o7.key === "this" ? t.this = o7.right : o7.key === "new" ? t.new = o7.right : t.params.push(o7) : t.params.push(o7);
      return t;
    }
    r(Ze, "extractSpecialParams");
    function re(e, t, o7) {
      return e === "prefix" ? o7 + t : t + o7;
    }
    r(re, "applyPosition");
    function j(e, t) {
      switch (t) {
        case "double":
          return `"${e}"`;
        case "single":
          return `'${e}'`;
        case void 0:
          return e;
      }
    }
    r(j, "quote");
    function et2() {
      return {
        JsdocTypeParenthesis: /* @__PURE__ */ r((e, t) => `(${e.element !== void 0 ? t(e.element) : ""})`, "JsdocTypeParenthesis"),
        JsdocTypeKeyof: /* @__PURE__ */ r((e, t) => `keyof ${t(e.element)}`, "JsdocTypeKeyof"),
        JsdocTypeFunction: /* @__PURE__ */ r((e, t) => {
          if (e.arrow) {
            if (e.returnType === void 0)
              throw new Error("Arrow function needs a return type.");
            let o7 = `(${e.parameters.map(t).join(", ")}) => ${t(e.returnType)}`;
            return e.constructor && (o7 = "new " + o7), o7;
          } else {
            let o7 = e.constructor ? "new" : "function";
            return e.parenthesis && (o7 += `(${e.parameters.map(t).join(", ")})`, e.returnType !== void 0 && (o7 += `: ${t(e.returnType)}`)), o7;
          }
        }, "JsdocTypeFunction"),
        JsdocTypeName: /* @__PURE__ */ r((e) => e.value, "JsdocTypeName"),
        JsdocTypeTuple: /* @__PURE__ */ r((e, t) => `[${e.elements.map(t).join(", ")}]`, "JsdocTypeTuple"),
        JsdocTypeVariadic: /* @__PURE__ */ r((e, t) => e.meta.position === void 0 ? "..." : re(e.meta.position, t(e.element), "..."), "JsdocTypeVariadic"),
        JsdocTypeNamePath: /* @__PURE__ */ r((e, t) => {
          let o7 = t(e.left), i = t(e.right);
          switch (e.pathType) {
            case "inner":
              return `${o7}~${i}`;
            case "instance":
              return `${o7}#${i}`;
            case "property":
              return `${o7}.${i}`;
            case "property-brackets":
              return `${o7}[${i}]`;
          }
        }, "JsdocTypeNamePath"),
        JsdocTypeStringValue: /* @__PURE__ */ r((e) => j(e.value, e.meta.quote), "JsdocTypeStringValue"),
        JsdocTypeAny: /* @__PURE__ */ r(() => "*", "JsdocTypeAny"),
        JsdocTypeGeneric: /* @__PURE__ */ r((e, t) => {
          if (e.meta.brackets === "square") {
            let o7 = e.elements[0], i = t(o7);
            return o7.type === "JsdocTypeUnion" || o7.type === "JsdocTypeIntersection" ? `(${i})[]` : `${i}[]`;
          } else
            return `${t(e.left)}${e.meta.dot ? "." : ""}<${e.elements.map(t).join(", ")}>`;
        }, "JsdocTypeGeneric"),
        JsdocTypeImport: /* @__PURE__ */ r((e, t) => `import(${t(e.element)})`, "JsdocTypeImport"),
        JsdocTypeObjectField: /* @__PURE__ */ r((e, t) => {
          let o7 = "";
          return e.readonly && (o7 += "readonly "), typeof e.key == "string" ? o7 += j(e.key, e.meta.quote) : o7 += t(e.key), e.optional && (o7 += "?"), e.right === void 0 ? o7 : o7 + `: ${t(e.right)}`;
        }, "JsdocTypeObjectField"),
        JsdocTypeJsdocObjectField: /* @__PURE__ */ r((e, t) => `${t(e.left)}: ${t(e.right)}`, "JsdocTypeJsdocObjectField"),
        JsdocTypeKeyValue: /* @__PURE__ */ r((e, t) => {
          let o7 = e.key;
          return e.optional && (o7 += "?"), e.variadic && (o7 = "..." + o7), e.right === void 0 ? o7 : o7 + `: ${t(e.right)}`;
        }, "JsdocTypeKeyValue"),
        JsdocTypeSpecialNamePath: /* @__PURE__ */ r((e) => `${e.specialType}:${j(e.value, e.meta.quote)}`, "JsdocTypeSpecialNamePath"),
        JsdocTypeNotNullable: /* @__PURE__ */ r((e, t) => re(e.meta.position, t(e.element), "!"), "JsdocTypeNotNullable"),
        JsdocTypeNull: /* @__PURE__ */ r(() => "null", "JsdocTypeNull"),
        JsdocTypeNullable: /* @__PURE__ */ r((e, t) => re(e.meta.position, t(e.element), "?"), "JsdocTypeNullable"),
        JsdocTypeNumber: /* @__PURE__ */ r((e) => e.value.toString(), "JsdocTypeNumber"),
        JsdocTypeObject: /* @__PURE__ */ r((e, t) => `{${e.elements.map(t).join((e.meta.separator === "comma" ? "," : ";") + " ")}}`, "JsdocTypeObject"),
        JsdocTypeOptional: /* @__PURE__ */ r((e, t) => re(e.meta.position, t(e.element), "="), "JsdocTypeOptional"),
        JsdocTypeSymbol: /* @__PURE__ */ r((e, t) => `${e.value}(${e.element !== void 0 ? t(e.element) : ""})`, "JsdocTypeSymbol"),
        JsdocTypeTypeof: /* @__PURE__ */ r((e, t) => `typeof ${t(e.element)}`, "JsdocTypeTypeof"),
        JsdocTypeUndefined: /* @__PURE__ */ r(() => "undefined", "JsdocTypeUndefined"),
        JsdocTypeUnion: /* @__PURE__ */ r((e, t) => e.elements.map(t).join(" | "), "JsdocTypeUnion"),
        JsdocTypeUnknown: /* @__PURE__ */ r(() => "?", "JsdocTypeUnknown"),
        JsdocTypeIntersection: /* @__PURE__ */ r((e, t) => e.elements.map(t).join(" & "), "JsdocTypeIntersection"),
        JsdocTypeProperty: /* @__PURE__ */ r((e) => j(e.value, e.meta.quote), "JsdocTypeProperty"),
        JsdocTypePredicate: /* @__PURE__ */ r((e, t) => `${t(e.left)} is ${t(e.right)}`, "JsdocTypePredicate"),
        JsdocTypeIndexSignature: /* @__PURE__ */ r((e, t) => `[${e.key}: ${t(e.right)}]`, "JsdocTypeIndexSignature"),
        JsdocTypeMappedType: /* @__PURE__ */ r((e, t) => `[${e.key} in ${t(e.right)}]`, "JsdocTypeMappedType"),
        JsdocTypeAsserts: /* @__PURE__ */ r((e, t) => `asserts ${t(e.left)} is ${t(e.right)}`, "JsdocTypeAsserts")
      };
    }
    r(et2, "stringifyRules");
    let sr2 = et2();
    function ar2(e) {
      return W(sr2, e);
    }
    r(ar2, "stringify");
    let ir2 = [
      "null",
      "true",
      "false",
      "break",
      "case",
      "catch",
      "class",
      "const",
      "continue",
      "debugger",
      "default",
      "delete",
      "do",
      "else",
      "export",
      "extends",
      "finally",
      "for",
      "function",
      "if",
      "import",
      "in",
      "instanceof",
      "new",
      "return",
      "super",
      "switch",
      "this",
      "throw",
      "try",
      "typeof",
      "var",
      "void",
      "while",
      "with",
      "yield"
    ];
    function F(e) {
      let t = {
        type: "NameExpression",
        name: e
      };
      return ir2.includes(e) && (t.reservedWord = true), t;
    }
    r(F, "makeName");
    let pr2 = {
      JsdocTypeOptional: /* @__PURE__ */ r((e, t) => {
        let o7 = t(e.element);
        return o7.optional = true, o7;
      }, "JsdocTypeOptional"),
      JsdocTypeNullable: /* @__PURE__ */ r((e, t) => {
        let o7 = t(e.element);
        return o7.nullable = true, o7;
      }, "JsdocTypeNullable"),
      JsdocTypeNotNullable: /* @__PURE__ */ r((e, t) => {
        let o7 = t(e.element);
        return o7.nullable = false, o7;
      }, "JsdocTypeNotNullable"),
      JsdocTypeVariadic: /* @__PURE__ */ r((e, t) => {
        if (e.element === void 0)
          throw new Error("dots without value are not allowed in catharsis mode");
        let o7 = t(e.element);
        return o7.repeatable = true, o7;
      }, "JsdocTypeVariadic"),
      JsdocTypeAny: /* @__PURE__ */ r(() => ({
        type: "AllLiteral"
      }), "JsdocTypeAny"),
      JsdocTypeNull: /* @__PURE__ */ r(() => ({
        type: "NullLiteral"
      }), "JsdocTypeNull"),
      JsdocTypeStringValue: /* @__PURE__ */ r((e) => F(j(e.value, e.meta.quote)), "JsdocTypeStringValue"),
      JsdocTypeUndefined: /* @__PURE__ */ r(() => ({
        type: "UndefinedLiteral"
      }), "JsdocTypeUndefined"),
      JsdocTypeUnknown: /* @__PURE__ */ r(() => ({
        type: "UnknownLiteral"
      }), "JsdocTypeUnknown"),
      JsdocTypeFunction: /* @__PURE__ */ r((e, t) => {
        let o7 = Ze(e), i = {
          type: "FunctionType",
          params: o7.params.map(t)
        };
        return o7.this !== void 0 && (i.this = t(o7.this)), o7.new !== void 0 && (i.new = t(o7.new)), e.returnType !== void 0 && (i.result = t(e.returnType)), i;
      }, "JsdocTypeFunction"),
      JsdocTypeGeneric: /* @__PURE__ */ r((e, t) => ({
        type: "TypeApplication",
        applications: e.elements.map((o7) => t(o7)),
        expression: t(e.left)
      }), "JsdocTypeGeneric"),
      JsdocTypeSpecialNamePath: /* @__PURE__ */ r((e) => F(e.specialType + ":" + j(e.value, e.meta.quote)), "JsdocTypeSpecialNamePath"),
      JsdocTypeName: /* @__PURE__ */ r((e) => e.value !== "function" ? F(e.value) : {
        type: "FunctionType",
        params: []
      }, "JsdocTypeName"),
      JsdocTypeNumber: /* @__PURE__ */ r((e) => F(e.value.toString()), "JsdocTypeNumber"),
      JsdocTypeObject: /* @__PURE__ */ r((e, t) => {
        let o7 = {
          type: "RecordType",
          fields: []
        };
        for (let i of e.elements)
          i.type !== "JsdocTypeObjectField" && i.type !== "JsdocTypeJsdocObjectField" ? o7.fields.push({
            type: "FieldType",
            key: t(i),
            value: void 0
          }) : o7.fields.push(t(i));
        return o7;
      }, "JsdocTypeObject"),
      JsdocTypeObjectField: /* @__PURE__ */ r((e, t) => {
        if (typeof e.key != "string")
          throw new Error("Index signatures and mapped types are not supported");
        return {
          type: "FieldType",
          key: F(j(e.key, e.meta.quote)),
          value: e.right === void 0 ? void 0 : t(e.right)
        };
      }, "JsdocTypeObjectField"),
      JsdocTypeJsdocObjectField: /* @__PURE__ */ r((e, t) => ({
        type: "FieldType",
        key: t(e.left),
        value: t(e.right)
      }), "JsdocTypeJsdocObjectField"),
      JsdocTypeUnion: /* @__PURE__ */ r((e, t) => ({
        type: "TypeUnion",
        elements: e.elements.map((o7) => t(o7))
      }), "JsdocTypeUnion"),
      JsdocTypeKeyValue: /* @__PURE__ */ r((e, t) => ({
        type: "FieldType",
        key: F(e.key),
        value: e.right === void 0 ? void 0 : t(e.right)
      }), "JsdocTypeKeyValue"),
      JsdocTypeNamePath: /* @__PURE__ */ r((e, t) => {
        let o7 = t(e.left), i;
        e.right.type === "JsdocTypeSpecialNamePath" ? i = t(e.right).name : i = j(e.right.value, e.right.meta.quote);
        let l = e.pathType === "inner" ? "~" : e.pathType === "instance" ? "#" : ".";
        return F(`${o7.name}${l}${i}`);
      }, "JsdocTypeNamePath"),
      JsdocTypeSymbol: /* @__PURE__ */ r((e) => {
        let t = "", o7 = e.element, i = false;
        return o7?.type === "JsdocTypeVariadic" && (o7.meta.position === "prefix" ? t = "..." : i = true, o7 = o7.element), o7?.type === "JsdocTypeName" ? t += o7.value : o7?.type === "JsdocTypeNumber" && (t += o7.value.toString()), i && (t += "..."), F(`${e.value}(${t})`);
      }, "JsdocTypeSymbol"),
      JsdocTypeParenthesis: /* @__PURE__ */ r((e, t) => t(J7(e.element)), "JsdocTypeParenthesis"),
      JsdocTypeMappedType: N,
      JsdocTypeIndexSignature: N,
      JsdocTypeImport: N,
      JsdocTypeKeyof: N,
      JsdocTypeTuple: N,
      JsdocTypeTypeof: N,
      JsdocTypeIntersection: N,
      JsdocTypeProperty: N,
      JsdocTypePredicate: N,
      JsdocTypeAsserts: N
    };
    function cr(e) {
      return W(pr2, e);
    }
    r(cr, "catharsisTransform");
    function V(e) {
      switch (e) {
        case void 0:
          return "none";
        case "single":
          return "single";
        case "double":
          return "double";
      }
    }
    r(V, "getQuoteStyle");
    function lr(e) {
      switch (e) {
        case "inner":
          return "INNER_MEMBER";
        case "instance":
          return "INSTANCE_MEMBER";
        case "property":
          return "MEMBER";
        case "property-brackets":
          return "MEMBER";
      }
    }
    r(lr, "getMemberType");
    function ve(e, t) {
      return t.length === 2 ? {
        type: e,
        left: t[0],
        right: t[1]
      } : {
        type: e,
        left: t[0],
        right: ve(e, t.slice(1))
      };
    }
    r(ve, "nestResults");
    let ur = {
      JsdocTypeOptional: /* @__PURE__ */ r((e, t) => ({
        type: "OPTIONAL",
        value: t(e.element),
        meta: {
          syntax: e.meta.position === "prefix" ? "PREFIX_EQUAL_SIGN" : "SUFFIX_EQUALS_SIGN"
        }
      }), "JsdocTypeOptional"),
      JsdocTypeNullable: /* @__PURE__ */ r((e, t) => ({
        type: "NULLABLE",
        value: t(e.element),
        meta: {
          syntax: e.meta.position === "prefix" ? "PREFIX_QUESTION_MARK" : "SUFFIX_QUESTION_MARK"
        }
      }), "JsdocTypeNullable"),
      JsdocTypeNotNullable: /* @__PURE__ */ r((e, t) => ({
        type: "NOT_NULLABLE",
        value: t(e.element),
        meta: {
          syntax: e.meta.position === "prefix" ? "PREFIX_BANG" : "SUFFIX_BANG"
        }
      }), "JsdocTypeNotNullable"),
      JsdocTypeVariadic: /* @__PURE__ */ r((e, t) => {
        let o7 = {
          type: "VARIADIC",
          meta: {
            syntax: e.meta.position === "prefix" ? "PREFIX_DOTS" : e.meta.position === "suffix" ? "SUFFIX_DOTS" : "ONLY_DOTS"
          }
        };
        return e.element !== void 0 && (o7.value = t(e.element)), o7;
      }, "JsdocTypeVariadic"),
      JsdocTypeName: /* @__PURE__ */ r((e) => ({
        type: "NAME",
        name: e.value
      }), "JsdocTypeName"),
      JsdocTypeTypeof: /* @__PURE__ */ r((e, t) => ({
        type: "TYPE_QUERY",
        name: t(e.element)
      }), "JsdocTypeTypeof"),
      JsdocTypeTuple: /* @__PURE__ */ r((e, t) => ({
        type: "TUPLE",
        entries: e.elements.map(t)
      }), "JsdocTypeTuple"),
      JsdocTypeKeyof: /* @__PURE__ */ r((e, t) => ({
        type: "KEY_QUERY",
        value: t(e.element)
      }), "JsdocTypeKeyof"),
      JsdocTypeImport: /* @__PURE__ */ r((e) => ({
        type: "IMPORT",
        path: {
          type: "STRING_VALUE",
          quoteStyle: V(e.element.meta.quote),
          string: e.element.value
        }
      }), "JsdocTypeImport"),
      JsdocTypeUndefined: /* @__PURE__ */ r(() => ({
        type: "NAME",
        name: "undefined"
      }), "JsdocTypeUndefined"),
      JsdocTypeAny: /* @__PURE__ */ r(() => ({
        type: "ANY"
      }), "JsdocTypeAny"),
      JsdocTypeFunction: /* @__PURE__ */ r((e, t) => {
        let o7 = Ze(e), i = {
          type: e.arrow ? "ARROW" : "FUNCTION",
          params: o7.params.map((l) => {
            if (l.type === "JsdocTypeKeyValue") {
              if (l.right === void 0)
                throw new Error("Function parameter without ':' is not expected to be 'KEY_VALUE'");
              return {
                type: "NAMED_PARAMETER",
                name: l.key,
                typeName: t(l.right)
              };
            } else
              return t(l);
          }),
          new: null,
          returns: null
        };
        return o7.this !== void 0 ? i.this = t(o7.this) : e.arrow || (i.this = null), o7.new !== void 0 && (i.new = t(o7.new)), e.returnType !== void 0 && (i.returns = t(e.returnType)), i;
      }, "JsdocTypeFunction"),
      JsdocTypeGeneric: /* @__PURE__ */ r((e, t) => {
        let o7 = {
          type: "GENERIC",
          subject: t(e.left),
          objects: e.elements.map(t),
          meta: {
            syntax: e.meta.brackets === "square" ? "SQUARE_BRACKET" : e.meta.dot ? "ANGLE_BRACKET_WITH_DOT" : "ANGLE_BRACKET"
          }
        };
        return e.meta.brackets === "square" && e.elements[0].type === "JsdocTypeFunction" && !e.elements[0].parenthesis && (o7.objects[0] = {
          type: "NAME",
          name: "function"
        }), o7;
      }, "JsdocTypeGeneric"),
      JsdocTypeObjectField: /* @__PURE__ */ r((e, t) => {
        if (typeof e.key != "string")
          throw new Error("Index signatures and mapped types are not supported");
        if (e.right === void 0)
          return {
            type: "RECORD_ENTRY",
            key: e.key,
            quoteStyle: V(e.meta.quote),
            value: null,
            readonly: false
          };
        let o7 = t(e.right);
        return e.optional && (o7 = {
          type: "OPTIONAL",
          value: o7,
          meta: {
            syntax: "SUFFIX_KEY_QUESTION_MARK"
          }
        }), {
          type: "RECORD_ENTRY",
          key: e.key.toString(),
          quoteStyle: V(e.meta.quote),
          value: o7,
          readonly: false
        };
      }, "JsdocTypeObjectField"),
      JsdocTypeJsdocObjectField: /* @__PURE__ */ r(() => {
        throw new Error("Keys may not be typed in jsdoctypeparser.");
      }, "JsdocTypeJsdocObjectField"),
      JsdocTypeKeyValue: /* @__PURE__ */ r((e, t) => {
        if (e.right === void 0)
          return {
            type: "RECORD_ENTRY",
            key: e.key,
            quoteStyle: "none",
            value: null,
            readonly: false
          };
        let o7 = t(e.right);
        return e.optional && (o7 = {
          type: "OPTIONAL",
          value: o7,
          meta: {
            syntax: "SUFFIX_KEY_QUESTION_MARK"
          }
        }), {
          type: "RECORD_ENTRY",
          key: e.key,
          quoteStyle: "none",
          value: o7,
          readonly: false
        };
      }, "JsdocTypeKeyValue"),
      JsdocTypeObject: /* @__PURE__ */ r((e, t) => {
        let o7 = [];
        for (let i of e.elements)
          (i.type === "JsdocTypeObjectField" || i.type === "JsdocTypeJsdocObjectField") && o7.push(t(i));
        return {
          type: "RECORD",
          entries: o7
        };
      }, "JsdocTypeObject"),
      JsdocTypeSpecialNamePath: /* @__PURE__ */ r((e) => {
        if (e.specialType !== "module")
          throw new Error(`jsdoctypeparser does not support type ${e.specialType} at this point.`);
        return {
          type: "MODULE",
          value: {
            type: "FILE_PATH",
            quoteStyle: V(e.meta.quote),
            path: e.value
          }
        };
      }, "JsdocTypeSpecialNamePath"),
      JsdocTypeNamePath: /* @__PURE__ */ r((e, t) => {
        let o7 = false, i, l;
        e.right.type === "JsdocTypeSpecialNamePath" && e.right.specialType === "event" ? (o7 = true, i = e.right.value, l = V(e.right.meta.quote)) : (i = e.right.value, l = V(e.right.meta.quote));
        let f = {
          type: lr(e.pathType),
          owner: t(e.left),
          name: i,
          quoteStyle: l,
          hasEventPrefix: o7
        };
        if (f.owner.type === "MODULE") {
          let d = f.owner;
          return f.owner = f.owner.value, d.value = f, d;
        } else
          return f;
      }, "JsdocTypeNamePath"),
      JsdocTypeUnion: /* @__PURE__ */ r((e, t) => ve("UNION", e.elements.map(t)), "JsdocTypeUnion"),
      JsdocTypeParenthesis: /* @__PURE__ */ r((e, t) => ({
        type: "PARENTHESIS",
        value: t(J7(e.element))
      }), "JsdocTypeParenthesis"),
      JsdocTypeNull: /* @__PURE__ */ r(() => ({
        type: "NAME",
        name: "null"
      }), "JsdocTypeNull"),
      JsdocTypeUnknown: /* @__PURE__ */ r(() => ({
        type: "UNKNOWN"
      }), "JsdocTypeUnknown"),
      JsdocTypeStringValue: /* @__PURE__ */ r((e) => ({
        type: "STRING_VALUE",
        quoteStyle: V(e.meta.quote),
        string: e.value
      }), "JsdocTypeStringValue"),
      JsdocTypeIntersection: /* @__PURE__ */ r((e, t) => ve("INTERSECTION", e.elements.map(t)), "JsdocTypeIntersection"),
      JsdocTypeNumber: /* @__PURE__ */ r((e) => ({
        type: "NUMBER_VALUE",
        number: e.value.toString()
      }), "JsdocTypeNumber"),
      JsdocTypeSymbol: N,
      JsdocTypeProperty: N,
      JsdocTypePredicate: N,
      JsdocTypeMappedType: N,
      JsdocTypeIndexSignature: N,
      JsdocTypeAsserts: N
    };
    function mr2(e) {
      return W(ur, e);
    }
    r(mr2, "jtpTransform");
    function fr2() {
      return {
        JsdocTypeIntersection: /* @__PURE__ */ r((e, t) => ({
          type: "JsdocTypeIntersection",
          elements: e.elements.map(t)
        }), "JsdocTypeIntersection"),
        JsdocTypeGeneric: /* @__PURE__ */ r((e, t) => ({
          type: "JsdocTypeGeneric",
          left: t(e.left),
          elements: e.elements.map(t),
          meta: {
            dot: e.meta.dot,
            brackets: e.meta.brackets
          }
        }), "JsdocTypeGeneric"),
        JsdocTypeNullable: /* @__PURE__ */ r((e) => e, "JsdocTypeNullable"),
        JsdocTypeUnion: /* @__PURE__ */ r((e, t) => ({
          type: "JsdocTypeUnion",
          elements: e.elements.map(t)
        }), "JsdocTypeUnion"),
        JsdocTypeUnknown: /* @__PURE__ */ r((e) => e, "JsdocTypeUnknown"),
        JsdocTypeUndefined: /* @__PURE__ */ r((e) => e, "JsdocTypeUndefined"),
        JsdocTypeTypeof: /* @__PURE__ */ r((e, t) => ({
          type: "JsdocTypeTypeof",
          element: t(e.element)
        }), "JsdocTypeTypeof"),
        JsdocTypeSymbol: /* @__PURE__ */ r((e, t) => {
          let o7 = {
            type: "JsdocTypeSymbol",
            value: e.value
          };
          return e.element !== void 0 && (o7.element = t(e.element)), o7;
        }, "JsdocTypeSymbol"),
        JsdocTypeOptional: /* @__PURE__ */ r((e, t) => ({
          type: "JsdocTypeOptional",
          element: t(e.element),
          meta: {
            position: e.meta.position
          }
        }), "JsdocTypeOptional"),
        JsdocTypeObject: /* @__PURE__ */ r((e, t) => ({
          type: "JsdocTypeObject",
          meta: {
            separator: "comma"
          },
          elements: e.elements.map(t)
        }), "JsdocTypeObject"),
        JsdocTypeNumber: /* @__PURE__ */ r((e) => e, "JsdocTypeNumber"),
        JsdocTypeNull: /* @__PURE__ */ r((e) => e, "JsdocTypeNull"),
        JsdocTypeNotNullable: /* @__PURE__ */ r((e, t) => ({
          type: "JsdocTypeNotNullable",
          element: t(e.element),
          meta: {
            position: e.meta.position
          }
        }), "JsdocTypeNotNullable"),
        JsdocTypeSpecialNamePath: /* @__PURE__ */ r((e) => e, "JsdocTypeSpecialNamePath"),
        JsdocTypeObjectField: /* @__PURE__ */ r((e, t) => ({
          type: "JsdocTypeObjectField",
          key: e.key,
          right: e.right === void 0 ? void 0 : t(e.right),
          optional: e.optional,
          readonly: e.readonly,
          meta: e.meta
        }), "JsdocTypeObjectField"),
        JsdocTypeJsdocObjectField: /* @__PURE__ */ r((e, t) => ({
          type: "JsdocTypeJsdocObjectField",
          left: t(e.left),
          right: t(e.right)
        }), "JsdocTypeJsdocObjectField"),
        JsdocTypeKeyValue: /* @__PURE__ */ r((e, t) => ({
          type: "JsdocTypeKeyValue",
          key: e.key,
          right: e.right === void 0 ? void 0 : t(e.right),
          optional: e.optional,
          variadic: e.variadic
        }), "JsdocTypeKeyValue"),
        JsdocTypeImport: /* @__PURE__ */ r((e, t) => ({
          type: "JsdocTypeImport",
          element: t(e.element)
        }), "JsdocTypeImport"),
        JsdocTypeAny: /* @__PURE__ */ r((e) => e, "JsdocTypeAny"),
        JsdocTypeStringValue: /* @__PURE__ */ r((e) => e, "JsdocTypeStringValue"),
        JsdocTypeNamePath: /* @__PURE__ */ r((e) => e, "JsdocTypeNamePath"),
        JsdocTypeVariadic: /* @__PURE__ */ r((e, t) => {
          let o7 = {
            type: "JsdocTypeVariadic",
            meta: {
              position: e.meta.position,
              squareBrackets: e.meta.squareBrackets
            }
          };
          return e.element !== void 0 && (o7.element = t(e.element)), o7;
        }, "JsdocTypeVariadic"),
        JsdocTypeTuple: /* @__PURE__ */ r((e, t) => ({
          type: "JsdocTypeTuple",
          elements: e.elements.map(t)
        }), "JsdocTypeTuple"),
        JsdocTypeName: /* @__PURE__ */ r((e) => e, "JsdocTypeName"),
        JsdocTypeFunction: /* @__PURE__ */ r((e, t) => {
          let o7 = {
            type: "JsdocTypeFunction",
            arrow: e.arrow,
            parameters: e.parameters.map(t),
            constructor: e.constructor,
            parenthesis: e.parenthesis
          };
          return e.returnType !== void 0 && (o7.returnType = t(e.returnType)), o7;
        }, "JsdocTypeFunction"),
        JsdocTypeKeyof: /* @__PURE__ */ r((e, t) => ({
          type: "JsdocTypeKeyof",
          element: t(e.element)
        }), "JsdocTypeKeyof"),
        JsdocTypeParenthesis: /* @__PURE__ */ r((e, t) => ({
          type: "JsdocTypeParenthesis",
          element: t(e.element)
        }), "JsdocTypeParenthesis"),
        JsdocTypeProperty: /* @__PURE__ */ r((e) => e, "JsdocTypeProperty"),
        JsdocTypePredicate: /* @__PURE__ */ r((e, t) => ({
          type: "JsdocTypePredicate",
          left: t(e.left),
          right: t(e.right)
        }), "JsdocTypePredicate"),
        JsdocTypeIndexSignature: /* @__PURE__ */ r((e, t) => ({
          type: "JsdocTypeIndexSignature",
          key: e.key,
          right: t(e.right)
        }), "JsdocTypeIndexSignature"),
        JsdocTypeMappedType: /* @__PURE__ */ r((e, t) => ({
          type: "JsdocTypeMappedType",
          key: e.key,
          right: t(e.right)
        }), "JsdocTypeMappedType"),
        JsdocTypeAsserts: /* @__PURE__ */ r((e, t) => ({
          type: "JsdocTypeAsserts",
          left: t(e.left),
          right: t(e.right)
        }), "JsdocTypeAsserts")
      };
    }
    r(fr2, "identityTransformRules");
    let tt2 = {
      JsdocTypeAny: [],
      JsdocTypeFunction: ["parameters", "returnType"],
      JsdocTypeGeneric: ["left", "elements"],
      JsdocTypeImport: [],
      JsdocTypeIndexSignature: ["right"],
      JsdocTypeIntersection: ["elements"],
      JsdocTypeKeyof: ["element"],
      JsdocTypeKeyValue: ["right"],
      JsdocTypeMappedType: ["right"],
      JsdocTypeName: [],
      JsdocTypeNamePath: ["left", "right"],
      JsdocTypeNotNullable: ["element"],
      JsdocTypeNull: [],
      JsdocTypeNullable: ["element"],
      JsdocTypeNumber: [],
      JsdocTypeObject: ["elements"],
      JsdocTypeObjectField: ["right"],
      JsdocTypeJsdocObjectField: ["left", "right"],
      JsdocTypeOptional: ["element"],
      JsdocTypeParenthesis: ["element"],
      JsdocTypeSpecialNamePath: [],
      JsdocTypeStringValue: [],
      JsdocTypeSymbol: ["element"],
      JsdocTypeTuple: ["elements"],
      JsdocTypeTypeof: ["element"],
      JsdocTypeUndefined: [],
      JsdocTypeUnion: ["elements"],
      JsdocTypeUnknown: [],
      JsdocTypeVariadic: ["element"],
      JsdocTypeProperty: [],
      JsdocTypePredicate: ["left", "right"],
      JsdocTypeAsserts: ["left", "right"]
    };
    function ke2(e, t, o7, i, l) {
      i?.(e, t, o7);
      let f = tt2[e.type];
      for (let d of f) {
        let h5 = e[d];
        if (h5 !== void 0)
          if (Array.isArray(h5))
            for (let D of h5)
              ke2(D, e, d, i, l);
          else
            ke2(h5, e, d, i, l);
      }
      l?.(e, t, o7);
    }
    r(ke2, "_traverse");
    function yr(e, t, o7) {
      ke2(e, void 0, void 0, t, o7);
    }
    r(yr, "traverse"), n.catharsisTransform = cr, n.identityTransformRules = fr2, n.jtpTransform = mr2, n.parse = Qe, n.stringify = ar2, n.stringifyRules = et2, n.transform = W, n.traverse = yr, n.tryParse = or2, n.visitorKeys = tt2;
  });
});
const { UnknownArgTypesError: br } = __STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS__;
var Sr = /* @__PURE__ */ r((n) => n.name === "literal", "isLiteral"), Er = /* @__PURE__ */ r((n) => n.value.replace(/['|"]/g, ""), "toEnumOption"), Nr = /* @__PURE__ */ r((n) => {
  switch (n.type) {
    case "function":
      return { name: "function" };
    case "object":
      let s = {};
      return n.signature.properties.forEach((a) => {
        s[a.key] = B(a.value);
      }), {
        name: "object",
        value: s
      };
    default:
      throw new br({ type: n, language: "Flow" });
  }
}, "convertSig"), B = /* @__PURE__ */ r((n) => {
  let { name: s, raw: a } = n, p5 = {};
  switch (typeof a < "u" && (p5.raw = a), n.name) {
    case "literal":
      return { ...p5, name: "other", value: n.value };
    case "string":
    case "number":
    case "symbol":
    case "boolean":
      return { ...p5, name: s };
    case "Array":
      return { ...p5, name: "array", value: n.elements.map(B) };
    case "signature":
      return { ...p5, ...Nr(n) };
    case "union":
      return n.elements?.every(Sr) ? { ...p5, name: "enum", value: n.elements?.map(Er) } : { ...p5, name: s, value: n.elements?.map(B) };
    case "intersection":
      return { ...p5, name: s, value: n.elements?.map(B) };
    default:
      return { ...p5, name: "other", value: s };
  }
}, "convert");
function X(n) {
  if (!n || typeof n != "object")
    return false;
  let s = Object.getPrototypeOf(n);
  return s === null || s === Object.prototype || Object.getPrototypeOf(s) === null ? Object.prototype.toString.call(n) === "[object Object]" : false;
}
r(X, "isPlainObject");
function Re(n, s) {
  let a = {}, p5 = Object.keys(n);
  for (let c = 0; c < p5.length; c++) {
    let u = p5[c], m = n[u];
    a[u] = s(m, u, n);
  }
  return a;
}
r(Re, "mapValues");
var ot = /^['"]|['"]$/g, Dr = /* @__PURE__ */ r((n) => n.replace(ot, ""), "trimQuotes"), Or = /* @__PURE__ */ r((n) => ot.test(n), "includesQuotes"), ie = /* @__PURE__ */ r((n) => {
  let s = Dr(n);
  return Or(n) || Number.isNaN(Number(s)) ? s : Number(s);
}, "parseLiteral");
var vr = /^\(.*\) => /, C = /* @__PURE__ */ r((n) => {
  let { name: s, raw: a, computed: p5, value: c } = n, u = {};
  switch (typeof a < "u" && (u.raw = a), s) {
    case "enum": {
      let T5 = p5 ? c : c.map((g) => ie(g.value));
      return { ...u, name: s, value: T5 };
    }
    case "string":
    case "number":
    case "symbol":
      return { ...u, name: s };
    case "func":
      return { ...u, name: "function" };
    case "bool":
    case "boolean":
      return { ...u, name: "boolean" };
    case "arrayOf":
    case "array":
      return { ...u, name: "array", value: c && C(c) };
    case "object":
      return { ...u, name: s };
    case "objectOf":
      return { ...u, name: s, value: C(c) };
    case "shape":
    case "exact":
      let m = Re(c, (T5) => C(T5));
      return { ...u, name: "object", value: m };
    case "union":
      return { ...u, name: "union", value: c.map((T5) => C(T5)) };
    case "instanceOf":
    case "element":
    case "elementType":
    default: {
      if (s?.indexOf("|") > 0)
        try {
          let P = s.split("|").map((b) => JSON.parse(b));
          return { ...u, name: "enum", value: P };
        } catch {
        }
      let T5 = c ? `${s}(${c})` : s, g = vr.test(s) ? "function" : "other";
      return { ...u, name: g, value: T5 };
    }
  }
}, "convert");
const { UnknownArgTypesError: kr } = __STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS__;
var Ar = /* @__PURE__ */ r((n) => {
  switch (n.type) {
    case "function":
      return { name: "function" };
    case "object":
      let s = {};
      return n.signature.properties.forEach((a) => {
        s[a.key] = M(a.value);
      }), {
        name: "object",
        value: s
      };
    default:
      throw new kr({ type: n, language: "Typescript" });
  }
}, "convertSig"), M = /* @__PURE__ */ r((n) => {
  let { name: s, raw: a } = n, p5 = {};
  switch (typeof a < "u" && (p5.raw = a), n.name) {
    case "string":
    case "number":
    case "symbol":
    case "boolean":
      return { ...p5, name: s };
    case "Array":
      return { ...p5, name: "array", value: n.elements.map(M) };
    case "signature":
      return { ...p5, ...Ar(n) };
    case "union":
      let c;
      return n.elements?.every((u) => u.name === "literal") ? c = {
        ...p5,
        name: "enum",
        // @ts-expect-error fix types
        value: n.elements?.map((u) => ie(u.value))
      } : c = { ...p5, name: s, value: n.elements?.map(M) }, c;
    case "intersection":
      return { ...p5, name: s, value: n.elements?.map(M) };
    default:
      return { ...p5, name: "other", value: s };
  }
}, "convert");
var pe = /* @__PURE__ */ r((n) => {
  let { type: s, tsType: a, flowType: p5 } = n;
  try {
    if (s != null)
      return C(s);
    if (a != null)
      return M(a);
    if (p5 != null)
      return B(p5);
  } catch (c) {
    console.error(c);
  }
  return null;
}, "convert");
var Rr = ["null", "undefined"];
function K(n) {
  return Rr.some((s) => s === n);
}
r(K, "isDefaultValueBlacklisted");
var st = /* @__PURE__ */ r((n) => {
  if (!n)
    return "";
  if (typeof n == "string")
    return n;
  throw new Error(`Description: expected string, got: ${JSON.stringify(n)}`);
}, "str");
function at(n) {
  return !!n.__docgenInfo;
}
r(at, "hasDocgen");
function it(n) {
  return n != null && Object.keys(n).length > 0;
}
r(it, "isValidDocgenSection");
function pt(n, s) {
  return at(n) ? n.__docgenInfo[s] : null;
}
r(pt, "getDocgenSection");
function ct(n) {
  return at(n) ? st(n.__docgenInfo.description) : "";
}
r(ct, "getDocgenDescription");
var v;
(function(n) {
  n.start = "/**", n.nostart = "/***", n.delim = "*", n.end = "*/";
})(v = v || (v = {}));
function je(n) {
  return /^\s+$/.test(n);
}
r(je, "isSpace");
function lt(n) {
  let s = n.match(/\r+$/);
  return s == null ? ["", n] : [n.slice(-s[0].length), n.slice(0, -s[0].length)];
}
r(lt, "splitCR");
function A(n) {
  let s = n.match(/^\s+/);
  return s == null ? ["", n] : [n.slice(0, s[0].length), n.slice(s[0].length)];
}
r(A, "splitSpace");
function ut(n) {
  return n.split(/\n/);
}
r(ut, "splitLines");
function mt(n = {}) {
  return Object.assign({ tag: "", name: "", type: "", optional: false, description: "", problems: [], source: [] }, n);
}
r(mt, "seedSpec");
function Fe(n = {}) {
  return Object.assign({
    start: "",
    delimiter: "",
    postDelimiter: "",
    tag: "",
    postTag: "",
    name: "",
    postName: "",
    type: "",
    postType: "",
    description: "",
    end: "",
    lineEnd: ""
  }, n);
}
r(Fe, "seedTokens");
var jr = /^@\S+/;
function _e({ fence: n = "```" } = {}) {
  let s = Fr(n), a = /* @__PURE__ */ r((p5, c) => s(p5) ? !c : c, "toggleFence");
  return /* @__PURE__ */ r(function(c) {
    let u = [[]], m = false;
    for (let T5 of c)
      jr.test(T5.tokens.description) && !m ? u.push([T5]) : u[u.length - 1].push(T5), m = a(T5.tokens.description, m);
    return u;
  }, "parseBlock");
}
r(_e, "getParser");
function Fr(n) {
  return typeof n == "string" ? (s) => s.split(n).length % 2 === 0 : n;
}
r(Fr, "getFencer");
function Ve({ startLine: n = 0, markers: s = v } = {}) {
  let a = null, p5 = n;
  return /* @__PURE__ */ r(function(u) {
    let m = u, T5 = Fe();
    if ([T5.lineEnd, m] = lt(m), [T5.start, m] = A(m), a === null && m.startsWith(s.start) && !m.startsWith(s.nostart) && (a = [], T5.delimiter = m.slice(0, s.start.length), m = m.slice(s.start.length), [T5.postDelimiter, m] = A(m)), a === null)
      return p5++, null;
    let g = m.trimRight().endsWith(s.end);
    if (T5.delimiter === "" && m.startsWith(s.delim) && !m.startsWith(s.end) && (T5.delimiter = s.delim, m = m.slice(s.delim.length), [
      T5.postDelimiter,
      m
    ] = A(m)), g) {
      let P = m.trimRight();
      T5.end = m.slice(P.length - s.end.length), m = P.slice(0, -s.end.length);
    }
    if (T5.description = m, a.push({ number: p5, source: u, tokens: T5 }), p5++, g) {
      let P = a.slice();
      return a = null, P;
    }
    return null;
  }, "parseSource");
}
r(Ve, "getParser");
function Le({ tokenizers: n }) {
  return /* @__PURE__ */ r(function(a) {
    var p5;
    let c = mt({ source: a });
    for (let u of n)
      if (c = u(c), !((p5 = c.problems[c.problems.length - 1]) === null || p5 === void 0) && p5.critical)
        break;
    return c;
  }, "parseSpec");
}
r(Le, "getParser");
function ce() {
  return (n) => {
    let { tokens: s } = n.source[0], a = s.description.match(/\s*(@(\S+))(\s*)/);
    return a === null ? (n.problems.push({
      code: "spec:tag:prefix",
      message: 'tag should start with "@" symbol',
      line: n.source[0].number,
      critical: true
    }), n) : (s.tag = a[1], s.postTag = a[3], s.description = s.description.slice(a[0].length), n.tag = a[2], n);
  };
}
r(ce, "tagTokenizer");
function le(n = "compact") {
  let s = Vr(n);
  return (a) => {
    let p5 = 0, c = [];
    for (let [T5, { tokens: g }] of a.source.entries()) {
      let P = "";
      if (T5 === 0 && g.description[0] !== "{")
        return a;
      for (let b of g.description)
        if (b === "{" && p5++, b === "}" && p5--, P += b, p5 === 0)
          break;
      if (c.push([g, P]), p5 === 0)
        break;
    }
    if (p5 !== 0)
      return a.problems.push({
        code: "spec:type:unpaired-curlies",
        message: "unpaired curlies",
        line: a.source[0].number,
        critical: true
      }), a;
    let u = [], m = c[0][0].postDelimiter.length;
    for (let [T5, [g, P]] of c.entries())
      g.type = P, T5 > 0 && (g.type = g.postDelimiter.slice(m) + P, g.postDelimiter = g.postDelimiter.slice(0, m)), [g.postType, g.description] = A(g.description.slice(P.length)), u.push(g.type);
    return u[0] = u[0].slice(1), u[u.length - 1] = u[u.length - 1].slice(0, -1), a.type = s(u), a;
  };
}
r(le, "typeTokenizer");
var _r = /* @__PURE__ */ r((n) => n.trim(), "trim");
function Vr(n) {
  return n === "compact" ? (s) => s.map(_r).join("") : n === "preserve" ? (s) => s.join(`
`) : n;
}
r(Vr, "getJoiner");
var Lr = /* @__PURE__ */ r((n) => n && n.startsWith('"') && n.endsWith('"'), "isQuoted");
function ue() {
  let n = /* @__PURE__ */ r((s, { tokens: a }, p5) => a.type === "" ? s : p5, "typeEnd");
  return (s) => {
    let { tokens: a } = s.source[s.source.reduce(n, 0)], p5 = a.description.trimLeft(), c = p5.split('"');
    if (c.length > 1 && c[0] === "" && c.length % 2 === 1)
      return s.name = c[1], a.name = `"${c[1]}"`, [a.postName, a.description] = A(p5.slice(a.name.length)), s;
    let u = 0, m = "", T5 = false, g;
    for (let b of p5) {
      if (u === 0 && je(b))
        break;
      b === "[" && u++, b === "]" && u--, m += b;
    }
    if (u !== 0)
      return s.problems.push({
        code: "spec:name:unpaired-brackets",
        message: "unpaired brackets",
        line: s.source[0].number,
        critical: true
      }), s;
    let P = m;
    if (m[0] === "[" && m[m.length - 1] === "]") {
      T5 = true, m = m.slice(1, -1);
      let b = m.split("=");
      if (m = b[0].trim(), b[1] !== void 0 && (g = b.slice(1).join("=").trim()), m === "")
        return s.problems.push({
          code: "spec:name:empty-name",
          message: "empty name",
          line: s.source[0].number,
          critical: true
        }), s;
      if (g === "")
        return s.problems.push({
          code: "spec:name:empty-default",
          message: "empty default value",
          line: s.source[0].number,
          critical: true
        }), s;
      if (!Lr(g) && /=(?!>)/.test(g))
        return s.problems.push({
          code: "spec:name:invalid-default",
          message: "invalid default value syntax",
          line: s.source[0].number,
          critical: true
        }), s;
    }
    return s.optional = T5, s.name = m, a.name = P, g !== void 0 && (s.default = g), [a.postName, a.description] = A(p5.slice(a.name.length)), s;
  };
}
r(ue, "nameTokenizer");
function me(n = "compact", s = v) {
  let a = Ue(n);
  return (p5) => (p5.description = a(p5.source, s), p5);
}
r(me, "descriptionTokenizer");
function Ue(n) {
  return n === "compact" ? Ur : n === "preserve" ? Mr : n;
}
r(Ue, "getJoiner");
function Ur(n, s = v) {
  return n.map(({ tokens: { description: a } }) => a.trim()).filter((a) => a !== "").join(" ");
}
r(Ur, "compactJoiner");
var Br = /* @__PURE__ */ r((n, { tokens: s }, a) => s.type === "" ? n : a, "lineNo"), Cr = /* @__PURE__ */ r(({ tokens: n }) => (n.delimiter === "" ? n.start : n.postDelimiter.slice(1)) + n.description, "getDescription");
function Mr(n, s = v) {
  if (n.length === 0)
    return "";
  n[0].tokens.description === "" && n[0].tokens.delimiter === s.start && (n = n.slice(1));
  let a = n[n.length - 1];
  return a !== void 0 && a.tokens.description === "" && a.tokens.end.endsWith(s.end) && (n = n.slice(0, -1)), n = n.slice(n.reduce(Br, 0)), n.map(Cr).join(`
`);
}
r(Mr, "preserveJoiner");
function Be({ startLine: n = 0, fence: s = "```", spacing: a = "compact", markers: p5 = v, tokenizers: c = [
  ce(),
  le(a),
  ue(),
  me(a)
] } = {}) {
  if (n < 0 || n % 1 > 0)
    throw new Error("Invalid startLine");
  let u = Ve({ startLine: n, markers: p5 }), m = _e({ fence: s }), T5 = Le({ tokenizers: c }), g = Ue(a);
  return function(P) {
    let b = [];
    for (let de2 of ut(P)) {
      let q = u(de2);
      if (q === null)
        continue;
      let S = m(q), z = S.slice(1).map(T5);
      b.push({
        description: g(S[0], p5),
        tags: z,
        source: q,
        problems: z.reduce((Te2, ge) => Te2.concat(ge.problems), [])
      });
    }
    return b;
  };
}
r(Be, "getParser");
function Kr(n) {
  return n.start + n.delimiter + n.postDelimiter + n.tag + n.postTag + n.type + n.postType + n.name + n.postName + n.description + n.end + n.lineEnd;
}
r(Kr, "join");
function Ce() {
  return (n) => n.source.map(({ tokens: s }) => Kr(s)).join(`
`);
}
r(Ce, "getStringifier");
function ft(n, s = {}) {
  return Be(s)(n);
}
r(ft, "parse");
var $ = Pr(dt());
function qr(n) {
  return n != null && n.includes("@");
}
r(qr, "containsJsDoc");
function Yr(n) {
  let p5 = `/**
` + (n ?? "").split(`
`).map((u) => ` * ${u}`).join(`
`) + `
*/`, c = ft(p5, {
    spacing: "preserve"
  });
  if (!c || c.length === 0)
    throw new Error("Cannot parse JSDoc tags.");
  return c[0];
}
r(Yr, "parse");
var Wr = {
  tags: ["param", "arg", "argument", "returns", "ignore", "deprecated"]
}, Tt = /* @__PURE__ */ r((n, s = Wr) => {
  if (!qr(n))
    return {
      includesJsDoc: false,
      ignore: false
    };
  let a = Yr(n), p5 = Gr(a, s.tags);
  return p5.ignore ? {
    includesJsDoc: true,
    ignore: true
  } : {
    includesJsDoc: true,
    ignore: false,
    // Always use the parsed description to ensure JSDoc is removed from the description.
    description: a.description.trim(),
    extractedTags: p5
  };
}, "parseJsDoc");
function Gr(n, s) {
  let a = {
    params: null,
    deprecated: null,
    returns: null,
    ignore: false
  };
  for (let p5 of n.tags)
    if (!(s !== void 0 && !s.includes(p5.tag)))
      if (p5.tag === "ignore") {
        a.ignore = true;
        break;
      } else
        switch (p5.tag) {
          // arg & argument are aliases for param.
          case "param":
          case "arg":
          case "argument": {
            let c = zr(p5);
            c != null && (a.params == null && (a.params = []), a.params.push(c));
            break;
          }
          case "deprecated": {
            let c = Hr(p5);
            c != null && (a.deprecated = c);
            break;
          }
          case "returns": {
            let c = Qr(p5);
            c != null && (a.returns = c);
            break;
          }
        }
  return a;
}
r(Gr, "extractJsDocTags");
function Xr(n) {
  return n.replace(/[\.-]$/, "");
}
r(Xr, "normaliseParamName");
function zr(n) {
  if (!n.name || n.name === "-")
    return null;
  let s = ht(n.type);
  return {
    name: n.name,
    type: s,
    description: xt(n.description),
    getPrettyName: /* @__PURE__ */ r(() => Xr(n.name), "getPrettyName"),
    getTypeName: /* @__PURE__ */ r(() => s ? Jt(s) : null, "getTypeName")
  };
}
r(zr, "extractParam");
function Hr(n) {
  return n.name ? gt(n.name, n.description) : null;
}
r(Hr, "extractDeprecated");
function gt(n, s) {
  let a = n === "" ? s : `${n} ${s}`;
  return xt(a);
}
r(gt, "joinNameAndDescription");
function xt(n) {
  let s = n.replace(/^- /g, "").trim();
  return s === "" ? null : s;
}
r(xt, "normaliseDescription");
function Qr(n) {
  let s = ht(n.type);
  return s ? {
    type: s,
    description: gt(n.name, n.description),
    getTypeName: /* @__PURE__ */ r(() => Jt(s), "getTypeName")
  } : null;
}
r(Qr, "extractReturns");
var _ = (0, $.stringifyRules)(), Zr = _.JsdocTypeObject;
_.JsdocTypeAny = () => "any";
_.JsdocTypeObject = (n, s) => `(${Zr(n, s)})`;
_.JsdocTypeOptional = (n, s) => s(n.element);
_.JsdocTypeNullable = (n, s) => s(n.element);
_.JsdocTypeNotNullable = (n, s) => s(n.element);
_.JsdocTypeUnion = (n, s) => n.elements.map(s).join("|");
function ht(n) {
  try {
    return (0, $.parse)(n, "typescript");
  } catch {
    return null;
  }
}
r(ht, "extractType");
function Jt(n) {
  return (0, $.transform)(_, n);
}
r(Jt, "extractTypeName");
function Ke(n) {
  return n.length > 90;
}
r(Ke, "isTooLongForTypeSummary");
function wt(n) {
  return n.length > 50;
}
r(wt, "isTooLongForDefaultValueSummary");
function w(n, s) {
  return n === s ? { summary: n } : { summary: n, detail: s };
}
r(w, "createSummaryValue");
function Pt(n, s) {
  if (n != null) {
    let { value: a } = n;
    if (!K(a))
      return wt(a) ? w(s?.name, a) : w(a);
  }
  return null;
}
r(Pt, "createDefaultValue");
function bt({ name: n, value: s, elements: a, raw: p5 }) {
  return s ?? (a != null ? a.map(bt).join(" | ") : p5 ?? n);
}
r(bt, "generateUnionElement");
function en({ name: n, raw: s, elements: a }) {
  return a != null ? w(a.map(bt).join(" | ")) : s != null ? w(s.replace(/^\|\s*/, "")) : w(n);
}
r(en, "generateUnion");
function tn({ type: n, raw: s }) {
  return s != null ? w(s) : w(n);
}
r(tn, "generateFuncSignature");
function rn({ type: n, raw: s }) {
  return s != null ? Ke(s) ? w(n, s) : w(s) : w(n);
}
r(rn, "generateObjectSignature");
function nn(n) {
  let { type: s } = n;
  return s === "object" ? rn(n) : tn(n);
}
r(nn, "generateSignature");
function on({ name: n, raw: s }) {
  return s != null ? Ke(s) ? w(n, s) : w(s) : w(n);
}
r(on, "generateDefault");
function St(n) {
  if (n == null)
    return null;
  switch (n.name) {
    case "union":
      return en(n);
    case "signature":
      return nn(n);
    default:
      return on(n);
  }
}
r(St, "createType");
var Et = /* @__PURE__ */ r((n, s) => {
  let { flowType: a, description: p5, required: c, defaultValue: u } = s;
  return {
    name: n,
    type: St(a),
    required: c,
    description: p5,
    defaultValue: Pt(u ?? null, a ?? null)
  };
}, "createFlowPropDef");
function Nt({ defaultValue: n }) {
  if (n != null) {
    let { value: s } = n;
    if (!K(s))
      return w(s);
  }
  return null;
}
r(Nt, "createDefaultValue");
function Dt({ tsType: n, required: s }) {
  if (n == null)
    return null;
  let a = n.name;
  return s || (a = a.replace(" | undefined", "")), w(
    ["Array", "Record", "signature"].includes(n.name) ? n.raw : a
  );
}
r(Dt, "createType");
var Ot = /* @__PURE__ */ r((n, s) => {
  let { description: a, required: p5 } = s;
  return {
    name: n,
    type: Dt(s),
    required: p5,
    description: a,
    defaultValue: Nt(s)
  };
}, "createTsPropDef");
function sn(n) {
  return n != null ? w(n.name) : null;
}
r(sn, "createType");
function an(n) {
  let { computed: s, func: a } = n;
  return typeof s > "u" && typeof a > "u";
}
r(an, "isReactDocgenTypescript");
function pn(n) {
  return n ? n.name === "string" ? true : n.name === "enum" ? Array.isArray(n.value) && n.value.every(
    ({ value: s }) => typeof s == "string" && s[0] === '"' && s[s.length - 1] === '"'
  ) : false : false;
}
r(pn, "isStringValued");
function cn(n, s) {
  if (n != null) {
    let { value: a } = n;
    if (!K(a))
      return an(n) && pn(s) ? w(JSON.stringify(a)) : w(a);
  }
  return null;
}
r(cn, "createDefaultValue");
function vt(n, s, a) {
  let { description: p5, required: c, defaultValue: u } = a;
  return {
    name: n,
    type: sn(s),
    required: c,
    description: p5,
    defaultValue: cn(u, s)
  };
}
r(vt, "createBasicPropDef");
function ye(n, s) {
  if (s?.includesJsDoc) {
    let { description: a, extractedTags: p5 } = s;
    a != null && (n.description = s.description);
    let c = {
      ...p5,
      params: p5?.params?.map(
        (u) => ({
          name: u.getPrettyName(),
          description: u.description
        })
      )
    };
    Object.values(c).filter(Boolean).length > 0 && (n.jsDocTags = c);
  }
  return n;
}
r(ye, "applyJsDocResult");
var ln = /* @__PURE__ */ r((n, s, a) => {
  let p5 = vt(n, s.type, s);
  return p5.sbType = pe(s), ye(p5, a);
}, "javaScriptFactory"), un = /* @__PURE__ */ r((n, s, a) => {
  let p5 = Ot(n, s);
  return p5.sbType = pe(s), ye(p5, a);
}, "tsFactory"), mn = /* @__PURE__ */ r((n, s, a) => {
  let p5 = Et(n, s);
  return p5.sbType = pe(s), ye(p5, a);
}, "flowFactory"), fn = /* @__PURE__ */ r((n, s, a) => {
  let p5 = vt(n, { name: "unknown" }, s);
  return ye(p5, a);
}, "unknownFactory"), $e = /* @__PURE__ */ r((n) => {
  switch (n) {
    case "JavaScript":
      return ln;
    case "TypeScript":
      return un;
    case "Flow":
      return mn;
    default:
      return fn;
  }
}, "getPropDefFactory");
var kt = /* @__PURE__ */ r(
  (n) => n.type != null ? "JavaScript" : n.flowType != null ? "Flow" : n.tsType != null ? "TypeScript" : "Unknown",
  "getTypeSystem"
), yn = /* @__PURE__ */ r((n) => {
  let s = kt(n[0]), a = $e(s);
  return n.map((p5) => {
    let c = p5;
    return p5.type?.elements && (c = {
      ...p5,
      type: {
        ...p5.type,
        value: p5.type.elements
      }
    }), At(c.name, c, s, a);
  });
}, "extractComponentSectionArray"), dn = /* @__PURE__ */ r((n) => {
  let s = Object.keys(n), a = kt(n[s[0]]), p5 = $e(a);
  return s.map((c) => {
    let u = n[c];
    return u != null ? At(c, u, a, p5) : null;
  }).filter(Boolean);
}, "extractComponentSectionObject"), aa = /* @__PURE__ */ r((n, s) => {
  let a = pt(n, s);
  return it(a) ? Array.isArray(a) ? yn(a) : dn(a) : [];
}, "extractComponentProps");
function At(n, s, a, p5) {
  let c = Tt(s.description);
  return c.includesJsDoc && c.ignore ? null : {
    propDef: p5(n, s, c),
    jsDocTags: c.extractedTags,
    docgenInfo: s,
    typeSystem: a
  };
}
r(At, "extractProp");
function ia(n) {
  return n != null ? ct(n) : "";
}
r(ia, "extractComponentDescription");
var qe = /* @__PURE__ */ r((...n) => {
  let s = {}, a = n.filter(Boolean), p5 = a.reduce((c, u) => (Object.entries(u).forEach(([m, T5]) => {
    let g = c[m];
    Array.isArray(T5) || typeof g > "u" ? c[m] = T5 : X(T5) && X(g) ? s[m] = true : typeof T5 < "u" && (c[m] = T5);
  }), c), {});
  return Object.keys(s).forEach((c) => {
    let u = a.filter(Boolean).map((m) => m[c]).filter((m) => typeof m < "u");
    u.every((m) => X(m)) ? p5[c] = qe(...u) : p5[c] = u[u.length - 1];
  }), p5;
}, "combineParameters");
var ya = /* @__PURE__ */ r((n) => {
  let {
    component: s,
    argTypes: a,
    parameters: { docs: p5 = {} }
  } = n, { extractArgTypes: c } = p5;
  if (!c || !s)
    return a;
  let u = c(s);
  return u ? qe(u, a) : a;
}, "enhanceArgTypes");
var It = "storybook/docs", ha = `${It}/snippet-rendered`, Tn = /* @__PURE__ */ ((p5) => (p5.AUTO = "auto", p5.CODE = "code", p5.DYNAMIC = "dynamic", p5))(Tn || {});
/**
* @vue/shared v3.5.21
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/
// @__NO_SIDE_EFFECTS__
function makeMap(str) {
  const map2 = /* @__PURE__ */ Object.create(null);
  for (const key of str.split(",")) map2[key] = 1;
  return (val) => val in map2;
}
const EMPTY_OBJ = {};
const EMPTY_ARR = [];
const NOOP = () => {
};
const NO = () => false;
const isOn = (key) => key.charCodeAt(0) === 111 && key.charCodeAt(1) === 110 && // uppercase letter
(key.charCodeAt(2) > 122 || key.charCodeAt(2) < 97);
const isModelListener = (key) => key.startsWith("onUpdate:");
const extend = Object.assign;
const remove = (arr, el2) => {
  const i = arr.indexOf(el2);
  if (i > -1) {
    arr.splice(i, 1);
  }
};
const hasOwnProperty$1 = Object.prototype.hasOwnProperty;
const hasOwn = (val, key) => hasOwnProperty$1.call(val, key);
const isArray = Array.isArray;
const isMap = (val) => toTypeString(val) === "[object Map]";
const isSet = (val) => toTypeString(val) === "[object Set]";
const isDate = (val) => toTypeString(val) === "[object Date]";
const isRegExp = (val) => toTypeString(val) === "[object RegExp]";
const isFunction = (val) => typeof val === "function";
const isString = (val) => typeof val === "string";
const isSymbol = (val) => typeof val === "symbol";
const isObject = (val) => val !== null && typeof val === "object";
const isPromise = (val) => {
  return (isObject(val) || isFunction(val)) && isFunction(val.then) && isFunction(val.catch);
};
const objectToString = Object.prototype.toString;
const toTypeString = (value) => objectToString.call(value);
const toRawType = (value) => {
  return toTypeString(value).slice(8, -1);
};
const isPlainObject = (val) => toTypeString(val) === "[object Object]";
const isIntegerKey = (key) => isString(key) && key !== "NaN" && key[0] !== "-" && "" + parseInt(key, 10) === key;
const isReservedProp = /* @__PURE__ */ makeMap(
  // the leading comma is intentional so empty string "" is also included
  ",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"
);
const isBuiltInDirective = /* @__PURE__ */ makeMap(
  "bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text,memo"
);
const cacheStringFunction = (fn2) => {
  const cache = /* @__PURE__ */ Object.create(null);
  return ((str) => {
    const hit = cache[str];
    return hit || (cache[str] = fn2(str));
  });
};
const camelizeRE = /-\w/g;
const camelize = cacheStringFunction(
  (str) => {
    return str.replace(camelizeRE, (c) => c.slice(1).toUpperCase());
  }
);
const hyphenateRE = /\B([A-Z])/g;
const hyphenate = cacheStringFunction(
  (str) => str.replace(hyphenateRE, "-$1").toLowerCase()
);
const capitalize = cacheStringFunction((str) => {
  return str.charAt(0).toUpperCase() + str.slice(1);
});
const toHandlerKey = cacheStringFunction(
  (str) => {
    const s = str ? `on${capitalize(str)}` : ``;
    return s;
  }
);
const hasChanged = (value, oldValue) => !Object.is(value, oldValue);
const invokeArrayFns = (fns, ...arg) => {
  for (let i = 0; i < fns.length; i++) {
    fns[i](...arg);
  }
};
const def = (obj, key, value, writable = false) => {
  Object.defineProperty(obj, key, {
    configurable: true,
    enumerable: false,
    writable,
    value
  });
};
const looseToNumber = (val) => {
  const n = parseFloat(val);
  return isNaN(n) ? val : n;
};
const toNumber = (val) => {
  const n = isString(val) ? Number(val) : NaN;
  return isNaN(n) ? val : n;
};
let _globalThis;
const getGlobalThis = () => {
  return _globalThis || (_globalThis = typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : {});
};
function genCacheKey(source, options) {
  return source + JSON.stringify(
    options,
    (_5, val) => typeof val === "function" ? val.toString() : val
  );
}
const GLOBALS_ALLOWED = "Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt,console,Error,Symbol";
const isGloballyAllowed = /* @__PURE__ */ makeMap(GLOBALS_ALLOWED);
function normalizeStyle(value) {
  if (isArray(value)) {
    const res = {};
    for (let i = 0; i < value.length; i++) {
      const item = value[i];
      const normalized = isString(item) ? parseStringStyle(item) : normalizeStyle(item);
      if (normalized) {
        for (const key in normalized) {
          res[key] = normalized[key];
        }
      }
    }
    return res;
  } else if (isString(value) || isObject(value)) {
    return value;
  }
}
const listDelimiterRE = /;(?![^(]*\))/g;
const propertyDelimiterRE = /:([^]+)/;
const styleCommentRE = /\/\*[^]*?\*\//g;
function parseStringStyle(cssText) {
  const ret = {};
  cssText.replace(styleCommentRE, "").split(listDelimiterRE).forEach((item) => {
    if (item) {
      const tmp = item.split(propertyDelimiterRE);
      tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());
    }
  });
  return ret;
}
function normalizeClass(value) {
  let res = "";
  if (isString(value)) {
    res = value;
  } else if (isArray(value)) {
    for (let i = 0; i < value.length; i++) {
      const normalized = normalizeClass(value[i]);
      if (normalized) {
        res += normalized + " ";
      }
    }
  } else if (isObject(value)) {
    for (const name in value) {
      if (value[name]) {
        res += name + " ";
      }
    }
  }
  return res.trim();
}
function normalizeProps(props) {
  if (!props) return null;
  let { class: klass, style } = props;
  if (klass && !isString(klass)) {
    props.class = normalizeClass(klass);
  }
  if (style) {
    props.style = normalizeStyle(style);
  }
  return props;
}
const HTML_TAGS = "html,body,base,head,link,meta,style,title,address,article,aside,footer,header,hgroup,h1,h2,h3,h4,h5,h6,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,summary,template,blockquote,iframe,tfoot";
const SVG_TAGS = "svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,feDistantLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,text,textPath,title,tspan,unknown,use,view";
const MATH_TAGS = "annotation,annotation-xml,maction,maligngroup,malignmark,math,menclose,merror,mfenced,mfrac,mfraction,mglyph,mi,mlabeledtr,mlongdiv,mmultiscripts,mn,mo,mover,mpadded,mphantom,mprescripts,mroot,mrow,ms,mscarries,mscarry,msgroup,msline,mspace,msqrt,msrow,mstack,mstyle,msub,msubsup,msup,mtable,mtd,mtext,mtr,munder,munderover,none,semantics";
const VOID_TAGS = "area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr";
const isHTMLTag = /* @__PURE__ */ makeMap(HTML_TAGS);
const isSVGTag = /* @__PURE__ */ makeMap(SVG_TAGS);
const isMathMLTag = /* @__PURE__ */ makeMap(MATH_TAGS);
const isVoidTag = /* @__PURE__ */ makeMap(VOID_TAGS);
const specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;
const isSpecialBooleanAttr = /* @__PURE__ */ makeMap(specialBooleanAttrs);
function includeBooleanAttr(value) {
  return !!value || value === "";
}
function looseCompareArrays(a, b) {
  if (a.length !== b.length) return false;
  let equal = true;
  for (let i = 0; equal && i < a.length; i++) {
    equal = looseEqual(a[i], b[i]);
  }
  return equal;
}
function looseEqual(a, b) {
  if (a === b) return true;
  let aValidType = isDate(a);
  let bValidType = isDate(b);
  if (aValidType || bValidType) {
    return aValidType && bValidType ? a.getTime() === b.getTime() : false;
  }
  aValidType = isSymbol(a);
  bValidType = isSymbol(b);
  if (aValidType || bValidType) {
    return a === b;
  }
  aValidType = isArray(a);
  bValidType = isArray(b);
  if (aValidType || bValidType) {
    return aValidType && bValidType ? looseCompareArrays(a, b) : false;
  }
  aValidType = isObject(a);
  bValidType = isObject(b);
  if (aValidType || bValidType) {
    if (!aValidType || !bValidType) {
      return false;
    }
    const aKeysCount = Object.keys(a).length;
    const bKeysCount = Object.keys(b).length;
    if (aKeysCount !== bKeysCount) {
      return false;
    }
    for (const key in a) {
      const aHasKey = a.hasOwnProperty(key);
      const bHasKey = b.hasOwnProperty(key);
      if (aHasKey && !bHasKey || !aHasKey && bHasKey || !looseEqual(a[key], b[key])) {
        return false;
      }
    }
  }
  return String(a) === String(b);
}
function looseIndexOf(arr, val) {
  return arr.findIndex((item) => looseEqual(item, val));
}
const isRef$1 = (val) => {
  return !!(val && val["__v_isRef"] === true);
};
const toDisplayString = (val) => {
  return isString(val) ? val : val == null ? "" : isArray(val) || isObject(val) && (val.toString === objectToString || !isFunction(val.toString)) ? isRef$1(val) ? toDisplayString(val.value) : JSON.stringify(val, replacer, 2) : String(val);
};
const replacer = (_key, val) => {
  if (isRef$1(val)) {
    return replacer(_key, val.value);
  } else if (isMap(val)) {
    return {
      [`Map(${val.size})`]: [...val.entries()].reduce(
        (entries, [key, val2], i) => {
          entries[stringifySymbol(key, i) + " =>"] = val2;
          return entries;
        },
        {}
      )
    };
  } else if (isSet(val)) {
    return {
      [`Set(${val.size})`]: [...val.values()].map((v5) => stringifySymbol(v5))
    };
  } else if (isSymbol(val)) {
    return stringifySymbol(val);
  } else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {
    return String(val);
  }
  return val;
};
const stringifySymbol = (v5, i = "") => {
  var _a2;
  return (
    // Symbol.description in es2019+ so we need to cast here to pass
    // the lib: es2016 check
    isSymbol(v5) ? `Symbol(${(_a2 = v5.description) != null ? _a2 : i})` : v5
  );
};
function normalizeCssVarValue(value) {
  if (value == null) {
    return "initial";
  }
  if (typeof value === "string") {
    return value === "" ? " " : value;
  }
  return String(value);
}
/**
* @vue/reactivity v3.5.21
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/
let activeEffectScope;
class EffectScope {
  constructor(detached = false) {
    this.detached = detached;
    this._active = true;
    this._on = 0;
    this.effects = [];
    this.cleanups = [];
    this._isPaused = false;
    this.parent = activeEffectScope;
    if (!detached && activeEffectScope) {
      this.index = (activeEffectScope.scopes || (activeEffectScope.scopes = [])).push(
        this
      ) - 1;
    }
  }
  get active() {
    return this._active;
  }
  pause() {
    if (this._active) {
      this._isPaused = true;
      let i, l;
      if (this.scopes) {
        for (i = 0, l = this.scopes.length; i < l; i++) {
          this.scopes[i].pause();
        }
      }
      for (i = 0, l = this.effects.length; i < l; i++) {
        this.effects[i].pause();
      }
    }
  }
  /**
   * Resumes the effect scope, including all child scopes and effects.
   */
  resume() {
    if (this._active) {
      if (this._isPaused) {
        this._isPaused = false;
        let i, l;
        if (this.scopes) {
          for (i = 0, l = this.scopes.length; i < l; i++) {
            this.scopes[i].resume();
          }
        }
        for (i = 0, l = this.effects.length; i < l; i++) {
          this.effects[i].resume();
        }
      }
    }
  }
  run(fn2) {
    if (this._active) {
      const currentEffectScope = activeEffectScope;
      try {
        activeEffectScope = this;
        return fn2();
      } finally {
        activeEffectScope = currentEffectScope;
      }
    }
  }
  /**
   * This should only be called on non-detached scopes
   * @internal
   */
  on() {
    if (++this._on === 1) {
      this.prevScope = activeEffectScope;
      activeEffectScope = this;
    }
  }
  /**
   * This should only be called on non-detached scopes
   * @internal
   */
  off() {
    if (this._on > 0 && --this._on === 0) {
      activeEffectScope = this.prevScope;
      this.prevScope = void 0;
    }
  }
  stop(fromParent) {
    if (this._active) {
      this._active = false;
      let i, l;
      for (i = 0, l = this.effects.length; i < l; i++) {
        this.effects[i].stop();
      }
      this.effects.length = 0;
      for (i = 0, l = this.cleanups.length; i < l; i++) {
        this.cleanups[i]();
      }
      this.cleanups.length = 0;
      if (this.scopes) {
        for (i = 0, l = this.scopes.length; i < l; i++) {
          this.scopes[i].stop(true);
        }
        this.scopes.length = 0;
      }
      if (!this.detached && this.parent && !fromParent) {
        const last = this.parent.scopes.pop();
        if (last && last !== this) {
          this.parent.scopes[this.index] = last;
          last.index = this.index;
        }
      }
      this.parent = void 0;
    }
  }
}
function effectScope(detached) {
  return new EffectScope(detached);
}
function getCurrentScope() {
  return activeEffectScope;
}
function onScopeDispose(fn2, failSilently = false) {
  if (activeEffectScope) {
    activeEffectScope.cleanups.push(fn2);
  }
}
let activeSub;
const pausedQueueEffects = /* @__PURE__ */ new WeakSet();
class ReactiveEffect {
  constructor(fn2) {
    this.fn = fn2;
    this.deps = void 0;
    this.depsTail = void 0;
    this.flags = 1 | 4;
    this.next = void 0;
    this.cleanup = void 0;
    this.scheduler = void 0;
    if (activeEffectScope && activeEffectScope.active) {
      activeEffectScope.effects.push(this);
    }
  }
  pause() {
    this.flags |= 64;
  }
  resume() {
    if (this.flags & 64) {
      this.flags &= -65;
      if (pausedQueueEffects.has(this)) {
        pausedQueueEffects.delete(this);
        this.trigger();
      }
    }
  }
  /**
   * @internal
   */
  notify() {
    if (this.flags & 2 && !(this.flags & 32)) {
      return;
    }
    if (!(this.flags & 8)) {
      batch(this);
    }
  }
  run() {
    if (!(this.flags & 1)) {
      return this.fn();
    }
    this.flags |= 2;
    cleanupEffect(this);
    prepareDeps(this);
    const prevEffect = activeSub;
    const prevShouldTrack = shouldTrack;
    activeSub = this;
    shouldTrack = true;
    try {
      return this.fn();
    } finally {
      cleanupDeps(this);
      activeSub = prevEffect;
      shouldTrack = prevShouldTrack;
      this.flags &= -3;
    }
  }
  stop() {
    if (this.flags & 1) {
      for (let link = this.deps; link; link = link.nextDep) {
        removeSub(link);
      }
      this.deps = this.depsTail = void 0;
      cleanupEffect(this);
      this.onStop && this.onStop();
      this.flags &= -2;
    }
  }
  trigger() {
    if (this.flags & 64) {
      pausedQueueEffects.add(this);
    } else if (this.scheduler) {
      this.scheduler();
    } else {
      this.runIfDirty();
    }
  }
  /**
   * @internal
   */
  runIfDirty() {
    if (isDirty(this)) {
      this.run();
    }
  }
  get dirty() {
    return isDirty(this);
  }
}
let batchDepth = 0;
let batchedSub;
let batchedComputed;
function batch(sub, isComputed = false) {
  sub.flags |= 8;
  if (isComputed) {
    sub.next = batchedComputed;
    batchedComputed = sub;
    return;
  }
  sub.next = batchedSub;
  batchedSub = sub;
}
function startBatch() {
  batchDepth++;
}
function endBatch() {
  if (--batchDepth > 0) {
    return;
  }
  if (batchedComputed) {
    let e = batchedComputed;
    batchedComputed = void 0;
    while (e) {
      const next = e.next;
      e.next = void 0;
      e.flags &= -9;
      e = next;
    }
  }
  let error;
  while (batchedSub) {
    let e = batchedSub;
    batchedSub = void 0;
    while (e) {
      const next = e.next;
      e.next = void 0;
      e.flags &= -9;
      if (e.flags & 1) {
        try {
          ;
          e.trigger();
        } catch (err) {
          if (!error) error = err;
        }
      }
      e = next;
    }
  }
  if (error) throw error;
}
function prepareDeps(sub) {
  for (let link = sub.deps; link; link = link.nextDep) {
    link.version = -1;
    link.prevActiveLink = link.dep.activeLink;
    link.dep.activeLink = link;
  }
}
function cleanupDeps(sub) {
  let head;
  let tail = sub.depsTail;
  let link = tail;
  while (link) {
    const prev = link.prevDep;
    if (link.version === -1) {
      if (link === tail) tail = prev;
      removeSub(link);
      removeDep(link);
    } else {
      head = link;
    }
    link.dep.activeLink = link.prevActiveLink;
    link.prevActiveLink = void 0;
    link = prev;
  }
  sub.deps = head;
  sub.depsTail = tail;
}
function isDirty(sub) {
  for (let link = sub.deps; link; link = link.nextDep) {
    if (link.dep.version !== link.version || link.dep.computed && (refreshComputed(link.dep.computed) || link.dep.version !== link.version)) {
      return true;
    }
  }
  if (sub._dirty) {
    return true;
  }
  return false;
}
function refreshComputed(computed2) {
  if (computed2.flags & 4 && !(computed2.flags & 16)) {
    return;
  }
  computed2.flags &= -17;
  if (computed2.globalVersion === globalVersion) {
    return;
  }
  computed2.globalVersion = globalVersion;
  if (!computed2.isSSR && computed2.flags & 128 && (!computed2.deps && !computed2._dirty || !isDirty(computed2))) {
    return;
  }
  computed2.flags |= 2;
  const dep = computed2.dep;
  const prevSub = activeSub;
  const prevShouldTrack = shouldTrack;
  activeSub = computed2;
  shouldTrack = true;
  try {
    prepareDeps(computed2);
    const value = computed2.fn(computed2._value);
    if (dep.version === 0 || hasChanged(value, computed2._value)) {
      computed2.flags |= 128;
      computed2._value = value;
      dep.version++;
    }
  } catch (err) {
    dep.version++;
    throw err;
  } finally {
    activeSub = prevSub;
    shouldTrack = prevShouldTrack;
    cleanupDeps(computed2);
    computed2.flags &= -3;
  }
}
function removeSub(link, soft = false) {
  const { dep, prevSub, nextSub } = link;
  if (prevSub) {
    prevSub.nextSub = nextSub;
    link.prevSub = void 0;
  }
  if (nextSub) {
    nextSub.prevSub = prevSub;
    link.nextSub = void 0;
  }
  if (dep.subs === link) {
    dep.subs = prevSub;
    if (!prevSub && dep.computed) {
      dep.computed.flags &= -5;
      for (let l = dep.computed.deps; l; l = l.nextDep) {
        removeSub(l, true);
      }
    }
  }
  if (!soft && !--dep.sc && dep.map) {
    dep.map.delete(dep.key);
  }
}
function removeDep(link) {
  const { prevDep, nextDep } = link;
  if (prevDep) {
    prevDep.nextDep = nextDep;
    link.prevDep = void 0;
  }
  if (nextDep) {
    nextDep.prevDep = prevDep;
    link.nextDep = void 0;
  }
}
function effect(fn2, options) {
  if (fn2.effect instanceof ReactiveEffect) {
    fn2 = fn2.effect.fn;
  }
  const e = new ReactiveEffect(fn2);
  if (options) {
    extend(e, options);
  }
  try {
    e.run();
  } catch (err) {
    e.stop();
    throw err;
  }
  const runner = e.run.bind(e);
  runner.effect = e;
  return runner;
}
function stop(runner) {
  runner.effect.stop();
}
let shouldTrack = true;
const trackStack = [];
function pauseTracking() {
  trackStack.push(shouldTrack);
  shouldTrack = false;
}
function resetTracking() {
  const last = trackStack.pop();
  shouldTrack = last === void 0 ? true : last;
}
function cleanupEffect(e) {
  const { cleanup } = e;
  e.cleanup = void 0;
  if (cleanup) {
    const prevSub = activeSub;
    activeSub = void 0;
    try {
      cleanup();
    } finally {
      activeSub = prevSub;
    }
  }
}
let globalVersion = 0;
class Link {
  constructor(sub, dep) {
    this.sub = sub;
    this.dep = dep;
    this.version = dep.version;
    this.nextDep = this.prevDep = this.nextSub = this.prevSub = this.prevActiveLink = void 0;
  }
}
class Dep {
  // TODO isolatedDeclarations "__v_skip"
  constructor(computed2) {
    this.computed = computed2;
    this.version = 0;
    this.activeLink = void 0;
    this.subs = void 0;
    this.map = void 0;
    this.key = void 0;
    this.sc = 0;
    this.__v_skip = true;
  }
  track(debugInfo) {
    if (!activeSub || !shouldTrack || activeSub === this.computed) {
      return;
    }
    let link = this.activeLink;
    if (link === void 0 || link.sub !== activeSub) {
      link = this.activeLink = new Link(activeSub, this);
      if (!activeSub.deps) {
        activeSub.deps = activeSub.depsTail = link;
      } else {
        link.prevDep = activeSub.depsTail;
        activeSub.depsTail.nextDep = link;
        activeSub.depsTail = link;
      }
      addSub(link);
    } else if (link.version === -1) {
      link.version = this.version;
      if (link.nextDep) {
        const next = link.nextDep;
        next.prevDep = link.prevDep;
        if (link.prevDep) {
          link.prevDep.nextDep = next;
        }
        link.prevDep = activeSub.depsTail;
        link.nextDep = void 0;
        activeSub.depsTail.nextDep = link;
        activeSub.depsTail = link;
        if (activeSub.deps === link) {
          activeSub.deps = next;
        }
      }
    }
    return link;
  }
  trigger(debugInfo) {
    this.version++;
    globalVersion++;
    this.notify(debugInfo);
  }
  notify(debugInfo) {
    startBatch();
    try {
      if (false) ;
      for (let link = this.subs; link; link = link.prevSub) {
        if (link.sub.notify()) {
          ;
          link.sub.dep.notify();
        }
      }
    } finally {
      endBatch();
    }
  }
}
function addSub(link) {
  link.dep.sc++;
  if (link.sub.flags & 4) {
    const computed2 = link.dep.computed;
    if (computed2 && !link.dep.subs) {
      computed2.flags |= 4 | 16;
      for (let l = computed2.deps; l; l = l.nextDep) {
        addSub(l);
      }
    }
    const currentTail = link.dep.subs;
    if (currentTail !== link) {
      link.prevSub = currentTail;
      if (currentTail) currentTail.nextSub = link;
    }
    link.dep.subs = link;
  }
}
const targetMap = /* @__PURE__ */ new WeakMap();
const ITERATE_KEY = Symbol(
  ""
);
const MAP_KEY_ITERATE_KEY = Symbol(
  ""
);
const ARRAY_ITERATE_KEY = Symbol(
  ""
);
function track(target, type, key) {
  if (shouldTrack && activeSub) {
    let depsMap = targetMap.get(target);
    if (!depsMap) {
      targetMap.set(target, depsMap = /* @__PURE__ */ new Map());
    }
    let dep = depsMap.get(key);
    if (!dep) {
      depsMap.set(key, dep = new Dep());
      dep.map = depsMap;
      dep.key = key;
    }
    {
      dep.track();
    }
  }
}
function trigger(target, type, key, newValue, oldValue, oldTarget) {
  const depsMap = targetMap.get(target);
  if (!depsMap) {
    globalVersion++;
    return;
  }
  const run2 = (dep) => {
    if (dep) {
      {
        dep.trigger();
      }
    }
  };
  startBatch();
  if (type === "clear") {
    depsMap.forEach(run2);
  } else {
    const targetIsArray = isArray(target);
    const isArrayIndex = targetIsArray && isIntegerKey(key);
    if (targetIsArray && key === "length") {
      const newLength = Number(newValue);
      depsMap.forEach((dep, key2) => {
        if (key2 === "length" || key2 === ARRAY_ITERATE_KEY || !isSymbol(key2) && key2 >= newLength) {
          run2(dep);
        }
      });
    } else {
      if (key !== void 0 || depsMap.has(void 0)) {
        run2(depsMap.get(key));
      }
      if (isArrayIndex) {
        run2(depsMap.get(ARRAY_ITERATE_KEY));
      }
      switch (type) {
        case "add":
          if (!targetIsArray) {
            run2(depsMap.get(ITERATE_KEY));
            if (isMap(target)) {
              run2(depsMap.get(MAP_KEY_ITERATE_KEY));
            }
          } else if (isArrayIndex) {
            run2(depsMap.get("length"));
          }
          break;
        case "delete":
          if (!targetIsArray) {
            run2(depsMap.get(ITERATE_KEY));
            if (isMap(target)) {
              run2(depsMap.get(MAP_KEY_ITERATE_KEY));
            }
          }
          break;
        case "set":
          if (isMap(target)) {
            run2(depsMap.get(ITERATE_KEY));
          }
          break;
      }
    }
  }
  endBatch();
}
function getDepFromReactive(object, key) {
  const depMap = targetMap.get(object);
  return depMap && depMap.get(key);
}
function reactiveReadArray(array) {
  const raw = toRaw(array);
  if (raw === array) return raw;
  track(raw, "iterate", ARRAY_ITERATE_KEY);
  return isShallow(array) ? raw : raw.map(toReactive);
}
function shallowReadArray(arr) {
  track(arr = toRaw(arr), "iterate", ARRAY_ITERATE_KEY);
  return arr;
}
const arrayInstrumentations = {
  __proto__: null,
  [Symbol.iterator]() {
    return iterator(this, Symbol.iterator, toReactive);
  },
  concat(...args) {
    return reactiveReadArray(this).concat(
      ...args.map((x5) => isArray(x5) ? reactiveReadArray(x5) : x5)
    );
  },
  entries() {
    return iterator(this, "entries", (value) => {
      value[1] = toReactive(value[1]);
      return value;
    });
  },
  every(fn2, thisArg) {
    return apply(this, "every", fn2, thisArg, void 0, arguments);
  },
  filter(fn2, thisArg) {
    return apply(this, "filter", fn2, thisArg, (v5) => v5.map(toReactive), arguments);
  },
  find(fn2, thisArg) {
    return apply(this, "find", fn2, thisArg, toReactive, arguments);
  },
  findIndex(fn2, thisArg) {
    return apply(this, "findIndex", fn2, thisArg, void 0, arguments);
  },
  findLast(fn2, thisArg) {
    return apply(this, "findLast", fn2, thisArg, toReactive, arguments);
  },
  findLastIndex(fn2, thisArg) {
    return apply(this, "findLastIndex", fn2, thisArg, void 0, arguments);
  },
  // flat, flatMap could benefit from ARRAY_ITERATE but are not straight-forward to implement
  forEach(fn2, thisArg) {
    return apply(this, "forEach", fn2, thisArg, void 0, arguments);
  },
  includes(...args) {
    return searchProxy(this, "includes", args);
  },
  indexOf(...args) {
    return searchProxy(this, "indexOf", args);
  },
  join(separator) {
    return reactiveReadArray(this).join(separator);
  },
  // keys() iterator only reads `length`, no optimization required
  lastIndexOf(...args) {
    return searchProxy(this, "lastIndexOf", args);
  },
  map(fn2, thisArg) {
    return apply(this, "map", fn2, thisArg, void 0, arguments);
  },
  pop() {
    return noTracking(this, "pop");
  },
  push(...args) {
    return noTracking(this, "push", args);
  },
  reduce(fn2, ...args) {
    return reduce(this, "reduce", fn2, args);
  },
  reduceRight(fn2, ...args) {
    return reduce(this, "reduceRight", fn2, args);
  },
  shift() {
    return noTracking(this, "shift");
  },
  // slice could use ARRAY_ITERATE but also seems to beg for range tracking
  some(fn2, thisArg) {
    return apply(this, "some", fn2, thisArg, void 0, arguments);
  },
  splice(...args) {
    return noTracking(this, "splice", args);
  },
  toReversed() {
    return reactiveReadArray(this).toReversed();
  },
  toSorted(comparer) {
    return reactiveReadArray(this).toSorted(comparer);
  },
  toSpliced(...args) {
    return reactiveReadArray(this).toSpliced(...args);
  },
  unshift(...args) {
    return noTracking(this, "unshift", args);
  },
  values() {
    return iterator(this, "values", toReactive);
  }
};
function iterator(self2, method, wrapValue) {
  const arr = shallowReadArray(self2);
  const iter = arr[method]();
  if (arr !== self2 && !isShallow(self2)) {
    iter._next = iter.next;
    iter.next = () => {
      const result = iter._next();
      if (result.value) {
        result.value = wrapValue(result.value);
      }
      return result;
    };
  }
  return iter;
}
const arrayProto = Array.prototype;
function apply(self2, method, fn2, thisArg, wrappedRetFn, args) {
  const arr = shallowReadArray(self2);
  const needsWrap = arr !== self2 && !isShallow(self2);
  const methodFn = arr[method];
  if (methodFn !== arrayProto[method]) {
    const result2 = methodFn.apply(self2, args);
    return needsWrap ? toReactive(result2) : result2;
  }
  let wrappedFn = fn2;
  if (arr !== self2) {
    if (needsWrap) {
      wrappedFn = function(item, index) {
        return fn2.call(this, toReactive(item), index, self2);
      };
    } else if (fn2.length > 2) {
      wrappedFn = function(item, index) {
        return fn2.call(this, item, index, self2);
      };
    }
  }
  const result = methodFn.call(arr, wrappedFn, thisArg);
  return needsWrap && wrappedRetFn ? wrappedRetFn(result) : result;
}
function reduce(self2, method, fn2, args) {
  const arr = shallowReadArray(self2);
  let wrappedFn = fn2;
  if (arr !== self2) {
    if (!isShallow(self2)) {
      wrappedFn = function(acc, item, index) {
        return fn2.call(this, acc, toReactive(item), index, self2);
      };
    } else if (fn2.length > 3) {
      wrappedFn = function(acc, item, index) {
        return fn2.call(this, acc, item, index, self2);
      };
    }
  }
  return arr[method](wrappedFn, ...args);
}
function searchProxy(self2, method, args) {
  const arr = toRaw(self2);
  track(arr, "iterate", ARRAY_ITERATE_KEY);
  const res = arr[method](...args);
  if ((res === -1 || res === false) && isProxy$1(args[0])) {
    args[0] = toRaw(args[0]);
    return arr[method](...args);
  }
  return res;
}
function noTracking(self2, method, args = []) {
  pauseTracking();
  startBatch();
  const res = toRaw(self2)[method].apply(self2, args);
  endBatch();
  resetTracking();
  return res;
}
const isNonTrackableKeys = /* @__PURE__ */ makeMap(`__proto__,__v_isRef,__isVue`);
const builtInSymbols = new Set(
  /* @__PURE__ */ Object.getOwnPropertyNames(Symbol).filter((key) => key !== "arguments" && key !== "caller").map((key) => Symbol[key]).filter(isSymbol)
);
function hasOwnProperty(key) {
  if (!isSymbol(key)) key = String(key);
  const obj = toRaw(this);
  track(obj, "has", key);
  return obj.hasOwnProperty(key);
}
class BaseReactiveHandler {
  constructor(_isReadonly = false, _isShallow = false) {
    this._isReadonly = _isReadonly;
    this._isShallow = _isShallow;
  }
  get(target, key, receiver) {
    if (key === "__v_skip") return target["__v_skip"];
    const isReadonly2 = this._isReadonly, isShallow2 = this._isShallow;
    if (key === "__v_isReactive") {
      return !isReadonly2;
    } else if (key === "__v_isReadonly") {
      return isReadonly2;
    } else if (key === "__v_isShallow") {
      return isShallow2;
    } else if (key === "__v_raw") {
      if (receiver === (isReadonly2 ? isShallow2 ? shallowReadonlyMap : readonlyMap : isShallow2 ? shallowReactiveMap : reactiveMap).get(target) || // receiver is not the reactive proxy, but has the same prototype
      // this means the receiver is a user proxy of the reactive proxy
      Object.getPrototypeOf(target) === Object.getPrototypeOf(receiver)) {
        return target;
      }
      return;
    }
    const targetIsArray = isArray(target);
    if (!isReadonly2) {
      let fn2;
      if (targetIsArray && (fn2 = arrayInstrumentations[key])) {
        return fn2;
      }
      if (key === "hasOwnProperty") {
        return hasOwnProperty;
      }
    }
    const res = Reflect.get(
      target,
      key,
      // if this is a proxy wrapping a ref, return methods using the raw ref
      // as receiver so that we don't have to call `toRaw` on the ref in all
      // its class methods
      isRef(target) ? target : receiver
    );
    if (isSymbol(key) ? builtInSymbols.has(key) : isNonTrackableKeys(key)) {
      return res;
    }
    if (!isReadonly2) {
      track(target, "get", key);
    }
    if (isShallow2) {
      return res;
    }
    if (isRef(res)) {
      return targetIsArray && isIntegerKey(key) ? res : res.value;
    }
    if (isObject(res)) {
      return isReadonly2 ? readonly(res) : reactive(res);
    }
    return res;
  }
}
class MutableReactiveHandler extends BaseReactiveHandler {
  constructor(isShallow2 = false) {
    super(false, isShallow2);
  }
  set(target, key, value, receiver) {
    let oldValue = target[key];
    if (!this._isShallow) {
      const isOldValueReadonly = isReadonly(oldValue);
      if (!isShallow(value) && !isReadonly(value)) {
        oldValue = toRaw(oldValue);
        value = toRaw(value);
      }
      if (!isArray(target) && isRef(oldValue) && !isRef(value)) {
        if (isOldValueReadonly) {
          return true;
        } else {
          oldValue.value = value;
          return true;
        }
      }
    }
    const hadKey = isArray(target) && isIntegerKey(key) ? Number(key) < target.length : hasOwn(target, key);
    const result = Reflect.set(
      target,
      key,
      value,
      isRef(target) ? target : receiver
    );
    if (target === toRaw(receiver)) {
      if (!hadKey) {
        trigger(target, "add", key, value);
      } else if (hasChanged(value, oldValue)) {
        trigger(target, "set", key, value);
      }
    }
    return result;
  }
  deleteProperty(target, key) {
    const hadKey = hasOwn(target, key);
    target[key];
    const result = Reflect.deleteProperty(target, key);
    if (result && hadKey) {
      trigger(target, "delete", key, void 0);
    }
    return result;
  }
  has(target, key) {
    const result = Reflect.has(target, key);
    if (!isSymbol(key) || !builtInSymbols.has(key)) {
      track(target, "has", key);
    }
    return result;
  }
  ownKeys(target) {
    track(
      target,
      "iterate",
      isArray(target) ? "length" : ITERATE_KEY
    );
    return Reflect.ownKeys(target);
  }
}
class ReadonlyReactiveHandler extends BaseReactiveHandler {
  constructor(isShallow2 = false) {
    super(true, isShallow2);
  }
  set(target, key) {
    return true;
  }
  deleteProperty(target, key) {
    return true;
  }
}
const mutableHandlers = /* @__PURE__ */ new MutableReactiveHandler();
const readonlyHandlers = /* @__PURE__ */ new ReadonlyReactiveHandler();
const shallowReactiveHandlers = /* @__PURE__ */ new MutableReactiveHandler(true);
const shallowReadonlyHandlers = /* @__PURE__ */ new ReadonlyReactiveHandler(true);
const toShallow = (value) => value;
const getProto = (v5) => Reflect.getPrototypeOf(v5);
function createIterableMethod(method, isReadonly2, isShallow2) {
  return function(...args) {
    const target = this["__v_raw"];
    const rawTarget = toRaw(target);
    const targetIsMap = isMap(rawTarget);
    const isPair = method === "entries" || method === Symbol.iterator && targetIsMap;
    const isKeyOnly = method === "keys" && targetIsMap;
    const innerIterator = target[method](...args);
    const wrap = isShallow2 ? toShallow : isReadonly2 ? toReadonly : toReactive;
    !isReadonly2 && track(
      rawTarget,
      "iterate",
      isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY
    );
    return {
      // iterator protocol
      next() {
        const { value, done } = innerIterator.next();
        return done ? { value, done } : {
          value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),
          done
        };
      },
      // iterable protocol
      [Symbol.iterator]() {
        return this;
      }
    };
  };
}
function createReadonlyMethod(type) {
  return function(...args) {
    return type === "delete" ? false : type === "clear" ? void 0 : this;
  };
}
function createInstrumentations(readonly2, shallow) {
  const instrumentations = {
    get(key) {
      const target = this["__v_raw"];
      const rawTarget = toRaw(target);
      const rawKey = toRaw(key);
      if (!readonly2) {
        if (hasChanged(key, rawKey)) {
          track(rawTarget, "get", key);
        }
        track(rawTarget, "get", rawKey);
      }
      const { has } = getProto(rawTarget);
      const wrap = shallow ? toShallow : readonly2 ? toReadonly : toReactive;
      if (has.call(rawTarget, key)) {
        return wrap(target.get(key));
      } else if (has.call(rawTarget, rawKey)) {
        return wrap(target.get(rawKey));
      } else if (target !== rawTarget) {
        target.get(key);
      }
    },
    get size() {
      const target = this["__v_raw"];
      !readonly2 && track(toRaw(target), "iterate", ITERATE_KEY);
      return target.size;
    },
    has(key) {
      const target = this["__v_raw"];
      const rawTarget = toRaw(target);
      const rawKey = toRaw(key);
      if (!readonly2) {
        if (hasChanged(key, rawKey)) {
          track(rawTarget, "has", key);
        }
        track(rawTarget, "has", rawKey);
      }
      return key === rawKey ? target.has(key) : target.has(key) || target.has(rawKey);
    },
    forEach(callback, thisArg) {
      const observed = this;
      const target = observed["__v_raw"];
      const rawTarget = toRaw(target);
      const wrap = shallow ? toShallow : readonly2 ? toReadonly : toReactive;
      !readonly2 && track(rawTarget, "iterate", ITERATE_KEY);
      return target.forEach((value, key) => {
        return callback.call(thisArg, wrap(value), wrap(key), observed);
      });
    }
  };
  extend(
    instrumentations,
    readonly2 ? {
      add: createReadonlyMethod("add"),
      set: createReadonlyMethod("set"),
      delete: createReadonlyMethod("delete"),
      clear: createReadonlyMethod("clear")
    } : {
      add(value) {
        if (!shallow && !isShallow(value) && !isReadonly(value)) {
          value = toRaw(value);
        }
        const target = toRaw(this);
        const proto = getProto(target);
        const hadKey = proto.has.call(target, value);
        if (!hadKey) {
          target.add(value);
          trigger(target, "add", value, value);
        }
        return this;
      },
      set(key, value) {
        if (!shallow && !isShallow(value) && !isReadonly(value)) {
          value = toRaw(value);
        }
        const target = toRaw(this);
        const { has, get } = getProto(target);
        let hadKey = has.call(target, key);
        if (!hadKey) {
          key = toRaw(key);
          hadKey = has.call(target, key);
        }
        const oldValue = get.call(target, key);
        target.set(key, value);
        if (!hadKey) {
          trigger(target, "add", key, value);
        } else if (hasChanged(value, oldValue)) {
          trigger(target, "set", key, value);
        }
        return this;
      },
      delete(key) {
        const target = toRaw(this);
        const { has, get } = getProto(target);
        let hadKey = has.call(target, key);
        if (!hadKey) {
          key = toRaw(key);
          hadKey = has.call(target, key);
        }
        get ? get.call(target, key) : void 0;
        const result = target.delete(key);
        if (hadKey) {
          trigger(target, "delete", key, void 0);
        }
        return result;
      },
      clear() {
        const target = toRaw(this);
        const hadItems = target.size !== 0;
        const result = target.clear();
        if (hadItems) {
          trigger(
            target,
            "clear",
            void 0,
            void 0
          );
        }
        return result;
      }
    }
  );
  const iteratorMethods = [
    "keys",
    "values",
    "entries",
    Symbol.iterator
  ];
  iteratorMethods.forEach((method) => {
    instrumentations[method] = createIterableMethod(method, readonly2, shallow);
  });
  return instrumentations;
}
function createInstrumentationGetter(isReadonly2, shallow) {
  const instrumentations = createInstrumentations(isReadonly2, shallow);
  return (target, key, receiver) => {
    if (key === "__v_isReactive") {
      return !isReadonly2;
    } else if (key === "__v_isReadonly") {
      return isReadonly2;
    } else if (key === "__v_raw") {
      return target;
    }
    return Reflect.get(
      hasOwn(instrumentations, key) && key in target ? instrumentations : target,
      key,
      receiver
    );
  };
}
const mutableCollectionHandlers = {
  get: /* @__PURE__ */ createInstrumentationGetter(false, false)
};
const shallowCollectionHandlers = {
  get: /* @__PURE__ */ createInstrumentationGetter(false, true)
};
const readonlyCollectionHandlers = {
  get: /* @__PURE__ */ createInstrumentationGetter(true, false)
};
const shallowReadonlyCollectionHandlers = {
  get: /* @__PURE__ */ createInstrumentationGetter(true, true)
};
const reactiveMap = /* @__PURE__ */ new WeakMap();
const shallowReactiveMap = /* @__PURE__ */ new WeakMap();
const readonlyMap = /* @__PURE__ */ new WeakMap();
const shallowReadonlyMap = /* @__PURE__ */ new WeakMap();
function targetTypeMap(rawType) {
  switch (rawType) {
    case "Object":
    case "Array":
      return 1;
    case "Map":
    case "Set":
    case "WeakMap":
    case "WeakSet":
      return 2;
    default:
      return 0;
  }
}
function getTargetType(value) {
  return value["__v_skip"] || !Object.isExtensible(value) ? 0 : targetTypeMap(toRawType(value));
}
function reactive(target) {
  if (isReadonly(target)) {
    return target;
  }
  return createReactiveObject(
    target,
    false,
    mutableHandlers,
    mutableCollectionHandlers,
    reactiveMap
  );
}
function shallowReactive(target) {
  return createReactiveObject(
    target,
    false,
    shallowReactiveHandlers,
    shallowCollectionHandlers,
    shallowReactiveMap
  );
}
function readonly(target) {
  return createReactiveObject(
    target,
    true,
    readonlyHandlers,
    readonlyCollectionHandlers,
    readonlyMap
  );
}
function shallowReadonly(target) {
  return createReactiveObject(
    target,
    true,
    shallowReadonlyHandlers,
    shallowReadonlyCollectionHandlers,
    shallowReadonlyMap
  );
}
function createReactiveObject(target, isReadonly2, baseHandlers, collectionHandlers, proxyMap) {
  if (!isObject(target)) {
    return target;
  }
  if (target["__v_raw"] && !(isReadonly2 && target["__v_isReactive"])) {
    return target;
  }
  const targetType = getTargetType(target);
  if (targetType === 0) {
    return target;
  }
  const existingProxy = proxyMap.get(target);
  if (existingProxy) {
    return existingProxy;
  }
  const proxy = new Proxy(
    target,
    targetType === 2 ? collectionHandlers : baseHandlers
  );
  proxyMap.set(target, proxy);
  return proxy;
}
function isReactive(value) {
  if (isReadonly(value)) {
    return isReactive(value["__v_raw"]);
  }
  return !!(value && value["__v_isReactive"]);
}
function isReadonly(value) {
  return !!(value && value["__v_isReadonly"]);
}
function isShallow(value) {
  return !!(value && value["__v_isShallow"]);
}
function isProxy$1(value) {
  return value ? !!value["__v_raw"] : false;
}
function toRaw(observed) {
  const raw = observed && observed["__v_raw"];
  return raw ? toRaw(raw) : observed;
}
function markRaw(value) {
  if (!hasOwn(value, "__v_skip") && Object.isExtensible(value)) {
    def(value, "__v_skip", true);
  }
  return value;
}
const toReactive = (value) => isObject(value) ? reactive(value) : value;
const toReadonly = (value) => isObject(value) ? readonly(value) : value;
function isRef(r7) {
  return r7 ? r7["__v_isRef"] === true : false;
}
function ref(value) {
  return createRef(value, false);
}
function shallowRef(value) {
  return createRef(value, true);
}
function createRef(rawValue, shallow) {
  if (isRef(rawValue)) {
    return rawValue;
  }
  return new RefImpl(rawValue, shallow);
}
class RefImpl {
  constructor(value, isShallow2) {
    this.dep = new Dep();
    this["__v_isRef"] = true;
    this["__v_isShallow"] = false;
    this._rawValue = isShallow2 ? value : toRaw(value);
    this._value = isShallow2 ? value : toReactive(value);
    this["__v_isShallow"] = isShallow2;
  }
  get value() {
    {
      this.dep.track();
    }
    return this._value;
  }
  set value(newValue) {
    const oldValue = this._rawValue;
    const useDirectValue = this["__v_isShallow"] || isShallow(newValue) || isReadonly(newValue);
    newValue = useDirectValue ? newValue : toRaw(newValue);
    if (hasChanged(newValue, oldValue)) {
      this._rawValue = newValue;
      this._value = useDirectValue ? newValue : toReactive(newValue);
      {
        this.dep.trigger();
      }
    }
  }
}
function triggerRef(ref2) {
  if (ref2.dep) {
    {
      ref2.dep.trigger();
    }
  }
}
function unref(ref2) {
  return isRef(ref2) ? ref2.value : ref2;
}
function toValue(source) {
  return isFunction(source) ? source() : unref(source);
}
const shallowUnwrapHandlers = {
  get: (target, key, receiver) => key === "__v_raw" ? target : unref(Reflect.get(target, key, receiver)),
  set: (target, key, value, receiver) => {
    const oldValue = target[key];
    if (isRef(oldValue) && !isRef(value)) {
      oldValue.value = value;
      return true;
    } else {
      return Reflect.set(target, key, value, receiver);
    }
  }
};
function proxyRefs(objectWithRefs) {
  return isReactive(objectWithRefs) ? objectWithRefs : new Proxy(objectWithRefs, shallowUnwrapHandlers);
}
class CustomRefImpl {
  constructor(factory) {
    this["__v_isRef"] = true;
    this._value = void 0;
    const dep = this.dep = new Dep();
    const { get, set } = factory(dep.track.bind(dep), dep.trigger.bind(dep));
    this._get = get;
    this._set = set;
  }
  get value() {
    return this._value = this._get();
  }
  set value(newVal) {
    this._set(newVal);
  }
}
function customRef(factory) {
  return new CustomRefImpl(factory);
}
function toRefs(object) {
  const ret = isArray(object) ? new Array(object.length) : {};
  for (const key in object) {
    ret[key] = propertyToRef(object, key);
  }
  return ret;
}
class ObjectRefImpl {
  constructor(_object, _key, _defaultValue) {
    this._object = _object;
    this._key = _key;
    this._defaultValue = _defaultValue;
    this["__v_isRef"] = true;
    this._value = void 0;
  }
  get value() {
    const val = this._object[this._key];
    return this._value = val === void 0 ? this._defaultValue : val;
  }
  set value(newVal) {
    this._object[this._key] = newVal;
  }
  get dep() {
    return getDepFromReactive(toRaw(this._object), this._key);
  }
}
class GetterRefImpl {
  constructor(_getter) {
    this._getter = _getter;
    this["__v_isRef"] = true;
    this["__v_isReadonly"] = true;
    this._value = void 0;
  }
  get value() {
    return this._value = this._getter();
  }
}
function toRef(source, key, defaultValue) {
  if (isRef(source)) {
    return source;
  } else if (isFunction(source)) {
    return new GetterRefImpl(source);
  } else if (isObject(source) && arguments.length > 1) {
    return propertyToRef(source, key, defaultValue);
  } else {
    return ref(source);
  }
}
function propertyToRef(source, key, defaultValue) {
  const val = source[key];
  return isRef(val) ? val : new ObjectRefImpl(source, key, defaultValue);
}
class ComputedRefImpl {
  constructor(fn2, setter, isSSR) {
    this.fn = fn2;
    this.setter = setter;
    this._value = void 0;
    this.dep = new Dep(this);
    this.__v_isRef = true;
    this.deps = void 0;
    this.depsTail = void 0;
    this.flags = 16;
    this.globalVersion = globalVersion - 1;
    this.next = void 0;
    this.effect = this;
    this["__v_isReadonly"] = !setter;
    this.isSSR = isSSR;
  }
  /**
   * @internal
   */
  notify() {
    this.flags |= 16;
    if (!(this.flags & 8) && // avoid infinite self recursion
    activeSub !== this) {
      batch(this, true);
      return true;
    }
  }
  get value() {
    const link = this.dep.track();
    refreshComputed(this);
    if (link) {
      link.version = this.dep.version;
    }
    return this._value;
  }
  set value(newValue) {
    if (this.setter) {
      this.setter(newValue);
    }
  }
}
function computed$1(getterOrOptions, debugOptions, isSSR = false) {
  let getter;
  let setter;
  if (isFunction(getterOrOptions)) {
    getter = getterOrOptions;
  } else {
    getter = getterOrOptions.get;
    setter = getterOrOptions.set;
  }
  const cRef = new ComputedRefImpl(getter, setter, isSSR);
  return cRef;
}
const TrackOpTypes = {
  "GET": "get",
  "HAS": "has",
  "ITERATE": "iterate"
};
const TriggerOpTypes = {
  "SET": "set",
  "ADD": "add",
  "DELETE": "delete",
  "CLEAR": "clear"
};
const INITIAL_WATCHER_VALUE = {};
const cleanupMap = /* @__PURE__ */ new WeakMap();
let activeWatcher = void 0;
function getCurrentWatcher() {
  return activeWatcher;
}
function onWatcherCleanup(cleanupFn, failSilently = false, owner = activeWatcher) {
  if (owner) {
    let cleanups = cleanupMap.get(owner);
    if (!cleanups) cleanupMap.set(owner, cleanups = []);
    cleanups.push(cleanupFn);
  }
}
function watch$1(source, cb2, options = EMPTY_OBJ) {
  const { immediate, deep, once, scheduler, augmentJob, call } = options;
  const reactiveGetter = (source2) => {
    if (deep) return source2;
    if (isShallow(source2) || deep === false || deep === 0)
      return traverse(source2, 1);
    return traverse(source2);
  };
  let effect2;
  let getter;
  let cleanup;
  let boundCleanup;
  let forceTrigger = false;
  let isMultiSource = false;
  if (isRef(source)) {
    getter = () => source.value;
    forceTrigger = isShallow(source);
  } else if (isReactive(source)) {
    getter = () => reactiveGetter(source);
    forceTrigger = true;
  } else if (isArray(source)) {
    isMultiSource = true;
    forceTrigger = source.some((s) => isReactive(s) || isShallow(s));
    getter = () => source.map((s) => {
      if (isRef(s)) {
        return s.value;
      } else if (isReactive(s)) {
        return reactiveGetter(s);
      } else if (isFunction(s)) {
        return call ? call(s, 2) : s();
      } else ;
    });
  } else if (isFunction(source)) {
    if (cb2) {
      getter = call ? () => call(source, 2) : source;
    } else {
      getter = () => {
        if (cleanup) {
          pauseTracking();
          try {
            cleanup();
          } finally {
            resetTracking();
          }
        }
        const currentEffect = activeWatcher;
        activeWatcher = effect2;
        try {
          return call ? call(source, 3, [boundCleanup]) : source(boundCleanup);
        } finally {
          activeWatcher = currentEffect;
        }
      };
    }
  } else {
    getter = NOOP;
  }
  if (cb2 && deep) {
    const baseGetter = getter;
    const depth = deep === true ? Infinity : deep;
    getter = () => traverse(baseGetter(), depth);
  }
  const scope = getCurrentScope();
  const watchHandle = () => {
    effect2.stop();
    if (scope && scope.active) {
      remove(scope.effects, effect2);
    }
  };
  if (once && cb2) {
    const _cb = cb2;
    cb2 = (...args) => {
      _cb(...args);
      watchHandle();
    };
  }
  let oldValue = isMultiSource ? new Array(source.length).fill(INITIAL_WATCHER_VALUE) : INITIAL_WATCHER_VALUE;
  const job = (immediateFirstRun) => {
    if (!(effect2.flags & 1) || !effect2.dirty && !immediateFirstRun) {
      return;
    }
    if (cb2) {
      const newValue = effect2.run();
      if (deep || forceTrigger || (isMultiSource ? newValue.some((v5, i) => hasChanged(v5, oldValue[i])) : hasChanged(newValue, oldValue))) {
        if (cleanup) {
          cleanup();
        }
        const currentWatcher = activeWatcher;
        activeWatcher = effect2;
        try {
          const args = [
            newValue,
            // pass undefined as the old value when it's changed for the first time
            oldValue === INITIAL_WATCHER_VALUE ? void 0 : isMultiSource && oldValue[0] === INITIAL_WATCHER_VALUE ? [] : oldValue,
            boundCleanup
          ];
          oldValue = newValue;
          call ? call(cb2, 3, args) : (
            // @ts-expect-error
            cb2(...args)
          );
        } finally {
          activeWatcher = currentWatcher;
        }
      }
    } else {
      effect2.run();
    }
  };
  if (augmentJob) {
    augmentJob(job);
  }
  effect2 = new ReactiveEffect(getter);
  effect2.scheduler = scheduler ? () => scheduler(job, false) : job;
  boundCleanup = (fn2) => onWatcherCleanup(fn2, false, effect2);
  cleanup = effect2.onStop = () => {
    const cleanups = cleanupMap.get(effect2);
    if (cleanups) {
      if (call) {
        call(cleanups, 4);
      } else {
        for (const cleanup2 of cleanups) cleanup2();
      }
      cleanupMap.delete(effect2);
    }
  };
  if (cb2) {
    if (immediate) {
      job(true);
    } else {
      oldValue = effect2.run();
    }
  } else if (scheduler) {
    scheduler(job.bind(null, true), true);
  } else {
    effect2.run();
  }
  watchHandle.pause = effect2.pause.bind(effect2);
  watchHandle.resume = effect2.resume.bind(effect2);
  watchHandle.stop = watchHandle;
  return watchHandle;
}
function traverse(value, depth = Infinity, seen2) {
  if (depth <= 0 || !isObject(value) || value["__v_skip"]) {
    return value;
  }
  seen2 = seen2 || /* @__PURE__ */ new Map();
  if ((seen2.get(value) || 0) >= depth) {
    return value;
  }
  seen2.set(value, depth);
  depth--;
  if (isRef(value)) {
    traverse(value.value, depth, seen2);
  } else if (isArray(value)) {
    for (let i = 0; i < value.length; i++) {
      traverse(value[i], depth, seen2);
    }
  } else if (isSet(value) || isMap(value)) {
    value.forEach((v5) => {
      traverse(v5, depth, seen2);
    });
  } else if (isPlainObject(value)) {
    for (const key in value) {
      traverse(value[key], depth, seen2);
    }
    for (const key of Object.getOwnPropertySymbols(value)) {
      if (Object.prototype.propertyIsEnumerable.call(value, key)) {
        traverse(value[key], depth, seen2);
      }
    }
  }
  return value;
}
/**
* @vue/runtime-core v3.5.21
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/
const stack$1 = [];
function pushWarningContext(vnode) {
  stack$1.push(vnode);
}
function popWarningContext() {
  stack$1.pop();
}
let isWarning = false;
function warn$1(msg, ...args) {
  if (isWarning) return;
  isWarning = true;
  pauseTracking();
  const instance = stack$1.length ? stack$1[stack$1.length - 1].component : null;
  const appWarnHandler = instance && instance.appContext.config.warnHandler;
  const trace = getComponentTrace();
  if (appWarnHandler) {
    callWithErrorHandling(
      appWarnHandler,
      instance,
      11,
      [
        // eslint-disable-next-line no-restricted-syntax
        msg + args.map((a) => {
          var _a2, _b2;
          return (_b2 = (_a2 = a.toString) == null ? void 0 : _a2.call(a)) != null ? _b2 : JSON.stringify(a);
        }).join(""),
        instance && instance.proxy,
        trace.map(
          ({ vnode }) => `at <${formatComponentName(instance, vnode.type)}>`
        ).join("\n"),
        trace
      ]
    );
  } else {
    const warnArgs = [`[Vue warn]: ${msg}`, ...args];
    if (trace.length && // avoid spamming console during tests
    true) {
      warnArgs.push(`
`, ...formatTrace(trace));
    }
    console.warn(...warnArgs);
  }
  resetTracking();
  isWarning = false;
}
function getComponentTrace() {
  let currentVNode = stack$1[stack$1.length - 1];
  if (!currentVNode) {
    return [];
  }
  const normalizedStack = [];
  while (currentVNode) {
    const last = normalizedStack[0];
    if (last && last.vnode === currentVNode) {
      last.recurseCount++;
    } else {
      normalizedStack.push({
        vnode: currentVNode,
        recurseCount: 0
      });
    }
    const parentInstance = currentVNode.component && currentVNode.component.parent;
    currentVNode = parentInstance && parentInstance.vnode;
  }
  return normalizedStack;
}
function formatTrace(trace) {
  const logs = [];
  trace.forEach((entry, i) => {
    logs.push(...i === 0 ? [] : [`
`], ...formatTraceEntry(entry));
  });
  return logs;
}
function formatTraceEntry({ vnode, recurseCount }) {
  const postfix = recurseCount > 0 ? `... (${recurseCount} recursive calls)` : ``;
  const isRoot = vnode.component ? vnode.component.parent == null : false;
  const open = ` at <${formatComponentName(
    vnode.component,
    vnode.type,
    isRoot
  )}`;
  const close = `>` + postfix;
  return vnode.props ? [open, ...formatProps(vnode.props), close] : [open + close];
}
function formatProps(props) {
  const res = [];
  const keys = Object.keys(props);
  keys.slice(0, 3).forEach((key) => {
    res.push(...formatProp(key, props[key]));
  });
  if (keys.length > 3) {
    res.push(` ...`);
  }
  return res;
}
function formatProp(key, value, raw) {
  if (isString(value)) {
    value = JSON.stringify(value);
    return raw ? value : [`${key}=${value}`];
  } else if (typeof value === "number" || typeof value === "boolean" || value == null) {
    return raw ? value : [`${key}=${value}`];
  } else if (isRef(value)) {
    value = formatProp(key, toRaw(value.value), true);
    return raw ? value : [`${key}=Ref<`, value, `>`];
  } else if (isFunction(value)) {
    return [`${key}=fn${value.name ? `<${value.name}>` : ``}`];
  } else {
    value = toRaw(value);
    return raw ? value : [`${key}=`, value];
  }
}
function assertNumber(val, type) {
  return;
}
const ErrorCodes = {
  "SETUP_FUNCTION": 0,
  "0": "SETUP_FUNCTION",
  "RENDER_FUNCTION": 1,
  "1": "RENDER_FUNCTION",
  "NATIVE_EVENT_HANDLER": 5,
  "5": "NATIVE_EVENT_HANDLER",
  "COMPONENT_EVENT_HANDLER": 6,
  "6": "COMPONENT_EVENT_HANDLER",
  "VNODE_HOOK": 7,
  "7": "VNODE_HOOK",
  "DIRECTIVE_HOOK": 8,
  "8": "DIRECTIVE_HOOK",
  "TRANSITION_HOOK": 9,
  "9": "TRANSITION_HOOK",
  "APP_ERROR_HANDLER": 10,
  "10": "APP_ERROR_HANDLER",
  "APP_WARN_HANDLER": 11,
  "11": "APP_WARN_HANDLER",
  "FUNCTION_REF": 12,
  "12": "FUNCTION_REF",
  "ASYNC_COMPONENT_LOADER": 13,
  "13": "ASYNC_COMPONENT_LOADER",
  "SCHEDULER": 14,
  "14": "SCHEDULER",
  "COMPONENT_UPDATE": 15,
  "15": "COMPONENT_UPDATE",
  "APP_UNMOUNT_CLEANUP": 16,
  "16": "APP_UNMOUNT_CLEANUP"
};
const ErrorTypeStrings$1 = {
  ["sp"]: "serverPrefetch hook",
  ["bc"]: "beforeCreate hook",
  ["c"]: "created hook",
  ["bm"]: "beforeMount hook",
  ["m"]: "mounted hook",
  ["bu"]: "beforeUpdate hook",
  ["u"]: "updated",
  ["bum"]: "beforeUnmount hook",
  ["um"]: "unmounted hook",
  ["a"]: "activated hook",
  ["da"]: "deactivated hook",
  ["ec"]: "errorCaptured hook",
  ["rtc"]: "renderTracked hook",
  ["rtg"]: "renderTriggered hook",
  [0]: "setup function",
  [1]: "render function",
  [2]: "watcher getter",
  [3]: "watcher callback",
  [4]: "watcher cleanup function",
  [5]: "native event handler",
  [6]: "component event handler",
  [7]: "vnode hook",
  [8]: "directive hook",
  [9]: "transition hook",
  [10]: "app errorHandler",
  [11]: "app warnHandler",
  [12]: "ref function",
  [13]: "async component loader",
  [14]: "scheduler flush",
  [15]: "component update",
  [16]: "app unmount cleanup function"
};
function callWithErrorHandling(fn2, instance, type, args) {
  try {
    return args ? fn2(...args) : fn2();
  } catch (err) {
    handleError(err, instance, type);
  }
}
function callWithAsyncErrorHandling(fn2, instance, type, args) {
  if (isFunction(fn2)) {
    const res = callWithErrorHandling(fn2, instance, type, args);
    if (res && isPromise(res)) {
      res.catch((err) => {
        handleError(err, instance, type);
      });
    }
    return res;
  }
  if (isArray(fn2)) {
    const values = [];
    for (let i = 0; i < fn2.length; i++) {
      values.push(callWithAsyncErrorHandling(fn2[i], instance, type, args));
    }
    return values;
  }
}
function handleError(err, instance, type, throwInDev = true) {
  const contextVNode = instance ? instance.vnode : null;
  const { errorHandler, throwUnhandledErrorInProduction } = instance && instance.appContext.config || EMPTY_OBJ;
  if (instance) {
    let cur = instance.parent;
    const exposedInstance = instance.proxy;
    const errorInfo = `https://vuejs.org/error-reference/#runtime-${type}`;
    while (cur) {
      const errorCapturedHooks = cur.ec;
      if (errorCapturedHooks) {
        for (let i = 0; i < errorCapturedHooks.length; i++) {
          if (errorCapturedHooks[i](err, exposedInstance, errorInfo) === false) {
            return;
          }
        }
      }
      cur = cur.parent;
    }
    if (errorHandler) {
      pauseTracking();
      callWithErrorHandling(errorHandler, null, 10, [
        err,
        exposedInstance,
        errorInfo
      ]);
      resetTracking();
      return;
    }
  }
  logError(err, type, contextVNode, throwInDev, throwUnhandledErrorInProduction);
}
function logError(err, type, contextVNode, throwInDev = true, throwInProd = false) {
  if (throwInProd) {
    throw err;
  } else {
    console.error(err);
  }
}
const queue$1 = [];
let flushIndex = -1;
const pendingPostFlushCbs = [];
let activePostFlushCbs = null;
let postFlushIndex = 0;
const resolvedPromise = /* @__PURE__ */ Promise.resolve();
let currentFlushPromise = null;
function nextTick(fn2) {
  const p5 = currentFlushPromise || resolvedPromise;
  return fn2 ? p5.then(this ? fn2.bind(this) : fn2) : p5;
}
function findInsertionIndex(id) {
  let start = flushIndex + 1;
  let end = queue$1.length;
  while (start < end) {
    const middle = start + end >>> 1;
    const middleJob = queue$1[middle];
    const middleJobId = getId(middleJob);
    if (middleJobId < id || middleJobId === id && middleJob.flags & 2) {
      start = middle + 1;
    } else {
      end = middle;
    }
  }
  return start;
}
function queueJob(job) {
  if (!(job.flags & 1)) {
    const jobId = getId(job);
    const lastJob = queue$1[queue$1.length - 1];
    if (!lastJob || // fast path when the job id is larger than the tail
    !(job.flags & 2) && jobId >= getId(lastJob)) {
      queue$1.push(job);
    } else {
      queue$1.splice(findInsertionIndex(jobId), 0, job);
    }
    job.flags |= 1;
    queueFlush();
  }
}
function queueFlush() {
  if (!currentFlushPromise) {
    currentFlushPromise = resolvedPromise.then(flushJobs);
  }
}
function queuePostFlushCb(cb2) {
  if (!isArray(cb2)) {
    if (activePostFlushCbs && cb2.id === -1) {
      activePostFlushCbs.splice(postFlushIndex + 1, 0, cb2);
    } else if (!(cb2.flags & 1)) {
      pendingPostFlushCbs.push(cb2);
      cb2.flags |= 1;
    }
  } else {
    pendingPostFlushCbs.push(...cb2);
  }
  queueFlush();
}
function flushPreFlushCbs(instance, seen2, i = flushIndex + 1) {
  for (; i < queue$1.length; i++) {
    const cb2 = queue$1[i];
    if (cb2 && cb2.flags & 2) {
      if (instance && cb2.id !== instance.uid) {
        continue;
      }
      queue$1.splice(i, 1);
      i--;
      if (cb2.flags & 4) {
        cb2.flags &= -2;
      }
      cb2();
      if (!(cb2.flags & 4)) {
        cb2.flags &= -2;
      }
    }
  }
}
function flushPostFlushCbs(seen2) {
  if (pendingPostFlushCbs.length) {
    const deduped = [...new Set(pendingPostFlushCbs)].sort(
      (a, b) => getId(a) - getId(b)
    );
    pendingPostFlushCbs.length = 0;
    if (activePostFlushCbs) {
      activePostFlushCbs.push(...deduped);
      return;
    }
    activePostFlushCbs = deduped;
    for (postFlushIndex = 0; postFlushIndex < activePostFlushCbs.length; postFlushIndex++) {
      const cb2 = activePostFlushCbs[postFlushIndex];
      if (cb2.flags & 4) {
        cb2.flags &= -2;
      }
      if (!(cb2.flags & 8)) cb2();
      cb2.flags &= -2;
    }
    activePostFlushCbs = null;
    postFlushIndex = 0;
  }
}
const getId = (job) => job.id == null ? job.flags & 2 ? -1 : Infinity : job.id;
function flushJobs(seen2) {
  try {
    for (flushIndex = 0; flushIndex < queue$1.length; flushIndex++) {
      const job = queue$1[flushIndex];
      if (job && !(job.flags & 8)) {
        if (false) ;
        if (job.flags & 4) {
          job.flags &= ~1;
        }
        callWithErrorHandling(
          job,
          job.i,
          job.i ? 15 : 14
        );
        if (!(job.flags & 4)) {
          job.flags &= ~1;
        }
      }
    }
  } finally {
    for (; flushIndex < queue$1.length; flushIndex++) {
      const job = queue$1[flushIndex];
      if (job) {
        job.flags &= -2;
      }
    }
    flushIndex = -1;
    queue$1.length = 0;
    flushPostFlushCbs();
    currentFlushPromise = null;
    if (queue$1.length || pendingPostFlushCbs.length) {
      flushJobs();
    }
  }
}
let devtools$1;
let buffer = [];
function setDevtoolsHook$1(hook, target) {
  var _a2, _b2;
  devtools$1 = hook;
  if (devtools$1) {
    devtools$1.enabled = true;
    buffer.forEach(({ event, args }) => devtools$1.emit(event, ...args));
    buffer = [];
  } else if (
    // handle late devtools injection - only do this if we are in an actual
    // browser environment to avoid the timer handle stalling test runner exit
    // (#4815)
    typeof window !== "undefined" && // some envs mock window but not fully
    window.HTMLElement && // also exclude jsdom
    // eslint-disable-next-line no-restricted-syntax
    !((_b2 = (_a2 = window.navigator) == null ? void 0 : _a2.userAgent) == null ? void 0 : _b2.includes("jsdom"))
  ) {
    const replay = target.__VUE_DEVTOOLS_HOOK_REPLAY__ = target.__VUE_DEVTOOLS_HOOK_REPLAY__ || [];
    replay.push((newHook) => {
      setDevtoolsHook$1(newHook, target);
    });
    setTimeout(() => {
      if (!devtools$1) {
        target.__VUE_DEVTOOLS_HOOK_REPLAY__ = null;
        buffer = [];
      }
    }, 3e3);
  } else {
    buffer = [];
  }
}
let currentRenderingInstance = null;
let currentScopeId = null;
function setCurrentRenderingInstance(instance) {
  const prev = currentRenderingInstance;
  currentRenderingInstance = instance;
  currentScopeId = instance && instance.type.__scopeId || null;
  return prev;
}
function pushScopeId(id) {
  currentScopeId = id;
}
function popScopeId() {
  currentScopeId = null;
}
const withScopeId = (_id) => withCtx;
function withCtx(fn2, ctx = currentRenderingInstance, isNonScopedSlot) {
  if (!ctx) return fn2;
  if (fn2._n) {
    return fn2;
  }
  const renderFnWithContext = (...args) => {
    if (renderFnWithContext._d) {
      setBlockTracking(-1);
    }
    const prevInstance = setCurrentRenderingInstance(ctx);
    let res;
    try {
      res = fn2(...args);
    } finally {
      setCurrentRenderingInstance(prevInstance);
      if (renderFnWithContext._d) {
        setBlockTracking(1);
      }
    }
    return res;
  };
  renderFnWithContext._n = true;
  renderFnWithContext._c = true;
  renderFnWithContext._d = true;
  return renderFnWithContext;
}
function withDirectives(vnode, directives) {
  if (currentRenderingInstance === null) {
    return vnode;
  }
  const instance = getComponentPublicInstance(currentRenderingInstance);
  const bindings = vnode.dirs || (vnode.dirs = []);
  for (let i = 0; i < directives.length; i++) {
    let [dir, value, arg, modifiers = EMPTY_OBJ] = directives[i];
    if (dir) {
      if (isFunction(dir)) {
        dir = {
          mounted: dir,
          updated: dir
        };
      }
      if (dir.deep) {
        traverse(value);
      }
      bindings.push({
        dir,
        instance,
        value,
        oldValue: void 0,
        arg,
        modifiers
      });
    }
  }
  return vnode;
}
function invokeDirectiveHook(vnode, prevVNode, instance, name) {
  const bindings = vnode.dirs;
  const oldBindings = prevVNode && prevVNode.dirs;
  for (let i = 0; i < bindings.length; i++) {
    const binding = bindings[i];
    if (oldBindings) {
      binding.oldValue = oldBindings[i].value;
    }
    let hook = binding.dir[name];
    if (hook) {
      pauseTracking();
      callWithAsyncErrorHandling(hook, instance, 8, [
        vnode.el,
        binding,
        vnode,
        prevVNode
      ]);
      resetTracking();
    }
  }
}
const TeleportEndKey = Symbol("_vte");
const isTeleport = (type) => type.__isTeleport;
const isTeleportDisabled = (props) => props && (props.disabled || props.disabled === "");
const isTeleportDeferred = (props) => props && (props.defer || props.defer === "");
const isTargetSVG = (target) => typeof SVGElement !== "undefined" && target instanceof SVGElement;
const isTargetMathML = (target) => typeof MathMLElement === "function" && target instanceof MathMLElement;
const resolveTarget = (props, select) => {
  const targetSelector = props && props.to;
  if (isString(targetSelector)) {
    if (!select) {
      return null;
    } else {
      const target = select(targetSelector);
      return target;
    }
  } else {
    return targetSelector;
  }
};
const TeleportImpl = {
  name: "Teleport",
  __isTeleport: true,
  process(n1, n22, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized, internals) {
    const {
      mc: mountChildren,
      pc: patchChildren,
      pbc: patchBlockChildren,
      o: { insert, querySelector, createText, createComment }
    } = internals;
    const disabled = isTeleportDisabled(n22.props);
    let { shapeFlag, children, dynamicChildren } = n22;
    if (n1 == null) {
      const placeholder = n22.el = createText("");
      const mainAnchor = n22.anchor = createText("");
      insert(placeholder, container, anchor);
      insert(mainAnchor, container, anchor);
      const mount2 = (container2, anchor2) => {
        if (shapeFlag & 16) {
          if (parentComponent && parentComponent.isCE) {
            parentComponent.ce._teleportTarget = container2;
          }
          mountChildren(
            children,
            container2,
            anchor2,
            parentComponent,
            parentSuspense,
            namespace,
            slotScopeIds,
            optimized
          );
        }
      };
      const mountToTarget = () => {
        const target = n22.target = resolveTarget(n22.props, querySelector);
        const targetAnchor = prepareAnchor(target, n22, createText, insert);
        if (target) {
          if (namespace !== "svg" && isTargetSVG(target)) {
            namespace = "svg";
          } else if (namespace !== "mathml" && isTargetMathML(target)) {
            namespace = "mathml";
          }
          if (!disabled) {
            mount2(target, targetAnchor);
            updateCssVars(n22, false);
          }
        }
      };
      if (disabled) {
        mount2(container, mainAnchor);
        updateCssVars(n22, true);
      }
      if (isTeleportDeferred(n22.props)) {
        n22.el.__isMounted = false;
        queuePostRenderEffect(() => {
          mountToTarget();
          delete n22.el.__isMounted;
        }, parentSuspense);
      } else {
        mountToTarget();
      }
    } else {
      if (isTeleportDeferred(n22.props) && n1.el.__isMounted === false) {
        queuePostRenderEffect(() => {
          TeleportImpl.process(
            n1,
            n22,
            container,
            anchor,
            parentComponent,
            parentSuspense,
            namespace,
            slotScopeIds,
            optimized,
            internals
          );
        }, parentSuspense);
        return;
      }
      n22.el = n1.el;
      n22.targetStart = n1.targetStart;
      const mainAnchor = n22.anchor = n1.anchor;
      const target = n22.target = n1.target;
      const targetAnchor = n22.targetAnchor = n1.targetAnchor;
      const wasDisabled = isTeleportDisabled(n1.props);
      const currentContainer = wasDisabled ? container : target;
      const currentAnchor = wasDisabled ? mainAnchor : targetAnchor;
      if (namespace === "svg" || isTargetSVG(target)) {
        namespace = "svg";
      } else if (namespace === "mathml" || isTargetMathML(target)) {
        namespace = "mathml";
      }
      if (dynamicChildren) {
        patchBlockChildren(
          n1.dynamicChildren,
          dynamicChildren,
          currentContainer,
          parentComponent,
          parentSuspense,
          namespace,
          slotScopeIds
        );
        traverseStaticChildren(n1, n22, true);
      } else if (!optimized) {
        patchChildren(
          n1,
          n22,
          currentContainer,
          currentAnchor,
          parentComponent,
          parentSuspense,
          namespace,
          slotScopeIds,
          false
        );
      }
      if (disabled) {
        if (!wasDisabled) {
          moveTeleport(
            n22,
            container,
            mainAnchor,
            internals,
            1
          );
        } else {
          if (n22.props && n1.props && n22.props.to !== n1.props.to) {
            n22.props.to = n1.props.to;
          }
        }
      } else {
        if ((n22.props && n22.props.to) !== (n1.props && n1.props.to)) {
          const nextTarget = n22.target = resolveTarget(
            n22.props,
            querySelector
          );
          if (nextTarget) {
            moveTeleport(
              n22,
              nextTarget,
              null,
              internals,
              0
            );
          }
        } else if (wasDisabled) {
          moveTeleport(
            n22,
            target,
            targetAnchor,
            internals,
            1
          );
        }
      }
      updateCssVars(n22, disabled);
    }
  },
  remove(vnode, parentComponent, parentSuspense, { um: unmount, o: { remove: hostRemove } }, doRemove) {
    const {
      shapeFlag,
      children,
      anchor,
      targetStart,
      targetAnchor,
      target,
      props
    } = vnode;
    if (target) {
      hostRemove(targetStart);
      hostRemove(targetAnchor);
    }
    doRemove && hostRemove(anchor);
    if (shapeFlag & 16) {
      const shouldRemove = doRemove || !isTeleportDisabled(props);
      for (let i = 0; i < children.length; i++) {
        const child = children[i];
        unmount(
          child,
          parentComponent,
          parentSuspense,
          shouldRemove,
          !!child.dynamicChildren
        );
      }
    }
  },
  move: moveTeleport,
  hydrate: hydrateTeleport
};
function moveTeleport(vnode, container, parentAnchor, { o: { insert }, m: move }, moveType = 2) {
  if (moveType === 0) {
    insert(vnode.targetAnchor, container, parentAnchor);
  }
  const { el: el2, anchor, shapeFlag, children, props } = vnode;
  const isReorder = moveType === 2;
  if (isReorder) {
    insert(el2, container, parentAnchor);
  }
  if (!isReorder || isTeleportDisabled(props)) {
    if (shapeFlag & 16) {
      for (let i = 0; i < children.length; i++) {
        move(
          children[i],
          container,
          parentAnchor,
          2
        );
      }
    }
  }
  if (isReorder) {
    insert(anchor, container, parentAnchor);
  }
}
function hydrateTeleport(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized, {
  o: { nextSibling, parentNode, querySelector, insert, createText }
}, hydrateChildren) {
  function hydrateDisabledTeleport(node2, vnode2, targetStart, targetAnchor) {
    vnode2.anchor = hydrateChildren(
      nextSibling(node2),
      vnode2,
      parentNode(node2),
      parentComponent,
      parentSuspense,
      slotScopeIds,
      optimized
    );
    vnode2.targetStart = targetStart;
    vnode2.targetAnchor = targetAnchor;
  }
  const target = vnode.target = resolveTarget(
    vnode.props,
    querySelector
  );
  const disabled = isTeleportDisabled(vnode.props);
  if (target) {
    const targetNode = target._lpa || target.firstChild;
    if (vnode.shapeFlag & 16) {
      if (disabled) {
        hydrateDisabledTeleport(
          node,
          vnode,
          targetNode,
          targetNode && nextSibling(targetNode)
        );
      } else {
        vnode.anchor = nextSibling(node);
        let targetAnchor = targetNode;
        while (targetAnchor) {
          if (targetAnchor && targetAnchor.nodeType === 8) {
            if (targetAnchor.data === "teleport start anchor") {
              vnode.targetStart = targetAnchor;
            } else if (targetAnchor.data === "teleport anchor") {
              vnode.targetAnchor = targetAnchor;
              target._lpa = vnode.targetAnchor && nextSibling(vnode.targetAnchor);
              break;
            }
          }
          targetAnchor = nextSibling(targetAnchor);
        }
        if (!vnode.targetAnchor) {
          prepareAnchor(target, vnode, createText, insert);
        }
        hydrateChildren(
          targetNode && nextSibling(targetNode),
          vnode,
          target,
          parentComponent,
          parentSuspense,
          slotScopeIds,
          optimized
        );
      }
    }
    updateCssVars(vnode, disabled);
  } else if (disabled) {
    if (vnode.shapeFlag & 16) {
      hydrateDisabledTeleport(node, vnode, node, nextSibling(node));
    }
  }
  return vnode.anchor && nextSibling(vnode.anchor);
}
const Teleport = TeleportImpl;
function updateCssVars(vnode, isDisabled) {
  const ctx = vnode.ctx;
  if (ctx && ctx.ut) {
    let node, anchor;
    if (isDisabled) {
      node = vnode.el;
      anchor = vnode.anchor;
    } else {
      node = vnode.targetStart;
      anchor = vnode.targetAnchor;
    }
    while (node && node !== anchor) {
      if (node.nodeType === 1) node.setAttribute("data-v-owner", ctx.uid);
      node = node.nextSibling;
    }
    ctx.ut();
  }
}
function prepareAnchor(target, vnode, createText, insert) {
  const targetStart = vnode.targetStart = createText("");
  const targetAnchor = vnode.targetAnchor = createText("");
  targetStart[TeleportEndKey] = targetAnchor;
  if (target) {
    insert(targetStart, target);
    insert(targetAnchor, target);
  }
  return targetAnchor;
}
const leaveCbKey = Symbol("_leaveCb");
const enterCbKey$1 = Symbol("_enterCb");
function useTransitionState() {
  const state = {
    isMounted: false,
    isLeaving: false,
    isUnmounting: false,
    leavingVNodes: /* @__PURE__ */ new Map()
  };
  onMounted(() => {
    state.isMounted = true;
  });
  onBeforeUnmount(() => {
    state.isUnmounting = true;
  });
  return state;
}
const TransitionHookValidator = [Function, Array];
const BaseTransitionPropsValidators = {
  mode: String,
  appear: Boolean,
  persisted: Boolean,
  // enter
  onBeforeEnter: TransitionHookValidator,
  onEnter: TransitionHookValidator,
  onAfterEnter: TransitionHookValidator,
  onEnterCancelled: TransitionHookValidator,
  // leave
  onBeforeLeave: TransitionHookValidator,
  onLeave: TransitionHookValidator,
  onAfterLeave: TransitionHookValidator,
  onLeaveCancelled: TransitionHookValidator,
  // appear
  onBeforeAppear: TransitionHookValidator,
  onAppear: TransitionHookValidator,
  onAfterAppear: TransitionHookValidator,
  onAppearCancelled: TransitionHookValidator
};
const recursiveGetSubtree = (instance) => {
  const subTree = instance.subTree;
  return subTree.component ? recursiveGetSubtree(subTree.component) : subTree;
};
const BaseTransitionImpl = {
  name: `BaseTransition`,
  props: BaseTransitionPropsValidators,
  setup(props, { slots }) {
    const instance = getCurrentInstance();
    const state = useTransitionState();
    return () => {
      const children = slots.default && getTransitionRawChildren(slots.default(), true);
      if (!children || !children.length) {
        return;
      }
      const child = findNonCommentChild(children);
      const rawProps = toRaw(props);
      const { mode } = rawProps;
      if (state.isLeaving) {
        return emptyPlaceholder(child);
      }
      const innerChild = getInnerChild$1(child);
      if (!innerChild) {
        return emptyPlaceholder(child);
      }
      let enterHooks = resolveTransitionHooks(
        innerChild,
        rawProps,
        state,
        instance,
        // #11061, ensure enterHooks is fresh after clone
        (hooks) => enterHooks = hooks
      );
      if (innerChild.type !== Comment) {
        setTransitionHooks(innerChild, enterHooks);
      }
      let oldInnerChild = instance.subTree && getInnerChild$1(instance.subTree);
      if (oldInnerChild && oldInnerChild.type !== Comment && !isSameVNodeType(oldInnerChild, innerChild) && recursiveGetSubtree(instance).type !== Comment) {
        let leavingHooks = resolveTransitionHooks(
          oldInnerChild,
          rawProps,
          state,
          instance
        );
        setTransitionHooks(oldInnerChild, leavingHooks);
        if (mode === "out-in" && innerChild.type !== Comment) {
          state.isLeaving = true;
          leavingHooks.afterLeave = () => {
            state.isLeaving = false;
            if (!(instance.job.flags & 8)) {
              instance.update();
            }
            delete leavingHooks.afterLeave;
            oldInnerChild = void 0;
          };
          return emptyPlaceholder(child);
        } else if (mode === "in-out" && innerChild.type !== Comment) {
          leavingHooks.delayLeave = (el2, earlyRemove, delayedLeave) => {
            const leavingVNodesCache = getLeavingNodesForType(
              state,
              oldInnerChild
            );
            leavingVNodesCache[String(oldInnerChild.key)] = oldInnerChild;
            el2[leaveCbKey] = () => {
              earlyRemove();
              el2[leaveCbKey] = void 0;
              delete enterHooks.delayedLeave;
              oldInnerChild = void 0;
            };
            enterHooks.delayedLeave = () => {
              delayedLeave();
              delete enterHooks.delayedLeave;
              oldInnerChild = void 0;
            };
          };
        } else {
          oldInnerChild = void 0;
        }
      } else if (oldInnerChild) {
        oldInnerChild = void 0;
      }
      return child;
    };
  }
};
function findNonCommentChild(children) {
  let child = children[0];
  if (children.length > 1) {
    for (const c of children) {
      if (c.type !== Comment) {
        child = c;
        break;
      }
    }
  }
  return child;
}
const BaseTransition = BaseTransitionImpl;
function getLeavingNodesForType(state, vnode) {
  const { leavingVNodes } = state;
  let leavingVNodesCache = leavingVNodes.get(vnode.type);
  if (!leavingVNodesCache) {
    leavingVNodesCache = /* @__PURE__ */ Object.create(null);
    leavingVNodes.set(vnode.type, leavingVNodesCache);
  }
  return leavingVNodesCache;
}
function resolveTransitionHooks(vnode, props, state, instance, postClone) {
  const {
    appear,
    mode,
    persisted = false,
    onBeforeEnter,
    onEnter,
    onAfterEnter,
    onEnterCancelled,
    onBeforeLeave,
    onLeave,
    onAfterLeave,
    onLeaveCancelled,
    onBeforeAppear,
    onAppear,
    onAfterAppear,
    onAppearCancelled
  } = props;
  const key = String(vnode.key);
  const leavingVNodesCache = getLeavingNodesForType(state, vnode);
  const callHook2 = (hook, args) => {
    hook && callWithAsyncErrorHandling(
      hook,
      instance,
      9,
      args
    );
  };
  const callAsyncHook = (hook, args) => {
    const done = args[1];
    callHook2(hook, args);
    if (isArray(hook)) {
      if (hook.every((hook2) => hook2.length <= 1)) done();
    } else if (hook.length <= 1) {
      done();
    }
  };
  const hooks = {
    mode,
    persisted,
    beforeEnter(el2) {
      let hook = onBeforeEnter;
      if (!state.isMounted) {
        if (appear) {
          hook = onBeforeAppear || onBeforeEnter;
        } else {
          return;
        }
      }
      if (el2[leaveCbKey]) {
        el2[leaveCbKey](
          true
          /* cancelled */
        );
      }
      const leavingVNode = leavingVNodesCache[key];
      if (leavingVNode && isSameVNodeType(vnode, leavingVNode) && leavingVNode.el[leaveCbKey]) {
        leavingVNode.el[leaveCbKey]();
      }
      callHook2(hook, [el2]);
    },
    enter(el2) {
      let hook = onEnter;
      let afterHook = onAfterEnter;
      let cancelHook = onEnterCancelled;
      if (!state.isMounted) {
        if (appear) {
          hook = onAppear || onEnter;
          afterHook = onAfterAppear || onAfterEnter;
          cancelHook = onAppearCancelled || onEnterCancelled;
        } else {
          return;
        }
      }
      let called = false;
      const done = el2[enterCbKey$1] = (cancelled) => {
        if (called) return;
        called = true;
        if (cancelled) {
          callHook2(cancelHook, [el2]);
        } else {
          callHook2(afterHook, [el2]);
        }
        if (hooks.delayedLeave) {
          hooks.delayedLeave();
        }
        el2[enterCbKey$1] = void 0;
      };
      if (hook) {
        callAsyncHook(hook, [el2, done]);
      } else {
        done();
      }
    },
    leave(el2, remove2) {
      const key2 = String(vnode.key);
      if (el2[enterCbKey$1]) {
        el2[enterCbKey$1](
          true
          /* cancelled */
        );
      }
      if (state.isUnmounting) {
        return remove2();
      }
      callHook2(onBeforeLeave, [el2]);
      let called = false;
      const done = el2[leaveCbKey] = (cancelled) => {
        if (called) return;
        called = true;
        remove2();
        if (cancelled) {
          callHook2(onLeaveCancelled, [el2]);
        } else {
          callHook2(onAfterLeave, [el2]);
        }
        el2[leaveCbKey] = void 0;
        if (leavingVNodesCache[key2] === vnode) {
          delete leavingVNodesCache[key2];
        }
      };
      leavingVNodesCache[key2] = vnode;
      if (onLeave) {
        callAsyncHook(onLeave, [el2, done]);
      } else {
        done();
      }
    },
    clone(vnode2) {
      const hooks2 = resolveTransitionHooks(
        vnode2,
        props,
        state,
        instance,
        postClone
      );
      if (postClone) postClone(hooks2);
      return hooks2;
    }
  };
  return hooks;
}
function emptyPlaceholder(vnode) {
  if (isKeepAlive(vnode)) {
    vnode = cloneVNode(vnode);
    vnode.children = null;
    return vnode;
  }
}
function getInnerChild$1(vnode) {
  if (!isKeepAlive(vnode)) {
    if (isTeleport(vnode.type) && vnode.children) {
      return findNonCommentChild(vnode.children);
    }
    return vnode;
  }
  if (vnode.component) {
    return vnode.component.subTree;
  }
  const { shapeFlag, children } = vnode;
  if (children) {
    if (shapeFlag & 16) {
      return children[0];
    }
    if (shapeFlag & 32 && isFunction(children.default)) {
      return children.default();
    }
  }
}
function setTransitionHooks(vnode, hooks) {
  if (vnode.shapeFlag & 6 && vnode.component) {
    vnode.transition = hooks;
    setTransitionHooks(vnode.component.subTree, hooks);
  } else if (vnode.shapeFlag & 128) {
    vnode.ssContent.transition = hooks.clone(vnode.ssContent);
    vnode.ssFallback.transition = hooks.clone(vnode.ssFallback);
  } else {
    vnode.transition = hooks;
  }
}
function getTransitionRawChildren(children, keepComment = false, parentKey) {
  let ret = [];
  let keyedFragmentCount = 0;
  for (let i = 0; i < children.length; i++) {
    let child = children[i];
    const key = parentKey == null ? child.key : String(parentKey) + String(child.key != null ? child.key : i);
    if (child.type === Fragment) {
      if (child.patchFlag & 128) keyedFragmentCount++;
      ret = ret.concat(
        getTransitionRawChildren(child.children, keepComment, key)
      );
    } else if (keepComment || child.type !== Comment) {
      ret.push(key != null ? cloneVNode(child, { key }) : child);
    }
  }
  if (keyedFragmentCount > 1) {
    for (let i = 0; i < ret.length; i++) {
      ret[i].patchFlag = -2;
    }
  }
  return ret;
}
// @__NO_SIDE_EFFECTS__
function defineComponent(options, extraOptions) {
  return isFunction(options) ? (
    // #8236: extend call and options.name access are considered side-effects
    // by Rollup, so we have to wrap it in a pure-annotated IIFE.
    /* @__PURE__ */ (() => extend({ name: options.name }, extraOptions, { setup: options }))()
  ) : options;
}
function useId() {
  const i = getCurrentInstance();
  if (i) {
    return (i.appContext.config.idPrefix || "v") + "-" + i.ids[0] + i.ids[1]++;
  }
  return "";
}
function markAsyncBoundary(instance) {
  instance.ids = [instance.ids[0] + instance.ids[2]++ + "-", 0, 0];
}
function useTemplateRef(key) {
  const i = getCurrentInstance();
  const r7 = shallowRef(null);
  if (i) {
    const refs = i.refs === EMPTY_OBJ ? i.refs = {} : i.refs;
    {
      Object.defineProperty(refs, key, {
        enumerable: true,
        get: () => r7.value,
        set: (val) => r7.value = val
      });
    }
  }
  const ret = r7;
  return ret;
}
const pendingSetRefMap = /* @__PURE__ */ new WeakMap();
function setRef(rawRef, oldRawRef, parentSuspense, vnode, isUnmount = false) {
  if (isArray(rawRef)) {
    rawRef.forEach(
      (r7, i) => setRef(
        r7,
        oldRawRef && (isArray(oldRawRef) ? oldRawRef[i] : oldRawRef),
        parentSuspense,
        vnode,
        isUnmount
      )
    );
    return;
  }
  if (isAsyncWrapper(vnode) && !isUnmount) {
    if (vnode.shapeFlag & 512 && vnode.type.__asyncResolved && vnode.component.subTree.component) {
      setRef(rawRef, oldRawRef, parentSuspense, vnode.component.subTree);
    }
    return;
  }
  const refValue = vnode.shapeFlag & 4 ? getComponentPublicInstance(vnode.component) : vnode.el;
  const value = isUnmount ? null : refValue;
  const { i: owner, r: ref3 } = rawRef;
  const oldRef = oldRawRef && oldRawRef.r;
  const refs = owner.refs === EMPTY_OBJ ? owner.refs = {} : owner.refs;
  const setupState = owner.setupState;
  const rawSetupState = toRaw(setupState);
  const canSetSetupRef = setupState === EMPTY_OBJ ? NO : (key) => {
    return hasOwn(rawSetupState, key);
  };
  if (oldRef != null && oldRef !== ref3) {
    invalidatePendingSetRef(oldRawRef);
    if (isString(oldRef)) {
      refs[oldRef] = null;
      if (canSetSetupRef(oldRef)) {
        setupState[oldRef] = null;
      }
    } else if (isRef(oldRef)) {
      {
        oldRef.value = null;
      }
      const oldRawRefAtom = oldRawRef;
      if (oldRawRefAtom.k) refs[oldRawRefAtom.k] = null;
    }
  }
  if (isFunction(ref3)) {
    callWithErrorHandling(ref3, owner, 12, [value, refs]);
  } else {
    const _isString = isString(ref3);
    const _isRef = isRef(ref3);
    if (_isString || _isRef) {
      const doSet = () => {
        if (rawRef.f) {
          const existing = _isString ? canSetSetupRef(ref3) ? setupState[ref3] : refs[ref3] : ref3.value;
          if (isUnmount) {
            isArray(existing) && remove(existing, refValue);
          } else {
            if (!isArray(existing)) {
              if (_isString) {
                refs[ref3] = [refValue];
                if (canSetSetupRef(ref3)) {
                  setupState[ref3] = refs[ref3];
                }
              } else {
                const newVal = [refValue];
                {
                  ref3.value = newVal;
                }
                if (rawRef.k) refs[rawRef.k] = newVal;
              }
            } else if (!existing.includes(refValue)) {
              existing.push(refValue);
            }
          }
        } else if (_isString) {
          refs[ref3] = value;
          if (canSetSetupRef(ref3)) {
            setupState[ref3] = value;
          }
        } else if (_isRef) {
          {
            ref3.value = value;
          }
          if (rawRef.k) refs[rawRef.k] = value;
        } else ;
      };
      if (value) {
        const job = () => {
          doSet();
          pendingSetRefMap.delete(rawRef);
        };
        job.id = -1;
        pendingSetRefMap.set(rawRef, job);
        queuePostRenderEffect(job, parentSuspense);
      } else {
        invalidatePendingSetRef(rawRef);
        doSet();
      }
    }
  }
}
function invalidatePendingSetRef(rawRef) {
  const pendingSetRef = pendingSetRefMap.get(rawRef);
  if (pendingSetRef) {
    pendingSetRef.flags |= 8;
    pendingSetRefMap.delete(rawRef);
  }
}
let hasLoggedMismatchError = false;
const logMismatchError = () => {
  if (hasLoggedMismatchError) {
    return;
  }
  console.error("Hydration completed but contains mismatches.");
  hasLoggedMismatchError = true;
};
const isSVGContainer = (container) => container.namespaceURI.includes("svg") && container.tagName !== "foreignObject";
const isMathMLContainer = (container) => container.namespaceURI.includes("MathML");
const getContainerType = (container) => {
  if (container.nodeType !== 1) return void 0;
  if (isSVGContainer(container)) return "svg";
  if (isMathMLContainer(container)) return "mathml";
  return void 0;
};
const isComment = (node) => node.nodeType === 8;
function createHydrationFunctions(rendererInternals) {
  const {
    mt: mountComponent,
    p: patch,
    o: {
      patchProp: patchProp2,
      createText,
      nextSibling,
      parentNode,
      remove: remove2,
      insert,
      createComment
    }
  } = rendererInternals;
  const hydrate2 = (vnode, container) => {
    if (!container.hasChildNodes()) {
      patch(null, vnode, container);
      flushPostFlushCbs();
      container._vnode = vnode;
      return;
    }
    hydrateNode(container.firstChild, vnode, null, null, null);
    flushPostFlushCbs();
    container._vnode = vnode;
  };
  const hydrateNode = (node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized = false) => {
    optimized = optimized || !!vnode.dynamicChildren;
    const isFragmentStart = isComment(node) && node.data === "[";
    const onMismatch = () => handleMismatch(
      node,
      vnode,
      parentComponent,
      parentSuspense,
      slotScopeIds,
      isFragmentStart
    );
    const { type, ref: ref3, shapeFlag, patchFlag } = vnode;
    let domType = node.nodeType;
    vnode.el = node;
    if (patchFlag === -2) {
      optimized = false;
      vnode.dynamicChildren = null;
    }
    let nextNode = null;
    switch (type) {
      case Text:
        if (domType !== 3) {
          if (vnode.children === "") {
            insert(vnode.el = createText(""), parentNode(node), node);
            nextNode = node;
          } else {
            nextNode = onMismatch();
          }
        } else {
          if (node.data !== vnode.children) {
            logMismatchError();
            node.data = vnode.children;
          }
          nextNode = nextSibling(node);
        }
        break;
      case Comment:
        if (isTemplateNode2(node)) {
          nextNode = nextSibling(node);
          replaceNode(
            vnode.el = node.content.firstChild,
            node,
            parentComponent
          );
        } else if (domType !== 8 || isFragmentStart) {
          nextNode = onMismatch();
        } else {
          nextNode = nextSibling(node);
        }
        break;
      case Static:
        if (isFragmentStart) {
          node = nextSibling(node);
          domType = node.nodeType;
        }
        if (domType === 1 || domType === 3) {
          nextNode = node;
          const needToAdoptContent = !vnode.children.length;
          for (let i = 0; i < vnode.staticCount; i++) {
            if (needToAdoptContent)
              vnode.children += nextNode.nodeType === 1 ? nextNode.outerHTML : nextNode.data;
            if (i === vnode.staticCount - 1) {
              vnode.anchor = nextNode;
            }
            nextNode = nextSibling(nextNode);
          }
          return isFragmentStart ? nextSibling(nextNode) : nextNode;
        } else {
          onMismatch();
        }
        break;
      case Fragment:
        if (!isFragmentStart) {
          nextNode = onMismatch();
        } else {
          nextNode = hydrateFragment(
            node,
            vnode,
            parentComponent,
            parentSuspense,
            slotScopeIds,
            optimized
          );
        }
        break;
      default:
        if (shapeFlag & 1) {
          if ((domType !== 1 || vnode.type.toLowerCase() !== node.tagName.toLowerCase()) && !isTemplateNode2(node)) {
            nextNode = onMismatch();
          } else {
            nextNode = hydrateElement(
              node,
              vnode,
              parentComponent,
              parentSuspense,
              slotScopeIds,
              optimized
            );
          }
        } else if (shapeFlag & 6) {
          vnode.slotScopeIds = slotScopeIds;
          const container = parentNode(node);
          if (isFragmentStart) {
            nextNode = locateClosingAnchor(node);
          } else if (isComment(node) && node.data === "teleport start") {
            nextNode = locateClosingAnchor(node, node.data, "teleport end");
          } else {
            nextNode = nextSibling(node);
          }
          mountComponent(
            vnode,
            container,
            null,
            parentComponent,
            parentSuspense,
            getContainerType(container),
            optimized
          );
          if (isAsyncWrapper(vnode) && !vnode.type.__asyncResolved) {
            let subTree;
            if (isFragmentStart) {
              subTree = createVNode(Fragment);
              subTree.anchor = nextNode ? nextNode.previousSibling : container.lastChild;
            } else {
              subTree = node.nodeType === 3 ? createTextVNode("") : createVNode("div");
            }
            subTree.el = node;
            vnode.component.subTree = subTree;
          }
        } else if (shapeFlag & 64) {
          if (domType !== 8) {
            nextNode = onMismatch();
          } else {
            nextNode = vnode.type.hydrate(
              node,
              vnode,
              parentComponent,
              parentSuspense,
              slotScopeIds,
              optimized,
              rendererInternals,
              hydrateChildren
            );
          }
        } else if (shapeFlag & 128) {
          nextNode = vnode.type.hydrate(
            node,
            vnode,
            parentComponent,
            parentSuspense,
            getContainerType(parentNode(node)),
            slotScopeIds,
            optimized,
            rendererInternals,
            hydrateNode
          );
        } else ;
    }
    if (ref3 != null) {
      setRef(ref3, null, parentSuspense, vnode);
    }
    return nextNode;
  };
  const hydrateElement = (el2, vnode, parentComponent, parentSuspense, slotScopeIds, optimized) => {
    optimized = optimized || !!vnode.dynamicChildren;
    const { type, props, patchFlag, shapeFlag, dirs, transition } = vnode;
    const forcePatch = type === "input" || type === "option";
    if (forcePatch || patchFlag !== -1) {
      if (dirs) {
        invokeDirectiveHook(vnode, null, parentComponent, "created");
      }
      let needCallTransitionHooks = false;
      if (isTemplateNode2(el2)) {
        needCallTransitionHooks = needTransition(
          null,
          // no need check parentSuspense in hydration
          transition
        ) && parentComponent && parentComponent.vnode.props && parentComponent.vnode.props.appear;
        const content = el2.content.firstChild;
        if (needCallTransitionHooks) {
          const cls = content.getAttribute("class");
          if (cls) content.$cls = cls;
          transition.beforeEnter(content);
        }
        replaceNode(content, el2, parentComponent);
        vnode.el = el2 = content;
      }
      if (shapeFlag & 16 && // skip if element has innerHTML / textContent
      !(props && (props.innerHTML || props.textContent))) {
        let next = hydrateChildren(
          el2.firstChild,
          vnode,
          el2,
          parentComponent,
          parentSuspense,
          slotScopeIds,
          optimized
        );
        while (next) {
          if (!isMismatchAllowed(
            el2,
            1
            /* CHILDREN */
          )) {
            logMismatchError();
          }
          const cur = next;
          next = next.nextSibling;
          remove2(cur);
        }
      } else if (shapeFlag & 8) {
        let clientText = vnode.children;
        if (clientText[0] === "\n" && (el2.tagName === "PRE" || el2.tagName === "TEXTAREA")) {
          clientText = clientText.slice(1);
        }
        if (el2.textContent !== clientText) {
          if (!isMismatchAllowed(
            el2,
            0
            /* TEXT */
          )) {
            logMismatchError();
          }
          el2.textContent = vnode.children;
        }
      }
      if (props) {
        if (forcePatch || !optimized || patchFlag & (16 | 32)) {
          const isCustomElement = el2.tagName.includes("-");
          for (const key in props) {
            if (forcePatch && (key.endsWith("value") || key === "indeterminate") || isOn(key) && !isReservedProp(key) || // force hydrate v-bind with .prop modifiers
            key[0] === "." || isCustomElement) {
              patchProp2(el2, key, null, props[key], void 0, parentComponent);
            }
          }
        } else if (props.onClick) {
          patchProp2(
            el2,
            "onClick",
            null,
            props.onClick,
            void 0,
            parentComponent
          );
        } else if (patchFlag & 4 && isReactive(props.style)) {
          for (const key in props.style) props.style[key];
        }
      }
      let vnodeHooks;
      if (vnodeHooks = props && props.onVnodeBeforeMount) {
        invokeVNodeHook(vnodeHooks, parentComponent, vnode);
      }
      if (dirs) {
        invokeDirectiveHook(vnode, null, parentComponent, "beforeMount");
      }
      if ((vnodeHooks = props && props.onVnodeMounted) || dirs || needCallTransitionHooks) {
        queueEffectWithSuspense(() => {
          vnodeHooks && invokeVNodeHook(vnodeHooks, parentComponent, vnode);
          needCallTransitionHooks && transition.enter(el2);
          dirs && invokeDirectiveHook(vnode, null, parentComponent, "mounted");
        }, parentSuspense);
      }
    }
    return el2.nextSibling;
  };
  const hydrateChildren = (node, parentVNode, container, parentComponent, parentSuspense, slotScopeIds, optimized) => {
    optimized = optimized || !!parentVNode.dynamicChildren;
    const children = parentVNode.children;
    const l = children.length;
    for (let i = 0; i < l; i++) {
      const vnode = optimized ? children[i] : children[i] = normalizeVNode(children[i]);
      const isText = vnode.type === Text;
      if (node) {
        if (isText && !optimized) {
          if (i + 1 < l && normalizeVNode(children[i + 1]).type === Text) {
            insert(
              createText(
                node.data.slice(vnode.children.length)
              ),
              container,
              nextSibling(node)
            );
            node.data = vnode.children;
          }
        }
        node = hydrateNode(
          node,
          vnode,
          parentComponent,
          parentSuspense,
          slotScopeIds,
          optimized
        );
      } else if (isText && !vnode.children) {
        insert(vnode.el = createText(""), container);
      } else {
        if (!isMismatchAllowed(
          container,
          1
          /* CHILDREN */
        )) {
          logMismatchError();
        }
        patch(
          null,
          vnode,
          container,
          null,
          parentComponent,
          parentSuspense,
          getContainerType(container),
          slotScopeIds
        );
      }
    }
    return node;
  };
  const hydrateFragment = (node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized) => {
    const { slotScopeIds: fragmentSlotScopeIds } = vnode;
    if (fragmentSlotScopeIds) {
      slotScopeIds = slotScopeIds ? slotScopeIds.concat(fragmentSlotScopeIds) : fragmentSlotScopeIds;
    }
    const container = parentNode(node);
    const next = hydrateChildren(
      nextSibling(node),
      vnode,
      container,
      parentComponent,
      parentSuspense,
      slotScopeIds,
      optimized
    );
    if (next && isComment(next) && next.data === "]") {
      return nextSibling(vnode.anchor = next);
    } else {
      logMismatchError();
      insert(vnode.anchor = createComment(`]`), container, next);
      return next;
    }
  };
  const handleMismatch = (node, vnode, parentComponent, parentSuspense, slotScopeIds, isFragment) => {
    if (!isMismatchAllowed(
      node.parentElement,
      1
      /* CHILDREN */
    )) {
      logMismatchError();
    }
    vnode.el = null;
    if (isFragment) {
      const end = locateClosingAnchor(node);
      while (true) {
        const next2 = nextSibling(node);
        if (next2 && next2 !== end) {
          remove2(next2);
        } else {
          break;
        }
      }
    }
    const next = nextSibling(node);
    const container = parentNode(node);
    remove2(node);
    patch(
      null,
      vnode,
      container,
      next,
      parentComponent,
      parentSuspense,
      getContainerType(container),
      slotScopeIds
    );
    if (parentComponent) {
      parentComponent.vnode.el = vnode.el;
      updateHOCHostEl(parentComponent, vnode.el);
    }
    return next;
  };
  const locateClosingAnchor = (node, open = "[", close = "]") => {
    let match = 0;
    while (node) {
      node = nextSibling(node);
      if (node && isComment(node)) {
        if (node.data === open) match++;
        if (node.data === close) {
          if (match === 0) {
            return nextSibling(node);
          } else {
            match--;
          }
        }
      }
    }
    return node;
  };
  const replaceNode = (newNode, oldNode, parentComponent) => {
    const parentNode2 = oldNode.parentNode;
    if (parentNode2) {
      parentNode2.replaceChild(newNode, oldNode);
    }
    let parent = parentComponent;
    while (parent) {
      if (parent.vnode.el === oldNode) {
        parent.vnode.el = parent.subTree.el = newNode;
      }
      parent = parent.parent;
    }
  };
  const isTemplateNode2 = (node) => {
    return node.nodeType === 1 && node.tagName === "TEMPLATE";
  };
  return [hydrate2, hydrateNode];
}
const allowMismatchAttr = "data-allow-mismatch";
const MismatchTypeString = {
  [
    0
    /* TEXT */
  ]: "text",
  [
    1
    /* CHILDREN */
  ]: "children",
  [
    2
    /* CLASS */
  ]: "class",
  [
    3
    /* STYLE */
  ]: "style",
  [
    4
    /* ATTRIBUTE */
  ]: "attribute"
};
function isMismatchAllowed(el2, allowedType) {
  if (allowedType === 0 || allowedType === 1) {
    while (el2 && !el2.hasAttribute(allowMismatchAttr)) {
      el2 = el2.parentElement;
    }
  }
  const allowedAttr = el2 && el2.getAttribute(allowMismatchAttr);
  if (allowedAttr == null) {
    return false;
  } else if (allowedAttr === "") {
    return true;
  } else {
    const list = allowedAttr.split(",");
    if (allowedType === 0 && list.includes("children")) {
      return true;
    }
    return list.includes(MismatchTypeString[allowedType]);
  }
}
const requestIdleCallback = getGlobalThis().requestIdleCallback || ((cb2) => setTimeout(cb2, 1));
const cancelIdleCallback = getGlobalThis().cancelIdleCallback || ((id) => clearTimeout(id));
const hydrateOnIdle = (timeout = 1e4) => (hydrate2) => {
  const id = requestIdleCallback(hydrate2, { timeout });
  return () => cancelIdleCallback(id);
};
function elementIsVisibleInViewport(el2) {
  const { top, left, bottom, right } = el2.getBoundingClientRect();
  const { innerHeight, innerWidth } = window;
  return (top > 0 && top < innerHeight || bottom > 0 && bottom < innerHeight) && (left > 0 && left < innerWidth || right > 0 && right < innerWidth);
}
const hydrateOnVisible = (opts) => (hydrate2, forEach) => {
  const ob2 = new IntersectionObserver((entries) => {
    for (const e of entries) {
      if (!e.isIntersecting) continue;
      ob2.disconnect();
      hydrate2();
      break;
    }
  }, opts);
  forEach((el2) => {
    if (!(el2 instanceof Element)) return;
    if (elementIsVisibleInViewport(el2)) {
      hydrate2();
      ob2.disconnect();
      return false;
    }
    ob2.observe(el2);
  });
  return () => ob2.disconnect();
};
const hydrateOnMediaQuery = (query) => (hydrate2) => {
  if (query) {
    const mql = matchMedia(query);
    if (mql.matches) {
      hydrate2();
    } else {
      mql.addEventListener("change", hydrate2, { once: true });
      return () => mql.removeEventListener("change", hydrate2);
    }
  }
};
const hydrateOnInteraction = (interactions = []) => (hydrate2, forEach) => {
  if (isString(interactions)) interactions = [interactions];
  let hasHydrated = false;
  const doHydrate = (e) => {
    if (!hasHydrated) {
      hasHydrated = true;
      teardown2();
      hydrate2();
      e.target.dispatchEvent(new e.constructor(e.type, e));
    }
  };
  const teardown2 = () => {
    forEach((el2) => {
      for (const i of interactions) {
        el2.removeEventListener(i, doHydrate);
      }
    });
  };
  forEach((el2) => {
    for (const i of interactions) {
      el2.addEventListener(i, doHydrate, { once: true });
    }
  });
  return teardown2;
};
function forEachElement(node, cb2) {
  if (isComment(node) && node.data === "[") {
    let depth = 1;
    let next = node.nextSibling;
    while (next) {
      if (next.nodeType === 1) {
        const result = cb2(next);
        if (result === false) {
          break;
        }
      } else if (isComment(next)) {
        if (next.data === "]") {
          if (--depth === 0) break;
        } else if (next.data === "[") {
          depth++;
        }
      }
      next = next.nextSibling;
    }
  } else {
    cb2(node);
  }
}
const isAsyncWrapper = (i) => !!i.type.__asyncLoader;
// @__NO_SIDE_EFFECTS__
function defineAsyncComponent(source) {
  if (isFunction(source)) {
    source = { loader: source };
  }
  const {
    loader,
    loadingComponent,
    errorComponent,
    delay = 200,
    hydrate: hydrateStrategy,
    timeout,
    // undefined = never times out
    suspensible = true,
    onError: userOnError
  } = source;
  let pendingRequest = null;
  let resolvedComp;
  let retries = 0;
  const retry = () => {
    retries++;
    pendingRequest = null;
    return load();
  };
  const load = () => {
    let thisRequest;
    return pendingRequest || (thisRequest = pendingRequest = loader().catch((err) => {
      err = err instanceof Error ? err : new Error(String(err));
      if (userOnError) {
        return new Promise((resolve2, reject) => {
          const userRetry = () => resolve2(retry());
          const userFail = () => reject(err);
          userOnError(err, userRetry, userFail, retries + 1);
        });
      } else {
        throw err;
      }
    }).then((comp) => {
      if (thisRequest !== pendingRequest && pendingRequest) {
        return pendingRequest;
      }
      if (comp && (comp.__esModule || comp[Symbol.toStringTag] === "Module")) {
        comp = comp.default;
      }
      resolvedComp = comp;
      return comp;
    }));
  };
  return /* @__PURE__ */ defineComponent({
    name: "AsyncComponentWrapper",
    __asyncLoader: load,
    __asyncHydrate(el2, instance, hydrate2) {
      let patched = false;
      (instance.bu || (instance.bu = [])).push(() => patched = true);
      const performHydrate = () => {
        if (patched) {
          return;
        }
        hydrate2();
      };
      const doHydrate = hydrateStrategy ? () => {
        const teardown2 = hydrateStrategy(
          performHydrate,
          (cb2) => forEachElement(el2, cb2)
        );
        if (teardown2) {
          (instance.bum || (instance.bum = [])).push(teardown2);
        }
      } : performHydrate;
      if (resolvedComp) {
        doHydrate();
      } else {
        load().then(() => !instance.isUnmounted && doHydrate());
      }
    },
    get __asyncResolved() {
      return resolvedComp;
    },
    setup() {
      const instance = currentInstance;
      markAsyncBoundary(instance);
      if (resolvedComp) {
        return () => createInnerComp(resolvedComp, instance);
      }
      const onError = (err) => {
        pendingRequest = null;
        handleError(
          err,
          instance,
          13,
          !errorComponent
        );
      };
      if (suspensible && instance.suspense || isInSSRComponentSetup) {
        return load().then((comp) => {
          return () => createInnerComp(comp, instance);
        }).catch((err) => {
          onError(err);
          return () => errorComponent ? createVNode(errorComponent, {
            error: err
          }) : null;
        });
      }
      const loaded = ref(false);
      const error = ref();
      const delayed = ref(!!delay);
      if (delay) {
        setTimeout(() => {
          delayed.value = false;
        }, delay);
      }
      if (timeout != null) {
        setTimeout(() => {
          if (!loaded.value && !error.value) {
            const err = new Error(
              `Async component timed out after ${timeout}ms.`
            );
            onError(err);
            error.value = err;
          }
        }, timeout);
      }
      load().then(() => {
        loaded.value = true;
        if (instance.parent && isKeepAlive(instance.parent.vnode)) {
          instance.parent.update();
        }
      }).catch((err) => {
        onError(err);
        error.value = err;
      });
      return () => {
        if (loaded.value && resolvedComp) {
          return createInnerComp(resolvedComp, instance);
        } else if (error.value && errorComponent) {
          return createVNode(errorComponent, {
            error: error.value
          });
        } else if (loadingComponent && !delayed.value) {
          return createVNode(loadingComponent);
        }
      };
    }
  });
}
function createInnerComp(comp, parent) {
  const { ref: ref22, props, children, ce: ce2 } = parent.vnode;
  const vnode = createVNode(comp, props, children);
  vnode.ref = ref22;
  vnode.ce = ce2;
  delete parent.vnode.ce;
  return vnode;
}
const isKeepAlive = (vnode) => vnode.type.__isKeepAlive;
const KeepAliveImpl = {
  name: `KeepAlive`,
  // Marker for special handling inside the renderer. We are not using a ===
  // check directly on KeepAlive in the renderer, because importing it directly
  // would prevent it from being tree-shaken.
  __isKeepAlive: true,
  props: {
    include: [String, RegExp, Array],
    exclude: [String, RegExp, Array],
    max: [String, Number]
  },
  setup(props, { slots }) {
    const instance = getCurrentInstance();
    const sharedContext = instance.ctx;
    if (!sharedContext.renderer) {
      return () => {
        const children = slots.default && slots.default();
        return children && children.length === 1 ? children[0] : children;
      };
    }
    const cache = /* @__PURE__ */ new Map();
    const keys = /* @__PURE__ */ new Set();
    let current = null;
    const parentSuspense = instance.suspense;
    const {
      renderer: {
        p: patch,
        m: move,
        um: _unmount,
        o: { createElement }
      }
    } = sharedContext;
    const storageContainer = createElement("div");
    sharedContext.activate = (vnode, container, anchor, namespace, optimized) => {
      const instance2 = vnode.component;
      move(vnode, container, anchor, 0, parentSuspense);
      patch(
        instance2.vnode,
        vnode,
        container,
        anchor,
        instance2,
        parentSuspense,
        namespace,
        vnode.slotScopeIds,
        optimized
      );
      queuePostRenderEffect(() => {
        instance2.isDeactivated = false;
        if (instance2.a) {
          invokeArrayFns(instance2.a);
        }
        const vnodeHook = vnode.props && vnode.props.onVnodeMounted;
        if (vnodeHook) {
          invokeVNodeHook(vnodeHook, instance2.parent, vnode);
        }
      }, parentSuspense);
    };
    sharedContext.deactivate = (vnode) => {
      const instance2 = vnode.component;
      invalidateMount(instance2.m);
      invalidateMount(instance2.a);
      move(vnode, storageContainer, null, 1, parentSuspense);
      queuePostRenderEffect(() => {
        if (instance2.da) {
          invokeArrayFns(instance2.da);
        }
        const vnodeHook = vnode.props && vnode.props.onVnodeUnmounted;
        if (vnodeHook) {
          invokeVNodeHook(vnodeHook, instance2.parent, vnode);
        }
        instance2.isDeactivated = true;
      }, parentSuspense);
    };
    function unmount(vnode) {
      resetShapeFlag(vnode);
      _unmount(vnode, instance, parentSuspense, true);
    }
    function pruneCache(filter) {
      cache.forEach((vnode, key) => {
        const name = getComponentName(vnode.type);
        if (name && !filter(name)) {
          pruneCacheEntry(key);
        }
      });
    }
    function pruneCacheEntry(key) {
      const cached = cache.get(key);
      if (cached && (!current || !isSameVNodeType(cached, current))) {
        unmount(cached);
      } else if (current) {
        resetShapeFlag(current);
      }
      cache.delete(key);
      keys.delete(key);
    }
    watch(
      () => [props.include, props.exclude],
      ([include, exclude]) => {
        include && pruneCache((name) => matches(include, name));
        exclude && pruneCache((name) => !matches(exclude, name));
      },
      // prune post-render after `current` has been updated
      { flush: "post", deep: true }
    );
    let pendingCacheKey = null;
    const cacheSubtree = () => {
      if (pendingCacheKey != null) {
        if (isSuspense(instance.subTree.type)) {
          queuePostRenderEffect(() => {
            cache.set(pendingCacheKey, getInnerChild(instance.subTree));
          }, instance.subTree.suspense);
        } else {
          cache.set(pendingCacheKey, getInnerChild(instance.subTree));
        }
      }
    };
    onMounted(cacheSubtree);
    onUpdated(cacheSubtree);
    onBeforeUnmount(() => {
      cache.forEach((cached) => {
        const { subTree, suspense } = instance;
        const vnode = getInnerChild(subTree);
        if (cached.type === vnode.type && cached.key === vnode.key) {
          resetShapeFlag(vnode);
          const da2 = vnode.component.da;
          da2 && queuePostRenderEffect(da2, suspense);
          return;
        }
        unmount(cached);
      });
    });
    return () => {
      pendingCacheKey = null;
      if (!slots.default) {
        return current = null;
      }
      const children = slots.default();
      const rawVNode = children[0];
      if (children.length > 1) {
        current = null;
        return children;
      } else if (!isVNode(rawVNode) || !(rawVNode.shapeFlag & 4) && !(rawVNode.shapeFlag & 128)) {
        current = null;
        return rawVNode;
      }
      let vnode = getInnerChild(rawVNode);
      if (vnode.type === Comment) {
        current = null;
        return vnode;
      }
      const comp = vnode.type;
      const name = getComponentName(
        isAsyncWrapper(vnode) ? vnode.type.__asyncResolved || {} : comp
      );
      const { include, exclude, max } = props;
      if (include && (!name || !matches(include, name)) || exclude && name && matches(exclude, name)) {
        vnode.shapeFlag &= -257;
        current = vnode;
        return rawVNode;
      }
      const key = vnode.key == null ? comp : vnode.key;
      const cachedVNode = cache.get(key);
      if (vnode.el) {
        vnode = cloneVNode(vnode);
        if (rawVNode.shapeFlag & 128) {
          rawVNode.ssContent = vnode;
        }
      }
      pendingCacheKey = key;
      if (cachedVNode) {
        vnode.el = cachedVNode.el;
        vnode.component = cachedVNode.component;
        if (vnode.transition) {
          setTransitionHooks(vnode, vnode.transition);
        }
        vnode.shapeFlag |= 512;
        keys.delete(key);
        keys.add(key);
      } else {
        keys.add(key);
        if (max && keys.size > parseInt(max, 10)) {
          pruneCacheEntry(keys.values().next().value);
        }
      }
      vnode.shapeFlag |= 256;
      current = vnode;
      return isSuspense(rawVNode.type) ? rawVNode : vnode;
    };
  }
};
const KeepAlive = KeepAliveImpl;
function matches(pattern, name) {
  if (isArray(pattern)) {
    return pattern.some((p5) => matches(p5, name));
  } else if (isString(pattern)) {
    return pattern.split(",").includes(name);
  } else if (isRegExp(pattern)) {
    pattern.lastIndex = 0;
    return pattern.test(name);
  }
  return false;
}
function onActivated(hook, target) {
  registerKeepAliveHook(hook, "a", target);
}
function onDeactivated(hook, target) {
  registerKeepAliveHook(hook, "da", target);
}
function registerKeepAliveHook(hook, type, target = currentInstance) {
  const wrappedHook = hook.__wdc || (hook.__wdc = () => {
    let current = target;
    while (current) {
      if (current.isDeactivated) {
        return;
      }
      current = current.parent;
    }
    return hook();
  });
  injectHook(type, wrappedHook, target);
  if (target) {
    let current = target.parent;
    while (current && current.parent) {
      if (isKeepAlive(current.parent.vnode)) {
        injectToKeepAliveRoot(wrappedHook, type, target, current);
      }
      current = current.parent;
    }
  }
}
function injectToKeepAliveRoot(hook, type, target, keepAliveRoot) {
  const injected = injectHook(
    type,
    hook,
    keepAliveRoot,
    true
    /* prepend */
  );
  onUnmounted(() => {
    remove(keepAliveRoot[type], injected);
  }, target);
}
function resetShapeFlag(vnode) {
  vnode.shapeFlag &= -257;
  vnode.shapeFlag &= -513;
}
function getInnerChild(vnode) {
  return vnode.shapeFlag & 128 ? vnode.ssContent : vnode;
}
function injectHook(type, hook, target = currentInstance, prepend = false) {
  if (target) {
    const hooks = target[type] || (target[type] = []);
    const wrappedHook = hook.__weh || (hook.__weh = (...args) => {
      pauseTracking();
      const reset2 = setCurrentInstance(target);
      const res = callWithAsyncErrorHandling(hook, target, type, args);
      reset2();
      resetTracking();
      return res;
    });
    if (prepend) {
      hooks.unshift(wrappedHook);
    } else {
      hooks.push(wrappedHook);
    }
    return wrappedHook;
  }
}
const createHook = (lifecycle) => (hook, target = currentInstance) => {
  if (!isInSSRComponentSetup || lifecycle === "sp") {
    injectHook(lifecycle, (...args) => hook(...args), target);
  }
};
const onBeforeMount = createHook("bm");
const onMounted = createHook("m");
const onBeforeUpdate = createHook(
  "bu"
);
const onUpdated = createHook("u");
const onBeforeUnmount = createHook(
  "bum"
);
const onUnmounted = createHook("um");
const onServerPrefetch = createHook(
  "sp"
);
const onRenderTriggered = createHook("rtg");
const onRenderTracked = createHook("rtc");
function onErrorCaptured(hook, target = currentInstance) {
  injectHook("ec", hook, target);
}
const COMPONENTS = "components";
const DIRECTIVES = "directives";
function resolveComponent(name, maybeSelfReference) {
  return resolveAsset(COMPONENTS, name, true, maybeSelfReference) || name;
}
const NULL_DYNAMIC_COMPONENT = Symbol.for("v-ndc");
function resolveDynamicComponent(component) {
  if (isString(component)) {
    return resolveAsset(COMPONENTS, component, false) || component;
  } else {
    return component || NULL_DYNAMIC_COMPONENT;
  }
}
function resolveDirective(name) {
  return resolveAsset(DIRECTIVES, name);
}
function resolveAsset(type, name, warnMissing = true, maybeSelfReference = false) {
  const instance = currentRenderingInstance || currentInstance;
  if (instance) {
    const Component = instance.type;
    if (type === COMPONENTS) {
      const selfName = getComponentName(
        Component,
        false
      );
      if (selfName && (selfName === name || selfName === camelize(name) || selfName === capitalize(camelize(name)))) {
        return Component;
      }
    }
    const res = (
      // local registration
      // check instance[type] first which is resolved for options API
      resolve(instance[type] || Component[type], name) || // global registration
      resolve(instance.appContext[type], name)
    );
    if (!res && maybeSelfReference) {
      return Component;
    }
    return res;
  }
}
function resolve(registry, name) {
  return registry && (registry[name] || registry[camelize(name)] || registry[capitalize(camelize(name))]);
}
function renderList(source, renderItem, cache, index) {
  let ret;
  const cached = cache && cache[index];
  const sourceIsArray = isArray(source);
  if (sourceIsArray || isString(source)) {
    const sourceIsReactiveArray = sourceIsArray && isReactive(source);
    let needsWrap = false;
    let isReadonlySource = false;
    if (sourceIsReactiveArray) {
      needsWrap = !isShallow(source);
      isReadonlySource = isReadonly(source);
      source = shallowReadArray(source);
    }
    ret = new Array(source.length);
    for (let i = 0, l = source.length; i < l; i++) {
      ret[i] = renderItem(
        needsWrap ? isReadonlySource ? toReadonly(toReactive(source[i])) : toReactive(source[i]) : source[i],
        i,
        void 0,
        cached && cached[i]
      );
    }
  } else if (typeof source === "number") {
    ret = new Array(source);
    for (let i = 0; i < source; i++) {
      ret[i] = renderItem(i + 1, i, void 0, cached && cached[i]);
    }
  } else if (isObject(source)) {
    if (source[Symbol.iterator]) {
      ret = Array.from(
        source,
        (item, i) => renderItem(item, i, void 0, cached && cached[i])
      );
    } else {
      const keys = Object.keys(source);
      ret = new Array(keys.length);
      for (let i = 0, l = keys.length; i < l; i++) {
        const key = keys[i];
        ret[i] = renderItem(source[key], key, i, cached && cached[i]);
      }
    }
  } else {
    ret = [];
  }
  if (cache) {
    cache[index] = ret;
  }
  return ret;
}
function createSlots(slots, dynamicSlots) {
  for (let i = 0; i < dynamicSlots.length; i++) {
    const slot = dynamicSlots[i];
    if (isArray(slot)) {
      for (let j = 0; j < slot.length; j++) {
        slots[slot[j].name] = slot[j].fn;
      }
    } else if (slot) {
      slots[slot.name] = slot.key ? (...args) => {
        const res = slot.fn(...args);
        if (res) res.key = slot.key;
        return res;
      } : slot.fn;
    }
  }
  return slots;
}
function renderSlot(slots, name, props = {}, fallback, noSlotted) {
  if (currentRenderingInstance.ce || currentRenderingInstance.parent && isAsyncWrapper(currentRenderingInstance.parent) && currentRenderingInstance.parent.ce) {
    if (name !== "default") props.name = name;
    return openBlock(), createBlock(
      Fragment,
      null,
      [createVNode("slot", props, fallback && fallback())],
      64
    );
  }
  let slot = slots[name];
  if (slot && slot._c) {
    slot._d = false;
  }
  openBlock();
  const validSlotContent = slot && ensureValidVNode(slot(props));
  const slotKey = props.key || // slot content array of a dynamic conditional slot may have a branch
  // key attached in the `createSlots` helper, respect that
  validSlotContent && validSlotContent.key;
  const rendered = createBlock(
    Fragment,
    {
      key: (slotKey && !isSymbol(slotKey) ? slotKey : `_${name}`) + // #7256 force differentiate fallback content from actual content
      (!validSlotContent && fallback ? "_fb" : "")
    },
    validSlotContent || (fallback ? fallback() : []),
    validSlotContent && slots._ === 1 ? 64 : -2
  );
  if (!noSlotted && rendered.scopeId) {
    rendered.slotScopeIds = [rendered.scopeId + "-s"];
  }
  if (slot && slot._c) {
    slot._d = true;
  }
  return rendered;
}
function ensureValidVNode(vnodes) {
  return vnodes.some((child) => {
    if (!isVNode(child)) return true;
    if (child.type === Comment) return false;
    if (child.type === Fragment && !ensureValidVNode(child.children))
      return false;
    return true;
  }) ? vnodes : null;
}
function toHandlers(obj, preserveCaseIfNecessary) {
  const ret = {};
  for (const key in obj) {
    ret[preserveCaseIfNecessary && /[A-Z]/.test(key) ? `on:${key}` : toHandlerKey(key)] = obj[key];
  }
  return ret;
}
const getPublicInstance = (i) => {
  if (!i) return null;
  if (isStatefulComponent(i)) return getComponentPublicInstance(i);
  return getPublicInstance(i.parent);
};
const publicPropertiesMap = (
  // Move PURE marker to new line to workaround compiler discarding it
  // due to type annotation
  /* @__PURE__ */ extend(/* @__PURE__ */ Object.create(null), {
    $: (i) => i,
    $el: (i) => i.vnode.el,
    $data: (i) => i.data,
    $props: (i) => i.props,
    $attrs: (i) => i.attrs,
    $slots: (i) => i.slots,
    $refs: (i) => i.refs,
    $parent: (i) => getPublicInstance(i.parent),
    $root: (i) => getPublicInstance(i.root),
    $host: (i) => i.ce,
    $emit: (i) => i.emit,
    $options: (i) => resolveMergedOptions(i),
    $forceUpdate: (i) => i.f || (i.f = () => {
      queueJob(i.update);
    }),
    $nextTick: (i) => i.n || (i.n = nextTick.bind(i.proxy)),
    $watch: (i) => instanceWatch.bind(i)
  })
);
const hasSetupBinding = (state, key) => state !== EMPTY_OBJ && !state.__isScriptSetup && hasOwn(state, key);
const PublicInstanceProxyHandlers = {
  get({ _: instance }, key) {
    if (key === "__v_skip") {
      return true;
    }
    const { ctx, setupState, data, props, accessCache, type, appContext } = instance;
    let normalizedProps;
    if (key[0] !== "$") {
      const n = accessCache[key];
      if (n !== void 0) {
        switch (n) {
          case 1:
            return setupState[key];
          case 2:
            return data[key];
          case 4:
            return ctx[key];
          case 3:
            return props[key];
        }
      } else if (hasSetupBinding(setupState, key)) {
        accessCache[key] = 1;
        return setupState[key];
      } else if (data !== EMPTY_OBJ && hasOwn(data, key)) {
        accessCache[key] = 2;
        return data[key];
      } else if (
        // only cache other properties when instance has declared (thus stable)
        // props
        (normalizedProps = instance.propsOptions[0]) && hasOwn(normalizedProps, key)
      ) {
        accessCache[key] = 3;
        return props[key];
      } else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {
        accessCache[key] = 4;
        return ctx[key];
      } else if (shouldCacheAccess) {
        accessCache[key] = 0;
      }
    }
    const publicGetter = publicPropertiesMap[key];
    let cssModule, globalProperties;
    if (publicGetter) {
      if (key === "$attrs") {
        track(instance.attrs, "get", "");
      }
      return publicGetter(instance);
    } else if (
      // css module (injected by vue-loader)
      (cssModule = type.__cssModules) && (cssModule = cssModule[key])
    ) {
      return cssModule;
    } else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {
      accessCache[key] = 4;
      return ctx[key];
    } else if (
      // global properties
      globalProperties = appContext.config.globalProperties, hasOwn(globalProperties, key)
    ) {
      {
        return globalProperties[key];
      }
    } else ;
  },
  set({ _: instance }, key, value) {
    const { data, setupState, ctx } = instance;
    if (hasSetupBinding(setupState, key)) {
      setupState[key] = value;
      return true;
    } else if (data !== EMPTY_OBJ && hasOwn(data, key)) {
      data[key] = value;
      return true;
    } else if (hasOwn(instance.props, key)) {
      return false;
    }
    if (key[0] === "$" && key.slice(1) in instance) {
      return false;
    } else {
      {
        ctx[key] = value;
      }
    }
    return true;
  },
  has({
    _: { data, setupState, accessCache, ctx, appContext, propsOptions, type }
  }, key) {
    let normalizedProps, cssModules;
    return !!(accessCache[key] || data !== EMPTY_OBJ && key[0] !== "$" && hasOwn(data, key) || hasSetupBinding(setupState, key) || (normalizedProps = propsOptions[0]) && hasOwn(normalizedProps, key) || hasOwn(ctx, key) || hasOwn(publicPropertiesMap, key) || hasOwn(appContext.config.globalProperties, key) || (cssModules = type.__cssModules) && cssModules[key]);
  },
  defineProperty(target, key, descriptor) {
    if (descriptor.get != null) {
      target._.accessCache[key] = 0;
    } else if (hasOwn(descriptor, "value")) {
      this.set(target, key, descriptor.value, null);
    }
    return Reflect.defineProperty(target, key, descriptor);
  }
};
const RuntimeCompiledPublicInstanceProxyHandlers = /* @__PURE__ */ extend({}, PublicInstanceProxyHandlers, {
  get(target, key) {
    if (key === Symbol.unscopables) {
      return;
    }
    return PublicInstanceProxyHandlers.get(target, key, target);
  },
  has(_5, key) {
    const has = key[0] !== "_" && !isGloballyAllowed(key);
    return has;
  }
});
function defineProps() {
  return null;
}
function defineEmits() {
  return null;
}
function defineExpose(exposed) {
}
function defineOptions(options) {
}
function defineSlots() {
  return null;
}
function defineModel() {
}
function withDefaults(props, defaults) {
  return null;
}
function useSlots() {
  return getContext().slots;
}
function useAttrs() {
  return getContext().attrs;
}
function getContext(calledFunctionName) {
  const i = getCurrentInstance();
  return i.setupContext || (i.setupContext = createSetupContext(i));
}
function normalizePropsOrEmits(props) {
  return isArray(props) ? props.reduce(
    (normalized, p5) => (normalized[p5] = null, normalized),
    {}
  ) : props;
}
function mergeDefaults(raw, defaults) {
  const props = normalizePropsOrEmits(raw);
  for (const key in defaults) {
    if (key.startsWith("__skip")) continue;
    let opt = props[key];
    if (opt) {
      if (isArray(opt) || isFunction(opt)) {
        opt = props[key] = { type: opt, default: defaults[key] };
      } else {
        opt.default = defaults[key];
      }
    } else if (opt === null) {
      opt = props[key] = { default: defaults[key] };
    } else ;
    if (opt && defaults[`__skip_${key}`]) {
      opt.skipFactory = true;
    }
  }
  return props;
}
function mergeModels(a, b) {
  if (!a || !b) return a || b;
  if (isArray(a) && isArray(b)) return a.concat(b);
  return extend({}, normalizePropsOrEmits(a), normalizePropsOrEmits(b));
}
function createPropsRestProxy(props, excludedKeys) {
  const ret = {};
  for (const key in props) {
    if (!excludedKeys.includes(key)) {
      Object.defineProperty(ret, key, {
        enumerable: true,
        get: () => props[key]
      });
    }
  }
  return ret;
}
function withAsyncContext(getAwaitable) {
  const ctx = getCurrentInstance();
  let awaitable = getAwaitable();
  unsetCurrentInstance();
  if (isPromise(awaitable)) {
    awaitable = awaitable.catch((e) => {
      setCurrentInstance(ctx);
      throw e;
    });
  }
  return [awaitable, () => setCurrentInstance(ctx)];
}
let shouldCacheAccess = true;
function applyOptions(instance) {
  const options = resolveMergedOptions(instance);
  const publicThis = instance.proxy;
  const ctx = instance.ctx;
  shouldCacheAccess = false;
  if (options.beforeCreate) {
    callHook$1(options.beforeCreate, instance, "bc");
  }
  const {
    // state
    data: dataOptions,
    computed: computedOptions,
    methods,
    watch: watchOptions,
    provide: provideOptions,
    inject: injectOptions,
    // lifecycle
    created,
    beforeMount,
    mounted,
    beforeUpdate,
    updated,
    activated,
    deactivated,
    beforeDestroy,
    beforeUnmount,
    destroyed,
    unmounted,
    render: render2,
    renderTracked,
    renderTriggered,
    errorCaptured,
    serverPrefetch,
    // public API
    expose,
    inheritAttrs,
    // assets
    components,
    directives,
    filters
  } = options;
  const checkDuplicateProperties = null;
  if (injectOptions) {
    resolveInjections(injectOptions, ctx, checkDuplicateProperties);
  }
  if (methods) {
    for (const key in methods) {
      const methodHandler = methods[key];
      if (isFunction(methodHandler)) {
        {
          ctx[key] = methodHandler.bind(publicThis);
        }
      }
    }
  }
  if (dataOptions) {
    const data = dataOptions.call(publicThis, publicThis);
    if (!isObject(data)) ;
    else {
      instance.data = reactive(data);
    }
  }
  shouldCacheAccess = true;
  if (computedOptions) {
    for (const key in computedOptions) {
      const opt = computedOptions[key];
      const get = isFunction(opt) ? opt.bind(publicThis, publicThis) : isFunction(opt.get) ? opt.get.bind(publicThis, publicThis) : NOOP;
      const set = !isFunction(opt) && isFunction(opt.set) ? opt.set.bind(publicThis) : NOOP;
      const c = computed({
        get,
        set
      });
      Object.defineProperty(ctx, key, {
        enumerable: true,
        configurable: true,
        get: () => c.value,
        set: (v5) => c.value = v5
      });
    }
  }
  if (watchOptions) {
    for (const key in watchOptions) {
      createWatcher(watchOptions[key], ctx, publicThis, key);
    }
  }
  if (provideOptions) {
    const provides = isFunction(provideOptions) ? provideOptions.call(publicThis) : provideOptions;
    Reflect.ownKeys(provides).forEach((key) => {
      provide(key, provides[key]);
    });
  }
  if (created) {
    callHook$1(created, instance, "c");
  }
  function registerLifecycleHook(register, hook) {
    if (isArray(hook)) {
      hook.forEach((_hook) => register(_hook.bind(publicThis)));
    } else if (hook) {
      register(hook.bind(publicThis));
    }
  }
  registerLifecycleHook(onBeforeMount, beforeMount);
  registerLifecycleHook(onMounted, mounted);
  registerLifecycleHook(onBeforeUpdate, beforeUpdate);
  registerLifecycleHook(onUpdated, updated);
  registerLifecycleHook(onActivated, activated);
  registerLifecycleHook(onDeactivated, deactivated);
  registerLifecycleHook(onErrorCaptured, errorCaptured);
  registerLifecycleHook(onRenderTracked, renderTracked);
  registerLifecycleHook(onRenderTriggered, renderTriggered);
  registerLifecycleHook(onBeforeUnmount, beforeUnmount);
  registerLifecycleHook(onUnmounted, unmounted);
  registerLifecycleHook(onServerPrefetch, serverPrefetch);
  if (isArray(expose)) {
    if (expose.length) {
      const exposed = instance.exposed || (instance.exposed = {});
      expose.forEach((key) => {
        Object.defineProperty(exposed, key, {
          get: () => publicThis[key],
          set: (val) => publicThis[key] = val,
          enumerable: true
        });
      });
    } else if (!instance.exposed) {
      instance.exposed = {};
    }
  }
  if (render2 && instance.render === NOOP) {
    instance.render = render2;
  }
  if (inheritAttrs != null) {
    instance.inheritAttrs = inheritAttrs;
  }
  if (components) instance.components = components;
  if (directives) instance.directives = directives;
  if (serverPrefetch) {
    markAsyncBoundary(instance);
  }
}
function resolveInjections(injectOptions, ctx, checkDuplicateProperties = NOOP) {
  if (isArray(injectOptions)) {
    injectOptions = normalizeInject(injectOptions);
  }
  for (const key in injectOptions) {
    const opt = injectOptions[key];
    let injected;
    if (isObject(opt)) {
      if ("default" in opt) {
        injected = inject(
          opt.from || key,
          opt.default,
          true
        );
      } else {
        injected = inject(opt.from || key);
      }
    } else {
      injected = inject(opt);
    }
    if (isRef(injected)) {
      Object.defineProperty(ctx, key, {
        enumerable: true,
        configurable: true,
        get: () => injected.value,
        set: (v5) => injected.value = v5
      });
    } else {
      ctx[key] = injected;
    }
  }
}
function callHook$1(hook, instance, type) {
  callWithAsyncErrorHandling(
    isArray(hook) ? hook.map((h22) => h22.bind(instance.proxy)) : hook.bind(instance.proxy),
    instance,
    type
  );
}
function createWatcher(raw, ctx, publicThis, key) {
  let getter = key.includes(".") ? createPathGetter(publicThis, key) : () => publicThis[key];
  if (isString(raw)) {
    const handler = ctx[raw];
    if (isFunction(handler)) {
      {
        watch(getter, handler);
      }
    }
  } else if (isFunction(raw)) {
    {
      watch(getter, raw.bind(publicThis));
    }
  } else if (isObject(raw)) {
    if (isArray(raw)) {
      raw.forEach((r7) => createWatcher(r7, ctx, publicThis, key));
    } else {
      const handler = isFunction(raw.handler) ? raw.handler.bind(publicThis) : ctx[raw.handler];
      if (isFunction(handler)) {
        watch(getter, handler, raw);
      }
    }
  } else ;
}
function resolveMergedOptions(instance) {
  const base = instance.type;
  const { mixins, extends: extendsOptions } = base;
  const {
    mixins: globalMixins,
    optionsCache: cache,
    config: { optionMergeStrategies }
  } = instance.appContext;
  const cached = cache.get(base);
  let resolved;
  if (cached) {
    resolved = cached;
  } else if (!globalMixins.length && !mixins && !extendsOptions) {
    {
      resolved = base;
    }
  } else {
    resolved = {};
    if (globalMixins.length) {
      globalMixins.forEach(
        (m) => mergeOptions(resolved, m, optionMergeStrategies, true)
      );
    }
    mergeOptions(resolved, base, optionMergeStrategies);
  }
  if (isObject(base)) {
    cache.set(base, resolved);
  }
  return resolved;
}
function mergeOptions(to, from, strats, asMixin = false) {
  const { mixins, extends: extendsOptions } = from;
  if (extendsOptions) {
    mergeOptions(to, extendsOptions, strats, true);
  }
  if (mixins) {
    mixins.forEach(
      (m) => mergeOptions(to, m, strats, true)
    );
  }
  for (const key in from) {
    if (asMixin && key === "expose") ;
    else {
      const strat = internalOptionMergeStrats[key] || strats && strats[key];
      to[key] = strat ? strat(to[key], from[key]) : from[key];
    }
  }
  return to;
}
const internalOptionMergeStrats = {
  data: mergeDataFn,
  props: mergeEmitsOrPropsOptions,
  emits: mergeEmitsOrPropsOptions,
  // objects
  methods: mergeObjectOptions,
  computed: mergeObjectOptions,
  // lifecycle
  beforeCreate: mergeAsArray$1,
  created: mergeAsArray$1,
  beforeMount: mergeAsArray$1,
  mounted: mergeAsArray$1,
  beforeUpdate: mergeAsArray$1,
  updated: mergeAsArray$1,
  beforeDestroy: mergeAsArray$1,
  beforeUnmount: mergeAsArray$1,
  destroyed: mergeAsArray$1,
  unmounted: mergeAsArray$1,
  activated: mergeAsArray$1,
  deactivated: mergeAsArray$1,
  errorCaptured: mergeAsArray$1,
  serverPrefetch: mergeAsArray$1,
  // assets
  components: mergeObjectOptions,
  directives: mergeObjectOptions,
  // watch
  watch: mergeWatchOptions,
  // provide / inject
  provide: mergeDataFn,
  inject: mergeInject
};
function mergeDataFn(to, from) {
  if (!from) {
    return to;
  }
  if (!to) {
    return from;
  }
  return function mergedDataFn() {
    return extend(
      isFunction(to) ? to.call(this, this) : to,
      isFunction(from) ? from.call(this, this) : from
    );
  };
}
function mergeInject(to, from) {
  return mergeObjectOptions(normalizeInject(to), normalizeInject(from));
}
function normalizeInject(raw) {
  if (isArray(raw)) {
    const res = {};
    for (let i = 0; i < raw.length; i++) {
      res[raw[i]] = raw[i];
    }
    return res;
  }
  return raw;
}
function mergeAsArray$1(to, from) {
  return to ? [...new Set([].concat(to, from))] : from;
}
function mergeObjectOptions(to, from) {
  return to ? extend(/* @__PURE__ */ Object.create(null), to, from) : from;
}
function mergeEmitsOrPropsOptions(to, from) {
  if (to) {
    if (isArray(to) && isArray(from)) {
      return [.../* @__PURE__ */ new Set([...to, ...from])];
    }
    return extend(
      /* @__PURE__ */ Object.create(null),
      normalizePropsOrEmits(to),
      normalizePropsOrEmits(from != null ? from : {})
    );
  } else {
    return from;
  }
}
function mergeWatchOptions(to, from) {
  if (!to) return from;
  if (!from) return to;
  const merged = extend(/* @__PURE__ */ Object.create(null), to);
  for (const key in from) {
    merged[key] = mergeAsArray$1(to[key], from[key]);
  }
  return merged;
}
function createAppContext() {
  return {
    app: null,
    config: {
      isNativeTag: NO,
      performance: false,
      globalProperties: {},
      optionMergeStrategies: {},
      errorHandler: void 0,
      warnHandler: void 0,
      compilerOptions: {}
    },
    mixins: [],
    components: {},
    directives: {},
    provides: /* @__PURE__ */ Object.create(null),
    optionsCache: /* @__PURE__ */ new WeakMap(),
    propsCache: /* @__PURE__ */ new WeakMap(),
    emitsCache: /* @__PURE__ */ new WeakMap()
  };
}
let uid$1 = 0;
function createAppAPI(render2, hydrate2) {
  return function createApp2(rootComponent, rootProps = null) {
    if (!isFunction(rootComponent)) {
      rootComponent = extend({}, rootComponent);
    }
    if (rootProps != null && !isObject(rootProps)) {
      rootProps = null;
    }
    const context = createAppContext();
    const installedPlugins = /* @__PURE__ */ new WeakSet();
    const pluginCleanupFns = [];
    let isMounted = false;
    const app = context.app = {
      _uid: uid$1++,
      _component: rootComponent,
      _props: rootProps,
      _container: null,
      _context: context,
      _instance: null,
      version,
      get config() {
        return context.config;
      },
      set config(v5) {
      },
      use(plugin, ...options) {
        if (installedPlugins.has(plugin)) ;
        else if (plugin && isFunction(plugin.install)) {
          installedPlugins.add(plugin);
          plugin.install(app, ...options);
        } else if (isFunction(plugin)) {
          installedPlugins.add(plugin);
          plugin(app, ...options);
        } else ;
        return app;
      },
      mixin(mixin) {
        {
          if (!context.mixins.includes(mixin)) {
            context.mixins.push(mixin);
          }
        }
        return app;
      },
      component(name, component) {
        if (!component) {
          return context.components[name];
        }
        context.components[name] = component;
        return app;
      },
      directive(name, directive) {
        if (!directive) {
          return context.directives[name];
        }
        context.directives[name] = directive;
        return app;
      },
      mount(rootContainer, isHydrate, namespace) {
        if (!isMounted) {
          const vnode = app._ceVNode || createVNode(rootComponent, rootProps);
          vnode.appContext = context;
          if (namespace === true) {
            namespace = "svg";
          } else if (namespace === false) {
            namespace = void 0;
          }
          if (isHydrate && hydrate2) {
            hydrate2(vnode, rootContainer);
          } else {
            render2(vnode, rootContainer, namespace);
          }
          isMounted = true;
          app._container = rootContainer;
          rootContainer.__vue_app__ = app;
          return getComponentPublicInstance(vnode.component);
        }
      },
      onUnmount(cleanupFn) {
        pluginCleanupFns.push(cleanupFn);
      },
      unmount() {
        if (isMounted) {
          callWithAsyncErrorHandling(
            pluginCleanupFns,
            app._instance,
            16
          );
          render2(null, app._container);
          delete app._container.__vue_app__;
        }
      },
      provide(key, value) {
        context.provides[key] = value;
        return app;
      },
      runWithContext(fn2) {
        const lastApp = currentApp;
        currentApp = app;
        try {
          return fn2();
        } finally {
          currentApp = lastApp;
        }
      }
    };
    return app;
  };
}
let currentApp = null;
function provide(key, value) {
  if (!currentInstance) ;
  else {
    let provides = currentInstance.provides;
    const parentProvides = currentInstance.parent && currentInstance.parent.provides;
    if (parentProvides === provides) {
      provides = currentInstance.provides = Object.create(parentProvides);
    }
    provides[key] = value;
  }
}
function inject(key, defaultValue, treatDefaultAsFactory = false) {
  const instance = getCurrentInstance();
  if (instance || currentApp) {
    let provides = currentApp ? currentApp._context.provides : instance ? instance.parent == null || instance.ce ? instance.vnode.appContext && instance.vnode.appContext.provides : instance.parent.provides : void 0;
    if (provides && key in provides) {
      return provides[key];
    } else if (arguments.length > 1) {
      return treatDefaultAsFactory && isFunction(defaultValue) ? defaultValue.call(instance && instance.proxy) : defaultValue;
    } else ;
  }
}
function hasInjectionContext() {
  return !!(getCurrentInstance() || currentApp);
}
const internalObjectProto = {};
const createInternalObject = () => Object.create(internalObjectProto);
const isInternalObject = (obj) => Object.getPrototypeOf(obj) === internalObjectProto;
function initProps(instance, rawProps, isStateful, isSSR = false) {
  const props = {};
  const attrs = createInternalObject();
  instance.propsDefaults = /* @__PURE__ */ Object.create(null);
  setFullProps(instance, rawProps, props, attrs);
  for (const key in instance.propsOptions[0]) {
    if (!(key in props)) {
      props[key] = void 0;
    }
  }
  if (isStateful) {
    instance.props = isSSR ? props : shallowReactive(props);
  } else {
    if (!instance.type.props) {
      instance.props = attrs;
    } else {
      instance.props = props;
    }
  }
  instance.attrs = attrs;
}
function updateProps(instance, rawProps, rawPrevProps, optimized) {
  const {
    props,
    attrs,
    vnode: { patchFlag }
  } = instance;
  const rawCurrentProps = toRaw(props);
  const [options] = instance.propsOptions;
  let hasAttrsChanged = false;
  if (
    // always force full diff in dev
    // - #1942 if hmr is enabled with sfc component
    // - vite#872 non-sfc component used by sfc component
    (optimized || patchFlag > 0) && !(patchFlag & 16)
  ) {
    if (patchFlag & 8) {
      const propsToUpdate = instance.vnode.dynamicProps;
      for (let i = 0; i < propsToUpdate.length; i++) {
        let key = propsToUpdate[i];
        if (isEmitListener(instance.emitsOptions, key)) {
          continue;
        }
        const value = rawProps[key];
        if (options) {
          if (hasOwn(attrs, key)) {
            if (value !== attrs[key]) {
              attrs[key] = value;
              hasAttrsChanged = true;
            }
          } else {
            const camelizedKey = camelize(key);
            props[camelizedKey] = resolvePropValue(
              options,
              rawCurrentProps,
              camelizedKey,
              value,
              instance,
              false
            );
          }
        } else {
          if (value !== attrs[key]) {
            attrs[key] = value;
            hasAttrsChanged = true;
          }
        }
      }
    }
  } else {
    if (setFullProps(instance, rawProps, props, attrs)) {
      hasAttrsChanged = true;
    }
    let kebabKey;
    for (const key in rawCurrentProps) {
      if (!rawProps || // for camelCase
      !hasOwn(rawProps, key) && // it's possible the original props was passed in as kebab-case
      // and converted to camelCase (#955)
      ((kebabKey = hyphenate(key)) === key || !hasOwn(rawProps, kebabKey))) {
        if (options) {
          if (rawPrevProps && // for camelCase
          (rawPrevProps[key] !== void 0 || // for kebab-case
          rawPrevProps[kebabKey] !== void 0)) {
            props[key] = resolvePropValue(
              options,
              rawCurrentProps,
              key,
              void 0,
              instance,
              true
            );
          }
        } else {
          delete props[key];
        }
      }
    }
    if (attrs !== rawCurrentProps) {
      for (const key in attrs) {
        if (!rawProps || !hasOwn(rawProps, key) && true) {
          delete attrs[key];
          hasAttrsChanged = true;
        }
      }
    }
  }
  if (hasAttrsChanged) {
    trigger(instance.attrs, "set", "");
  }
}
function setFullProps(instance, rawProps, props, attrs) {
  const [options, needCastKeys] = instance.propsOptions;
  let hasAttrsChanged = false;
  let rawCastValues;
  if (rawProps) {
    for (let key in rawProps) {
      if (isReservedProp(key)) {
        continue;
      }
      const value = rawProps[key];
      let camelKey;
      if (options && hasOwn(options, camelKey = camelize(key))) {
        if (!needCastKeys || !needCastKeys.includes(camelKey)) {
          props[camelKey] = value;
        } else {
          (rawCastValues || (rawCastValues = {}))[camelKey] = value;
        }
      } else if (!isEmitListener(instance.emitsOptions, key)) {
        if (!(key in attrs) || value !== attrs[key]) {
          attrs[key] = value;
          hasAttrsChanged = true;
        }
      }
    }
  }
  if (needCastKeys) {
    const rawCurrentProps = toRaw(props);
    const castValues = rawCastValues || EMPTY_OBJ;
    for (let i = 0; i < needCastKeys.length; i++) {
      const key = needCastKeys[i];
      props[key] = resolvePropValue(
        options,
        rawCurrentProps,
        key,
        castValues[key],
        instance,
        !hasOwn(castValues, key)
      );
    }
  }
  return hasAttrsChanged;
}
function resolvePropValue(options, props, key, value, instance, isAbsent) {
  const opt = options[key];
  if (opt != null) {
    const hasDefault = hasOwn(opt, "default");
    if (hasDefault && value === void 0) {
      const defaultValue = opt.default;
      if (opt.type !== Function && !opt.skipFactory && isFunction(defaultValue)) {
        const { propsDefaults } = instance;
        if (key in propsDefaults) {
          value = propsDefaults[key];
        } else {
          const reset2 = setCurrentInstance(instance);
          value = propsDefaults[key] = defaultValue.call(
            null,
            props
          );
          reset2();
        }
      } else {
        value = defaultValue;
      }
      if (instance.ce) {
        instance.ce._setProp(key, value);
      }
    }
    if (opt[
      0
      /* shouldCast */
    ]) {
      if (isAbsent && !hasDefault) {
        value = false;
      } else if (opt[
        1
        /* shouldCastTrue */
      ] && (value === "" || value === hyphenate(key))) {
        value = true;
      }
    }
  }
  return value;
}
const mixinPropsCache = /* @__PURE__ */ new WeakMap();
function normalizePropsOptions(comp, appContext, asMixin = false) {
  const cache = asMixin ? mixinPropsCache : appContext.propsCache;
  const cached = cache.get(comp);
  if (cached) {
    return cached;
  }
  const raw = comp.props;
  const normalized = {};
  const needCastKeys = [];
  let hasExtends = false;
  if (!isFunction(comp)) {
    const extendProps = (raw2) => {
      hasExtends = true;
      const [props, keys] = normalizePropsOptions(raw2, appContext, true);
      extend(normalized, props);
      if (keys) needCastKeys.push(...keys);
    };
    if (!asMixin && appContext.mixins.length) {
      appContext.mixins.forEach(extendProps);
    }
    if (comp.extends) {
      extendProps(comp.extends);
    }
    if (comp.mixins) {
      comp.mixins.forEach(extendProps);
    }
  }
  if (!raw && !hasExtends) {
    if (isObject(comp)) {
      cache.set(comp, EMPTY_ARR);
    }
    return EMPTY_ARR;
  }
  if (isArray(raw)) {
    for (let i = 0; i < raw.length; i++) {
      const normalizedKey = camelize(raw[i]);
      if (validatePropName(normalizedKey)) {
        normalized[normalizedKey] = EMPTY_OBJ;
      }
    }
  } else if (raw) {
    for (const key in raw) {
      const normalizedKey = camelize(key);
      if (validatePropName(normalizedKey)) {
        const opt = raw[key];
        const prop = normalized[normalizedKey] = isArray(opt) || isFunction(opt) ? { type: opt } : extend({}, opt);
        const propType = prop.type;
        let shouldCast = false;
        let shouldCastTrue = true;
        if (isArray(propType)) {
          for (let index = 0; index < propType.length; ++index) {
            const type = propType[index];
            const typeName = isFunction(type) && type.name;
            if (typeName === "Boolean") {
              shouldCast = true;
              break;
            } else if (typeName === "String") {
              shouldCastTrue = false;
            }
          }
        } else {
          shouldCast = isFunction(propType) && propType.name === "Boolean";
        }
        prop[
          0
          /* shouldCast */
        ] = shouldCast;
        prop[
          1
          /* shouldCastTrue */
        ] = shouldCastTrue;
        if (shouldCast || hasOwn(prop, "default")) {
          needCastKeys.push(normalizedKey);
        }
      }
    }
  }
  const res = [normalized, needCastKeys];
  if (isObject(comp)) {
    cache.set(comp, res);
  }
  return res;
}
function validatePropName(key) {
  if (key[0] !== "$" && !isReservedProp(key)) {
    return true;
  }
  return false;
}
const isInternalKey = (key) => key === "_" || key === "_ctx" || key === "$stable";
const normalizeSlotValue = (value) => isArray(value) ? value.map(normalizeVNode) : [normalizeVNode(value)];
const normalizeSlot = (key, rawSlot, ctx) => {
  if (rawSlot._n) {
    return rawSlot;
  }
  const normalized = withCtx((...args) => {
    if (false) ;
    return normalizeSlotValue(rawSlot(...args));
  }, ctx);
  normalized._c = false;
  return normalized;
};
const normalizeObjectSlots = (rawSlots, slots, instance) => {
  const ctx = rawSlots._ctx;
  for (const key in rawSlots) {
    if (isInternalKey(key)) continue;
    const value = rawSlots[key];
    if (isFunction(value)) {
      slots[key] = normalizeSlot(key, value, ctx);
    } else if (value != null) {
      const normalized = normalizeSlotValue(value);
      slots[key] = () => normalized;
    }
  }
};
const normalizeVNodeSlots = (instance, children) => {
  const normalized = normalizeSlotValue(children);
  instance.slots.default = () => normalized;
};
const assignSlots = (slots, children, optimized) => {
  for (const key in children) {
    if (optimized || !isInternalKey(key)) {
      slots[key] = children[key];
    }
  }
};
const initSlots = (instance, children, optimized) => {
  const slots = instance.slots = createInternalObject();
  if (instance.vnode.shapeFlag & 32) {
    const type = children._;
    if (type) {
      assignSlots(slots, children, optimized);
      if (optimized) {
        def(slots, "_", type, true);
      }
    } else {
      normalizeObjectSlots(children, slots);
    }
  } else if (children) {
    normalizeVNodeSlots(instance, children);
  }
};
const updateSlots = (instance, children, optimized) => {
  const { vnode, slots } = instance;
  let needDeletionCheck = true;
  let deletionComparisonTarget = EMPTY_OBJ;
  if (vnode.shapeFlag & 32) {
    const type = children._;
    if (type) {
      if (optimized && type === 1) {
        needDeletionCheck = false;
      } else {
        assignSlots(slots, children, optimized);
      }
    } else {
      needDeletionCheck = !children.$stable;
      normalizeObjectSlots(children, slots);
    }
    deletionComparisonTarget = children;
  } else if (children) {
    normalizeVNodeSlots(instance, children);
    deletionComparisonTarget = { default: 1 };
  }
  if (needDeletionCheck) {
    for (const key in slots) {
      if (!isInternalKey(key) && deletionComparisonTarget[key] == null) {
        delete slots[key];
      }
    }
  }
};
const queuePostRenderEffect = queueEffectWithSuspense;
function createRenderer(options) {
  return baseCreateRenderer(options);
}
function createHydrationRenderer(options) {
  return baseCreateRenderer(options, createHydrationFunctions);
}
function baseCreateRenderer(options, createHydrationFns) {
  const target = getGlobalThis();
  target.__VUE__ = true;
  const {
    insert: hostInsert,
    remove: hostRemove,
    patchProp: hostPatchProp,
    createElement: hostCreateElement,
    createText: hostCreateText,
    createComment: hostCreateComment,
    setText: hostSetText,
    setElementText: hostSetElementText,
    parentNode: hostParentNode,
    nextSibling: hostNextSibling,
    setScopeId: hostSetScopeId = NOOP,
    insertStaticContent: hostInsertStaticContent
  } = options;
  const patch = (n1, n22, container, anchor = null, parentComponent = null, parentSuspense = null, namespace = void 0, slotScopeIds = null, optimized = !!n22.dynamicChildren) => {
    if (n1 === n22) {
      return;
    }
    if (n1 && !isSameVNodeType(n1, n22)) {
      anchor = getNextHostNode(n1);
      unmount(n1, parentComponent, parentSuspense, true);
      n1 = null;
    }
    if (n22.patchFlag === -2) {
      optimized = false;
      n22.dynamicChildren = null;
    }
    const { type, ref: ref3, shapeFlag } = n22;
    switch (type) {
      case Text:
        processText(n1, n22, container, anchor);
        break;
      case Comment:
        processCommentNode(n1, n22, container, anchor);
        break;
      case Static:
        if (n1 == null) {
          mountStaticNode(n22, container, anchor, namespace);
        }
        break;
      case Fragment:
        processFragment(
          n1,
          n22,
          container,
          anchor,
          parentComponent,
          parentSuspense,
          namespace,
          slotScopeIds,
          optimized
        );
        break;
      default:
        if (shapeFlag & 1) {
          processElement(
            n1,
            n22,
            container,
            anchor,
            parentComponent,
            parentSuspense,
            namespace,
            slotScopeIds,
            optimized
          );
        } else if (shapeFlag & 6) {
          processComponent(
            n1,
            n22,
            container,
            anchor,
            parentComponent,
            parentSuspense,
            namespace,
            slotScopeIds,
            optimized
          );
        } else if (shapeFlag & 64) {
          type.process(
            n1,
            n22,
            container,
            anchor,
            parentComponent,
            parentSuspense,
            namespace,
            slotScopeIds,
            optimized,
            internals
          );
        } else if (shapeFlag & 128) {
          type.process(
            n1,
            n22,
            container,
            anchor,
            parentComponent,
            parentSuspense,
            namespace,
            slotScopeIds,
            optimized,
            internals
          );
        } else ;
    }
    if (ref3 != null && parentComponent) {
      setRef(ref3, n1 && n1.ref, parentSuspense, n22 || n1, !n22);
    } else if (ref3 == null && n1 && n1.ref != null) {
      setRef(n1.ref, null, parentSuspense, n1, true);
    }
  };
  const processText = (n1, n22, container, anchor) => {
    if (n1 == null) {
      hostInsert(
        n22.el = hostCreateText(n22.children),
        container,
        anchor
      );
    } else {
      const el2 = n22.el = n1.el;
      if (n22.children !== n1.children) {
        hostSetText(el2, n22.children);
      }
    }
  };
  const processCommentNode = (n1, n22, container, anchor) => {
    if (n1 == null) {
      hostInsert(
        n22.el = hostCreateComment(n22.children || ""),
        container,
        anchor
      );
    } else {
      n22.el = n1.el;
    }
  };
  const mountStaticNode = (n22, container, anchor, namespace) => {
    [n22.el, n22.anchor] = hostInsertStaticContent(
      n22.children,
      container,
      anchor,
      namespace,
      n22.el,
      n22.anchor
    );
  };
  const moveStaticNode = ({ el: el2, anchor }, container, nextSibling) => {
    let next;
    while (el2 && el2 !== anchor) {
      next = hostNextSibling(el2);
      hostInsert(el2, container, nextSibling);
      el2 = next;
    }
    hostInsert(anchor, container, nextSibling);
  };
  const removeStaticNode = ({ el: el2, anchor }) => {
    let next;
    while (el2 && el2 !== anchor) {
      next = hostNextSibling(el2);
      hostRemove(el2);
      el2 = next;
    }
    hostRemove(anchor);
  };
  const processElement = (n1, n22, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized) => {
    if (n22.type === "svg") {
      namespace = "svg";
    } else if (n22.type === "math") {
      namespace = "mathml";
    }
    if (n1 == null) {
      mountElement(
        n22,
        container,
        anchor,
        parentComponent,
        parentSuspense,
        namespace,
        slotScopeIds,
        optimized
      );
    } else {
      patchElement(
        n1,
        n22,
        parentComponent,
        parentSuspense,
        namespace,
        slotScopeIds,
        optimized
      );
    }
  };
  const mountElement = (vnode, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized) => {
    let el2;
    let vnodeHook;
    const { props, shapeFlag, transition, dirs } = vnode;
    el2 = vnode.el = hostCreateElement(
      vnode.type,
      namespace,
      props && props.is,
      props
    );
    if (shapeFlag & 8) {
      hostSetElementText(el2, vnode.children);
    } else if (shapeFlag & 16) {
      mountChildren(
        vnode.children,
        el2,
        null,
        parentComponent,
        parentSuspense,
        resolveChildrenNamespace(vnode, namespace),
        slotScopeIds,
        optimized
      );
    }
    if (dirs) {
      invokeDirectiveHook(vnode, null, parentComponent, "created");
    }
    setScopeId(el2, vnode, vnode.scopeId, slotScopeIds, parentComponent);
    if (props) {
      for (const key in props) {
        if (key !== "value" && !isReservedProp(key)) {
          hostPatchProp(el2, key, null, props[key], namespace, parentComponent);
        }
      }
      if ("value" in props) {
        hostPatchProp(el2, "value", null, props.value, namespace);
      }
      if (vnodeHook = props.onVnodeBeforeMount) {
        invokeVNodeHook(vnodeHook, parentComponent, vnode);
      }
    }
    if (dirs) {
      invokeDirectiveHook(vnode, null, parentComponent, "beforeMount");
    }
    const needCallTransitionHooks = needTransition(parentSuspense, transition);
    if (needCallTransitionHooks) {
      transition.beforeEnter(el2);
    }
    hostInsert(el2, container, anchor);
    if ((vnodeHook = props && props.onVnodeMounted) || needCallTransitionHooks || dirs) {
      queuePostRenderEffect(() => {
        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);
        needCallTransitionHooks && transition.enter(el2);
        dirs && invokeDirectiveHook(vnode, null, parentComponent, "mounted");
      }, parentSuspense);
    }
  };
  const setScopeId = (el2, vnode, scopeId, slotScopeIds, parentComponent) => {
    if (scopeId) {
      hostSetScopeId(el2, scopeId);
    }
    if (slotScopeIds) {
      for (let i = 0; i < slotScopeIds.length; i++) {
        hostSetScopeId(el2, slotScopeIds[i]);
      }
    }
    if (parentComponent) {
      let subTree = parentComponent.subTree;
      if (vnode === subTree || isSuspense(subTree.type) && (subTree.ssContent === vnode || subTree.ssFallback === vnode)) {
        const parentVNode = parentComponent.vnode;
        setScopeId(
          el2,
          parentVNode,
          parentVNode.scopeId,
          parentVNode.slotScopeIds,
          parentComponent.parent
        );
      }
    }
  };
  const mountChildren = (children, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized, start = 0) => {
    for (let i = start; i < children.length; i++) {
      const child = children[i] = optimized ? cloneIfMounted(children[i]) : normalizeVNode(children[i]);
      patch(
        null,
        child,
        container,
        anchor,
        parentComponent,
        parentSuspense,
        namespace,
        slotScopeIds,
        optimized
      );
    }
  };
  const patchElement = (n1, n22, parentComponent, parentSuspense, namespace, slotScopeIds, optimized) => {
    const el2 = n22.el = n1.el;
    let { patchFlag, dynamicChildren, dirs } = n22;
    patchFlag |= n1.patchFlag & 16;
    const oldProps = n1.props || EMPTY_OBJ;
    const newProps = n22.props || EMPTY_OBJ;
    let vnodeHook;
    parentComponent && toggleRecurse(parentComponent, false);
    if (vnodeHook = newProps.onVnodeBeforeUpdate) {
      invokeVNodeHook(vnodeHook, parentComponent, n22, n1);
    }
    if (dirs) {
      invokeDirectiveHook(n22, n1, parentComponent, "beforeUpdate");
    }
    parentComponent && toggleRecurse(parentComponent, true);
    if (oldProps.innerHTML && newProps.innerHTML == null || oldProps.textContent && newProps.textContent == null) {
      hostSetElementText(el2, "");
    }
    if (dynamicChildren) {
      patchBlockChildren(
        n1.dynamicChildren,
        dynamicChildren,
        el2,
        parentComponent,
        parentSuspense,
        resolveChildrenNamespace(n22, namespace),
        slotScopeIds
      );
    } else if (!optimized) {
      patchChildren(
        n1,
        n22,
        el2,
        null,
        parentComponent,
        parentSuspense,
        resolveChildrenNamespace(n22, namespace),
        slotScopeIds,
        false
      );
    }
    if (patchFlag > 0) {
      if (patchFlag & 16) {
        patchProps(el2, oldProps, newProps, parentComponent, namespace);
      } else {
        if (patchFlag & 2) {
          if (oldProps.class !== newProps.class) {
            hostPatchProp(el2, "class", null, newProps.class, namespace);
          }
        }
        if (patchFlag & 4) {
          hostPatchProp(el2, "style", oldProps.style, newProps.style, namespace);
        }
        if (patchFlag & 8) {
          const propsToUpdate = n22.dynamicProps;
          for (let i = 0; i < propsToUpdate.length; i++) {
            const key = propsToUpdate[i];
            const prev = oldProps[key];
            const next = newProps[key];
            if (next !== prev || key === "value") {
              hostPatchProp(el2, key, prev, next, namespace, parentComponent);
            }
          }
        }
      }
      if (patchFlag & 1) {
        if (n1.children !== n22.children) {
          hostSetElementText(el2, n22.children);
        }
      }
    } else if (!optimized && dynamicChildren == null) {
      patchProps(el2, oldProps, newProps, parentComponent, namespace);
    }
    if ((vnodeHook = newProps.onVnodeUpdated) || dirs) {
      queuePostRenderEffect(() => {
        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, n22, n1);
        dirs && invokeDirectiveHook(n22, n1, parentComponent, "updated");
      }, parentSuspense);
    }
  };
  const patchBlockChildren = (oldChildren, newChildren, fallbackContainer, parentComponent, parentSuspense, namespace, slotScopeIds) => {
    for (let i = 0; i < newChildren.length; i++) {
      const oldVNode = oldChildren[i];
      const newVNode = newChildren[i];
      const container = (
        // oldVNode may be an errored async setup() component inside Suspense
        // which will not have a mounted element
        oldVNode.el && // - In the case of a Fragment, we need to provide the actual parent
        // of the Fragment itself so it can move its children.
        (oldVNode.type === Fragment || // - In the case of different nodes, there is going to be a replacement
        // which also requires the correct parent container
        !isSameVNodeType(oldVNode, newVNode) || // - In the case of a component, it could contain anything.
        oldVNode.shapeFlag & (6 | 64 | 128)) ? hostParentNode(oldVNode.el) : (
          // In other cases, the parent container is not actually used so we
          // just pass the block element here to avoid a DOM parentNode call.
          fallbackContainer
        )
      );
      patch(
        oldVNode,
        newVNode,
        container,
        null,
        parentComponent,
        parentSuspense,
        namespace,
        slotScopeIds,
        true
      );
    }
  };
  const patchProps = (el2, oldProps, newProps, parentComponent, namespace) => {
    if (oldProps !== newProps) {
      if (oldProps !== EMPTY_OBJ) {
        for (const key in oldProps) {
          if (!isReservedProp(key) && !(key in newProps)) {
            hostPatchProp(
              el2,
              key,
              oldProps[key],
              null,
              namespace,
              parentComponent
            );
          }
        }
      }
      for (const key in newProps) {
        if (isReservedProp(key)) continue;
        const next = newProps[key];
        const prev = oldProps[key];
        if (next !== prev && key !== "value") {
          hostPatchProp(el2, key, prev, next, namespace, parentComponent);
        }
      }
      if ("value" in newProps) {
        hostPatchProp(el2, "value", oldProps.value, newProps.value, namespace);
      }
    }
  };
  const processFragment = (n1, n22, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized) => {
    const fragmentStartAnchor = n22.el = n1 ? n1.el : hostCreateText("");
    const fragmentEndAnchor = n22.anchor = n1 ? n1.anchor : hostCreateText("");
    let { patchFlag, dynamicChildren, slotScopeIds: fragmentSlotScopeIds } = n22;
    if (fragmentSlotScopeIds) {
      slotScopeIds = slotScopeIds ? slotScopeIds.concat(fragmentSlotScopeIds) : fragmentSlotScopeIds;
    }
    if (n1 == null) {
      hostInsert(fragmentStartAnchor, container, anchor);
      hostInsert(fragmentEndAnchor, container, anchor);
      mountChildren(
        // #10007
        // such fragment like `<></>` will be compiled into
        // a fragment which doesn't have a children.
        // In this case fallback to an empty array
        n22.children || [],
        container,
        fragmentEndAnchor,
        parentComponent,
        parentSuspense,
        namespace,
        slotScopeIds,
        optimized
      );
    } else {
      if (patchFlag > 0 && patchFlag & 64 && dynamicChildren && // #2715 the previous fragment could've been a BAILed one as a result
      // of renderSlot() with no valid children
      n1.dynamicChildren) {
        patchBlockChildren(
          n1.dynamicChildren,
          dynamicChildren,
          container,
          parentComponent,
          parentSuspense,
          namespace,
          slotScopeIds
        );
        if (
          // #2080 if the stable fragment has a key, it's a <template v-for> that may
          //  get moved around. Make sure all root level vnodes inherit el.
          // #2134 or if it's a component root, it may also get moved around
          // as the component is being moved.
          n22.key != null || parentComponent && n22 === parentComponent.subTree
        ) {
          traverseStaticChildren(
            n1,
            n22,
            true
            /* shallow */
          );
        }
      } else {
        patchChildren(
          n1,
          n22,
          container,
          fragmentEndAnchor,
          parentComponent,
          parentSuspense,
          namespace,
          slotScopeIds,
          optimized
        );
      }
    }
  };
  const processComponent = (n1, n22, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized) => {
    n22.slotScopeIds = slotScopeIds;
    if (n1 == null) {
      if (n22.shapeFlag & 512) {
        parentComponent.ctx.activate(
          n22,
          container,
          anchor,
          namespace,
          optimized
        );
      } else {
        mountComponent(
          n22,
          container,
          anchor,
          parentComponent,
          parentSuspense,
          namespace,
          optimized
        );
      }
    } else {
      updateComponent(n1, n22, optimized);
    }
  };
  const mountComponent = (initialVNode, container, anchor, parentComponent, parentSuspense, namespace, optimized) => {
    const instance = initialVNode.component = createComponentInstance(
      initialVNode,
      parentComponent,
      parentSuspense
    );
    if (isKeepAlive(initialVNode)) {
      instance.ctx.renderer = internals;
    }
    {
      setupComponent(instance, false, optimized);
    }
    if (instance.asyncDep) {
      parentSuspense && parentSuspense.registerDep(instance, setupRenderEffect, optimized);
      if (!initialVNode.el) {
        const placeholder = instance.subTree = createVNode(Comment);
        processCommentNode(null, placeholder, container, anchor);
        initialVNode.placeholder = placeholder.el;
      }
    } else {
      setupRenderEffect(
        instance,
        initialVNode,
        container,
        anchor,
        parentSuspense,
        namespace,
        optimized
      );
    }
  };
  const updateComponent = (n1, n22, optimized) => {
    const instance = n22.component = n1.component;
    if (shouldUpdateComponent(n1, n22, optimized)) {
      if (instance.asyncDep && !instance.asyncResolved) {
        updateComponentPreRender(instance, n22, optimized);
        return;
      } else {
        instance.next = n22;
        instance.update();
      }
    } else {
      n22.el = n1.el;
      instance.vnode = n22;
    }
  };
  const setupRenderEffect = (instance, initialVNode, container, anchor, parentSuspense, namespace, optimized) => {
    const componentUpdateFn = () => {
      if (!instance.isMounted) {
        let vnodeHook;
        const { el: el2, props } = initialVNode;
        const { bm, m, parent, root, type } = instance;
        const isAsyncWrapperVNode = isAsyncWrapper(initialVNode);
        toggleRecurse(instance, false);
        if (bm) {
          invokeArrayFns(bm);
        }
        if (!isAsyncWrapperVNode && (vnodeHook = props && props.onVnodeBeforeMount)) {
          invokeVNodeHook(vnodeHook, parent, initialVNode);
        }
        toggleRecurse(instance, true);
        if (el2 && hydrateNode) {
          const hydrateSubTree = () => {
            instance.subTree = renderComponentRoot(instance);
            hydrateNode(
              el2,
              instance.subTree,
              instance,
              parentSuspense,
              null
            );
          };
          if (isAsyncWrapperVNode && type.__asyncHydrate) {
            type.__asyncHydrate(
              el2,
              instance,
              hydrateSubTree
            );
          } else {
            hydrateSubTree();
          }
        } else {
          if (root.ce && // @ts-expect-error _def is private
          root.ce._def.shadowRoot !== false) {
            root.ce._injectChildStyle(type);
          }
          const subTree = instance.subTree = renderComponentRoot(instance);
          patch(
            null,
            subTree,
            container,
            anchor,
            instance,
            parentSuspense,
            namespace
          );
          initialVNode.el = subTree.el;
        }
        if (m) {
          queuePostRenderEffect(m, parentSuspense);
        }
        if (!isAsyncWrapperVNode && (vnodeHook = props && props.onVnodeMounted)) {
          const scopedInitialVNode = initialVNode;
          queuePostRenderEffect(
            () => invokeVNodeHook(vnodeHook, parent, scopedInitialVNode),
            parentSuspense
          );
        }
        if (initialVNode.shapeFlag & 256 || parent && isAsyncWrapper(parent.vnode) && parent.vnode.shapeFlag & 256) {
          instance.a && queuePostRenderEffect(instance.a, parentSuspense);
        }
        instance.isMounted = true;
        initialVNode = container = anchor = null;
      } else {
        let { next, bu, u, parent, vnode } = instance;
        {
          const nonHydratedAsyncRoot = locateNonHydratedAsyncRoot(instance);
          if (nonHydratedAsyncRoot) {
            if (next) {
              next.el = vnode.el;
              updateComponentPreRender(instance, next, optimized);
            }
            nonHydratedAsyncRoot.asyncDep.then(() => {
              if (!instance.isUnmounted) {
                componentUpdateFn();
              }
            });
            return;
          }
        }
        let originNext = next;
        let vnodeHook;
        toggleRecurse(instance, false);
        if (next) {
          next.el = vnode.el;
          updateComponentPreRender(instance, next, optimized);
        } else {
          next = vnode;
        }
        if (bu) {
          invokeArrayFns(bu);
        }
        if (vnodeHook = next.props && next.props.onVnodeBeforeUpdate) {
          invokeVNodeHook(vnodeHook, parent, next, vnode);
        }
        toggleRecurse(instance, true);
        const nextTree = renderComponentRoot(instance);
        const prevTree = instance.subTree;
        instance.subTree = nextTree;
        patch(
          prevTree,
          nextTree,
          // parent may have changed if it's in a teleport
          hostParentNode(prevTree.el),
          // anchor may have changed if it's in a fragment
          getNextHostNode(prevTree),
          instance,
          parentSuspense,
          namespace
        );
        next.el = nextTree.el;
        if (originNext === null) {
          updateHOCHostEl(instance, nextTree.el);
        }
        if (u) {
          queuePostRenderEffect(u, parentSuspense);
        }
        if (vnodeHook = next.props && next.props.onVnodeUpdated) {
          queuePostRenderEffect(
            () => invokeVNodeHook(vnodeHook, parent, next, vnode),
            parentSuspense
          );
        }
      }
    };
    instance.scope.on();
    const effect2 = instance.effect = new ReactiveEffect(componentUpdateFn);
    instance.scope.off();
    const update = instance.update = effect2.run.bind(effect2);
    const job = instance.job = effect2.runIfDirty.bind(effect2);
    job.i = instance;
    job.id = instance.uid;
    effect2.scheduler = () => queueJob(job);
    toggleRecurse(instance, true);
    update();
  };
  const updateComponentPreRender = (instance, nextVNode, optimized) => {
    nextVNode.component = instance;
    const prevProps = instance.vnode.props;
    instance.vnode = nextVNode;
    instance.next = null;
    updateProps(instance, nextVNode.props, prevProps, optimized);
    updateSlots(instance, nextVNode.children, optimized);
    pauseTracking();
    flushPreFlushCbs(instance);
    resetTracking();
  };
  const patchChildren = (n1, n22, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized = false) => {
    const c1 = n1 && n1.children;
    const prevShapeFlag = n1 ? n1.shapeFlag : 0;
    const c22 = n22.children;
    const { patchFlag, shapeFlag } = n22;
    if (patchFlag > 0) {
      if (patchFlag & 128) {
        patchKeyedChildren(
          c1,
          c22,
          container,
          anchor,
          parentComponent,
          parentSuspense,
          namespace,
          slotScopeIds,
          optimized
        );
        return;
      } else if (patchFlag & 256) {
        patchUnkeyedChildren(
          c1,
          c22,
          container,
          anchor,
          parentComponent,
          parentSuspense,
          namespace,
          slotScopeIds,
          optimized
        );
        return;
      }
    }
    if (shapeFlag & 8) {
      if (prevShapeFlag & 16) {
        unmountChildren(c1, parentComponent, parentSuspense);
      }
      if (c22 !== c1) {
        hostSetElementText(container, c22);
      }
    } else {
      if (prevShapeFlag & 16) {
        if (shapeFlag & 16) {
          patchKeyedChildren(
            c1,
            c22,
            container,
            anchor,
            parentComponent,
            parentSuspense,
            namespace,
            slotScopeIds,
            optimized
          );
        } else {
          unmountChildren(c1, parentComponent, parentSuspense, true);
        }
      } else {
        if (prevShapeFlag & 8) {
          hostSetElementText(container, "");
        }
        if (shapeFlag & 16) {
          mountChildren(
            c22,
            container,
            anchor,
            parentComponent,
            parentSuspense,
            namespace,
            slotScopeIds,
            optimized
          );
        }
      }
    }
  };
  const patchUnkeyedChildren = (c1, c22, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized) => {
    c1 = c1 || EMPTY_ARR;
    c22 = c22 || EMPTY_ARR;
    const oldLength = c1.length;
    const newLength = c22.length;
    const commonLength = Math.min(oldLength, newLength);
    let i;
    for (i = 0; i < commonLength; i++) {
      const nextChild = c22[i] = optimized ? cloneIfMounted(c22[i]) : normalizeVNode(c22[i]);
      patch(
        c1[i],
        nextChild,
        container,
        null,
        parentComponent,
        parentSuspense,
        namespace,
        slotScopeIds,
        optimized
      );
    }
    if (oldLength > newLength) {
      unmountChildren(
        c1,
        parentComponent,
        parentSuspense,
        true,
        false,
        commonLength
      );
    } else {
      mountChildren(
        c22,
        container,
        anchor,
        parentComponent,
        parentSuspense,
        namespace,
        slotScopeIds,
        optimized,
        commonLength
      );
    }
  };
  const patchKeyedChildren = (c1, c22, container, parentAnchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized) => {
    let i = 0;
    const l22 = c22.length;
    let e12 = c1.length - 1;
    let e22 = l22 - 1;
    while (i <= e12 && i <= e22) {
      const n1 = c1[i];
      const n22 = c22[i] = optimized ? cloneIfMounted(c22[i]) : normalizeVNode(c22[i]);
      if (isSameVNodeType(n1, n22)) {
        patch(
          n1,
          n22,
          container,
          null,
          parentComponent,
          parentSuspense,
          namespace,
          slotScopeIds,
          optimized
        );
      } else {
        break;
      }
      i++;
    }
    while (i <= e12 && i <= e22) {
      const n1 = c1[e12];
      const n22 = c22[e22] = optimized ? cloneIfMounted(c22[e22]) : normalizeVNode(c22[e22]);
      if (isSameVNodeType(n1, n22)) {
        patch(
          n1,
          n22,
          container,
          null,
          parentComponent,
          parentSuspense,
          namespace,
          slotScopeIds,
          optimized
        );
      } else {
        break;
      }
      e12--;
      e22--;
    }
    if (i > e12) {
      if (i <= e22) {
        const nextPos = e22 + 1;
        const anchor = nextPos < l22 ? c22[nextPos].el : parentAnchor;
        while (i <= e22) {
          patch(
            null,
            c22[i] = optimized ? cloneIfMounted(c22[i]) : normalizeVNode(c22[i]),
            container,
            anchor,
            parentComponent,
            parentSuspense,
            namespace,
            slotScopeIds,
            optimized
          );
          i++;
        }
      }
    } else if (i > e22) {
      while (i <= e12) {
        unmount(c1[i], parentComponent, parentSuspense, true);
        i++;
      }
    } else {
      const s1 = i;
      const s22 = i;
      const keyToNewIndexMap = /* @__PURE__ */ new Map();
      for (i = s22; i <= e22; i++) {
        const nextChild = c22[i] = optimized ? cloneIfMounted(c22[i]) : normalizeVNode(c22[i]);
        if (nextChild.key != null) {
          keyToNewIndexMap.set(nextChild.key, i);
        }
      }
      let j;
      let patched = 0;
      const toBePatched = e22 - s22 + 1;
      let moved = false;
      let maxNewIndexSoFar = 0;
      const newIndexToOldIndexMap = new Array(toBePatched);
      for (i = 0; i < toBePatched; i++) newIndexToOldIndexMap[i] = 0;
      for (i = s1; i <= e12; i++) {
        const prevChild = c1[i];
        if (patched >= toBePatched) {
          unmount(prevChild, parentComponent, parentSuspense, true);
          continue;
        }
        let newIndex;
        if (prevChild.key != null) {
          newIndex = keyToNewIndexMap.get(prevChild.key);
        } else {
          for (j = s22; j <= e22; j++) {
            if (newIndexToOldIndexMap[j - s22] === 0 && isSameVNodeType(prevChild, c22[j])) {
              newIndex = j;
              break;
            }
          }
        }
        if (newIndex === void 0) {
          unmount(prevChild, parentComponent, parentSuspense, true);
        } else {
          newIndexToOldIndexMap[newIndex - s22] = i + 1;
          if (newIndex >= maxNewIndexSoFar) {
            maxNewIndexSoFar = newIndex;
          } else {
            moved = true;
          }
          patch(
            prevChild,
            c22[newIndex],
            container,
            null,
            parentComponent,
            parentSuspense,
            namespace,
            slotScopeIds,
            optimized
          );
          patched++;
        }
      }
      const increasingNewIndexSequence = moved ? getSequence(newIndexToOldIndexMap) : EMPTY_ARR;
      j = increasingNewIndexSequence.length - 1;
      for (i = toBePatched - 1; i >= 0; i--) {
        const nextIndex = s22 + i;
        const nextChild = c22[nextIndex];
        const anchorVNode = c22[nextIndex + 1];
        const anchor = nextIndex + 1 < l22 ? (
          // #13559, fallback to el placeholder for unresolved async component
          anchorVNode.el || anchorVNode.placeholder
        ) : parentAnchor;
        if (newIndexToOldIndexMap[i] === 0) {
          patch(
            null,
            nextChild,
            container,
            anchor,
            parentComponent,
            parentSuspense,
            namespace,
            slotScopeIds,
            optimized
          );
        } else if (moved) {
          if (j < 0 || i !== increasingNewIndexSequence[j]) {
            move(nextChild, container, anchor, 2);
          } else {
            j--;
          }
        }
      }
    }
  };
  const move = (vnode, container, anchor, moveType, parentSuspense = null) => {
    const { el: el2, type, transition, children, shapeFlag } = vnode;
    if (shapeFlag & 6) {
      move(vnode.component.subTree, container, anchor, moveType);
      return;
    }
    if (shapeFlag & 128) {
      vnode.suspense.move(container, anchor, moveType);
      return;
    }
    if (shapeFlag & 64) {
      type.move(vnode, container, anchor, internals);
      return;
    }
    if (type === Fragment) {
      hostInsert(el2, container, anchor);
      for (let i = 0; i < children.length; i++) {
        move(children[i], container, anchor, moveType);
      }
      hostInsert(vnode.anchor, container, anchor);
      return;
    }
    if (type === Static) {
      moveStaticNode(vnode, container, anchor);
      return;
    }
    const needTransition2 = moveType !== 2 && shapeFlag & 1 && transition;
    if (needTransition2) {
      if (moveType === 0) {
        transition.beforeEnter(el2);
        hostInsert(el2, container, anchor);
        queuePostRenderEffect(() => transition.enter(el2), parentSuspense);
      } else {
        const { leave, delayLeave, afterLeave } = transition;
        const remove22 = () => {
          if (vnode.ctx.isUnmounted) {
            hostRemove(el2);
          } else {
            hostInsert(el2, container, anchor);
          }
        };
        const performLeave = () => {
          if (el2._isLeaving) {
            el2[leaveCbKey](
              true
              /* cancelled */
            );
          }
          leave(el2, () => {
            remove22();
            afterLeave && afterLeave();
          });
        };
        if (delayLeave) {
          delayLeave(el2, remove22, performLeave);
        } else {
          performLeave();
        }
      }
    } else {
      hostInsert(el2, container, anchor);
    }
  };
  const unmount = (vnode, parentComponent, parentSuspense, doRemove = false, optimized = false) => {
    const {
      type,
      props,
      ref: ref3,
      children,
      dynamicChildren,
      shapeFlag,
      patchFlag,
      dirs,
      cacheIndex
    } = vnode;
    if (patchFlag === -2) {
      optimized = false;
    }
    if (ref3 != null) {
      pauseTracking();
      setRef(ref3, null, parentSuspense, vnode, true);
      resetTracking();
    }
    if (cacheIndex != null) {
      parentComponent.renderCache[cacheIndex] = void 0;
    }
    if (shapeFlag & 256) {
      parentComponent.ctx.deactivate(vnode);
      return;
    }
    const shouldInvokeDirs = shapeFlag & 1 && dirs;
    const shouldInvokeVnodeHook = !isAsyncWrapper(vnode);
    let vnodeHook;
    if (shouldInvokeVnodeHook && (vnodeHook = props && props.onVnodeBeforeUnmount)) {
      invokeVNodeHook(vnodeHook, parentComponent, vnode);
    }
    if (shapeFlag & 6) {
      unmountComponent(vnode.component, parentSuspense, doRemove);
    } else {
      if (shapeFlag & 128) {
        vnode.suspense.unmount(parentSuspense, doRemove);
        return;
      }
      if (shouldInvokeDirs) {
        invokeDirectiveHook(vnode, null, parentComponent, "beforeUnmount");
      }
      if (shapeFlag & 64) {
        vnode.type.remove(
          vnode,
          parentComponent,
          parentSuspense,
          internals,
          doRemove
        );
      } else if (dynamicChildren && // #5154
      // when v-once is used inside a block, setBlockTracking(-1) marks the
      // parent block with hasOnce: true
      // so that it doesn't take the fast path during unmount - otherwise
      // components nested in v-once are never unmounted.
      !dynamicChildren.hasOnce && // #1153: fast path should not be taken for non-stable (v-for) fragments
      (type !== Fragment || patchFlag > 0 && patchFlag & 64)) {
        unmountChildren(
          dynamicChildren,
          parentComponent,
          parentSuspense,
          false,
          true
        );
      } else if (type === Fragment && patchFlag & (128 | 256) || !optimized && shapeFlag & 16) {
        unmountChildren(children, parentComponent, parentSuspense);
      }
      if (doRemove) {
        remove2(vnode);
      }
    }
    if (shouldInvokeVnodeHook && (vnodeHook = props && props.onVnodeUnmounted) || shouldInvokeDirs) {
      queuePostRenderEffect(() => {
        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);
        shouldInvokeDirs && invokeDirectiveHook(vnode, null, parentComponent, "unmounted");
      }, parentSuspense);
    }
  };
  const remove2 = (vnode) => {
    const { type, el: el2, anchor, transition } = vnode;
    if (type === Fragment) {
      {
        removeFragment(el2, anchor);
      }
      return;
    }
    if (type === Static) {
      removeStaticNode(vnode);
      return;
    }
    const performRemove = () => {
      hostRemove(el2);
      if (transition && !transition.persisted && transition.afterLeave) {
        transition.afterLeave();
      }
    };
    if (vnode.shapeFlag & 1 && transition && !transition.persisted) {
      const { leave, delayLeave } = transition;
      const performLeave = () => leave(el2, performRemove);
      if (delayLeave) {
        delayLeave(vnode.el, performRemove, performLeave);
      } else {
        performLeave();
      }
    } else {
      performRemove();
    }
  };
  const removeFragment = (cur, end) => {
    let next;
    while (cur !== end) {
      next = hostNextSibling(cur);
      hostRemove(cur);
      cur = next;
    }
    hostRemove(end);
  };
  const unmountComponent = (instance, parentSuspense, doRemove) => {
    const { bum, scope, job, subTree, um, m, a } = instance;
    invalidateMount(m);
    invalidateMount(a);
    if (bum) {
      invokeArrayFns(bum);
    }
    scope.stop();
    if (job) {
      job.flags |= 8;
      unmount(subTree, instance, parentSuspense, doRemove);
    }
    if (um) {
      queuePostRenderEffect(um, parentSuspense);
    }
    queuePostRenderEffect(() => {
      instance.isUnmounted = true;
    }, parentSuspense);
  };
  const unmountChildren = (children, parentComponent, parentSuspense, doRemove = false, optimized = false, start = 0) => {
    for (let i = start; i < children.length; i++) {
      unmount(children[i], parentComponent, parentSuspense, doRemove, optimized);
    }
  };
  const getNextHostNode = (vnode) => {
    if (vnode.shapeFlag & 6) {
      return getNextHostNode(vnode.component.subTree);
    }
    if (vnode.shapeFlag & 128) {
      return vnode.suspense.next();
    }
    const el2 = hostNextSibling(vnode.anchor || vnode.el);
    const teleportEnd = el2 && el2[TeleportEndKey];
    return teleportEnd ? hostNextSibling(teleportEnd) : el2;
  };
  let isFlushing = false;
  const render2 = (vnode, container, namespace) => {
    if (vnode == null) {
      if (container._vnode) {
        unmount(container._vnode, null, null, true);
      }
    } else {
      patch(
        container._vnode || null,
        vnode,
        container,
        null,
        null,
        null,
        namespace
      );
    }
    container._vnode = vnode;
    if (!isFlushing) {
      isFlushing = true;
      flushPreFlushCbs();
      flushPostFlushCbs();
      isFlushing = false;
    }
  };
  const internals = {
    p: patch,
    um: unmount,
    m: move,
    r: remove2,
    mt: mountComponent,
    mc: mountChildren,
    pc: patchChildren,
    pbc: patchBlockChildren,
    n: getNextHostNode,
    o: options
  };
  let hydrate2;
  let hydrateNode;
  if (createHydrationFns) {
    [hydrate2, hydrateNode] = createHydrationFns(
      internals
    );
  }
  return {
    render: render2,
    hydrate: hydrate2,
    createApp: createAppAPI(render2, hydrate2)
  };
}
function resolveChildrenNamespace({ type, props }, currentNamespace) {
  return currentNamespace === "svg" && type === "foreignObject" || currentNamespace === "mathml" && type === "annotation-xml" && props && props.encoding && props.encoding.includes("html") ? void 0 : currentNamespace;
}
function toggleRecurse({ effect: effect2, job }, allowed) {
  if (allowed) {
    effect2.flags |= 32;
    job.flags |= 4;
  } else {
    effect2.flags &= -33;
    job.flags &= -5;
  }
}
function needTransition(parentSuspense, transition) {
  return (!parentSuspense || parentSuspense && !parentSuspense.pendingBranch) && transition && !transition.persisted;
}
function traverseStaticChildren(n1, n22, shallow = false) {
  const ch1 = n1.children;
  const ch2 = n22.children;
  if (isArray(ch1) && isArray(ch2)) {
    for (let i = 0; i < ch1.length; i++) {
      const c1 = ch1[i];
      let c22 = ch2[i];
      if (c22.shapeFlag & 1 && !c22.dynamicChildren) {
        if (c22.patchFlag <= 0 || c22.patchFlag === 32) {
          c22 = ch2[i] = cloneIfMounted(ch2[i]);
          c22.el = c1.el;
        }
        if (!shallow && c22.patchFlag !== -2)
          traverseStaticChildren(c1, c22);
      }
      if (c22.type === Text && // avoid cached text nodes retaining detached dom nodes
      c22.patchFlag !== -1) {
        c22.el = c1.el;
      }
      if (c22.type === Comment && !c22.el) {
        c22.el = c1.el;
      }
    }
  }
}
function getSequence(arr) {
  const p5 = arr.slice();
  const result = [0];
  let i, j, u, v5, c;
  const len = arr.length;
  for (i = 0; i < len; i++) {
    const arrI = arr[i];
    if (arrI !== 0) {
      j = result[result.length - 1];
      if (arr[j] < arrI) {
        p5[i] = j;
        result.push(i);
        continue;
      }
      u = 0;
      v5 = result.length - 1;
      while (u < v5) {
        c = u + v5 >> 1;
        if (arr[result[c]] < arrI) {
          u = c + 1;
        } else {
          v5 = c;
        }
      }
      if (arrI < arr[result[u]]) {
        if (u > 0) {
          p5[i] = result[u - 1];
        }
        result[u] = i;
      }
    }
  }
  u = result.length;
  v5 = result[u - 1];
  while (u-- > 0) {
    result[u] = v5;
    v5 = p5[v5];
  }
  return result;
}
function locateNonHydratedAsyncRoot(instance) {
  const subComponent = instance.subTree.component;
  if (subComponent) {
    if (subComponent.asyncDep && !subComponent.asyncResolved) {
      return subComponent;
    } else {
      return locateNonHydratedAsyncRoot(subComponent);
    }
  }
}
function invalidateMount(hooks) {
  if (hooks) {
    for (let i = 0; i < hooks.length; i++)
      hooks[i].flags |= 8;
  }
}
const ssrContextKey = Symbol.for("v-scx");
const useSSRContext = () => {
  {
    const ctx = inject(ssrContextKey);
    return ctx;
  }
};
function watchEffect(effect2, options) {
  return doWatch(effect2, null, options);
}
function watchPostEffect(effect2, options) {
  return doWatch(
    effect2,
    null,
    { flush: "post" }
  );
}
function watchSyncEffect(effect2, options) {
  return doWatch(
    effect2,
    null,
    { flush: "sync" }
  );
}
function watch(source, cb2, options) {
  return doWatch(source, cb2, options);
}
function doWatch(source, cb2, options = EMPTY_OBJ) {
  const { immediate, deep, flush, once } = options;
  const baseWatchOptions = extend({}, options);
  const runsImmediately = cb2 && immediate || !cb2 && flush !== "post";
  let ssrCleanup;
  if (isInSSRComponentSetup) {
    if (flush === "sync") {
      const ctx = useSSRContext();
      ssrCleanup = ctx.__watcherHandles || (ctx.__watcherHandles = []);
    } else if (!runsImmediately) {
      const watchStopHandle = () => {
      };
      watchStopHandle.stop = NOOP;
      watchStopHandle.resume = NOOP;
      watchStopHandle.pause = NOOP;
      return watchStopHandle;
    }
  }
  const instance = currentInstance;
  baseWatchOptions.call = (fn2, type, args) => callWithAsyncErrorHandling(fn2, instance, type, args);
  let isPre = false;
  if (flush === "post") {
    baseWatchOptions.scheduler = (job) => {
      queuePostRenderEffect(job, instance && instance.suspense);
    };
  } else if (flush !== "sync") {
    isPre = true;
    baseWatchOptions.scheduler = (job, isFirstRun) => {
      if (isFirstRun) {
        job();
      } else {
        queueJob(job);
      }
    };
  }
  baseWatchOptions.augmentJob = (job) => {
    if (cb2) {
      job.flags |= 4;
    }
    if (isPre) {
      job.flags |= 2;
      if (instance) {
        job.id = instance.uid;
        job.i = instance;
      }
    }
  };
  const watchHandle = watch$1(source, cb2, baseWatchOptions);
  if (isInSSRComponentSetup) {
    if (ssrCleanup) {
      ssrCleanup.push(watchHandle);
    } else if (runsImmediately) {
      watchHandle();
    }
  }
  return watchHandle;
}
function instanceWatch(source, value, options) {
  const publicThis = this.proxy;
  const getter = isString(source) ? source.includes(".") ? createPathGetter(publicThis, source) : () => publicThis[source] : source.bind(publicThis, publicThis);
  let cb2;
  if (isFunction(value)) {
    cb2 = value;
  } else {
    cb2 = value.handler;
    options = value;
  }
  const reset2 = setCurrentInstance(this);
  const res = doWatch(getter, cb2.bind(publicThis), options);
  reset2();
  return res;
}
function createPathGetter(ctx, path) {
  const segments = path.split(".");
  return () => {
    let cur = ctx;
    for (let i = 0; i < segments.length && cur; i++) {
      cur = cur[segments[i]];
    }
    return cur;
  };
}
function useModel(props, name, options = EMPTY_OBJ) {
  const i = getCurrentInstance();
  const camelizedName = camelize(name);
  const hyphenatedName = hyphenate(name);
  const modifiers = getModelModifiers(props, camelizedName);
  const res = customRef((track2, trigger2) => {
    let localValue;
    let prevSetValue = EMPTY_OBJ;
    let prevEmittedValue;
    watchSyncEffect(() => {
      const propValue = props[camelizedName];
      if (hasChanged(localValue, propValue)) {
        localValue = propValue;
        trigger2();
      }
    });
    return {
      get() {
        track2();
        return options.get ? options.get(localValue) : localValue;
      },
      set(value) {
        const emittedValue = options.set ? options.set(value) : value;
        if (!hasChanged(emittedValue, localValue) && !(prevSetValue !== EMPTY_OBJ && hasChanged(value, prevSetValue))) {
          return;
        }
        const rawProps = i.vnode.props;
        if (!(rawProps && // check if parent has passed v-model
        (name in rawProps || camelizedName in rawProps || hyphenatedName in rawProps) && (`onUpdate:${name}` in rawProps || `onUpdate:${camelizedName}` in rawProps || `onUpdate:${hyphenatedName}` in rawProps))) {
          localValue = value;
          trigger2();
        }
        i.emit(`update:${name}`, emittedValue);
        if (hasChanged(value, emittedValue) && hasChanged(value, prevSetValue) && !hasChanged(emittedValue, prevEmittedValue)) {
          trigger2();
        }
        prevSetValue = value;
        prevEmittedValue = emittedValue;
      }
    };
  });
  res[Symbol.iterator] = () => {
    let i22 = 0;
    return {
      next() {
        if (i22 < 2) {
          return { value: i22++ ? modifiers || EMPTY_OBJ : res, done: false };
        } else {
          return { done: true };
        }
      }
    };
  };
  return res;
}
const getModelModifiers = (props, modelName) => {
  return modelName === "modelValue" || modelName === "model-value" ? props.modelModifiers : props[`${modelName}Modifiers`] || props[`${camelize(modelName)}Modifiers`] || props[`${hyphenate(modelName)}Modifiers`];
};
function emit(instance, event, ...rawArgs) {
  if (instance.isUnmounted) return;
  const props = instance.vnode.props || EMPTY_OBJ;
  let args = rawArgs;
  const isModelListener2 = event.startsWith("update:");
  const modifiers = isModelListener2 && getModelModifiers(props, event.slice(7));
  if (modifiers) {
    if (modifiers.trim) {
      args = rawArgs.map((a) => isString(a) ? a.trim() : a);
    }
    if (modifiers.number) {
      args = rawArgs.map(looseToNumber);
    }
  }
  let handlerName;
  let handler = props[handlerName = toHandlerKey(event)] || // also try camelCase event handler (#2249)
  props[handlerName = toHandlerKey(camelize(event))];
  if (!handler && isModelListener2) {
    handler = props[handlerName = toHandlerKey(hyphenate(event))];
  }
  if (handler) {
    callWithAsyncErrorHandling(
      handler,
      instance,
      6,
      args
    );
  }
  const onceHandler = props[handlerName + `Once`];
  if (onceHandler) {
    if (!instance.emitted) {
      instance.emitted = {};
    } else if (instance.emitted[handlerName]) {
      return;
    }
    instance.emitted[handlerName] = true;
    callWithAsyncErrorHandling(
      onceHandler,
      instance,
      6,
      args
    );
  }
}
const mixinEmitsCache = /* @__PURE__ */ new WeakMap();
function normalizeEmitsOptions(comp, appContext, asMixin = false) {
  const cache = asMixin ? mixinEmitsCache : appContext.emitsCache;
  const cached = cache.get(comp);
  if (cached !== void 0) {
    return cached;
  }
  const raw = comp.emits;
  let normalized = {};
  let hasExtends = false;
  if (!isFunction(comp)) {
    const extendEmits = (raw2) => {
      const normalizedFromExtend = normalizeEmitsOptions(raw2, appContext, true);
      if (normalizedFromExtend) {
        hasExtends = true;
        extend(normalized, normalizedFromExtend);
      }
    };
    if (!asMixin && appContext.mixins.length) {
      appContext.mixins.forEach(extendEmits);
    }
    if (comp.extends) {
      extendEmits(comp.extends);
    }
    if (comp.mixins) {
      comp.mixins.forEach(extendEmits);
    }
  }
  if (!raw && !hasExtends) {
    if (isObject(comp)) {
      cache.set(comp, null);
    }
    return null;
  }
  if (isArray(raw)) {
    raw.forEach((key) => normalized[key] = null);
  } else {
    extend(normalized, raw);
  }
  if (isObject(comp)) {
    cache.set(comp, normalized);
  }
  return normalized;
}
function isEmitListener(options, key) {
  if (!options || !isOn(key)) {
    return false;
  }
  key = key.slice(2).replace(/Once$/, "");
  return hasOwn(options, key[0].toLowerCase() + key.slice(1)) || hasOwn(options, hyphenate(key)) || hasOwn(options, key);
}
function markAttrsAccessed() {
}
function renderComponentRoot(instance) {
  const {
    type: Component,
    vnode,
    proxy,
    withProxy,
    propsOptions: [propsOptions],
    slots,
    attrs,
    emit: emit2,
    render: render2,
    renderCache,
    props,
    data,
    setupState,
    ctx,
    inheritAttrs
  } = instance;
  const prev = setCurrentRenderingInstance(instance);
  let result;
  let fallthroughAttrs;
  try {
    if (vnode.shapeFlag & 4) {
      const proxyToUse = withProxy || proxy;
      const thisProxy = false ? new Proxy(proxyToUse, {
        get(target, key, receiver) {
          warn$1(
            `Property '${String(
              key
            )}' was accessed via 'this'. Avoid using 'this' in templates.`
          );
          return Reflect.get(target, key, receiver);
        }
      }) : proxyToUse;
      result = normalizeVNode(
        render2.call(
          thisProxy,
          proxyToUse,
          renderCache,
          false ? shallowReadonly(props) : props,
          setupState,
          data,
          ctx
        )
      );
      fallthroughAttrs = attrs;
    } else {
      const render22 = Component;
      if (false) ;
      result = normalizeVNode(
        render22.length > 1 ? render22(
          false ? shallowReadonly(props) : props,
          false ? {
            get attrs() {
              markAttrsAccessed();
              return shallowReadonly(attrs);
            },
            slots,
            emit: emit2
          } : { attrs, slots, emit: emit2 }
        ) : render22(
          false ? shallowReadonly(props) : props,
          null
        )
      );
      fallthroughAttrs = Component.props ? attrs : getFunctionalFallthrough(attrs);
    }
  } catch (err) {
    blockStack.length = 0;
    handleError(err, instance, 1);
    result = createVNode(Comment);
  }
  let root = result;
  if (fallthroughAttrs && inheritAttrs !== false) {
    const keys = Object.keys(fallthroughAttrs);
    const { shapeFlag } = root;
    if (keys.length) {
      if (shapeFlag & (1 | 6)) {
        if (propsOptions && keys.some(isModelListener)) {
          fallthroughAttrs = filterModelListeners(
            fallthroughAttrs,
            propsOptions
          );
        }
        root = cloneVNode(root, fallthroughAttrs, false, true);
      }
    }
  }
  if (vnode.dirs) {
    root = cloneVNode(root, null, false, true);
    root.dirs = root.dirs ? root.dirs.concat(vnode.dirs) : vnode.dirs;
  }
  if (vnode.transition) {
    setTransitionHooks(root, vnode.transition);
  }
  {
    result = root;
  }
  setCurrentRenderingInstance(prev);
  return result;
}
function filterSingleRoot(children, recurse = true) {
  let singleRoot;
  for (let i = 0; i < children.length; i++) {
    const child = children[i];
    if (isVNode(child)) {
      if (child.type !== Comment || child.children === "v-if") {
        if (singleRoot) {
          return;
        } else {
          singleRoot = child;
        }
      }
    } else {
      return;
    }
  }
  return singleRoot;
}
const getFunctionalFallthrough = (attrs) => {
  let res;
  for (const key in attrs) {
    if (key === "class" || key === "style" || isOn(key)) {
      (res || (res = {}))[key] = attrs[key];
    }
  }
  return res;
};
const filterModelListeners = (attrs, props) => {
  const res = {};
  for (const key in attrs) {
    if (!isModelListener(key) || !(key.slice(9) in props)) {
      res[key] = attrs[key];
    }
  }
  return res;
};
function shouldUpdateComponent(prevVNode, nextVNode, optimized) {
  const { props: prevProps, children: prevChildren, component } = prevVNode;
  const { props: nextProps, children: nextChildren, patchFlag } = nextVNode;
  const emits = component.emitsOptions;
  if (nextVNode.dirs || nextVNode.transition) {
    return true;
  }
  if (optimized && patchFlag >= 0) {
    if (patchFlag & 1024) {
      return true;
    }
    if (patchFlag & 16) {
      if (!prevProps) {
        return !!nextProps;
      }
      return hasPropsChanged(prevProps, nextProps, emits);
    } else if (patchFlag & 8) {
      const dynamicProps = nextVNode.dynamicProps;
      for (let i = 0; i < dynamicProps.length; i++) {
        const key = dynamicProps[i];
        if (nextProps[key] !== prevProps[key] && !isEmitListener(emits, key)) {
          return true;
        }
      }
    }
  } else {
    if (prevChildren || nextChildren) {
      if (!nextChildren || !nextChildren.$stable) {
        return true;
      }
    }
    if (prevProps === nextProps) {
      return false;
    }
    if (!prevProps) {
      return !!nextProps;
    }
    if (!nextProps) {
      return true;
    }
    return hasPropsChanged(prevProps, nextProps, emits);
  }
  return false;
}
function hasPropsChanged(prevProps, nextProps, emitsOptions) {
  const nextKeys = Object.keys(nextProps);
  if (nextKeys.length !== Object.keys(prevProps).length) {
    return true;
  }
  for (let i = 0; i < nextKeys.length; i++) {
    const key = nextKeys[i];
    if (nextProps[key] !== prevProps[key] && !isEmitListener(emitsOptions, key)) {
      return true;
    }
  }
  return false;
}
function updateHOCHostEl({ vnode, parent }, el2) {
  while (parent) {
    const root = parent.subTree;
    if (root.suspense && root.suspense.activeBranch === vnode) {
      root.el = vnode.el;
    }
    if (root === vnode) {
      (vnode = parent.vnode).el = el2;
      parent = parent.parent;
    } else {
      break;
    }
  }
}
const isSuspense = (type) => type.__isSuspense;
let suspenseId = 0;
const SuspenseImpl = {
  name: "Suspense",
  // In order to make Suspense tree-shakable, we need to avoid importing it
  // directly in the renderer. The renderer checks for the __isSuspense flag
  // on a vnode's type and calls the `process` method, passing in renderer
  // internals.
  __isSuspense: true,
  process(n1, n22, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized, rendererInternals) {
    if (n1 == null) {
      mountSuspense(
        n22,
        container,
        anchor,
        parentComponent,
        parentSuspense,
        namespace,
        slotScopeIds,
        optimized,
        rendererInternals
      );
    } else {
      if (parentSuspense && parentSuspense.deps > 0 && !n1.suspense.isInFallback) {
        n22.suspense = n1.suspense;
        n22.suspense.vnode = n22;
        n22.el = n1.el;
        return;
      }
      patchSuspense(
        n1,
        n22,
        container,
        anchor,
        parentComponent,
        namespace,
        slotScopeIds,
        optimized,
        rendererInternals
      );
    }
  },
  hydrate: hydrateSuspense,
  normalize: normalizeSuspenseChildren
};
const Suspense = SuspenseImpl;
function triggerEvent(vnode, name) {
  const eventListener = vnode.props && vnode.props[name];
  if (isFunction(eventListener)) {
    eventListener();
  }
}
function mountSuspense(vnode, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized, rendererInternals) {
  const {
    p: patch,
    o: { createElement }
  } = rendererInternals;
  const hiddenContainer = createElement("div");
  const suspense = vnode.suspense = createSuspenseBoundary(
    vnode,
    parentSuspense,
    parentComponent,
    container,
    hiddenContainer,
    anchor,
    namespace,
    slotScopeIds,
    optimized,
    rendererInternals
  );
  patch(
    null,
    suspense.pendingBranch = vnode.ssContent,
    hiddenContainer,
    null,
    parentComponent,
    suspense,
    namespace,
    slotScopeIds
  );
  if (suspense.deps > 0) {
    triggerEvent(vnode, "onPending");
    triggerEvent(vnode, "onFallback");
    patch(
      null,
      vnode.ssFallback,
      container,
      anchor,
      parentComponent,
      null,
      // fallback tree will not have suspense context
      namespace,
      slotScopeIds
    );
    setActiveBranch(suspense, vnode.ssFallback);
  } else {
    suspense.resolve(false, true);
  }
}
function patchSuspense(n1, n22, container, anchor, parentComponent, namespace, slotScopeIds, optimized, { p: patch, um: unmount, o: { createElement } }) {
  const suspense = n22.suspense = n1.suspense;
  suspense.vnode = n22;
  n22.el = n1.el;
  const newBranch = n22.ssContent;
  const newFallback = n22.ssFallback;
  const { activeBranch, pendingBranch, isInFallback, isHydrating } = suspense;
  if (pendingBranch) {
    suspense.pendingBranch = newBranch;
    if (isSameVNodeType(pendingBranch, newBranch)) {
      patch(
        pendingBranch,
        newBranch,
        suspense.hiddenContainer,
        null,
        parentComponent,
        suspense,
        namespace,
        slotScopeIds,
        optimized
      );
      if (suspense.deps <= 0) {
        suspense.resolve();
      } else if (isInFallback) {
        if (!isHydrating) {
          patch(
            activeBranch,
            newFallback,
            container,
            anchor,
            parentComponent,
            null,
            // fallback tree will not have suspense context
            namespace,
            slotScopeIds,
            optimized
          );
          setActiveBranch(suspense, newFallback);
        }
      }
    } else {
      suspense.pendingId = suspenseId++;
      if (isHydrating) {
        suspense.isHydrating = false;
        suspense.activeBranch = pendingBranch;
      } else {
        unmount(pendingBranch, parentComponent, suspense);
      }
      suspense.deps = 0;
      suspense.effects.length = 0;
      suspense.hiddenContainer = createElement("div");
      if (isInFallback) {
        patch(
          null,
          newBranch,
          suspense.hiddenContainer,
          null,
          parentComponent,
          suspense,
          namespace,
          slotScopeIds,
          optimized
        );
        if (suspense.deps <= 0) {
          suspense.resolve();
        } else {
          patch(
            activeBranch,
            newFallback,
            container,
            anchor,
            parentComponent,
            null,
            // fallback tree will not have suspense context
            namespace,
            slotScopeIds,
            optimized
          );
          setActiveBranch(suspense, newFallback);
        }
      } else if (activeBranch && isSameVNodeType(activeBranch, newBranch)) {
        patch(
          activeBranch,
          newBranch,
          container,
          anchor,
          parentComponent,
          suspense,
          namespace,
          slotScopeIds,
          optimized
        );
        suspense.resolve(true);
      } else {
        patch(
          null,
          newBranch,
          suspense.hiddenContainer,
          null,
          parentComponent,
          suspense,
          namespace,
          slotScopeIds,
          optimized
        );
        if (suspense.deps <= 0) {
          suspense.resolve();
        }
      }
    }
  } else {
    if (activeBranch && isSameVNodeType(activeBranch, newBranch)) {
      patch(
        activeBranch,
        newBranch,
        container,
        anchor,
        parentComponent,
        suspense,
        namespace,
        slotScopeIds,
        optimized
      );
      setActiveBranch(suspense, newBranch);
    } else {
      triggerEvent(n22, "onPending");
      suspense.pendingBranch = newBranch;
      if (newBranch.shapeFlag & 512) {
        suspense.pendingId = newBranch.component.suspenseId;
      } else {
        suspense.pendingId = suspenseId++;
      }
      patch(
        null,
        newBranch,
        suspense.hiddenContainer,
        null,
        parentComponent,
        suspense,
        namespace,
        slotScopeIds,
        optimized
      );
      if (suspense.deps <= 0) {
        suspense.resolve();
      } else {
        const { timeout, pendingId } = suspense;
        if (timeout > 0) {
          setTimeout(() => {
            if (suspense.pendingId === pendingId) {
              suspense.fallback(newFallback);
            }
          }, timeout);
        } else if (timeout === 0) {
          suspense.fallback(newFallback);
        }
      }
    }
  }
}
function createSuspenseBoundary(vnode, parentSuspense, parentComponent, container, hiddenContainer, anchor, namespace, slotScopeIds, optimized, rendererInternals, isHydrating = false) {
  const {
    p: patch,
    m: move,
    um: unmount,
    n: next,
    o: { parentNode, remove: remove2 }
  } = rendererInternals;
  let parentSuspenseId;
  const isSuspensible = isVNodeSuspensible(vnode);
  if (isSuspensible) {
    if (parentSuspense && parentSuspense.pendingBranch) {
      parentSuspenseId = parentSuspense.pendingId;
      parentSuspense.deps++;
    }
  }
  const timeout = vnode.props ? toNumber(vnode.props.timeout) : void 0;
  const initialAnchor = anchor;
  const suspense = {
    vnode,
    parent: parentSuspense,
    parentComponent,
    namespace,
    container,
    hiddenContainer,
    deps: 0,
    pendingId: suspenseId++,
    timeout: typeof timeout === "number" ? timeout : -1,
    activeBranch: null,
    pendingBranch: null,
    isInFallback: !isHydrating,
    isHydrating,
    isUnmounted: false,
    effects: [],
    resolve(resume = false, sync = false) {
      const {
        vnode: vnode2,
        activeBranch,
        pendingBranch,
        pendingId,
        effects,
        parentComponent: parentComponent2,
        container: container2
      } = suspense;
      let delayEnter = false;
      if (suspense.isHydrating) {
        suspense.isHydrating = false;
      } else if (!resume) {
        delayEnter = activeBranch && pendingBranch.transition && pendingBranch.transition.mode === "out-in";
        if (delayEnter) {
          activeBranch.transition.afterLeave = () => {
            if (pendingId === suspense.pendingId) {
              move(
                pendingBranch,
                container2,
                anchor === initialAnchor ? next(activeBranch) : anchor,
                0
              );
              queuePostFlushCb(effects);
            }
          };
        }
        if (activeBranch) {
          if (parentNode(activeBranch.el) === container2) {
            anchor = next(activeBranch);
          }
          unmount(activeBranch, parentComponent2, suspense, true);
        }
        if (!delayEnter) {
          move(pendingBranch, container2, anchor, 0);
        }
      }
      setActiveBranch(suspense, pendingBranch);
      suspense.pendingBranch = null;
      suspense.isInFallback = false;
      let parent = suspense.parent;
      let hasUnresolvedAncestor = false;
      while (parent) {
        if (parent.pendingBranch) {
          parent.effects.push(...effects);
          hasUnresolvedAncestor = true;
          break;
        }
        parent = parent.parent;
      }
      if (!hasUnresolvedAncestor && !delayEnter) {
        queuePostFlushCb(effects);
      }
      suspense.effects = [];
      if (isSuspensible) {
        if (parentSuspense && parentSuspense.pendingBranch && parentSuspenseId === parentSuspense.pendingId) {
          parentSuspense.deps--;
          if (parentSuspense.deps === 0 && !sync) {
            parentSuspense.resolve();
          }
        }
      }
      triggerEvent(vnode2, "onResolve");
    },
    fallback(fallbackVNode) {
      if (!suspense.pendingBranch) {
        return;
      }
      const { vnode: vnode2, activeBranch, parentComponent: parentComponent2, container: container2, namespace: namespace2 } = suspense;
      triggerEvent(vnode2, "onFallback");
      const anchor2 = next(activeBranch);
      const mountFallback = () => {
        if (!suspense.isInFallback) {
          return;
        }
        patch(
          null,
          fallbackVNode,
          container2,
          anchor2,
          parentComponent2,
          null,
          // fallback tree will not have suspense context
          namespace2,
          slotScopeIds,
          optimized
        );
        setActiveBranch(suspense, fallbackVNode);
      };
      const delayEnter = fallbackVNode.transition && fallbackVNode.transition.mode === "out-in";
      if (delayEnter) {
        activeBranch.transition.afterLeave = mountFallback;
      }
      suspense.isInFallback = true;
      unmount(
        activeBranch,
        parentComponent2,
        null,
        // no suspense so unmount hooks fire now
        true
        // shouldRemove
      );
      if (!delayEnter) {
        mountFallback();
      }
    },
    move(container2, anchor2, type) {
      suspense.activeBranch && move(suspense.activeBranch, container2, anchor2, type);
      suspense.container = container2;
    },
    next() {
      return suspense.activeBranch && next(suspense.activeBranch);
    },
    registerDep(instance, setupRenderEffect, optimized2) {
      const isInPendingSuspense = !!suspense.pendingBranch;
      if (isInPendingSuspense) {
        suspense.deps++;
      }
      const hydratedEl = instance.vnode.el;
      instance.asyncDep.catch((err) => {
        handleError(err, instance, 0);
      }).then((asyncSetupResult) => {
        if (instance.isUnmounted || suspense.isUnmounted || suspense.pendingId !== instance.suspenseId) {
          return;
        }
        instance.asyncResolved = true;
        const { vnode: vnode2 } = instance;
        handleSetupResult(instance, asyncSetupResult, false);
        if (hydratedEl) {
          vnode2.el = hydratedEl;
        }
        const placeholder = !hydratedEl && instance.subTree.el;
        setupRenderEffect(
          instance,
          vnode2,
          // component may have been moved before resolve.
          // if this is not a hydration, instance.subTree will be the comment
          // placeholder.
          parentNode(hydratedEl || instance.subTree.el),
          // anchor will not be used if this is hydration, so only need to
          // consider the comment placeholder case.
          hydratedEl ? null : next(instance.subTree),
          suspense,
          namespace,
          optimized2
        );
        if (placeholder) {
          remove2(placeholder);
        }
        updateHOCHostEl(instance, vnode2.el);
        if (isInPendingSuspense && --suspense.deps === 0) {
          suspense.resolve();
        }
      });
    },
    unmount(parentSuspense2, doRemove) {
      suspense.isUnmounted = true;
      if (suspense.activeBranch) {
        unmount(
          suspense.activeBranch,
          parentComponent,
          parentSuspense2,
          doRemove
        );
      }
      if (suspense.pendingBranch) {
        unmount(
          suspense.pendingBranch,
          parentComponent,
          parentSuspense2,
          doRemove
        );
      }
    }
  };
  return suspense;
}
function hydrateSuspense(node, vnode, parentComponent, parentSuspense, namespace, slotScopeIds, optimized, rendererInternals, hydrateNode) {
  const suspense = vnode.suspense = createSuspenseBoundary(
    vnode,
    parentSuspense,
    parentComponent,
    node.parentNode,
    // eslint-disable-next-line no-restricted-globals
    document.createElement("div"),
    null,
    namespace,
    slotScopeIds,
    optimized,
    rendererInternals,
    true
  );
  const result = hydrateNode(
    node,
    suspense.pendingBranch = vnode.ssContent,
    parentComponent,
    suspense,
    slotScopeIds,
    optimized
  );
  if (suspense.deps === 0) {
    suspense.resolve(false, true);
  }
  return result;
}
function normalizeSuspenseChildren(vnode) {
  const { shapeFlag, children } = vnode;
  const isSlotChildren = shapeFlag & 32;
  vnode.ssContent = normalizeSuspenseSlot(
    isSlotChildren ? children.default : children
  );
  vnode.ssFallback = isSlotChildren ? normalizeSuspenseSlot(children.fallback) : createVNode(Comment);
}
function normalizeSuspenseSlot(s) {
  let block;
  if (isFunction(s)) {
    const trackBlock = isBlockTreeEnabled && s._c;
    if (trackBlock) {
      s._d = false;
      openBlock();
    }
    s = s();
    if (trackBlock) {
      s._d = true;
      block = currentBlock;
      closeBlock();
    }
  }
  if (isArray(s)) {
    const singleChild = filterSingleRoot(s);
    s = singleChild;
  }
  s = normalizeVNode(s);
  if (block && !s.dynamicChildren) {
    s.dynamicChildren = block.filter((c) => c !== s);
  }
  return s;
}
function queueEffectWithSuspense(fn2, suspense) {
  if (suspense && suspense.pendingBranch) {
    if (isArray(fn2)) {
      suspense.effects.push(...fn2);
    } else {
      suspense.effects.push(fn2);
    }
  } else {
    queuePostFlushCb(fn2);
  }
}
function setActiveBranch(suspense, branch) {
  suspense.activeBranch = branch;
  const { vnode, parentComponent } = suspense;
  let el2 = branch.el;
  while (!el2 && branch.component) {
    branch = branch.component.subTree;
    el2 = branch.el;
  }
  vnode.el = el2;
  if (parentComponent && parentComponent.subTree === vnode) {
    parentComponent.vnode.el = el2;
    updateHOCHostEl(parentComponent, el2);
  }
}
function isVNodeSuspensible(vnode) {
  const suspensible = vnode.props && vnode.props.suspensible;
  return suspensible != null && suspensible !== false;
}
const Fragment = Symbol.for("v-fgt");
const Text = Symbol.for("v-txt");
const Comment = Symbol.for("v-cmt");
const Static = Symbol.for("v-stc");
const blockStack = [];
let currentBlock = null;
function openBlock(disableTracking = false) {
  blockStack.push(currentBlock = disableTracking ? null : []);
}
function closeBlock() {
  blockStack.pop();
  currentBlock = blockStack[blockStack.length - 1] || null;
}
let isBlockTreeEnabled = 1;
function setBlockTracking(value, inVOnce = false) {
  isBlockTreeEnabled += value;
  if (value < 0 && currentBlock && inVOnce) {
    currentBlock.hasOnce = true;
  }
}
function setupBlock(vnode) {
  vnode.dynamicChildren = isBlockTreeEnabled > 0 ? currentBlock || EMPTY_ARR : null;
  closeBlock();
  if (isBlockTreeEnabled > 0 && currentBlock) {
    currentBlock.push(vnode);
  }
  return vnode;
}
function createElementBlock(type, props, children, patchFlag, dynamicProps, shapeFlag) {
  return setupBlock(
    createBaseVNode(
      type,
      props,
      children,
      patchFlag,
      dynamicProps,
      shapeFlag,
      true
    )
  );
}
function createBlock(type, props, children, patchFlag, dynamicProps) {
  return setupBlock(
    createVNode(
      type,
      props,
      children,
      patchFlag,
      dynamicProps,
      true
    )
  );
}
function isVNode(value) {
  return value ? value.__v_isVNode === true : false;
}
function isSameVNodeType(n1, n22) {
  return n1.type === n22.type && n1.key === n22.key;
}
function transformVNodeArgs(transformer) {
}
const normalizeKey = ({ key }) => key != null ? key : null;
const normalizeRef = ({
  ref: ref3,
  ref_key,
  ref_for
}) => {
  if (typeof ref3 === "number") {
    ref3 = "" + ref3;
  }
  return ref3 != null ? isString(ref3) || isRef(ref3) || isFunction(ref3) ? { i: currentRenderingInstance, r: ref3, k: ref_key, f: !!ref_for } : ref3 : null;
};
function createBaseVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, shapeFlag = type === Fragment ? 0 : 1, isBlockNode = false, needFullChildrenNormalization = false) {
  const vnode = {
    __v_isVNode: true,
    __v_skip: true,
    type,
    props,
    key: props && normalizeKey(props),
    ref: props && normalizeRef(props),
    scopeId: currentScopeId,
    slotScopeIds: null,
    children,
    component: null,
    suspense: null,
    ssContent: null,
    ssFallback: null,
    dirs: null,
    transition: null,
    el: null,
    anchor: null,
    target: null,
    targetStart: null,
    targetAnchor: null,
    staticCount: 0,
    shapeFlag,
    patchFlag,
    dynamicProps,
    dynamicChildren: null,
    appContext: null,
    ctx: currentRenderingInstance
  };
  if (needFullChildrenNormalization) {
    normalizeChildren(vnode, children);
    if (shapeFlag & 128) {
      type.normalize(vnode);
    }
  } else if (children) {
    vnode.shapeFlag |= isString(children) ? 8 : 16;
  }
  if (isBlockTreeEnabled > 0 && // avoid a block node from tracking itself
  !isBlockNode && // has current parent block
  currentBlock && // presence of a patch flag indicates this node needs patching on updates.
  // component nodes also should always be patched, because even if the
  // component doesn't need to update, it needs to persist the instance on to
  // the next vnode so that it can be properly unmounted later.
  (vnode.patchFlag > 0 || shapeFlag & 6) && // the EVENTS flag is only for hydration and if it is the only flag, the
  // vnode should not be considered dynamic due to handler caching.
  vnode.patchFlag !== 32) {
    currentBlock.push(vnode);
  }
  return vnode;
}
const createVNode = _createVNode;
function _createVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, isBlockNode = false) {
  if (!type || type === NULL_DYNAMIC_COMPONENT) {
    type = Comment;
  }
  if (isVNode(type)) {
    const cloned = cloneVNode(
      type,
      props,
      true
      /* mergeRef: true */
    );
    if (children) {
      normalizeChildren(cloned, children);
    }
    if (isBlockTreeEnabled > 0 && !isBlockNode && currentBlock) {
      if (cloned.shapeFlag & 6) {
        currentBlock[currentBlock.indexOf(type)] = cloned;
      } else {
        currentBlock.push(cloned);
      }
    }
    cloned.patchFlag = -2;
    return cloned;
  }
  if (isClassComponent(type)) {
    type = type.__vccOpts;
  }
  if (props) {
    props = guardReactiveProps(props);
    let { class: klass, style } = props;
    if (klass && !isString(klass)) {
      props.class = normalizeClass(klass);
    }
    if (isObject(style)) {
      if (isProxy$1(style) && !isArray(style)) {
        style = extend({}, style);
      }
      props.style = normalizeStyle(style);
    }
  }
  const shapeFlag = isString(type) ? 1 : isSuspense(type) ? 128 : isTeleport(type) ? 64 : isObject(type) ? 4 : isFunction(type) ? 2 : 0;
  return createBaseVNode(
    type,
    props,
    children,
    patchFlag,
    dynamicProps,
    shapeFlag,
    isBlockNode,
    true
  );
}
function guardReactiveProps(props) {
  if (!props) return null;
  return isProxy$1(props) || isInternalObject(props) ? extend({}, props) : props;
}
function cloneVNode(vnode, extraProps, mergeRef = false, cloneTransition = false) {
  const { props, ref: ref3, patchFlag, children, transition } = vnode;
  const mergedProps = extraProps ? mergeProps(props || {}, extraProps) : props;
  const cloned = {
    __v_isVNode: true,
    __v_skip: true,
    type: vnode.type,
    props: mergedProps,
    key: mergedProps && normalizeKey(mergedProps),
    ref: extraProps && extraProps.ref ? (
      // #2078 in the case of <component :is="vnode" ref="extra"/>
      // if the vnode itself already has a ref, cloneVNode will need to merge
      // the refs so the single vnode can be set on multiple refs
      mergeRef && ref3 ? isArray(ref3) ? ref3.concat(normalizeRef(extraProps)) : [ref3, normalizeRef(extraProps)] : normalizeRef(extraProps)
    ) : ref3,
    scopeId: vnode.scopeId,
    slotScopeIds: vnode.slotScopeIds,
    children,
    target: vnode.target,
    targetStart: vnode.targetStart,
    targetAnchor: vnode.targetAnchor,
    staticCount: vnode.staticCount,
    shapeFlag: vnode.shapeFlag,
    // if the vnode is cloned with extra props, we can no longer assume its
    // existing patch flag to be reliable and need to add the FULL_PROPS flag.
    // note: preserve flag for fragments since they use the flag for children
    // fast paths only.
    patchFlag: extraProps && vnode.type !== Fragment ? patchFlag === -1 ? 16 : patchFlag | 16 : patchFlag,
    dynamicProps: vnode.dynamicProps,
    dynamicChildren: vnode.dynamicChildren,
    appContext: vnode.appContext,
    dirs: vnode.dirs,
    transition,
    // These should technically only be non-null on mounted VNodes. However,
    // they *should* be copied for kept-alive vnodes. So we just always copy
    // them since them being non-null during a mount doesn't affect the logic as
    // they will simply be overwritten.
    component: vnode.component,
    suspense: vnode.suspense,
    ssContent: vnode.ssContent && cloneVNode(vnode.ssContent),
    ssFallback: vnode.ssFallback && cloneVNode(vnode.ssFallback),
    placeholder: vnode.placeholder,
    el: vnode.el,
    anchor: vnode.anchor,
    ctx: vnode.ctx,
    ce: vnode.ce
  };
  if (transition && cloneTransition) {
    setTransitionHooks(
      cloned,
      transition.clone(cloned)
    );
  }
  return cloned;
}
function createTextVNode(text = " ", flag = 0) {
  return createVNode(Text, null, text, flag);
}
function createStaticVNode(content, numberOfNodes) {
  const vnode = createVNode(Static, null, content);
  vnode.staticCount = numberOfNodes;
  return vnode;
}
function createCommentVNode(text = "", asBlock = false) {
  return asBlock ? (openBlock(), createBlock(Comment, null, text)) : createVNode(Comment, null, text);
}
function normalizeVNode(child) {
  if (child == null || typeof child === "boolean") {
    return createVNode(Comment);
  } else if (isArray(child)) {
    return createVNode(
      Fragment,
      null,
      // #3666, avoid reference pollution when reusing vnode
      child.slice()
    );
  } else if (isVNode(child)) {
    return cloneIfMounted(child);
  } else {
    return createVNode(Text, null, String(child));
  }
}
function cloneIfMounted(child) {
  return child.el === null && child.patchFlag !== -1 || child.memo ? child : cloneVNode(child);
}
function normalizeChildren(vnode, children) {
  let type = 0;
  const { shapeFlag } = vnode;
  if (children == null) {
    children = null;
  } else if (isArray(children)) {
    type = 16;
  } else if (typeof children === "object") {
    if (shapeFlag & (1 | 64)) {
      const slot = children.default;
      if (slot) {
        slot._c && (slot._d = false);
        normalizeChildren(vnode, slot());
        slot._c && (slot._d = true);
      }
      return;
    } else {
      type = 32;
      const slotFlag = children._;
      if (!slotFlag && !isInternalObject(children)) {
        children._ctx = currentRenderingInstance;
      } else if (slotFlag === 3 && currentRenderingInstance) {
        if (currentRenderingInstance.slots._ === 1) {
          children._ = 1;
        } else {
          children._ = 2;
          vnode.patchFlag |= 1024;
        }
      }
    }
  } else if (isFunction(children)) {
    children = { default: children, _ctx: currentRenderingInstance };
    type = 32;
  } else {
    children = String(children);
    if (shapeFlag & 64) {
      type = 16;
      children = [createTextVNode(children)];
    } else {
      type = 8;
    }
  }
  vnode.children = children;
  vnode.shapeFlag |= type;
}
function mergeProps(...args) {
  const ret = {};
  for (let i = 0; i < args.length; i++) {
    const toMerge = args[i];
    for (const key in toMerge) {
      if (key === "class") {
        if (ret.class !== toMerge.class) {
          ret.class = normalizeClass([ret.class, toMerge.class]);
        }
      } else if (key === "style") {
        ret.style = normalizeStyle([ret.style, toMerge.style]);
      } else if (isOn(key)) {
        const existing = ret[key];
        const incoming = toMerge[key];
        if (incoming && existing !== incoming && !(isArray(existing) && existing.includes(incoming))) {
          ret[key] = existing ? [].concat(existing, incoming) : incoming;
        }
      } else if (key !== "") {
        ret[key] = toMerge[key];
      }
    }
  }
  return ret;
}
function invokeVNodeHook(hook, instance, vnode, prevVNode = null) {
  callWithAsyncErrorHandling(hook, instance, 7, [
    vnode,
    prevVNode
  ]);
}
const emptyAppContext = createAppContext();
let uid = 0;
function createComponentInstance(vnode, parent, suspense) {
  const type = vnode.type;
  const appContext = (parent ? parent.appContext : vnode.appContext) || emptyAppContext;
  const instance = {
    uid: uid++,
    vnode,
    type,
    parent,
    appContext,
    root: null,
    // to be immediately set
    next: null,
    subTree: null,
    // will be set synchronously right after creation
    effect: null,
    update: null,
    // will be set synchronously right after creation
    job: null,
    scope: new EffectScope(
      true
      /* detached */
    ),
    render: null,
    proxy: null,
    exposed: null,
    exposeProxy: null,
    withProxy: null,
    provides: parent ? parent.provides : Object.create(appContext.provides),
    ids: parent ? parent.ids : ["", 0, 0],
    accessCache: null,
    renderCache: [],
    // local resolved assets
    components: null,
    directives: null,
    // resolved props and emits options
    propsOptions: normalizePropsOptions(type, appContext),
    emitsOptions: normalizeEmitsOptions(type, appContext),
    // emit
    emit: null,
    // to be set immediately
    emitted: null,
    // props default value
    propsDefaults: EMPTY_OBJ,
    // inheritAttrs
    inheritAttrs: type.inheritAttrs,
    // state
    ctx: EMPTY_OBJ,
    data: EMPTY_OBJ,
    props: EMPTY_OBJ,
    attrs: EMPTY_OBJ,
    slots: EMPTY_OBJ,
    refs: EMPTY_OBJ,
    setupState: EMPTY_OBJ,
    setupContext: null,
    // suspense related
    suspense,
    suspenseId: suspense ? suspense.pendingId : 0,
    asyncDep: null,
    asyncResolved: false,
    // lifecycle hooks
    // not using enums here because it results in computed properties
    isMounted: false,
    isUnmounted: false,
    isDeactivated: false,
    bc: null,
    c: null,
    bm: null,
    m: null,
    bu: null,
    u: null,
    um: null,
    bum: null,
    da: null,
    a: null,
    rtg: null,
    rtc: null,
    ec: null,
    sp: null
  };
  {
    instance.ctx = { _: instance };
  }
  instance.root = parent ? parent.root : instance;
  instance.emit = emit.bind(null, instance);
  if (vnode.ce) {
    vnode.ce(instance);
  }
  return instance;
}
let currentInstance = null;
const getCurrentInstance = () => currentInstance || currentRenderingInstance;
let internalSetCurrentInstance;
let setInSSRSetupState;
{
  const g = getGlobalThis();
  const registerGlobalSetter = (key, setter) => {
    let setters;
    if (!(setters = g[key])) setters = g[key] = [];
    setters.push(setter);
    return (v5) => {
      if (setters.length > 1) setters.forEach((set) => set(v5));
      else setters[0](v5);
    };
  };
  internalSetCurrentInstance = registerGlobalSetter(
    `__VUE_INSTANCE_SETTERS__`,
    (v5) => currentInstance = v5
  );
  setInSSRSetupState = registerGlobalSetter(
    `__VUE_SSR_SETTERS__`,
    (v5) => isInSSRComponentSetup = v5
  );
}
const setCurrentInstance = (instance) => {
  const prev = currentInstance;
  internalSetCurrentInstance(instance);
  instance.scope.on();
  return () => {
    instance.scope.off();
    internalSetCurrentInstance(prev);
  };
};
const unsetCurrentInstance = () => {
  currentInstance && currentInstance.scope.off();
  internalSetCurrentInstance(null);
};
function isStatefulComponent(instance) {
  return instance.vnode.shapeFlag & 4;
}
let isInSSRComponentSetup = false;
function setupComponent(instance, isSSR = false, optimized = false) {
  isSSR && setInSSRSetupState(isSSR);
  const { props, children } = instance.vnode;
  const isStateful = isStatefulComponent(instance);
  initProps(instance, props, isStateful, isSSR);
  initSlots(instance, children, optimized || isSSR);
  const setupResult = isStateful ? setupStatefulComponent(instance, isSSR) : void 0;
  isSSR && setInSSRSetupState(false);
  return setupResult;
}
function setupStatefulComponent(instance, isSSR) {
  const Component = instance.type;
  instance.accessCache = /* @__PURE__ */ Object.create(null);
  instance.proxy = new Proxy(instance.ctx, PublicInstanceProxyHandlers);
  const { setup } = Component;
  if (setup) {
    pauseTracking();
    const setupContext = instance.setupContext = setup.length > 1 ? createSetupContext(instance) : null;
    const reset2 = setCurrentInstance(instance);
    const setupResult = callWithErrorHandling(
      setup,
      instance,
      0,
      [
        instance.props,
        setupContext
      ]
    );
    const isAsyncSetup = isPromise(setupResult);
    resetTracking();
    reset2();
    if ((isAsyncSetup || instance.sp) && !isAsyncWrapper(instance)) {
      markAsyncBoundary(instance);
    }
    if (isAsyncSetup) {
      setupResult.then(unsetCurrentInstance, unsetCurrentInstance);
      if (isSSR) {
        return setupResult.then((resolvedResult) => {
          handleSetupResult(instance, resolvedResult, isSSR);
        }).catch((e) => {
          handleError(e, instance, 0);
        });
      } else {
        instance.asyncDep = setupResult;
      }
    } else {
      handleSetupResult(instance, setupResult, isSSR);
    }
  } else {
    finishComponentSetup(instance, isSSR);
  }
}
function handleSetupResult(instance, setupResult, isSSR) {
  if (isFunction(setupResult)) {
    if (instance.type.__ssrInlineRender) {
      instance.ssrRender = setupResult;
    } else {
      instance.render = setupResult;
    }
  } else if (isObject(setupResult)) {
    instance.setupState = proxyRefs(setupResult);
  } else ;
  finishComponentSetup(instance, isSSR);
}
let compile$1;
let installWithProxy;
function registerRuntimeCompiler(_compile) {
  compile$1 = _compile;
  installWithProxy = (i) => {
    if (i.render._rc) {
      i.withProxy = new Proxy(i.ctx, RuntimeCompiledPublicInstanceProxyHandlers);
    }
  };
}
const isRuntimeOnly = () => !compile$1;
function finishComponentSetup(instance, isSSR, skipOptions) {
  const Component = instance.type;
  if (!instance.render) {
    if (!isSSR && compile$1 && !Component.render) {
      const template = Component.template || resolveMergedOptions(instance).template;
      if (template) {
        const { isCustomElement, compilerOptions } = instance.appContext.config;
        const { delimiters, compilerOptions: componentCompilerOptions } = Component;
        const finalCompilerOptions = extend(
          extend(
            {
              isCustomElement,
              delimiters
            },
            compilerOptions
          ),
          componentCompilerOptions
        );
        Component.render = compile$1(template, finalCompilerOptions);
      }
    }
    instance.render = Component.render || NOOP;
    if (installWithProxy) {
      installWithProxy(instance);
    }
  }
  {
    const reset2 = setCurrentInstance(instance);
    pauseTracking();
    try {
      applyOptions(instance);
    } finally {
      resetTracking();
      reset2();
    }
  }
}
const attrsProxyHandlers = {
  get(target, key) {
    track(target, "get", "");
    return target[key];
  }
};
function createSetupContext(instance) {
  const expose = (exposed) => {
    instance.exposed = exposed || {};
  };
  {
    return {
      attrs: new Proxy(instance.attrs, attrsProxyHandlers),
      slots: instance.slots,
      emit: instance.emit,
      expose
    };
  }
}
function getComponentPublicInstance(instance) {
  if (instance.exposed) {
    return instance.exposeProxy || (instance.exposeProxy = new Proxy(proxyRefs(markRaw(instance.exposed)), {
      get(target, key) {
        if (key in target) {
          return target[key];
        } else if (key in publicPropertiesMap) {
          return publicPropertiesMap[key](instance);
        }
      },
      has(target, key) {
        return key in target || key in publicPropertiesMap;
      }
    }));
  } else {
    return instance.proxy;
  }
}
const classifyRE = /(?:^|[-_])\w/g;
const classify = (str) => str.replace(classifyRE, (c) => c.toUpperCase()).replace(/[-_]/g, "");
function getComponentName(Component, includeInferred = true) {
  return isFunction(Component) ? Component.displayName || Component.name : Component.name || includeInferred && Component.__name;
}
function formatComponentName(instance, Component, isRoot = false) {
  let name = getComponentName(Component);
  if (!name && Component.__file) {
    const match = Component.__file.match(/([^/\\]+)\.\w+$/);
    if (match) {
      name = match[1];
    }
  }
  if (!name && instance && instance.parent) {
    const inferFromRegistry = (registry) => {
      for (const key in registry) {
        if (registry[key] === Component) {
          return key;
        }
      }
    };
    name = inferFromRegistry(
      instance.components || instance.parent.type.components
    ) || inferFromRegistry(instance.appContext.components);
  }
  return name ? classify(name) : isRoot ? `App` : `Anonymous`;
}
function isClassComponent(value) {
  return isFunction(value) && "__vccOpts" in value;
}
const computed = (getterOrOptions, debugOptions) => {
  const c = computed$1(getterOrOptions, debugOptions, isInSSRComponentSetup);
  return c;
};
function h(type, propsOrChildren, children) {
  const doCreateVNode = (type2, props, children2) => {
    setBlockTracking(-1);
    try {
      return createVNode(type2, props, children2);
    } finally {
      setBlockTracking(1);
    }
  };
  const l = arguments.length;
  if (l === 2) {
    if (isObject(propsOrChildren) && !isArray(propsOrChildren)) {
      if (isVNode(propsOrChildren)) {
        return doCreateVNode(type, null, [propsOrChildren]);
      }
      return doCreateVNode(type, propsOrChildren);
    } else {
      return doCreateVNode(type, null, propsOrChildren);
    }
  } else {
    if (l > 3) {
      children = Array.prototype.slice.call(arguments, 2);
    } else if (l === 3 && isVNode(children)) {
      children = [children];
    }
    return doCreateVNode(type, propsOrChildren, children);
  }
}
function initCustomFormatter() {
  {
    return;
  }
}
function withMemo(memo, render2, cache, index) {
  const cached = cache[index];
  if (cached && isMemoSame(cached, memo)) {
    return cached;
  }
  const ret = render2();
  ret.memo = memo.slice();
  ret.cacheIndex = index;
  return cache[index] = ret;
}
function isMemoSame(cached, memo) {
  const prev = cached.memo;
  if (prev.length != memo.length) {
    return false;
  }
  for (let i = 0; i < prev.length; i++) {
    if (hasChanged(prev[i], memo[i])) {
      return false;
    }
  }
  if (isBlockTreeEnabled > 0 && currentBlock) {
    currentBlock.push(cached);
  }
  return true;
}
const version = "3.5.21";
const warn = NOOP;
const ErrorTypeStrings = ErrorTypeStrings$1;
const devtools = devtools$1;
const setDevtoolsHook = setDevtoolsHook$1;
const _ssrUtils = {
  createComponentInstance,
  setupComponent,
  renderComponentRoot,
  setCurrentRenderingInstance,
  isVNode,
  normalizeVNode,
  getComponentPublicInstance,
  ensureValidVNode,
  pushWarningContext,
  popWarningContext
};
const ssrUtils = _ssrUtils;
const resolveFilter = null;
const compatUtils = null;
const DeprecationTypes = null;
/**
* @vue/runtime-dom v3.5.21
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/
let policy = void 0;
const tt = typeof window !== "undefined" && window.trustedTypes;
if (tt) {
  try {
    policy = /* @__PURE__ */ tt.createPolicy("vue", {
      createHTML: (val) => val
    });
  } catch (e) {
  }
}
const unsafeToTrustedHTML = policy ? (val) => policy.createHTML(val) : (val) => val;
const svgNS = "http://www.w3.org/2000/svg";
const mathmlNS = "http://www.w3.org/1998/Math/MathML";
const doc = typeof document !== "undefined" ? document : null;
const templateContainer = doc && /* @__PURE__ */ doc.createElement("template");
const nodeOps = {
  insert: (child, parent, anchor) => {
    parent.insertBefore(child, anchor || null);
  },
  remove: (child) => {
    const parent = child.parentNode;
    if (parent) {
      parent.removeChild(child);
    }
  },
  createElement: (tag, namespace, is2, props) => {
    const el2 = namespace === "svg" ? doc.createElementNS(svgNS, tag) : namespace === "mathml" ? doc.createElementNS(mathmlNS, tag) : is2 ? doc.createElement(tag, { is: is2 }) : doc.createElement(tag);
    if (tag === "select" && props && props.multiple != null) {
      el2.setAttribute("multiple", props.multiple);
    }
    return el2;
  },
  createText: (text) => doc.createTextNode(text),
  createComment: (text) => doc.createComment(text),
  setText: (node, text) => {
    node.nodeValue = text;
  },
  setElementText: (el2, text) => {
    el2.textContent = text;
  },
  parentNode: (node) => node.parentNode,
  nextSibling: (node) => node.nextSibling,
  querySelector: (selector) => doc.querySelector(selector),
  setScopeId(el2, id) {
    el2.setAttribute(id, "");
  },
  // __UNSAFE__
  // Reason: innerHTML.
  // Static content here can only come from compiled templates.
  // As long as the user only uses trusted templates, this is safe.
  insertStaticContent(content, parent, anchor, namespace, start, end) {
    const before = anchor ? anchor.previousSibling : parent.lastChild;
    if (start && (start === end || start.nextSibling)) {
      while (true) {
        parent.insertBefore(start.cloneNode(true), anchor);
        if (start === end || !(start = start.nextSibling)) break;
      }
    } else {
      templateContainer.innerHTML = unsafeToTrustedHTML(
        namespace === "svg" ? `<svg>${content}</svg>` : namespace === "mathml" ? `<math>${content}</math>` : content
      );
      const template = templateContainer.content;
      if (namespace === "svg" || namespace === "mathml") {
        const wrapper = template.firstChild;
        while (wrapper.firstChild) {
          template.appendChild(wrapper.firstChild);
        }
        template.removeChild(wrapper);
      }
      parent.insertBefore(template, anchor);
    }
    return [
      // first
      before ? before.nextSibling : parent.firstChild,
      // last
      anchor ? anchor.previousSibling : parent.lastChild
    ];
  }
};
const TRANSITION$1 = "transition";
const ANIMATION = "animation";
const vtcKey = Symbol("_vtc");
const DOMTransitionPropsValidators = {
  name: String,
  type: String,
  css: {
    type: Boolean,
    default: true
  },
  duration: [String, Number, Object],
  enterFromClass: String,
  enterActiveClass: String,
  enterToClass: String,
  appearFromClass: String,
  appearActiveClass: String,
  appearToClass: String,
  leaveFromClass: String,
  leaveActiveClass: String,
  leaveToClass: String
};
const TransitionPropsValidators = /* @__PURE__ */ extend(
  {},
  BaseTransitionPropsValidators,
  DOMTransitionPropsValidators
);
const decorate$1 = (t) => {
  t.displayName = "Transition";
  t.props = TransitionPropsValidators;
  return t;
};
const Transition = /* @__PURE__ */ decorate$1(
  (props, { slots }) => h(BaseTransition, resolveTransitionProps(props), slots)
);
const callHook = (hook, args = []) => {
  if (isArray(hook)) {
    hook.forEach((h22) => h22(...args));
  } else if (hook) {
    hook(...args);
  }
};
const hasExplicitCallback = (hook) => {
  return hook ? isArray(hook) ? hook.some((h22) => h22.length > 1) : hook.length > 1 : false;
};
function resolveTransitionProps(rawProps) {
  const baseProps = {};
  for (const key in rawProps) {
    if (!(key in DOMTransitionPropsValidators)) {
      baseProps[key] = rawProps[key];
    }
  }
  if (rawProps.css === false) {
    return baseProps;
  }
  const {
    name = "v",
    type,
    duration,
    enterFromClass = `${name}-enter-from`,
    enterActiveClass = `${name}-enter-active`,
    enterToClass = `${name}-enter-to`,
    appearFromClass = enterFromClass,
    appearActiveClass = enterActiveClass,
    appearToClass = enterToClass,
    leaveFromClass = `${name}-leave-from`,
    leaveActiveClass = `${name}-leave-active`,
    leaveToClass = `${name}-leave-to`
  } = rawProps;
  const durations = normalizeDuration(duration);
  const enterDuration = durations && durations[0];
  const leaveDuration = durations && durations[1];
  const {
    onBeforeEnter,
    onEnter,
    onEnterCancelled,
    onLeave,
    onLeaveCancelled,
    onBeforeAppear = onBeforeEnter,
    onAppear = onEnter,
    onAppearCancelled = onEnterCancelled
  } = baseProps;
  const finishEnter = (el2, isAppear, done, isCancelled) => {
    el2._enterCancelled = isCancelled;
    removeTransitionClass(el2, isAppear ? appearToClass : enterToClass);
    removeTransitionClass(el2, isAppear ? appearActiveClass : enterActiveClass);
    done && done();
  };
  const finishLeave = (el2, done) => {
    el2._isLeaving = false;
    removeTransitionClass(el2, leaveFromClass);
    removeTransitionClass(el2, leaveToClass);
    removeTransitionClass(el2, leaveActiveClass);
    done && done();
  };
  const makeEnterHook = (isAppear) => {
    return (el2, done) => {
      const hook = isAppear ? onAppear : onEnter;
      const resolve2 = () => finishEnter(el2, isAppear, done);
      callHook(hook, [el2, resolve2]);
      nextFrame(() => {
        removeTransitionClass(el2, isAppear ? appearFromClass : enterFromClass);
        addTransitionClass(el2, isAppear ? appearToClass : enterToClass);
        if (!hasExplicitCallback(hook)) {
          whenTransitionEnds(el2, type, enterDuration, resolve2);
        }
      });
    };
  };
  return extend(baseProps, {
    onBeforeEnter(el2) {
      callHook(onBeforeEnter, [el2]);
      addTransitionClass(el2, enterFromClass);
      addTransitionClass(el2, enterActiveClass);
    },
    onBeforeAppear(el2) {
      callHook(onBeforeAppear, [el2]);
      addTransitionClass(el2, appearFromClass);
      addTransitionClass(el2, appearActiveClass);
    },
    onEnter: makeEnterHook(false),
    onAppear: makeEnterHook(true),
    onLeave(el2, done) {
      el2._isLeaving = true;
      const resolve2 = () => finishLeave(el2, done);
      addTransitionClass(el2, leaveFromClass);
      if (!el2._enterCancelled) {
        forceReflow();
        addTransitionClass(el2, leaveActiveClass);
      } else {
        addTransitionClass(el2, leaveActiveClass);
        forceReflow();
      }
      nextFrame(() => {
        if (!el2._isLeaving) {
          return;
        }
        removeTransitionClass(el2, leaveFromClass);
        addTransitionClass(el2, leaveToClass);
        if (!hasExplicitCallback(onLeave)) {
          whenTransitionEnds(el2, type, leaveDuration, resolve2);
        }
      });
      callHook(onLeave, [el2, resolve2]);
    },
    onEnterCancelled(el2) {
      finishEnter(el2, false, void 0, true);
      callHook(onEnterCancelled, [el2]);
    },
    onAppearCancelled(el2) {
      finishEnter(el2, true, void 0, true);
      callHook(onAppearCancelled, [el2]);
    },
    onLeaveCancelled(el2) {
      finishLeave(el2);
      callHook(onLeaveCancelled, [el2]);
    }
  });
}
function normalizeDuration(duration) {
  if (duration == null) {
    return null;
  } else if (isObject(duration)) {
    return [NumberOf(duration.enter), NumberOf(duration.leave)];
  } else {
    const n = NumberOf(duration);
    return [n, n];
  }
}
function NumberOf(val) {
  const res = toNumber(val);
  return res;
}
function addTransitionClass(el2, cls) {
  cls.split(/\s+/).forEach((c) => c && el2.classList.add(c));
  (el2[vtcKey] || (el2[vtcKey] = /* @__PURE__ */ new Set())).add(cls);
}
function removeTransitionClass(el2, cls) {
  cls.split(/\s+/).forEach((c) => c && el2.classList.remove(c));
  const _vtc = el2[vtcKey];
  if (_vtc) {
    _vtc.delete(cls);
    if (!_vtc.size) {
      el2[vtcKey] = void 0;
    }
  }
}
function nextFrame(cb2) {
  requestAnimationFrame(() => {
    requestAnimationFrame(cb2);
  });
}
let endId = 0;
function whenTransitionEnds(el2, expectedType, explicitTimeout, resolve2) {
  const id = el2._endId = ++endId;
  const resolveIfNotStale = () => {
    if (id === el2._endId) {
      resolve2();
    }
  };
  if (explicitTimeout != null) {
    return setTimeout(resolveIfNotStale, explicitTimeout);
  }
  const { type, timeout, propCount } = getTransitionInfo(el2, expectedType);
  if (!type) {
    return resolve2();
  }
  const endEvent = type + "end";
  let ended = 0;
  const end = () => {
    el2.removeEventListener(endEvent, onEnd);
    resolveIfNotStale();
  };
  const onEnd = (e) => {
    if (e.target === el2 && ++ended >= propCount) {
      end();
    }
  };
  setTimeout(() => {
    if (ended < propCount) {
      end();
    }
  }, timeout + 1);
  el2.addEventListener(endEvent, onEnd);
}
function getTransitionInfo(el2, expectedType) {
  const styles = window.getComputedStyle(el2);
  const getStyleProperties = (key) => (styles[key] || "").split(", ");
  const transitionDelays = getStyleProperties(`${TRANSITION$1}Delay`);
  const transitionDurations = getStyleProperties(`${TRANSITION$1}Duration`);
  const transitionTimeout = getTimeout(transitionDelays, transitionDurations);
  const animationDelays = getStyleProperties(`${ANIMATION}Delay`);
  const animationDurations = getStyleProperties(`${ANIMATION}Duration`);
  const animationTimeout = getTimeout(animationDelays, animationDurations);
  let type = null;
  let timeout = 0;
  let propCount = 0;
  if (expectedType === TRANSITION$1) {
    if (transitionTimeout > 0) {
      type = TRANSITION$1;
      timeout = transitionTimeout;
      propCount = transitionDurations.length;
    }
  } else if (expectedType === ANIMATION) {
    if (animationTimeout > 0) {
      type = ANIMATION;
      timeout = animationTimeout;
      propCount = animationDurations.length;
    }
  } else {
    timeout = Math.max(transitionTimeout, animationTimeout);
    type = timeout > 0 ? transitionTimeout > animationTimeout ? TRANSITION$1 : ANIMATION : null;
    propCount = type ? type === TRANSITION$1 ? transitionDurations.length : animationDurations.length : 0;
  }
  const hasTransform = type === TRANSITION$1 && /\b(?:transform|all)(?:,|$)/.test(
    getStyleProperties(`${TRANSITION$1}Property`).toString()
  );
  return {
    type,
    timeout,
    propCount,
    hasTransform
  };
}
function getTimeout(delays, durations) {
  while (delays.length < durations.length) {
    delays = delays.concat(delays);
  }
  return Math.max(...durations.map((d, i) => toMs(d) + toMs(delays[i])));
}
function toMs(s) {
  if (s === "auto") return 0;
  return Number(s.slice(0, -1).replace(",", ".")) * 1e3;
}
function forceReflow() {
  return document.body.offsetHeight;
}
function patchClass(el2, value, isSVG) {
  const transitionClasses = el2[vtcKey];
  if (transitionClasses) {
    value = (value ? [value, ...transitionClasses] : [...transitionClasses]).join(" ");
  }
  if (value == null) {
    el2.removeAttribute("class");
  } else if (isSVG) {
    el2.setAttribute("class", value);
  } else {
    el2.className = value;
  }
}
const vShowOriginalDisplay = Symbol("_vod");
const vShowHidden = Symbol("_vsh");
const vShow = {
  // used for prop mismatch check during hydration
  name: "show",
  beforeMount(el2, { value }, { transition }) {
    el2[vShowOriginalDisplay] = el2.style.display === "none" ? "" : el2.style.display;
    if (transition && value) {
      transition.beforeEnter(el2);
    } else {
      setDisplay(el2, value);
    }
  },
  mounted(el2, { value }, { transition }) {
    if (transition && value) {
      transition.enter(el2);
    }
  },
  updated(el2, { value, oldValue }, { transition }) {
    if (!value === !oldValue) return;
    if (transition) {
      if (value) {
        transition.beforeEnter(el2);
        setDisplay(el2, true);
        transition.enter(el2);
      } else {
        transition.leave(el2, () => {
          setDisplay(el2, false);
        });
      }
    } else {
      setDisplay(el2, value);
    }
  },
  beforeUnmount(el2, { value }) {
    setDisplay(el2, value);
  }
};
function setDisplay(el2, value) {
  el2.style.display = value ? el2[vShowOriginalDisplay] : "none";
  el2[vShowHidden] = !value;
}
function initVShowForSSR() {
  vShow.getSSRProps = ({ value }) => {
    if (!value) {
      return { style: { display: "none" } };
    }
  };
}
const CSS_VAR_TEXT = Symbol("");
function useCssVars(getter) {
  const instance = getCurrentInstance();
  if (!instance) {
    return;
  }
  const updateTeleports = instance.ut = (vars = getter(instance.proxy)) => {
    Array.from(
      document.querySelectorAll(`[data-v-owner="${instance.uid}"]`)
    ).forEach((node) => setVarsOnNode(node, vars));
  };
  const setVars = () => {
    const vars = getter(instance.proxy);
    if (instance.ce) {
      setVarsOnNode(instance.ce, vars);
    } else {
      setVarsOnVNode(instance.subTree, vars);
    }
    updateTeleports(vars);
  };
  onBeforeUpdate(() => {
    queuePostFlushCb(setVars);
  });
  onMounted(() => {
    watch(setVars, NOOP, { flush: "post" });
    const ob2 = new MutationObserver(setVars);
    ob2.observe(instance.subTree.el.parentNode, { childList: true });
    onUnmounted(() => ob2.disconnect());
  });
}
function setVarsOnVNode(vnode, vars) {
  if (vnode.shapeFlag & 128) {
    const suspense = vnode.suspense;
    vnode = suspense.activeBranch;
    if (suspense.pendingBranch && !suspense.isHydrating) {
      suspense.effects.push(() => {
        setVarsOnVNode(suspense.activeBranch, vars);
      });
    }
  }
  while (vnode.component) {
    vnode = vnode.component.subTree;
  }
  if (vnode.shapeFlag & 1 && vnode.el) {
    setVarsOnNode(vnode.el, vars);
  } else if (vnode.type === Fragment) {
    vnode.children.forEach((c) => setVarsOnVNode(c, vars));
  } else if (vnode.type === Static) {
    let { el: el2, anchor } = vnode;
    while (el2) {
      setVarsOnNode(el2, vars);
      if (el2 === anchor) break;
      el2 = el2.nextSibling;
    }
  }
}
function setVarsOnNode(el2, vars) {
  if (el2.nodeType === 1) {
    const style = el2.style;
    let cssText = "";
    for (const key in vars) {
      const value = normalizeCssVarValue(vars[key]);
      style.setProperty(`--${key}`, value);
      cssText += `--${key}: ${value};`;
    }
    style[CSS_VAR_TEXT] = cssText;
  }
}
const displayRE = /(?:^|;)\s*display\s*:/;
function patchStyle(el2, prev, next) {
  const style = el2.style;
  const isCssString = isString(next);
  let hasControlledDisplay = false;
  if (next && !isCssString) {
    if (prev) {
      if (!isString(prev)) {
        for (const key in prev) {
          if (next[key] == null) {
            setStyle(style, key, "");
          }
        }
      } else {
        for (const prevStyle of prev.split(";")) {
          const key = prevStyle.slice(0, prevStyle.indexOf(":")).trim();
          if (next[key] == null) {
            setStyle(style, key, "");
          }
        }
      }
    }
    for (const key in next) {
      if (key === "display") {
        hasControlledDisplay = true;
      }
      setStyle(style, key, next[key]);
    }
  } else {
    if (isCssString) {
      if (prev !== next) {
        const cssVarText = style[CSS_VAR_TEXT];
        if (cssVarText) {
          next += ";" + cssVarText;
        }
        style.cssText = next;
        hasControlledDisplay = displayRE.test(next);
      }
    } else if (prev) {
      el2.removeAttribute("style");
    }
  }
  if (vShowOriginalDisplay in el2) {
    el2[vShowOriginalDisplay] = hasControlledDisplay ? style.display : "";
    if (el2[vShowHidden]) {
      style.display = "none";
    }
  }
}
const importantRE = /\s*!important$/;
function setStyle(style, name, val) {
  if (isArray(val)) {
    val.forEach((v5) => setStyle(style, name, v5));
  } else {
    if (val == null) val = "";
    if (name.startsWith("--")) {
      style.setProperty(name, val);
    } else {
      const prefixed = autoPrefix(style, name);
      if (importantRE.test(val)) {
        style.setProperty(
          hyphenate(prefixed),
          val.replace(importantRE, ""),
          "important"
        );
      } else {
        style[prefixed] = val;
      }
    }
  }
}
const prefixes = ["Webkit", "Moz", "ms"];
const prefixCache = {};
function autoPrefix(style, rawName) {
  const cached = prefixCache[rawName];
  if (cached) {
    return cached;
  }
  let name = camelize(rawName);
  if (name !== "filter" && name in style) {
    return prefixCache[rawName] = name;
  }
  name = capitalize(name);
  for (let i = 0; i < prefixes.length; i++) {
    const prefixed = prefixes[i] + name;
    if (prefixed in style) {
      return prefixCache[rawName] = prefixed;
    }
  }
  return rawName;
}
const xlinkNS = "http://www.w3.org/1999/xlink";
function patchAttr(el2, key, value, isSVG, instance, isBoolean = isSpecialBooleanAttr(key)) {
  if (isSVG && key.startsWith("xlink:")) {
    if (value == null) {
      el2.removeAttributeNS(xlinkNS, key.slice(6, key.length));
    } else {
      el2.setAttributeNS(xlinkNS, key, value);
    }
  } else {
    if (value == null || isBoolean && !includeBooleanAttr(value)) {
      el2.removeAttribute(key);
    } else {
      el2.setAttribute(
        key,
        isBoolean ? "" : isSymbol(value) ? String(value) : value
      );
    }
  }
}
function patchDOMProp(el2, key, value, parentComponent, attrName) {
  if (key === "innerHTML" || key === "textContent") {
    if (value != null) {
      el2[key] = key === "innerHTML" ? unsafeToTrustedHTML(value) : value;
    }
    return;
  }
  const tag = el2.tagName;
  if (key === "value" && tag !== "PROGRESS" && // custom elements may use _value internally
  !tag.includes("-")) {
    const oldValue = tag === "OPTION" ? el2.getAttribute("value") || "" : el2.value;
    const newValue = value == null ? (
      // #11647: value should be set as empty string for null and undefined,
      // but <input type="checkbox"> should be set as 'on'.
      el2.type === "checkbox" ? "on" : ""
    ) : String(value);
    if (oldValue !== newValue || !("_value" in el2)) {
      el2.value = newValue;
    }
    if (value == null) {
      el2.removeAttribute(key);
    }
    el2._value = value;
    return;
  }
  let needRemove = false;
  if (value === "" || value == null) {
    const type = typeof el2[key];
    if (type === "boolean") {
      value = includeBooleanAttr(value);
    } else if (value == null && type === "string") {
      value = "";
      needRemove = true;
    } else if (type === "number") {
      value = 0;
      needRemove = true;
    }
  }
  try {
    el2[key] = value;
  } catch (e) {
  }
  needRemove && el2.removeAttribute(attrName || key);
}
function addEventListener(el2, event, handler, options) {
  el2.addEventListener(event, handler, options);
}
function removeEventListener(el2, event, handler, options) {
  el2.removeEventListener(event, handler, options);
}
const veiKey = Symbol("_vei");
function patchEvent(el2, rawName, prevValue, nextValue, instance = null) {
  const invokers = el2[veiKey] || (el2[veiKey] = {});
  const existingInvoker = invokers[rawName];
  if (nextValue && existingInvoker) {
    existingInvoker.value = nextValue;
  } else {
    const [name, options] = parseName(rawName);
    if (nextValue) {
      const invoker = invokers[rawName] = createInvoker(
        nextValue,
        instance
      );
      addEventListener(el2, name, invoker, options);
    } else if (existingInvoker) {
      removeEventListener(el2, name, existingInvoker, options);
      invokers[rawName] = void 0;
    }
  }
}
const optionsModifierRE = /(?:Once|Passive|Capture)$/;
function parseName(name) {
  let options;
  if (optionsModifierRE.test(name)) {
    options = {};
    let m;
    while (m = name.match(optionsModifierRE)) {
      name = name.slice(0, name.length - m[0].length);
      options[m[0].toLowerCase()] = true;
    }
  }
  const event = name[2] === ":" ? name.slice(3) : hyphenate(name.slice(2));
  return [event, options];
}
let cachedNow = 0;
const p = /* @__PURE__ */ Promise.resolve();
const getNow = () => cachedNow || (p.then(() => cachedNow = 0), cachedNow = Date.now());
function createInvoker(initialValue, instance) {
  const invoker = (e) => {
    if (!e._vts) {
      e._vts = Date.now();
    } else if (e._vts <= invoker.attached) {
      return;
    }
    callWithAsyncErrorHandling(
      patchStopImmediatePropagation(e, invoker.value),
      instance,
      5,
      [e]
    );
  };
  invoker.value = initialValue;
  invoker.attached = getNow();
  return invoker;
}
function patchStopImmediatePropagation(e, value) {
  if (isArray(value)) {
    const originalStop = e.stopImmediatePropagation;
    e.stopImmediatePropagation = () => {
      originalStop.call(e);
      e._stopped = true;
    };
    return value.map(
      (fn2) => (e22) => !e22._stopped && fn2 && fn2(e22)
    );
  } else {
    return value;
  }
}
const isNativeOn = (key) => key.charCodeAt(0) === 111 && key.charCodeAt(1) === 110 && // lowercase letter
key.charCodeAt(2) > 96 && key.charCodeAt(2) < 123;
const patchProp = (el2, key, prevValue, nextValue, namespace, parentComponent) => {
  const isSVG = namespace === "svg";
  if (key === "class") {
    patchClass(el2, nextValue, isSVG);
  } else if (key === "style") {
    patchStyle(el2, prevValue, nextValue);
  } else if (isOn(key)) {
    if (!isModelListener(key)) {
      patchEvent(el2, key, prevValue, nextValue, parentComponent);
    }
  } else if (key[0] === "." ? (key = key.slice(1), true) : key[0] === "^" ? (key = key.slice(1), false) : shouldSetAsProp(el2, key, nextValue, isSVG)) {
    patchDOMProp(el2, key, nextValue);
    if (!el2.tagName.includes("-") && (key === "value" || key === "checked" || key === "selected")) {
      patchAttr(el2, key, nextValue, isSVG, parentComponent, key !== "value");
    }
  } else if (
    // #11081 force set props for possible async custom element
    el2._isVueCE && (/[A-Z]/.test(key) || !isString(nextValue))
  ) {
    patchDOMProp(el2, camelize(key), nextValue, parentComponent, key);
  } else {
    if (key === "true-value") {
      el2._trueValue = nextValue;
    } else if (key === "false-value") {
      el2._falseValue = nextValue;
    }
    patchAttr(el2, key, nextValue, isSVG);
  }
};
function shouldSetAsProp(el2, key, value, isSVG) {
  if (isSVG) {
    if (key === "innerHTML" || key === "textContent") {
      return true;
    }
    if (key in el2 && isNativeOn(key) && isFunction(value)) {
      return true;
    }
    return false;
  }
  if (key === "spellcheck" || key === "draggable" || key === "translate" || key === "autocorrect") {
    return false;
  }
  if (key === "form") {
    return false;
  }
  if (key === "list" && el2.tagName === "INPUT") {
    return false;
  }
  if (key === "type" && el2.tagName === "TEXTAREA") {
    return false;
  }
  if (key === "width" || key === "height") {
    const tag = el2.tagName;
    if (tag === "IMG" || tag === "VIDEO" || tag === "CANVAS" || tag === "SOURCE") {
      return false;
    }
  }
  if (isNativeOn(key) && isString(value)) {
    return false;
  }
  return key in el2;
}
const REMOVAL = {};
// @__NO_SIDE_EFFECTS__
function defineCustomElement(options, extraOptions, _createApp) {
  let Comp = /* @__PURE__ */ defineComponent(options, extraOptions);
  if (isPlainObject(Comp)) Comp = extend({}, Comp, extraOptions);
  class VueCustomElement extends VueElement {
    constructor(initialProps) {
      super(Comp, initialProps, _createApp);
    }
  }
  VueCustomElement.def = Comp;
  return VueCustomElement;
}
const defineSSRCustomElement = (/* @__NO_SIDE_EFFECTS__ */ (options, extraOptions) => {
  return /* @__PURE__ */ defineCustomElement(options, extraOptions, createSSRApp);
});
const BaseClass = typeof HTMLElement !== "undefined" ? HTMLElement : class {
};
class VueElement extends BaseClass {
  constructor(_def, _props = {}, _createApp = createApp) {
    super();
    this._def = _def;
    this._props = _props;
    this._createApp = _createApp;
    this._isVueCE = true;
    this._instance = null;
    this._app = null;
    this._nonce = this._def.nonce;
    this._connected = false;
    this._resolved = false;
    this._numberProps = null;
    this._styleChildren = /* @__PURE__ */ new WeakSet();
    this._ob = null;
    if (this.shadowRoot && _createApp !== createApp) {
      this._root = this.shadowRoot;
    } else {
      if (_def.shadowRoot !== false) {
        this.attachShadow({ mode: "open" });
        this._root = this.shadowRoot;
      } else {
        this._root = this;
      }
    }
  }
  connectedCallback() {
    if (!this.isConnected) return;
    if (!this.shadowRoot && !this._resolved) {
      this._parseSlots();
    }
    this._connected = true;
    let parent = this;
    while (parent = parent && (parent.parentNode || parent.host)) {
      if (parent instanceof VueElement) {
        this._parent = parent;
        break;
      }
    }
    if (!this._instance) {
      if (this._resolved) {
        this._mount(this._def);
      } else {
        if (parent && parent._pendingResolve) {
          this._pendingResolve = parent._pendingResolve.then(() => {
            this._pendingResolve = void 0;
            this._resolveDef();
          });
        } else {
          this._resolveDef();
        }
      }
    }
  }
  _setParent(parent = this._parent) {
    if (parent) {
      this._instance.parent = parent._instance;
      this._inheritParentContext(parent);
    }
  }
  _inheritParentContext(parent = this._parent) {
    if (parent && this._app) {
      Object.setPrototypeOf(
        this._app._context.provides,
        parent._instance.provides
      );
    }
  }
  disconnectedCallback() {
    this._connected = false;
    nextTick(() => {
      if (!this._connected) {
        if (this._ob) {
          this._ob.disconnect();
          this._ob = null;
        }
        this._app && this._app.unmount();
        if (this._instance) this._instance.ce = void 0;
        this._app = this._instance = null;
      }
    });
  }
  /**
   * resolve inner component definition (handle possible async component)
   */
  _resolveDef() {
    if (this._pendingResolve) {
      return;
    }
    for (let i = 0; i < this.attributes.length; i++) {
      this._setAttr(this.attributes[i].name);
    }
    this._ob = new MutationObserver((mutations) => {
      for (const m of mutations) {
        this._setAttr(m.attributeName);
      }
    });
    this._ob.observe(this, { attributes: true });
    const resolve2 = (def2, isAsync = false) => {
      this._resolved = true;
      this._pendingResolve = void 0;
      const { props, styles } = def2;
      let numberProps;
      if (props && !isArray(props)) {
        for (const key in props) {
          const opt = props[key];
          if (opt === Number || opt && opt.type === Number) {
            if (key in this._props) {
              this._props[key] = toNumber(this._props[key]);
            }
            (numberProps || (numberProps = /* @__PURE__ */ Object.create(null)))[camelize(key)] = true;
          }
        }
      }
      this._numberProps = numberProps;
      this._resolveProps(def2);
      if (this.shadowRoot) {
        this._applyStyles(styles);
      }
      this._mount(def2);
    };
    const asyncDef = this._def.__asyncLoader;
    if (asyncDef) {
      this._pendingResolve = asyncDef().then((def2) => {
        def2.configureApp = this._def.configureApp;
        resolve2(this._def = def2, true);
      });
    } else {
      resolve2(this._def);
    }
  }
  _mount(def2) {
    this._app = this._createApp(def2);
    this._inheritParentContext();
    if (def2.configureApp) {
      def2.configureApp(this._app);
    }
    this._app._ceVNode = this._createVNode();
    this._app.mount(this._root);
    const exposed = this._instance && this._instance.exposed;
    if (!exposed) return;
    for (const key in exposed) {
      if (!hasOwn(this, key)) {
        Object.defineProperty(this, key, {
          // unwrap ref to be consistent with public instance behavior
          get: () => unref(exposed[key])
        });
      }
    }
  }
  _resolveProps(def2) {
    const { props } = def2;
    const declaredPropKeys = isArray(props) ? props : Object.keys(props || {});
    for (const key of Object.keys(this)) {
      if (key[0] !== "_" && declaredPropKeys.includes(key)) {
        this._setProp(key, this[key]);
      }
    }
    for (const key of declaredPropKeys.map(camelize)) {
      Object.defineProperty(this, key, {
        get() {
          return this._getProp(key);
        },
        set(val) {
          this._setProp(key, val, true, true);
        }
      });
    }
  }
  _setAttr(key) {
    if (key.startsWith("data-v-")) return;
    const has = this.hasAttribute(key);
    let value = has ? this.getAttribute(key) : REMOVAL;
    const camelKey = camelize(key);
    if (has && this._numberProps && this._numberProps[camelKey]) {
      value = toNumber(value);
    }
    this._setProp(camelKey, value, false, true);
  }
  /**
   * @internal
   */
  _getProp(key) {
    return this._props[key];
  }
  /**
   * @internal
   */
  _setProp(key, val, shouldReflect = true, shouldUpdate = false) {
    if (val !== this._props[key]) {
      if (val === REMOVAL) {
        delete this._props[key];
      } else {
        this._props[key] = val;
        if (key === "key" && this._app) {
          this._app._ceVNode.key = val;
        }
      }
      if (shouldUpdate && this._instance) {
        this._update();
      }
      if (shouldReflect) {
        const ob2 = this._ob;
        ob2 && ob2.disconnect();
        if (val === true) {
          this.setAttribute(hyphenate(key), "");
        } else if (typeof val === "string" || typeof val === "number") {
          this.setAttribute(hyphenate(key), val + "");
        } else if (!val) {
          this.removeAttribute(hyphenate(key));
        }
        ob2 && ob2.observe(this, { attributes: true });
      }
    }
  }
  _update() {
    const vnode = this._createVNode();
    if (this._app) vnode.appContext = this._app._context;
    render$1(vnode, this._root);
  }
  _createVNode() {
    const baseProps = {};
    if (!this.shadowRoot) {
      baseProps.onVnodeMounted = baseProps.onVnodeUpdated = this._renderSlots.bind(this);
    }
    const vnode = createVNode(this._def, extend(baseProps, this._props));
    if (!this._instance) {
      vnode.ce = (instance) => {
        this._instance = instance;
        instance.ce = this;
        instance.isCE = true;
        const dispatch = (event, args) => {
          this.dispatchEvent(
            new CustomEvent(
              event,
              isPlainObject(args[0]) ? extend({ detail: args }, args[0]) : { detail: args }
            )
          );
        };
        instance.emit = (event, ...args) => {
          dispatch(event, args);
          if (hyphenate(event) !== event) {
            dispatch(hyphenate(event), args);
          }
        };
        this._setParent();
      };
    }
    return vnode;
  }
  _applyStyles(styles, owner) {
    if (!styles) return;
    if (owner) {
      if (owner === this._def || this._styleChildren.has(owner)) {
        return;
      }
      this._styleChildren.add(owner);
    }
    const nonce = this._nonce;
    for (let i = styles.length - 1; i >= 0; i--) {
      const s = document.createElement("style");
      if (nonce) s.setAttribute("nonce", nonce);
      s.textContent = styles[i];
      this.shadowRoot.prepend(s);
    }
  }
  /**
   * Only called when shadowRoot is false
   */
  _parseSlots() {
    const slots = this._slots = {};
    let n;
    while (n = this.firstChild) {
      const slotName = n.nodeType === 1 && n.getAttribute("slot") || "default";
      (slots[slotName] || (slots[slotName] = [])).push(n);
      this.removeChild(n);
    }
  }
  /**
   * Only called when shadowRoot is false
   */
  _renderSlots() {
    const outlets = (this._teleportTarget || this).querySelectorAll("slot");
    const scopeId = this._instance.type.__scopeId;
    for (let i = 0; i < outlets.length; i++) {
      const o7 = outlets[i];
      const slotName = o7.getAttribute("name") || "default";
      const content = this._slots[slotName];
      const parent = o7.parentNode;
      if (content) {
        for (const n of content) {
          if (scopeId && n.nodeType === 1) {
            const id = scopeId + "-s";
            const walker = document.createTreeWalker(n, 1);
            n.setAttribute(id, "");
            let child;
            while (child = walker.nextNode()) {
              child.setAttribute(id, "");
            }
          }
          parent.insertBefore(n, o7);
        }
      } else {
        while (o7.firstChild) parent.insertBefore(o7.firstChild, o7);
      }
      parent.removeChild(o7);
    }
  }
  /**
   * @internal
   */
  _injectChildStyle(comp) {
    this._applyStyles(comp.styles, comp);
  }
  /**
   * @internal
   */
  _removeChildStyle(comp) {
  }
}
function useHost(caller) {
  const instance = getCurrentInstance();
  const el2 = instance && instance.ce;
  if (el2) {
    return el2;
  }
  return null;
}
function useShadowRoot() {
  const el2 = useHost();
  return el2 && el2.shadowRoot;
}
function useCssModule(name = "$style") {
  {
    const instance = getCurrentInstance();
    if (!instance) {
      return EMPTY_OBJ;
    }
    const modules = instance.type.__cssModules;
    if (!modules) {
      return EMPTY_OBJ;
    }
    const mod = modules[name];
    if (!mod) {
      return EMPTY_OBJ;
    }
    return mod;
  }
}
const positionMap = /* @__PURE__ */ new WeakMap();
const newPositionMap = /* @__PURE__ */ new WeakMap();
const moveCbKey = Symbol("_moveCb");
const enterCbKey = Symbol("_enterCb");
const decorate = (t) => {
  delete t.props.mode;
  return t;
};
const TransitionGroupImpl = /* @__PURE__ */ decorate({
  name: "TransitionGroup",
  props: /* @__PURE__ */ extend({}, TransitionPropsValidators, {
    tag: String,
    moveClass: String
  }),
  setup(props, { slots }) {
    const instance = getCurrentInstance();
    const state = useTransitionState();
    let prevChildren;
    let children;
    onUpdated(() => {
      if (!prevChildren.length) {
        return;
      }
      const moveClass = props.moveClass || `${props.name || "v"}-move`;
      if (!hasCSSTransform(
        prevChildren[0].el,
        instance.vnode.el,
        moveClass
      )) {
        prevChildren = [];
        return;
      }
      prevChildren.forEach(callPendingCbs);
      prevChildren.forEach(recordPosition);
      const movedChildren = prevChildren.filter(applyTranslation);
      forceReflow();
      movedChildren.forEach((c) => {
        const el2 = c.el;
        const style = el2.style;
        addTransitionClass(el2, moveClass);
        style.transform = style.webkitTransform = style.transitionDuration = "";
        const cb2 = el2[moveCbKey] = (e) => {
          if (e && e.target !== el2) {
            return;
          }
          if (!e || e.propertyName.endsWith("transform")) {
            el2.removeEventListener("transitionend", cb2);
            el2[moveCbKey] = null;
            removeTransitionClass(el2, moveClass);
          }
        };
        el2.addEventListener("transitionend", cb2);
      });
      prevChildren = [];
    });
    return () => {
      const rawProps = toRaw(props);
      const cssTransitionProps = resolveTransitionProps(rawProps);
      let tag = rawProps.tag || Fragment;
      prevChildren = [];
      if (children) {
        for (let i = 0; i < children.length; i++) {
          const child = children[i];
          if (child.el && child.el instanceof Element) {
            prevChildren.push(child);
            setTransitionHooks(
              child,
              resolveTransitionHooks(
                child,
                cssTransitionProps,
                state,
                instance
              )
            );
            positionMap.set(
              child,
              child.el.getBoundingClientRect()
            );
          }
        }
      }
      children = slots.default ? getTransitionRawChildren(slots.default()) : [];
      for (let i = 0; i < children.length; i++) {
        const child = children[i];
        if (child.key != null) {
          setTransitionHooks(
            child,
            resolveTransitionHooks(child, cssTransitionProps, state, instance)
          );
        }
      }
      return createVNode(tag, null, children);
    };
  }
});
const TransitionGroup = TransitionGroupImpl;
function callPendingCbs(c) {
  const el2 = c.el;
  if (el2[moveCbKey]) {
    el2[moveCbKey]();
  }
  if (el2[enterCbKey]) {
    el2[enterCbKey]();
  }
}
function recordPosition(c) {
  newPositionMap.set(c, c.el.getBoundingClientRect());
}
function applyTranslation(c) {
  const oldPos = positionMap.get(c);
  const newPos = newPositionMap.get(c);
  const dx2 = oldPos.left - newPos.left;
  const dy2 = oldPos.top - newPos.top;
  if (dx2 || dy2) {
    const s = c.el.style;
    s.transform = s.webkitTransform = `translate(${dx2}px,${dy2}px)`;
    s.transitionDuration = "0s";
    return c;
  }
}
function hasCSSTransform(el2, root, moveClass) {
  const clone = el2.cloneNode();
  const _vtc = el2[vtcKey];
  if (_vtc) {
    _vtc.forEach((cls) => {
      cls.split(/\s+/).forEach((c) => c && clone.classList.remove(c));
    });
  }
  moveClass.split(/\s+/).forEach((c) => c && clone.classList.add(c));
  clone.style.display = "none";
  const container = root.nodeType === 1 ? root : root.parentNode;
  container.appendChild(clone);
  const { hasTransform } = getTransitionInfo(clone);
  container.removeChild(clone);
  return hasTransform;
}
const getModelAssigner = (vnode) => {
  const fn2 = vnode.props["onUpdate:modelValue"] || false;
  return isArray(fn2) ? (value) => invokeArrayFns(fn2, value) : fn2;
};
function onCompositionStart(e) {
  e.target.composing = true;
}
function onCompositionEnd(e) {
  const target = e.target;
  if (target.composing) {
    target.composing = false;
    target.dispatchEvent(new Event("input"));
  }
}
const assignKey = Symbol("_assign");
const vModelText = {
  created(el2, { modifiers: { lazy, trim, number } }, vnode) {
    el2[assignKey] = getModelAssigner(vnode);
    const castToNumber = number || vnode.props && vnode.props.type === "number";
    addEventListener(el2, lazy ? "change" : "input", (e) => {
      if (e.target.composing) return;
      let domValue = el2.value;
      if (trim) {
        domValue = domValue.trim();
      }
      if (castToNumber) {
        domValue = looseToNumber(domValue);
      }
      el2[assignKey](domValue);
    });
    if (trim) {
      addEventListener(el2, "change", () => {
        el2.value = el2.value.trim();
      });
    }
    if (!lazy) {
      addEventListener(el2, "compositionstart", onCompositionStart);
      addEventListener(el2, "compositionend", onCompositionEnd);
      addEventListener(el2, "change", onCompositionEnd);
    }
  },
  // set value on mounted so it's after min/max for type="range"
  mounted(el2, { value }) {
    el2.value = value == null ? "" : value;
  },
  beforeUpdate(el2, { value, oldValue, modifiers: { lazy, trim, number } }, vnode) {
    el2[assignKey] = getModelAssigner(vnode);
    if (el2.composing) return;
    const elValue = (number || el2.type === "number") && !/^0\d/.test(el2.value) ? looseToNumber(el2.value) : el2.value;
    const newValue = value == null ? "" : value;
    if (elValue === newValue) {
      return;
    }
    if (document.activeElement === el2 && el2.type !== "range") {
      if (lazy && value === oldValue) {
        return;
      }
      if (trim && el2.value.trim() === newValue) {
        return;
      }
    }
    el2.value = newValue;
  }
};
const vModelCheckbox = {
  // #4096 array checkboxes need to be deep traversed
  deep: true,
  created(el2, _5, vnode) {
    el2[assignKey] = getModelAssigner(vnode);
    addEventListener(el2, "change", () => {
      const modelValue = el2._modelValue;
      const elementValue = getValue(el2);
      const checked = el2.checked;
      const assign = el2[assignKey];
      if (isArray(modelValue)) {
        const index = looseIndexOf(modelValue, elementValue);
        const found = index !== -1;
        if (checked && !found) {
          assign(modelValue.concat(elementValue));
        } else if (!checked && found) {
          const filtered = [...modelValue];
          filtered.splice(index, 1);
          assign(filtered);
        }
      } else if (isSet(modelValue)) {
        const cloned = new Set(modelValue);
        if (checked) {
          cloned.add(elementValue);
        } else {
          cloned.delete(elementValue);
        }
        assign(cloned);
      } else {
        assign(getCheckboxValue(el2, checked));
      }
    });
  },
  // set initial checked on mount to wait for true-value/false-value
  mounted: setChecked,
  beforeUpdate(el2, binding, vnode) {
    el2[assignKey] = getModelAssigner(vnode);
    setChecked(el2, binding, vnode);
  }
};
function setChecked(el2, { value, oldValue }, vnode) {
  el2._modelValue = value;
  let checked;
  if (isArray(value)) {
    checked = looseIndexOf(value, vnode.props.value) > -1;
  } else if (isSet(value)) {
    checked = value.has(vnode.props.value);
  } else {
    if (value === oldValue) return;
    checked = looseEqual(value, getCheckboxValue(el2, true));
  }
  if (el2.checked !== checked) {
    el2.checked = checked;
  }
}
const vModelRadio = {
  created(el2, { value }, vnode) {
    el2.checked = looseEqual(value, vnode.props.value);
    el2[assignKey] = getModelAssigner(vnode);
    addEventListener(el2, "change", () => {
      el2[assignKey](getValue(el2));
    });
  },
  beforeUpdate(el2, { value, oldValue }, vnode) {
    el2[assignKey] = getModelAssigner(vnode);
    if (value !== oldValue) {
      el2.checked = looseEqual(value, vnode.props.value);
    }
  }
};
const vModelSelect = {
  // <select multiple> value need to be deep traversed
  deep: true,
  created(el2, { value, modifiers: { number } }, vnode) {
    const isSetModel = isSet(value);
    addEventListener(el2, "change", () => {
      const selectedVal = Array.prototype.filter.call(el2.options, (o7) => o7.selected).map(
        (o7) => number ? looseToNumber(getValue(o7)) : getValue(o7)
      );
      el2[assignKey](
        el2.multiple ? isSetModel ? new Set(selectedVal) : selectedVal : selectedVal[0]
      );
      el2._assigning = true;
      nextTick(() => {
        el2._assigning = false;
      });
    });
    el2[assignKey] = getModelAssigner(vnode);
  },
  // set value in mounted & updated because <select> relies on its children
  // <option>s.
  mounted(el2, { value }) {
    setSelected(el2, value);
  },
  beforeUpdate(el2, _binding, vnode) {
    el2[assignKey] = getModelAssigner(vnode);
  },
  updated(el2, { value }) {
    if (!el2._assigning) {
      setSelected(el2, value);
    }
  }
};
function setSelected(el2, value) {
  const isMultiple = el2.multiple;
  const isArrayValue = isArray(value);
  if (isMultiple && !isArrayValue && !isSet(value)) {
    return;
  }
  for (let i = 0, l = el2.options.length; i < l; i++) {
    const option = el2.options[i];
    const optionValue = getValue(option);
    if (isMultiple) {
      if (isArrayValue) {
        const optionType = typeof optionValue;
        if (optionType === "string" || optionType === "number") {
          option.selected = value.some((v5) => String(v5) === String(optionValue));
        } else {
          option.selected = looseIndexOf(value, optionValue) > -1;
        }
      } else {
        option.selected = value.has(optionValue);
      }
    } else if (looseEqual(getValue(option), value)) {
      if (el2.selectedIndex !== i) el2.selectedIndex = i;
      return;
    }
  }
  if (!isMultiple && el2.selectedIndex !== -1) {
    el2.selectedIndex = -1;
  }
}
function getValue(el2) {
  return "_value" in el2 ? el2._value : el2.value;
}
function getCheckboxValue(el2, checked) {
  const key = checked ? "_trueValue" : "_falseValue";
  return key in el2 ? el2[key] : checked;
}
const vModelDynamic = {
  created(el2, binding, vnode) {
    callModelHook(el2, binding, vnode, null, "created");
  },
  mounted(el2, binding, vnode) {
    callModelHook(el2, binding, vnode, null, "mounted");
  },
  beforeUpdate(el2, binding, vnode, prevVNode) {
    callModelHook(el2, binding, vnode, prevVNode, "beforeUpdate");
  },
  updated(el2, binding, vnode, prevVNode) {
    callModelHook(el2, binding, vnode, prevVNode, "updated");
  }
};
function resolveDynamicModel(tagName, type) {
  switch (tagName) {
    case "SELECT":
      return vModelSelect;
    case "TEXTAREA":
      return vModelText;
    default:
      switch (type) {
        case "checkbox":
          return vModelCheckbox;
        case "radio":
          return vModelRadio;
        default:
          return vModelText;
      }
  }
}
function callModelHook(el2, binding, vnode, prevVNode, hook) {
  const modelToUse = resolveDynamicModel(
    el2.tagName,
    vnode.props && vnode.props.type
  );
  const fn2 = modelToUse[hook];
  fn2 && fn2(el2, binding, vnode, prevVNode);
}
function initVModelForSSR() {
  vModelText.getSSRProps = ({ value }) => ({ value });
  vModelRadio.getSSRProps = ({ value }, vnode) => {
    if (vnode.props && looseEqual(vnode.props.value, value)) {
      return { checked: true };
    }
  };
  vModelCheckbox.getSSRProps = ({ value }, vnode) => {
    if (isArray(value)) {
      if (vnode.props && looseIndexOf(value, vnode.props.value) > -1) {
        return { checked: true };
      }
    } else if (isSet(value)) {
      if (vnode.props && value.has(vnode.props.value)) {
        return { checked: true };
      }
    } else if (value) {
      return { checked: true };
    }
  };
  vModelDynamic.getSSRProps = (binding, vnode) => {
    if (typeof vnode.type !== "string") {
      return;
    }
    const modelToUse = resolveDynamicModel(
      // resolveDynamicModel expects an uppercase tag name, but vnode.type is lowercase
      vnode.type.toUpperCase(),
      vnode.props && vnode.props.type
    );
    if (modelToUse.getSSRProps) {
      return modelToUse.getSSRProps(binding, vnode);
    }
  };
}
const systemModifiers = ["ctrl", "shift", "alt", "meta"];
const modifierGuards = {
  stop: (e) => e.stopPropagation(),
  prevent: (e) => e.preventDefault(),
  self: (e) => e.target !== e.currentTarget,
  ctrl: (e) => !e.ctrlKey,
  shift: (e) => !e.shiftKey,
  alt: (e) => !e.altKey,
  meta: (e) => !e.metaKey,
  left: (e) => "button" in e && e.button !== 0,
  middle: (e) => "button" in e && e.button !== 1,
  right: (e) => "button" in e && e.button !== 2,
  exact: (e, modifiers) => systemModifiers.some((m) => e[`${m}Key`] && !modifiers.includes(m))
};
const withModifiers = (fn2, modifiers) => {
  const cache = fn2._withMods || (fn2._withMods = {});
  const cacheKey = modifiers.join(".");
  return cache[cacheKey] || (cache[cacheKey] = ((event, ...args) => {
    for (let i = 0; i < modifiers.length; i++) {
      const guard = modifierGuards[modifiers[i]];
      if (guard && guard(event, modifiers)) return;
    }
    return fn2(event, ...args);
  }));
};
const keyNames = {
  esc: "escape",
  space: " ",
  up: "arrow-up",
  left: "arrow-left",
  right: "arrow-right",
  down: "arrow-down",
  delete: "backspace"
};
const withKeys = (fn2, modifiers) => {
  const cache = fn2._withKeys || (fn2._withKeys = {});
  const cacheKey = modifiers.join(".");
  return cache[cacheKey] || (cache[cacheKey] = ((event) => {
    if (!("key" in event)) {
      return;
    }
    const eventKey = hyphenate(event.key);
    if (modifiers.some(
      (k7) => k7 === eventKey || keyNames[k7] === eventKey
    )) {
      return fn2(event);
    }
  }));
};
const rendererOptions = /* @__PURE__ */ extend({ patchProp }, nodeOps);
let renderer;
let enabledHydration = false;
function ensureRenderer() {
  return renderer || (renderer = createRenderer(rendererOptions));
}
function ensureHydrationRenderer() {
  renderer = enabledHydration ? renderer : createHydrationRenderer(rendererOptions);
  enabledHydration = true;
  return renderer;
}
const render$1 = ((...args) => {
  ensureRenderer().render(...args);
});
const hydrate = ((...args) => {
  ensureHydrationRenderer().hydrate(...args);
});
const createApp = ((...args) => {
  const app = ensureRenderer().createApp(...args);
  const { mount: mount2 } = app;
  app.mount = (containerOrSelector) => {
    const container = normalizeContainer(containerOrSelector);
    if (!container) return;
    const component = app._component;
    if (!isFunction(component) && !component.render && !component.template) {
      component.template = container.innerHTML;
    }
    if (container.nodeType === 1) {
      container.textContent = "";
    }
    const proxy = mount2(container, false, resolveRootNamespace(container));
    if (container instanceof Element) {
      container.removeAttribute("v-cloak");
      container.setAttribute("data-v-app", "");
    }
    return proxy;
  };
  return app;
});
const createSSRApp = ((...args) => {
  const app = ensureHydrationRenderer().createApp(...args);
  const { mount: mount2 } = app;
  app.mount = (containerOrSelector) => {
    const container = normalizeContainer(containerOrSelector);
    if (container) {
      return mount2(container, true, resolveRootNamespace(container));
    }
  };
  return app;
});
function resolveRootNamespace(container) {
  if (container instanceof SVGElement) {
    return "svg";
  }
  if (typeof MathMLElement === "function" && container instanceof MathMLElement) {
    return "mathml";
  }
}
function normalizeContainer(container) {
  if (isString(container)) {
    const res = document.querySelector(container);
    return res;
  }
  return container;
}
let ssrDirectiveInitialized = false;
const initDirectivesForSSR = () => {
  if (!ssrDirectiveInitialized) {
    ssrDirectiveInitialized = true;
    initVModelForSSR();
    initVShowForSSR();
  }
};
const runtimeDom = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  BaseTransition,
  BaseTransitionPropsValidators,
  Comment,
  DeprecationTypes,
  EffectScope,
  ErrorCodes,
  ErrorTypeStrings,
  Fragment,
  KeepAlive,
  ReactiveEffect,
  Static,
  Suspense,
  Teleport,
  Text,
  TrackOpTypes,
  Transition,
  TransitionGroup,
  TriggerOpTypes,
  VueElement,
  assertNumber,
  callWithAsyncErrorHandling,
  callWithErrorHandling,
  camelize,
  capitalize,
  cloneVNode,
  compatUtils,
  computed,
  createApp,
  createBlock,
  createCommentVNode,
  createElementBlock,
  createElementVNode: createBaseVNode,
  createHydrationRenderer,
  createPropsRestProxy,
  createRenderer,
  createSSRApp,
  createSlots,
  createStaticVNode,
  createTextVNode,
  createVNode,
  customRef,
  defineAsyncComponent,
  defineComponent,
  defineCustomElement,
  defineEmits,
  defineExpose,
  defineModel,
  defineOptions,
  defineProps,
  defineSSRCustomElement,
  defineSlots,
  devtools,
  effect,
  effectScope,
  getCurrentInstance,
  getCurrentScope,
  getCurrentWatcher,
  getTransitionRawChildren,
  guardReactiveProps,
  h,
  handleError,
  hasInjectionContext,
  hydrate,
  hydrateOnIdle,
  hydrateOnInteraction,
  hydrateOnMediaQuery,
  hydrateOnVisible,
  initCustomFormatter,
  initDirectivesForSSR,
  inject,
  isMemoSame,
  isProxy: isProxy$1,
  isReactive,
  isReadonly,
  isRef,
  isRuntimeOnly,
  isShallow,
  isVNode,
  markRaw,
  mergeDefaults,
  mergeModels,
  mergeProps,
  nextTick,
  normalizeClass,
  normalizeProps,
  normalizeStyle,
  onActivated,
  onBeforeMount,
  onBeforeUnmount,
  onBeforeUpdate,
  onDeactivated,
  onErrorCaptured,
  onMounted,
  onRenderTracked,
  onRenderTriggered,
  onScopeDispose,
  onServerPrefetch,
  onUnmounted,
  onUpdated,
  onWatcherCleanup,
  openBlock,
  popScopeId,
  provide,
  proxyRefs,
  pushScopeId,
  queuePostFlushCb,
  reactive,
  readonly,
  ref,
  registerRuntimeCompiler,
  render: render$1,
  renderList,
  renderSlot,
  resolveComponent,
  resolveDirective,
  resolveDynamicComponent,
  resolveFilter,
  resolveTransitionHooks,
  setBlockTracking,
  setDevtoolsHook,
  setTransitionHooks,
  shallowReactive,
  shallowReadonly,
  shallowRef,
  ssrContextKey,
  ssrUtils,
  stop,
  toDisplayString,
  toHandlerKey,
  toHandlers,
  toRaw,
  toRef,
  toRefs,
  toValue,
  transformVNodeArgs,
  triggerRef,
  unref,
  useAttrs,
  useCssModule,
  useCssVars,
  useHost,
  useId,
  useModel,
  useSSRContext,
  useShadowRoot,
  useSlots,
  useTemplateRef,
  useTransitionState,
  vModelCheckbox,
  vModelDynamic,
  vModelRadio,
  vModelSelect,
  vModelText,
  vShow,
  version,
  warn,
  watch,
  watchEffect,
  watchPostEffect,
  watchSyncEffect,
  withAsyncContext,
  withCtx,
  withDefaults,
  withDirectives,
  withKeys,
  withMemo,
  withModifiers,
  withScopeId
}, Symbol.toStringTag, { value: "Module" }));
/**
* @vue/compiler-core v3.5.21
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/
const FRAGMENT = Symbol(``);
const TELEPORT = Symbol(``);
const SUSPENSE = Symbol(``);
const KEEP_ALIVE = Symbol(``);
const BASE_TRANSITION = Symbol(
  ``
);
const OPEN_BLOCK = Symbol(``);
const CREATE_BLOCK = Symbol(``);
const CREATE_ELEMENT_BLOCK = Symbol(
  ``
);
const CREATE_VNODE = Symbol(``);
const CREATE_ELEMENT_VNODE = Symbol(
  ``
);
const CREATE_COMMENT = Symbol(
  ``
);
const CREATE_TEXT = Symbol(
  ``
);
const CREATE_STATIC = Symbol(
  ``
);
const RESOLVE_COMPONENT = Symbol(
  ``
);
const RESOLVE_DYNAMIC_COMPONENT = Symbol(
  ``
);
const RESOLVE_DIRECTIVE = Symbol(
  ``
);
const RESOLVE_FILTER = Symbol(
  ``
);
const WITH_DIRECTIVES = Symbol(
  ``
);
const RENDER_LIST = Symbol(``);
const RENDER_SLOT = Symbol(``);
const CREATE_SLOTS = Symbol(``);
const TO_DISPLAY_STRING = Symbol(
  ``
);
const MERGE_PROPS = Symbol(``);
const NORMALIZE_CLASS = Symbol(
  ``
);
const NORMALIZE_STYLE = Symbol(
  ``
);
const NORMALIZE_PROPS = Symbol(
  ``
);
const GUARD_REACTIVE_PROPS = Symbol(
  ``
);
const TO_HANDLERS = Symbol(``);
const CAMELIZE = Symbol(``);
const CAPITALIZE = Symbol(``);
const TO_HANDLER_KEY = Symbol(
  ``
);
const SET_BLOCK_TRACKING = Symbol(
  ``
);
const PUSH_SCOPE_ID = Symbol(``);
const POP_SCOPE_ID = Symbol(``);
const WITH_CTX = Symbol(``);
const UNREF = Symbol(``);
const IS_REF = Symbol(``);
const WITH_MEMO = Symbol(``);
const IS_MEMO_SAME = Symbol(``);
const helperNameMap = {
  [FRAGMENT]: `Fragment`,
  [TELEPORT]: `Teleport`,
  [SUSPENSE]: `Suspense`,
  [KEEP_ALIVE]: `KeepAlive`,
  [BASE_TRANSITION]: `BaseTransition`,
  [OPEN_BLOCK]: `openBlock`,
  [CREATE_BLOCK]: `createBlock`,
  [CREATE_ELEMENT_BLOCK]: `createElementBlock`,
  [CREATE_VNODE]: `createVNode`,
  [CREATE_ELEMENT_VNODE]: `createElementVNode`,
  [CREATE_COMMENT]: `createCommentVNode`,
  [CREATE_TEXT]: `createTextVNode`,
  [CREATE_STATIC]: `createStaticVNode`,
  [RESOLVE_COMPONENT]: `resolveComponent`,
  [RESOLVE_DYNAMIC_COMPONENT]: `resolveDynamicComponent`,
  [RESOLVE_DIRECTIVE]: `resolveDirective`,
  [RESOLVE_FILTER]: `resolveFilter`,
  [WITH_DIRECTIVES]: `withDirectives`,
  [RENDER_LIST]: `renderList`,
  [RENDER_SLOT]: `renderSlot`,
  [CREATE_SLOTS]: `createSlots`,
  [TO_DISPLAY_STRING]: `toDisplayString`,
  [MERGE_PROPS]: `mergeProps`,
  [NORMALIZE_CLASS]: `normalizeClass`,
  [NORMALIZE_STYLE]: `normalizeStyle`,
  [NORMALIZE_PROPS]: `normalizeProps`,
  [GUARD_REACTIVE_PROPS]: `guardReactiveProps`,
  [TO_HANDLERS]: `toHandlers`,
  [CAMELIZE]: `camelize`,
  [CAPITALIZE]: `capitalize`,
  [TO_HANDLER_KEY]: `toHandlerKey`,
  [SET_BLOCK_TRACKING]: `setBlockTracking`,
  [PUSH_SCOPE_ID]: `pushScopeId`,
  [POP_SCOPE_ID]: `popScopeId`,
  [WITH_CTX]: `withCtx`,
  [UNREF]: `unref`,
  [IS_REF]: `isRef`,
  [WITH_MEMO]: `withMemo`,
  [IS_MEMO_SAME]: `isMemoSame`
};
function registerRuntimeHelpers(helpers) {
  Object.getOwnPropertySymbols(helpers).forEach((s) => {
    helperNameMap[s] = helpers[s];
  });
}
const locStub = {
  start: { line: 1, column: 1, offset: 0 },
  end: { line: 1, column: 1, offset: 0 },
  source: ""
};
function createRoot(children, source = "") {
  return {
    type: 0,
    source,
    children,
    helpers: /* @__PURE__ */ new Set(),
    components: [],
    directives: [],
    hoists: [],
    imports: [],
    cached: [],
    temps: 0,
    codegenNode: void 0,
    loc: locStub
  };
}
function createVNodeCall(context, tag, props, children, patchFlag, dynamicProps, directives, isBlock = false, disableTracking = false, isComponent2 = false, loc = locStub) {
  if (context) {
    if (isBlock) {
      context.helper(OPEN_BLOCK);
      context.helper(getVNodeBlockHelper(context.inSSR, isComponent2));
    } else {
      context.helper(getVNodeHelper(context.inSSR, isComponent2));
    }
    if (directives) {
      context.helper(WITH_DIRECTIVES);
    }
  }
  return {
    type: 13,
    tag,
    props,
    children,
    patchFlag,
    dynamicProps,
    directives,
    isBlock,
    disableTracking,
    isComponent: isComponent2,
    loc
  };
}
function createArrayExpression(elements, loc = locStub) {
  return {
    type: 17,
    loc,
    elements
  };
}
function createObjectExpression(properties, loc = locStub) {
  return {
    type: 15,
    loc,
    properties
  };
}
function createObjectProperty(key, value) {
  return {
    type: 16,
    loc: locStub,
    key: isString(key) ? createSimpleExpression(key, true) : key,
    value
  };
}
function createSimpleExpression(content, isStatic = false, loc = locStub, constType = 0) {
  return {
    type: 4,
    loc,
    content,
    isStatic,
    constType: isStatic ? 3 : constType
  };
}
function createCompoundExpression(children, loc = locStub) {
  return {
    type: 8,
    loc,
    children
  };
}
function createCallExpression(callee, args = [], loc = locStub) {
  return {
    type: 14,
    loc,
    callee,
    arguments: args
  };
}
function createFunctionExpression(params, returns = void 0, newline = false, isSlot = false, loc = locStub) {
  return {
    type: 18,
    params,
    returns,
    newline,
    isSlot,
    loc
  };
}
function createConditionalExpression(test, consequent, alternate, newline = true) {
  return {
    type: 19,
    test,
    consequent,
    alternate,
    newline,
    loc: locStub
  };
}
function createCacheExpression(index, value, needPauseTracking = false, inVOnce = false) {
  return {
    type: 20,
    index,
    value,
    needPauseTracking,
    inVOnce,
    needArraySpread: false,
    loc: locStub
  };
}
function createBlockStatement(body) {
  return {
    type: 21,
    body,
    loc: locStub
  };
}
function getVNodeHelper(ssr, isComponent2) {
  return ssr || isComponent2 ? CREATE_VNODE : CREATE_ELEMENT_VNODE;
}
function getVNodeBlockHelper(ssr, isComponent2) {
  return ssr || isComponent2 ? CREATE_BLOCK : CREATE_ELEMENT_BLOCK;
}
function convertToBlock(node, { helper, removeHelper, inSSR }) {
  if (!node.isBlock) {
    node.isBlock = true;
    removeHelper(getVNodeHelper(inSSR, node.isComponent));
    helper(OPEN_BLOCK);
    helper(getVNodeBlockHelper(inSSR, node.isComponent));
  }
}
const defaultDelimitersOpen = new Uint8Array([123, 123]);
const defaultDelimitersClose = new Uint8Array([125, 125]);
function isTagStartChar(c) {
  return c >= 97 && c <= 122 || c >= 65 && c <= 90;
}
function isWhitespace(c) {
  return c === 32 || c === 10 || c === 9 || c === 12 || c === 13;
}
function isEndOfTagSection(c) {
  return c === 47 || c === 62 || isWhitespace(c);
}
function toCharCodes(str) {
  const ret = new Uint8Array(str.length);
  for (let i = 0; i < str.length; i++) {
    ret[i] = str.charCodeAt(i);
  }
  return ret;
}
const Sequences = {
  Cdata: new Uint8Array([67, 68, 65, 84, 65, 91]),
  // CDATA[
  CdataEnd: new Uint8Array([93, 93, 62]),
  // ]]>
  CommentEnd: new Uint8Array([45, 45, 62]),
  // `-->`
  ScriptEnd: new Uint8Array([60, 47, 115, 99, 114, 105, 112, 116]),
  // `<\/script`
  StyleEnd: new Uint8Array([60, 47, 115, 116, 121, 108, 101]),
  // `</style`
  TitleEnd: new Uint8Array([60, 47, 116, 105, 116, 108, 101]),
  // `</title`
  TextareaEnd: new Uint8Array([
    60,
    47,
    116,
    101,
    120,
    116,
    97,
    114,
    101,
    97
  ])
  // `</textarea
};
class Tokenizer {
  constructor(stack2, cbs) {
    this.stack = stack2;
    this.cbs = cbs;
    this.state = 1;
    this.buffer = "";
    this.sectionStart = 0;
    this.index = 0;
    this.entityStart = 0;
    this.baseState = 1;
    this.inRCDATA = false;
    this.inXML = false;
    this.inVPre = false;
    this.newlines = [];
    this.mode = 0;
    this.delimiterOpen = defaultDelimitersOpen;
    this.delimiterClose = defaultDelimitersClose;
    this.delimiterIndex = -1;
    this.currentSequence = void 0;
    this.sequenceIndex = 0;
  }
  get inSFCRoot() {
    return this.mode === 2 && this.stack.length === 0;
  }
  reset() {
    this.state = 1;
    this.mode = 0;
    this.buffer = "";
    this.sectionStart = 0;
    this.index = 0;
    this.baseState = 1;
    this.inRCDATA = false;
    this.currentSequence = void 0;
    this.newlines.length = 0;
    this.delimiterOpen = defaultDelimitersOpen;
    this.delimiterClose = defaultDelimitersClose;
  }
  /**
   * Generate Position object with line / column information using recorded
   * newline positions. We know the index is always going to be an already
   * processed index, so all the newlines up to this index should have been
   * recorded.
   */
  getPos(index) {
    let line = 1;
    let column = index + 1;
    for (let i = this.newlines.length - 1; i >= 0; i--) {
      const newlineIndex = this.newlines[i];
      if (index > newlineIndex) {
        line = i + 2;
        column = index - newlineIndex;
        break;
      }
    }
    return {
      column,
      line,
      offset: index
    };
  }
  peek() {
    return this.buffer.charCodeAt(this.index + 1);
  }
  stateText(c) {
    if (c === 60) {
      if (this.index > this.sectionStart) {
        this.cbs.ontext(this.sectionStart, this.index);
      }
      this.state = 5;
      this.sectionStart = this.index;
    } else if (!this.inVPre && c === this.delimiterOpen[0]) {
      this.state = 2;
      this.delimiterIndex = 0;
      this.stateInterpolationOpen(c);
    }
  }
  stateInterpolationOpen(c) {
    if (c === this.delimiterOpen[this.delimiterIndex]) {
      if (this.delimiterIndex === this.delimiterOpen.length - 1) {
        const start = this.index + 1 - this.delimiterOpen.length;
        if (start > this.sectionStart) {
          this.cbs.ontext(this.sectionStart, start);
        }
        this.state = 3;
        this.sectionStart = start;
      } else {
        this.delimiterIndex++;
      }
    } else if (this.inRCDATA) {
      this.state = 32;
      this.stateInRCDATA(c);
    } else {
      this.state = 1;
      this.stateText(c);
    }
  }
  stateInterpolation(c) {
    if (c === this.delimiterClose[0]) {
      this.state = 4;
      this.delimiterIndex = 0;
      this.stateInterpolationClose(c);
    }
  }
  stateInterpolationClose(c) {
    if (c === this.delimiterClose[this.delimiterIndex]) {
      if (this.delimiterIndex === this.delimiterClose.length - 1) {
        this.cbs.oninterpolation(this.sectionStart, this.index + 1);
        if (this.inRCDATA) {
          this.state = 32;
        } else {
          this.state = 1;
        }
        this.sectionStart = this.index + 1;
      } else {
        this.delimiterIndex++;
      }
    } else {
      this.state = 3;
      this.stateInterpolation(c);
    }
  }
  stateSpecialStartSequence(c) {
    const isEnd = this.sequenceIndex === this.currentSequence.length;
    const isMatch = isEnd ? (
      // If we are at the end of the sequence, make sure the tag name has ended
      isEndOfTagSection(c)
    ) : (
      // Otherwise, do a case-insensitive comparison
      (c | 32) === this.currentSequence[this.sequenceIndex]
    );
    if (!isMatch) {
      this.inRCDATA = false;
    } else if (!isEnd) {
      this.sequenceIndex++;
      return;
    }
    this.sequenceIndex = 0;
    this.state = 6;
    this.stateInTagName(c);
  }
  /** Look for an end tag. For <title> and <textarea>, also decode entities. */
  stateInRCDATA(c) {
    if (this.sequenceIndex === this.currentSequence.length) {
      if (c === 62 || isWhitespace(c)) {
        const endOfText = this.index - this.currentSequence.length;
        if (this.sectionStart < endOfText) {
          const actualIndex = this.index;
          this.index = endOfText;
          this.cbs.ontext(this.sectionStart, endOfText);
          this.index = actualIndex;
        }
        this.sectionStart = endOfText + 2;
        this.stateInClosingTagName(c);
        this.inRCDATA = false;
        return;
      }
      this.sequenceIndex = 0;
    }
    if ((c | 32) === this.currentSequence[this.sequenceIndex]) {
      this.sequenceIndex += 1;
    } else if (this.sequenceIndex === 0) {
      if (this.currentSequence === Sequences.TitleEnd || this.currentSequence === Sequences.TextareaEnd && !this.inSFCRoot) {
        if (!this.inVPre && c === this.delimiterOpen[0]) {
          this.state = 2;
          this.delimiterIndex = 0;
          this.stateInterpolationOpen(c);
        }
      } else if (this.fastForwardTo(60)) {
        this.sequenceIndex = 1;
      }
    } else {
      this.sequenceIndex = Number(c === 60);
    }
  }
  stateCDATASequence(c) {
    if (c === Sequences.Cdata[this.sequenceIndex]) {
      if (++this.sequenceIndex === Sequences.Cdata.length) {
        this.state = 28;
        this.currentSequence = Sequences.CdataEnd;
        this.sequenceIndex = 0;
        this.sectionStart = this.index + 1;
      }
    } else {
      this.sequenceIndex = 0;
      this.state = 23;
      this.stateInDeclaration(c);
    }
  }
  /**
   * When we wait for one specific character, we can speed things up
   * by skipping through the buffer until we find it.
   *
   * @returns Whether the character was found.
   */
  fastForwardTo(c) {
    while (++this.index < this.buffer.length) {
      const cc = this.buffer.charCodeAt(this.index);
      if (cc === 10) {
        this.newlines.push(this.index);
      }
      if (cc === c) {
        return true;
      }
    }
    this.index = this.buffer.length - 1;
    return false;
  }
  /**
   * Comments and CDATA end with `-->` and `]]>`.
   *
   * Their common qualities are:
   * - Their end sequences have a distinct character they start with.
   * - That character is then repeated, so we have to check multiple repeats.
   * - All characters but the start character of the sequence can be skipped.
   */
  stateInCommentLike(c) {
    if (c === this.currentSequence[this.sequenceIndex]) {
      if (++this.sequenceIndex === this.currentSequence.length) {
        if (this.currentSequence === Sequences.CdataEnd) {
          this.cbs.oncdata(this.sectionStart, this.index - 2);
        } else {
          this.cbs.oncomment(this.sectionStart, this.index - 2);
        }
        this.sequenceIndex = 0;
        this.sectionStart = this.index + 1;
        this.state = 1;
      }
    } else if (this.sequenceIndex === 0) {
      if (this.fastForwardTo(this.currentSequence[0])) {
        this.sequenceIndex = 1;
      }
    } else if (c !== this.currentSequence[this.sequenceIndex - 1]) {
      this.sequenceIndex = 0;
    }
  }
  startSpecial(sequence, offset) {
    this.enterRCDATA(sequence, offset);
    this.state = 31;
  }
  enterRCDATA(sequence, offset) {
    this.inRCDATA = true;
    this.currentSequence = sequence;
    this.sequenceIndex = offset;
  }
  stateBeforeTagName(c) {
    if (c === 33) {
      this.state = 22;
      this.sectionStart = this.index + 1;
    } else if (c === 63) {
      this.state = 24;
      this.sectionStart = this.index + 1;
    } else if (isTagStartChar(c)) {
      this.sectionStart = this.index;
      if (this.mode === 0) {
        this.state = 6;
      } else if (this.inSFCRoot) {
        this.state = 34;
      } else if (!this.inXML) {
        if (c === 116) {
          this.state = 30;
        } else {
          this.state = c === 115 ? 29 : 6;
        }
      } else {
        this.state = 6;
      }
    } else if (c === 47) {
      this.state = 8;
    } else {
      this.state = 1;
      this.stateText(c);
    }
  }
  stateInTagName(c) {
    if (isEndOfTagSection(c)) {
      this.handleTagName(c);
    }
  }
  stateInSFCRootTagName(c) {
    if (isEndOfTagSection(c)) {
      const tag = this.buffer.slice(this.sectionStart, this.index);
      if (tag !== "template") {
        this.enterRCDATA(toCharCodes(`</` + tag), 0);
      }
      this.handleTagName(c);
    }
  }
  handleTagName(c) {
    this.cbs.onopentagname(this.sectionStart, this.index);
    this.sectionStart = -1;
    this.state = 11;
    this.stateBeforeAttrName(c);
  }
  stateBeforeClosingTagName(c) {
    if (isWhitespace(c)) ;
    else if (c === 62) {
      this.state = 1;
      this.sectionStart = this.index + 1;
    } else {
      this.state = isTagStartChar(c) ? 9 : 27;
      this.sectionStart = this.index;
    }
  }
  stateInClosingTagName(c) {
    if (c === 62 || isWhitespace(c)) {
      this.cbs.onclosetag(this.sectionStart, this.index);
      this.sectionStart = -1;
      this.state = 10;
      this.stateAfterClosingTagName(c);
    }
  }
  stateAfterClosingTagName(c) {
    if (c === 62) {
      this.state = 1;
      this.sectionStart = this.index + 1;
    }
  }
  stateBeforeAttrName(c) {
    if (c === 62) {
      this.cbs.onopentagend(this.index);
      if (this.inRCDATA) {
        this.state = 32;
      } else {
        this.state = 1;
      }
      this.sectionStart = this.index + 1;
    } else if (c === 47) {
      this.state = 7;
    } else if (c === 60 && this.peek() === 47) {
      this.cbs.onopentagend(this.index);
      this.state = 5;
      this.sectionStart = this.index;
    } else if (!isWhitespace(c)) {
      this.handleAttrStart(c);
    }
  }
  handleAttrStart(c) {
    if (c === 118 && this.peek() === 45) {
      this.state = 13;
      this.sectionStart = this.index;
    } else if (c === 46 || c === 58 || c === 64 || c === 35) {
      this.cbs.ondirname(this.index, this.index + 1);
      this.state = 14;
      this.sectionStart = this.index + 1;
    } else {
      this.state = 12;
      this.sectionStart = this.index;
    }
  }
  stateInSelfClosingTag(c) {
    if (c === 62) {
      this.cbs.onselfclosingtag(this.index);
      this.state = 1;
      this.sectionStart = this.index + 1;
      this.inRCDATA = false;
    } else if (!isWhitespace(c)) {
      this.state = 11;
      this.stateBeforeAttrName(c);
    }
  }
  stateInAttrName(c) {
    if (c === 61 || isEndOfTagSection(c)) {
      this.cbs.onattribname(this.sectionStart, this.index);
      this.handleAttrNameEnd(c);
    }
  }
  stateInDirName(c) {
    if (c === 61 || isEndOfTagSection(c)) {
      this.cbs.ondirname(this.sectionStart, this.index);
      this.handleAttrNameEnd(c);
    } else if (c === 58) {
      this.cbs.ondirname(this.sectionStart, this.index);
      this.state = 14;
      this.sectionStart = this.index + 1;
    } else if (c === 46) {
      this.cbs.ondirname(this.sectionStart, this.index);
      this.state = 16;
      this.sectionStart = this.index + 1;
    }
  }
  stateInDirArg(c) {
    if (c === 61 || isEndOfTagSection(c)) {
      this.cbs.ondirarg(this.sectionStart, this.index);
      this.handleAttrNameEnd(c);
    } else if (c === 91) {
      this.state = 15;
    } else if (c === 46) {
      this.cbs.ondirarg(this.sectionStart, this.index);
      this.state = 16;
      this.sectionStart = this.index + 1;
    }
  }
  stateInDynamicDirArg(c) {
    if (c === 93) {
      this.state = 14;
    } else if (c === 61 || isEndOfTagSection(c)) {
      this.cbs.ondirarg(this.sectionStart, this.index + 1);
      this.handleAttrNameEnd(c);
    }
  }
  stateInDirModifier(c) {
    if (c === 61 || isEndOfTagSection(c)) {
      this.cbs.ondirmodifier(this.sectionStart, this.index);
      this.handleAttrNameEnd(c);
    } else if (c === 46) {
      this.cbs.ondirmodifier(this.sectionStart, this.index);
      this.sectionStart = this.index + 1;
    }
  }
  handleAttrNameEnd(c) {
    this.sectionStart = this.index;
    this.state = 17;
    this.cbs.onattribnameend(this.index);
    this.stateAfterAttrName(c);
  }
  stateAfterAttrName(c) {
    if (c === 61) {
      this.state = 18;
    } else if (c === 47 || c === 62) {
      this.cbs.onattribend(0, this.sectionStart);
      this.sectionStart = -1;
      this.state = 11;
      this.stateBeforeAttrName(c);
    } else if (!isWhitespace(c)) {
      this.cbs.onattribend(0, this.sectionStart);
      this.handleAttrStart(c);
    }
  }
  stateBeforeAttrValue(c) {
    if (c === 34) {
      this.state = 19;
      this.sectionStart = this.index + 1;
    } else if (c === 39) {
      this.state = 20;
      this.sectionStart = this.index + 1;
    } else if (!isWhitespace(c)) {
      this.sectionStart = this.index;
      this.state = 21;
      this.stateInAttrValueNoQuotes(c);
    }
  }
  handleInAttrValue(c, quote) {
    if (c === quote || this.fastForwardTo(quote)) {
      this.cbs.onattribdata(this.sectionStart, this.index);
      this.sectionStart = -1;
      this.cbs.onattribend(
        quote === 34 ? 3 : 2,
        this.index + 1
      );
      this.state = 11;
    }
  }
  stateInAttrValueDoubleQuotes(c) {
    this.handleInAttrValue(c, 34);
  }
  stateInAttrValueSingleQuotes(c) {
    this.handleInAttrValue(c, 39);
  }
  stateInAttrValueNoQuotes(c) {
    if (isWhitespace(c) || c === 62) {
      this.cbs.onattribdata(this.sectionStart, this.index);
      this.sectionStart = -1;
      this.cbs.onattribend(1, this.index);
      this.state = 11;
      this.stateBeforeAttrName(c);
    } else if (c === 39 || c === 60 || c === 61 || c === 96) {
      this.cbs.onerr(
        18,
        this.index
      );
    } else ;
  }
  stateBeforeDeclaration(c) {
    if (c === 91) {
      this.state = 26;
      this.sequenceIndex = 0;
    } else {
      this.state = c === 45 ? 25 : 23;
    }
  }
  stateInDeclaration(c) {
    if (c === 62 || this.fastForwardTo(62)) {
      this.state = 1;
      this.sectionStart = this.index + 1;
    }
  }
  stateInProcessingInstruction(c) {
    if (c === 62 || this.fastForwardTo(62)) {
      this.cbs.onprocessinginstruction(this.sectionStart, this.index);
      this.state = 1;
      this.sectionStart = this.index + 1;
    }
  }
  stateBeforeComment(c) {
    if (c === 45) {
      this.state = 28;
      this.currentSequence = Sequences.CommentEnd;
      this.sequenceIndex = 2;
      this.sectionStart = this.index + 1;
    } else {
      this.state = 23;
    }
  }
  stateInSpecialComment(c) {
    if (c === 62 || this.fastForwardTo(62)) {
      this.cbs.oncomment(this.sectionStart, this.index);
      this.state = 1;
      this.sectionStart = this.index + 1;
    }
  }
  stateBeforeSpecialS(c) {
    if (c === Sequences.ScriptEnd[3]) {
      this.startSpecial(Sequences.ScriptEnd, 4);
    } else if (c === Sequences.StyleEnd[3]) {
      this.startSpecial(Sequences.StyleEnd, 4);
    } else {
      this.state = 6;
      this.stateInTagName(c);
    }
  }
  stateBeforeSpecialT(c) {
    if (c === Sequences.TitleEnd[3]) {
      this.startSpecial(Sequences.TitleEnd, 4);
    } else if (c === Sequences.TextareaEnd[3]) {
      this.startSpecial(Sequences.TextareaEnd, 4);
    } else {
      this.state = 6;
      this.stateInTagName(c);
    }
  }
  startEntity() {
  }
  stateInEntity() {
  }
  /**
   * Iterates through the buffer, calling the function corresponding to the current state.
   *
   * States that are more likely to be hit are higher up, as a performance improvement.
   */
  parse(input) {
    this.buffer = input;
    while (this.index < this.buffer.length) {
      const c = this.buffer.charCodeAt(this.index);
      if (c === 10 && this.state !== 33) {
        this.newlines.push(this.index);
      }
      switch (this.state) {
        case 1: {
          this.stateText(c);
          break;
        }
        case 2: {
          this.stateInterpolationOpen(c);
          break;
        }
        case 3: {
          this.stateInterpolation(c);
          break;
        }
        case 4: {
          this.stateInterpolationClose(c);
          break;
        }
        case 31: {
          this.stateSpecialStartSequence(c);
          break;
        }
        case 32: {
          this.stateInRCDATA(c);
          break;
        }
        case 26: {
          this.stateCDATASequence(c);
          break;
        }
        case 19: {
          this.stateInAttrValueDoubleQuotes(c);
          break;
        }
        case 12: {
          this.stateInAttrName(c);
          break;
        }
        case 13: {
          this.stateInDirName(c);
          break;
        }
        case 14: {
          this.stateInDirArg(c);
          break;
        }
        case 15: {
          this.stateInDynamicDirArg(c);
          break;
        }
        case 16: {
          this.stateInDirModifier(c);
          break;
        }
        case 28: {
          this.stateInCommentLike(c);
          break;
        }
        case 27: {
          this.stateInSpecialComment(c);
          break;
        }
        case 11: {
          this.stateBeforeAttrName(c);
          break;
        }
        case 6: {
          this.stateInTagName(c);
          break;
        }
        case 34: {
          this.stateInSFCRootTagName(c);
          break;
        }
        case 9: {
          this.stateInClosingTagName(c);
          break;
        }
        case 5: {
          this.stateBeforeTagName(c);
          break;
        }
        case 17: {
          this.stateAfterAttrName(c);
          break;
        }
        case 20: {
          this.stateInAttrValueSingleQuotes(c);
          break;
        }
        case 18: {
          this.stateBeforeAttrValue(c);
          break;
        }
        case 8: {
          this.stateBeforeClosingTagName(c);
          break;
        }
        case 10: {
          this.stateAfterClosingTagName(c);
          break;
        }
        case 29: {
          this.stateBeforeSpecialS(c);
          break;
        }
        case 30: {
          this.stateBeforeSpecialT(c);
          break;
        }
        case 21: {
          this.stateInAttrValueNoQuotes(c);
          break;
        }
        case 7: {
          this.stateInSelfClosingTag(c);
          break;
        }
        case 23: {
          this.stateInDeclaration(c);
          break;
        }
        case 22: {
          this.stateBeforeDeclaration(c);
          break;
        }
        case 25: {
          this.stateBeforeComment(c);
          break;
        }
        case 24: {
          this.stateInProcessingInstruction(c);
          break;
        }
        case 33: {
          this.stateInEntity();
          break;
        }
      }
      this.index++;
    }
    this.cleanup();
    this.finish();
  }
  /**
   * Remove data that has already been consumed from the buffer.
   */
  cleanup() {
    if (this.sectionStart !== this.index) {
      if (this.state === 1 || this.state === 32 && this.sequenceIndex === 0) {
        this.cbs.ontext(this.sectionStart, this.index);
        this.sectionStart = this.index;
      } else if (this.state === 19 || this.state === 20 || this.state === 21) {
        this.cbs.onattribdata(this.sectionStart, this.index);
        this.sectionStart = this.index;
      }
    }
  }
  finish() {
    this.handleTrailingData();
    this.cbs.onend();
  }
  /** Handle any trailing data. */
  handleTrailingData() {
    const endIndex = this.buffer.length;
    if (this.sectionStart >= endIndex) {
      return;
    }
    if (this.state === 28) {
      if (this.currentSequence === Sequences.CdataEnd) {
        this.cbs.oncdata(this.sectionStart, endIndex);
      } else {
        this.cbs.oncomment(this.sectionStart, endIndex);
      }
    } else if (this.state === 6 || this.state === 11 || this.state === 18 || this.state === 17 || this.state === 12 || this.state === 13 || this.state === 14 || this.state === 15 || this.state === 16 || this.state === 20 || this.state === 19 || this.state === 21 || this.state === 9) ;
    else {
      this.cbs.ontext(this.sectionStart, endIndex);
    }
  }
  emitCodePoint(cp2, consumed) {
  }
}
function getCompatValue(key, { compatConfig }) {
  const value = compatConfig && compatConfig[key];
  if (key === "MODE") {
    return value || 3;
  } else {
    return value;
  }
}
function isCompatEnabled(key, context) {
  const mode = getCompatValue("MODE", context);
  const value = getCompatValue(key, context);
  return mode === 3 ? value === true : value !== false;
}
function checkCompatEnabled(key, context, loc, ...args) {
  const enabled = isCompatEnabled(key, context);
  return enabled;
}
function defaultOnError(error) {
  throw error;
}
function defaultOnWarn(msg) {
}
function createCompilerError(code, loc, messages, additionalMessage) {
  const msg = `https://vuejs.org/error-reference/#compiler-${code}`;
  const error = new SyntaxError(String(msg));
  error.code = code;
  error.loc = loc;
  return error;
}
const isStaticExp = (p5) => p5.type === 4 && p5.isStatic;
function isCoreComponent(tag) {
  switch (tag) {
    case "Teleport":
    case "teleport":
      return TELEPORT;
    case "Suspense":
    case "suspense":
      return SUSPENSE;
    case "KeepAlive":
    case "keep-alive":
      return KEEP_ALIVE;
    case "BaseTransition":
    case "base-transition":
      return BASE_TRANSITION;
  }
}
const nonIdentifierRE = /^$|^\d|[^\$\w\xA0-\uFFFF]/;
const isSimpleIdentifier = (name) => !nonIdentifierRE.test(name);
const validFirstIdentCharRE = /[A-Za-z_$\xA0-\uFFFF]/;
const validIdentCharRE = /[\.\?\w$\xA0-\uFFFF]/;
const whitespaceRE = /\s+[.[]\s*|\s*[.[]\s+/g;
const getExpSource = (exp) => exp.type === 4 ? exp.content : exp.loc.source;
const isMemberExpressionBrowser = (exp) => {
  const path = getExpSource(exp).trim().replace(whitespaceRE, (s) => s.trim());
  let state = 0;
  let stateStack = [];
  let currentOpenBracketCount = 0;
  let currentOpenParensCount = 0;
  let currentStringType = null;
  for (let i = 0; i < path.length; i++) {
    const char = path.charAt(i);
    switch (state) {
      case 0:
        if (char === "[") {
          stateStack.push(state);
          state = 1;
          currentOpenBracketCount++;
        } else if (char === "(") {
          stateStack.push(state);
          state = 2;
          currentOpenParensCount++;
        } else if (!(i === 0 ? validFirstIdentCharRE : validIdentCharRE).test(char)) {
          return false;
        }
        break;
      case 1:
        if (char === `'` || char === `"` || char === "`") {
          stateStack.push(state);
          state = 3;
          currentStringType = char;
        } else if (char === `[`) {
          currentOpenBracketCount++;
        } else if (char === `]`) {
          if (!--currentOpenBracketCount) {
            state = stateStack.pop();
          }
        }
        break;
      case 2:
        if (char === `'` || char === `"` || char === "`") {
          stateStack.push(state);
          state = 3;
          currentStringType = char;
        } else if (char === `(`) {
          currentOpenParensCount++;
        } else if (char === `)`) {
          if (i === path.length - 1) {
            return false;
          }
          if (!--currentOpenParensCount) {
            state = stateStack.pop();
          }
        }
        break;
      case 3:
        if (char === currentStringType) {
          state = stateStack.pop();
          currentStringType = null;
        }
        break;
    }
  }
  return !currentOpenBracketCount && !currentOpenParensCount;
};
const isMemberExpression = isMemberExpressionBrowser;
const fnExpRE = /^\s*(?:async\s*)?(?:\([^)]*?\)|[\w$_]+)\s*(?::[^=]+)?=>|^\s*(?:async\s+)?function(?:\s+[\w$]+)?\s*\(/;
const isFnExpressionBrowser = (exp) => fnExpRE.test(getExpSource(exp));
const isFnExpression = isFnExpressionBrowser;
function findDir(node, name, allowEmpty = false) {
  for (let i = 0; i < node.props.length; i++) {
    const p5 = node.props[i];
    if (p5.type === 7 && (allowEmpty || p5.exp) && (isString(name) ? p5.name === name : name.test(p5.name))) {
      return p5;
    }
  }
}
function findProp(node, name, dynamicOnly = false, allowEmpty = false) {
  for (let i = 0; i < node.props.length; i++) {
    const p5 = node.props[i];
    if (p5.type === 6) {
      if (dynamicOnly) continue;
      if (p5.name === name && (p5.value || allowEmpty)) {
        return p5;
      }
    } else if (p5.name === "bind" && (p5.exp || allowEmpty) && isStaticArgOf(p5.arg, name)) {
      return p5;
    }
  }
}
function isStaticArgOf(arg, name) {
  return !!(arg && isStaticExp(arg) && arg.content === name);
}
function hasDynamicKeyVBind(node) {
  return node.props.some(
    (p5) => p5.type === 7 && p5.name === "bind" && (!p5.arg || // v-bind="obj"
    p5.arg.type !== 4 || // v-bind:[_ctx.foo]
    !p5.arg.isStatic)
    // v-bind:[foo]
  );
}
function isText$1(node) {
  return node.type === 5 || node.type === 2;
}
function isVPre(p5) {
  return p5.type === 7 && p5.name === "pre";
}
function isVSlot(p5) {
  return p5.type === 7 && p5.name === "slot";
}
function isTemplateNode(node) {
  return node.type === 1 && node.tagType === 3;
}
function isSlotOutlet(node) {
  return node.type === 1 && node.tagType === 2;
}
const propsHelperSet = /* @__PURE__ */ new Set([NORMALIZE_PROPS, GUARD_REACTIVE_PROPS]);
function getUnnormalizedProps(props, callPath = []) {
  if (props && !isString(props) && props.type === 14) {
    const callee = props.callee;
    if (!isString(callee) && propsHelperSet.has(callee)) {
      return getUnnormalizedProps(
        props.arguments[0],
        callPath.concat(props)
      );
    }
  }
  return [props, callPath];
}
function injectProp(node, prop, context) {
  let propsWithInjection;
  let props = node.type === 13 ? node.props : node.arguments[2];
  let callPath = [];
  let parentCall;
  if (props && !isString(props) && props.type === 14) {
    const ret = getUnnormalizedProps(props);
    props = ret[0];
    callPath = ret[1];
    parentCall = callPath[callPath.length - 1];
  }
  if (props == null || isString(props)) {
    propsWithInjection = createObjectExpression([prop]);
  } else if (props.type === 14) {
    const first = props.arguments[0];
    if (!isString(first) && first.type === 15) {
      if (!hasProp(prop, first)) {
        first.properties.unshift(prop);
      }
    } else {
      if (props.callee === TO_HANDLERS) {
        propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [
          createObjectExpression([prop]),
          props
        ]);
      } else {
        props.arguments.unshift(createObjectExpression([prop]));
      }
    }
    !propsWithInjection && (propsWithInjection = props);
  } else if (props.type === 15) {
    if (!hasProp(prop, props)) {
      props.properties.unshift(prop);
    }
    propsWithInjection = props;
  } else {
    propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [
      createObjectExpression([prop]),
      props
    ]);
    if (parentCall && parentCall.callee === GUARD_REACTIVE_PROPS) {
      parentCall = callPath[callPath.length - 2];
    }
  }
  if (node.type === 13) {
    if (parentCall) {
      parentCall.arguments[0] = propsWithInjection;
    } else {
      node.props = propsWithInjection;
    }
  } else {
    if (parentCall) {
      parentCall.arguments[0] = propsWithInjection;
    } else {
      node.arguments[2] = propsWithInjection;
    }
  }
}
function hasProp(prop, props) {
  let result = false;
  if (prop.key.type === 4) {
    const propKeyName = prop.key.content;
    result = props.properties.some(
      (p5) => p5.key.type === 4 && p5.key.content === propKeyName
    );
  }
  return result;
}
function toValidAssetId(name, type) {
  return `_${type}_${name.replace(/[^\w]/g, (searchValue, replaceValue) => {
    return searchValue === "-" ? "_" : name.charCodeAt(replaceValue).toString();
  })}`;
}
function getMemoedVNodeCall(node) {
  if (node.type === 14 && node.callee === WITH_MEMO) {
    return node.arguments[1].returns;
  } else {
    return node;
  }
}
const forAliasRE = /([\s\S]*?)\s+(?:in|of)\s+(\S[\s\S]*)/;
const defaultParserOptions = {
  parseMode: "base",
  ns: 0,
  delimiters: [`{{`, `}}`],
  getNamespace: () => 0,
  isVoidTag: NO,
  isPreTag: NO,
  isIgnoreNewlineTag: NO,
  isCustomElement: NO,
  onError: defaultOnError,
  onWarn: defaultOnWarn,
  comments: false,
  prefixIdentifiers: false
};
let currentOptions = defaultParserOptions;
let currentRoot = null;
let currentInput = "";
let currentOpenTag = null;
let currentProp = null;
let currentAttrValue = "";
let currentAttrStartIndex = -1;
let currentAttrEndIndex = -1;
let inPre = 0;
let inVPre = false;
let currentVPreBoundary = null;
const stack = [];
const tokenizer = new Tokenizer(stack, {
  onerr: emitError,
  ontext(start, end) {
    onText(getSlice(start, end), start, end);
  },
  ontextentity(char, start, end) {
    onText(char, start, end);
  },
  oninterpolation(start, end) {
    if (inVPre) {
      return onText(getSlice(start, end), start, end);
    }
    let innerStart = start + tokenizer.delimiterOpen.length;
    let innerEnd = end - tokenizer.delimiterClose.length;
    while (isWhitespace(currentInput.charCodeAt(innerStart))) {
      innerStart++;
    }
    while (isWhitespace(currentInput.charCodeAt(innerEnd - 1))) {
      innerEnd--;
    }
    let exp = getSlice(innerStart, innerEnd);
    if (exp.includes("&")) {
      {
        exp = currentOptions.decodeEntities(exp, false);
      }
    }
    addNode({
      type: 5,
      content: createExp(exp, false, getLoc(innerStart, innerEnd)),
      loc: getLoc(start, end)
    });
  },
  onopentagname(start, end) {
    const name = getSlice(start, end);
    currentOpenTag = {
      type: 1,
      tag: name,
      ns: currentOptions.getNamespace(name, stack[0], currentOptions.ns),
      tagType: 0,
      // will be refined on tag close
      props: [],
      children: [],
      loc: getLoc(start - 1, end),
      codegenNode: void 0
    };
  },
  onopentagend(end) {
    endOpenTag(end);
  },
  onclosetag(start, end) {
    const name = getSlice(start, end);
    if (!currentOptions.isVoidTag(name)) {
      let found = false;
      for (let i = 0; i < stack.length; i++) {
        const e = stack[i];
        if (e.tag.toLowerCase() === name.toLowerCase()) {
          found = true;
          if (i > 0) {
            emitError(24, stack[0].loc.start.offset);
          }
          for (let j = 0; j <= i; j++) {
            const el2 = stack.shift();
            onCloseTag(el2, end, j < i);
          }
          break;
        }
      }
      if (!found) {
        emitError(23, backTrack(start, 60));
      }
    }
  },
  onselfclosingtag(end) {
    const name = currentOpenTag.tag;
    currentOpenTag.isSelfClosing = true;
    endOpenTag(end);
    if (stack[0] && stack[0].tag === name) {
      onCloseTag(stack.shift(), end);
    }
  },
  onattribname(start, end) {
    currentProp = {
      type: 6,
      name: getSlice(start, end),
      nameLoc: getLoc(start, end),
      value: void 0,
      loc: getLoc(start)
    };
  },
  ondirname(start, end) {
    const raw = getSlice(start, end);
    const name = raw === "." || raw === ":" ? "bind" : raw === "@" ? "on" : raw === "#" ? "slot" : raw.slice(2);
    if (!inVPre && name === "") {
      emitError(26, start);
    }
    if (inVPre || name === "") {
      currentProp = {
        type: 6,
        name: raw,
        nameLoc: getLoc(start, end),
        value: void 0,
        loc: getLoc(start)
      };
    } else {
      currentProp = {
        type: 7,
        name,
        rawName: raw,
        exp: void 0,
        arg: void 0,
        modifiers: raw === "." ? [createSimpleExpression("prop")] : [],
        loc: getLoc(start)
      };
      if (name === "pre") {
        inVPre = tokenizer.inVPre = true;
        currentVPreBoundary = currentOpenTag;
        const props = currentOpenTag.props;
        for (let i = 0; i < props.length; i++) {
          if (props[i].type === 7) {
            props[i] = dirToAttr(props[i]);
          }
        }
      }
    }
  },
  ondirarg(start, end) {
    if (start === end) return;
    const arg = getSlice(start, end);
    if (inVPre && !isVPre(currentProp)) {
      currentProp.name += arg;
      setLocEnd(currentProp.nameLoc, end);
    } else {
      const isStatic = arg[0] !== `[`;
      currentProp.arg = createExp(
        isStatic ? arg : arg.slice(1, -1),
        isStatic,
        getLoc(start, end),
        isStatic ? 3 : 0
      );
    }
  },
  ondirmodifier(start, end) {
    const mod = getSlice(start, end);
    if (inVPre && !isVPre(currentProp)) {
      currentProp.name += "." + mod;
      setLocEnd(currentProp.nameLoc, end);
    } else if (currentProp.name === "slot") {
      const arg = currentProp.arg;
      if (arg) {
        arg.content += "." + mod;
        setLocEnd(arg.loc, end);
      }
    } else {
      const exp = createSimpleExpression(mod, true, getLoc(start, end));
      currentProp.modifiers.push(exp);
    }
  },
  onattribdata(start, end) {
    currentAttrValue += getSlice(start, end);
    if (currentAttrStartIndex < 0) currentAttrStartIndex = start;
    currentAttrEndIndex = end;
  },
  onattribentity(char, start, end) {
    currentAttrValue += char;
    if (currentAttrStartIndex < 0) currentAttrStartIndex = start;
    currentAttrEndIndex = end;
  },
  onattribnameend(end) {
    const start = currentProp.loc.start.offset;
    const name = getSlice(start, end);
    if (currentProp.type === 7) {
      currentProp.rawName = name;
    }
    if (currentOpenTag.props.some(
      (p5) => (p5.type === 7 ? p5.rawName : p5.name) === name
    )) {
      emitError(2, start);
    }
  },
  onattribend(quote, end) {
    if (currentOpenTag && currentProp) {
      setLocEnd(currentProp.loc, end);
      if (quote !== 0) {
        if (currentAttrValue.includes("&")) {
          currentAttrValue = currentOptions.decodeEntities(
            currentAttrValue,
            true
          );
        }
        if (currentProp.type === 6) {
          if (currentProp.name === "class") {
            currentAttrValue = condense(currentAttrValue).trim();
          }
          if (quote === 1 && !currentAttrValue) {
            emitError(13, end);
          }
          currentProp.value = {
            type: 2,
            content: currentAttrValue,
            loc: quote === 1 ? getLoc(currentAttrStartIndex, currentAttrEndIndex) : getLoc(currentAttrStartIndex - 1, currentAttrEndIndex + 1)
          };
          if (tokenizer.inSFCRoot && currentOpenTag.tag === "template" && currentProp.name === "lang" && currentAttrValue && currentAttrValue !== "html") {
            tokenizer.enterRCDATA(toCharCodes(`</template`), 0);
          }
        } else {
          let expParseMode = 0;
          currentProp.exp = createExp(
            currentAttrValue,
            false,
            getLoc(currentAttrStartIndex, currentAttrEndIndex),
            0,
            expParseMode
          );
          if (currentProp.name === "for") {
            currentProp.forParseResult = parseForExpression(currentProp.exp);
          }
          let syncIndex = -1;
          if (currentProp.name === "bind" && (syncIndex = currentProp.modifiers.findIndex(
            (mod) => mod.content === "sync"
          )) > -1 && checkCompatEnabled(
            "COMPILER_V_BIND_SYNC",
            currentOptions,
            currentProp.loc,
            currentProp.arg.loc.source
          )) {
            currentProp.name = "model";
            currentProp.modifiers.splice(syncIndex, 1);
          }
        }
      }
      if (currentProp.type !== 7 || currentProp.name !== "pre") {
        currentOpenTag.props.push(currentProp);
      }
    }
    currentAttrValue = "";
    currentAttrStartIndex = currentAttrEndIndex = -1;
  },
  oncomment(start, end) {
    if (currentOptions.comments) {
      addNode({
        type: 3,
        content: getSlice(start, end),
        loc: getLoc(start - 4, end + 3)
      });
    }
  },
  onend() {
    const end = currentInput.length;
    for (let index = 0; index < stack.length; index++) {
      onCloseTag(stack[index], end - 1);
      emitError(24, stack[index].loc.start.offset);
    }
  },
  oncdata(start, end) {
    if (stack[0].ns !== 0) {
      onText(getSlice(start, end), start, end);
    } else {
      emitError(1, start - 9);
    }
  },
  onprocessinginstruction(start) {
    if ((stack[0] ? stack[0].ns : currentOptions.ns) === 0) {
      emitError(
        21,
        start - 1
      );
    }
  }
});
const forIteratorRE = /,([^,\}\]]*)(?:,([^,\}\]]*))?$/;
const stripParensRE = /^\(|\)$/g;
function parseForExpression(input) {
  const loc = input.loc;
  const exp = input.content;
  const inMatch = exp.match(forAliasRE);
  if (!inMatch) return;
  const [, LHS, RHS] = inMatch;
  const createAliasExpression = (content, offset, asParam = false) => {
    const start = loc.start.offset + offset;
    const end = start + content.length;
    return createExp(
      content,
      false,
      getLoc(start, end),
      0,
      asParam ? 1 : 0
      /* Normal */
    );
  };
  const result = {
    source: createAliasExpression(RHS.trim(), exp.indexOf(RHS, LHS.length)),
    value: void 0,
    key: void 0,
    index: void 0,
    finalized: false
  };
  let valueContent = LHS.trim().replace(stripParensRE, "").trim();
  const trimmedOffset = LHS.indexOf(valueContent);
  const iteratorMatch = valueContent.match(forIteratorRE);
  if (iteratorMatch) {
    valueContent = valueContent.replace(forIteratorRE, "").trim();
    const keyContent = iteratorMatch[1].trim();
    let keyOffset;
    if (keyContent) {
      keyOffset = exp.indexOf(keyContent, trimmedOffset + valueContent.length);
      result.key = createAliasExpression(keyContent, keyOffset, true);
    }
    if (iteratorMatch[2]) {
      const indexContent = iteratorMatch[2].trim();
      if (indexContent) {
        result.index = createAliasExpression(
          indexContent,
          exp.indexOf(
            indexContent,
            result.key ? keyOffset + keyContent.length : trimmedOffset + valueContent.length
          ),
          true
        );
      }
    }
  }
  if (valueContent) {
    result.value = createAliasExpression(valueContent, trimmedOffset, true);
  }
  return result;
}
function getSlice(start, end) {
  return currentInput.slice(start, end);
}
function endOpenTag(end) {
  if (tokenizer.inSFCRoot) {
    currentOpenTag.innerLoc = getLoc(end + 1, end + 1);
  }
  addNode(currentOpenTag);
  const { tag, ns: ns2 } = currentOpenTag;
  if (ns2 === 0 && currentOptions.isPreTag(tag)) {
    inPre++;
  }
  if (currentOptions.isVoidTag(tag)) {
    onCloseTag(currentOpenTag, end);
  } else {
    stack.unshift(currentOpenTag);
    if (ns2 === 1 || ns2 === 2) {
      tokenizer.inXML = true;
    }
  }
  currentOpenTag = null;
}
function onText(content, start, end) {
  {
    const tag = stack[0] && stack[0].tag;
    if (tag !== "script" && tag !== "style" && content.includes("&")) {
      content = currentOptions.decodeEntities(content, false);
    }
  }
  const parent = stack[0] || currentRoot;
  const lastNode = parent.children[parent.children.length - 1];
  if (lastNode && lastNode.type === 2) {
    lastNode.content += content;
    setLocEnd(lastNode.loc, end);
  } else {
    parent.children.push({
      type: 2,
      content,
      loc: getLoc(start, end)
    });
  }
}
function onCloseTag(el2, end, isImplied = false) {
  if (isImplied) {
    setLocEnd(el2.loc, backTrack(end, 60));
  } else {
    setLocEnd(el2.loc, lookAhead(end, 62) + 1);
  }
  if (tokenizer.inSFCRoot) {
    if (el2.children.length) {
      el2.innerLoc.end = extend({}, el2.children[el2.children.length - 1].loc.end);
    } else {
      el2.innerLoc.end = extend({}, el2.innerLoc.start);
    }
    el2.innerLoc.source = getSlice(
      el2.innerLoc.start.offset,
      el2.innerLoc.end.offset
    );
  }
  const { tag, ns: ns2, children } = el2;
  if (!inVPre) {
    if (tag === "slot") {
      el2.tagType = 2;
    } else if (isFragmentTemplate(el2)) {
      el2.tagType = 3;
    } else if (isComponent(el2)) {
      el2.tagType = 1;
    }
  }
  if (!tokenizer.inRCDATA) {
    el2.children = condenseWhitespace(children);
  }
  if (ns2 === 0 && currentOptions.isIgnoreNewlineTag(tag)) {
    const first = children[0];
    if (first && first.type === 2) {
      first.content = first.content.replace(/^\r?\n/, "");
    }
  }
  if (ns2 === 0 && currentOptions.isPreTag(tag)) {
    inPre--;
  }
  if (currentVPreBoundary === el2) {
    inVPre = tokenizer.inVPre = false;
    currentVPreBoundary = null;
  }
  if (tokenizer.inXML && (stack[0] ? stack[0].ns : currentOptions.ns) === 0) {
    tokenizer.inXML = false;
  }
  {
    const props = el2.props;
    if (!tokenizer.inSFCRoot && isCompatEnabled(
      "COMPILER_NATIVE_TEMPLATE",
      currentOptions
    ) && el2.tag === "template" && !isFragmentTemplate(el2)) {
      const parent = stack[0] || currentRoot;
      const index = parent.children.indexOf(el2);
      parent.children.splice(index, 1, ...el2.children);
    }
    const inlineTemplateProp = props.find(
      (p5) => p5.type === 6 && p5.name === "inline-template"
    );
    if (inlineTemplateProp && checkCompatEnabled(
      "COMPILER_INLINE_TEMPLATE",
      currentOptions,
      inlineTemplateProp.loc
    ) && el2.children.length) {
      inlineTemplateProp.value = {
        type: 2,
        content: getSlice(
          el2.children[0].loc.start.offset,
          el2.children[el2.children.length - 1].loc.end.offset
        ),
        loc: inlineTemplateProp.loc
      };
    }
  }
}
function lookAhead(index, c) {
  let i = index;
  while (currentInput.charCodeAt(i) !== c && i < currentInput.length - 1) i++;
  return i;
}
function backTrack(index, c) {
  let i = index;
  while (currentInput.charCodeAt(i) !== c && i >= 0) i--;
  return i;
}
const specialTemplateDir = /* @__PURE__ */ new Set(["if", "else", "else-if", "for", "slot"]);
function isFragmentTemplate({ tag, props }) {
  if (tag === "template") {
    for (let i = 0; i < props.length; i++) {
      if (props[i].type === 7 && specialTemplateDir.has(props[i].name)) {
        return true;
      }
    }
  }
  return false;
}
function isComponent({ tag, props }) {
  if (currentOptions.isCustomElement(tag)) {
    return false;
  }
  if (tag === "component" || isUpperCase(tag.charCodeAt(0)) || isCoreComponent(tag) || currentOptions.isBuiltInComponent && currentOptions.isBuiltInComponent(tag) || currentOptions.isNativeTag && !currentOptions.isNativeTag(tag)) {
    return true;
  }
  for (let i = 0; i < props.length; i++) {
    const p5 = props[i];
    if (p5.type === 6) {
      if (p5.name === "is" && p5.value) {
        if (p5.value.content.startsWith("vue:")) {
          return true;
        } else if (checkCompatEnabled(
          "COMPILER_IS_ON_ELEMENT",
          currentOptions,
          p5.loc
        )) {
          return true;
        }
      }
    } else if (
      // :is on plain element - only treat as component in compat mode
      p5.name === "bind" && isStaticArgOf(p5.arg, "is") && checkCompatEnabled(
        "COMPILER_IS_ON_ELEMENT",
        currentOptions,
        p5.loc
      )
    ) {
      return true;
    }
  }
  return false;
}
function isUpperCase(c) {
  return c > 64 && c < 91;
}
const windowsNewlineRE = /\r\n/g;
function condenseWhitespace(nodes) {
  const shouldCondense = currentOptions.whitespace !== "preserve";
  let removedWhitespace = false;
  for (let i = 0; i < nodes.length; i++) {
    const node = nodes[i];
    if (node.type === 2) {
      if (!inPre) {
        if (isAllWhitespace(node.content)) {
          const prev = nodes[i - 1] && nodes[i - 1].type;
          const next = nodes[i + 1] && nodes[i + 1].type;
          if (!prev || !next || shouldCondense && (prev === 3 && (next === 3 || next === 1) || prev === 1 && (next === 3 || next === 1 && hasNewlineChar(node.content)))) {
            removedWhitespace = true;
            nodes[i] = null;
          } else {
            node.content = " ";
          }
        } else if (shouldCondense) {
          node.content = condense(node.content);
        }
      } else {
        node.content = node.content.replace(windowsNewlineRE, "\n");
      }
    }
  }
  return removedWhitespace ? nodes.filter(Boolean) : nodes;
}
function isAllWhitespace(str) {
  for (let i = 0; i < str.length; i++) {
    if (!isWhitespace(str.charCodeAt(i))) {
      return false;
    }
  }
  return true;
}
function hasNewlineChar(str) {
  for (let i = 0; i < str.length; i++) {
    const c = str.charCodeAt(i);
    if (c === 10 || c === 13) {
      return true;
    }
  }
  return false;
}
function condense(str) {
  let ret = "";
  let prevCharIsWhitespace = false;
  for (let i = 0; i < str.length; i++) {
    if (isWhitespace(str.charCodeAt(i))) {
      if (!prevCharIsWhitespace) {
        ret += " ";
        prevCharIsWhitespace = true;
      }
    } else {
      ret += str[i];
      prevCharIsWhitespace = false;
    }
  }
  return ret;
}
function addNode(node) {
  (stack[0] || currentRoot).children.push(node);
}
function getLoc(start, end) {
  return {
    start: tokenizer.getPos(start),
    // @ts-expect-error allow late attachment
    end: end == null ? end : tokenizer.getPos(end),
    // @ts-expect-error allow late attachment
    source: end == null ? end : getSlice(start, end)
  };
}
function cloneLoc(loc) {
  return getLoc(loc.start.offset, loc.end.offset);
}
function setLocEnd(loc, end) {
  loc.end = tokenizer.getPos(end);
  loc.source = getSlice(loc.start.offset, end);
}
function dirToAttr(dir) {
  const attr = {
    type: 6,
    name: dir.rawName,
    nameLoc: getLoc(
      dir.loc.start.offset,
      dir.loc.start.offset + dir.rawName.length
    ),
    value: void 0,
    loc: dir.loc
  };
  if (dir.exp) {
    const loc = dir.exp.loc;
    if (loc.end.offset < dir.loc.end.offset) {
      loc.start.offset--;
      loc.start.column--;
      loc.end.offset++;
      loc.end.column++;
    }
    attr.value = {
      type: 2,
      content: dir.exp.content,
      loc
    };
  }
  return attr;
}
function createExp(content, isStatic = false, loc, constType = 0, parseMode = 0) {
  const exp = createSimpleExpression(content, isStatic, loc, constType);
  return exp;
}
function emitError(code, index, message) {
  currentOptions.onError(
    createCompilerError(code, getLoc(index, index))
  );
}
function reset() {
  tokenizer.reset();
  currentOpenTag = null;
  currentProp = null;
  currentAttrValue = "";
  currentAttrStartIndex = -1;
  currentAttrEndIndex = -1;
  stack.length = 0;
}
function baseParse(input, options) {
  reset();
  currentInput = input;
  currentOptions = extend({}, defaultParserOptions);
  if (options) {
    let key;
    for (key in options) {
      if (options[key] != null) {
        currentOptions[key] = options[key];
      }
    }
  }
  tokenizer.mode = currentOptions.parseMode === "html" ? 1 : currentOptions.parseMode === "sfc" ? 2 : 0;
  tokenizer.inXML = currentOptions.ns === 1 || currentOptions.ns === 2;
  const delimiters = options && options.delimiters;
  if (delimiters) {
    tokenizer.delimiterOpen = toCharCodes(delimiters[0]);
    tokenizer.delimiterClose = toCharCodes(delimiters[1]);
  }
  const root = currentRoot = createRoot([], input);
  tokenizer.parse(currentInput);
  root.loc = getLoc(0, input.length);
  root.children = condenseWhitespace(root.children);
  currentRoot = null;
  return root;
}
function cacheStatic(root, context) {
  walk(
    root,
    void 0,
    context,
    // Root node is unfortunately non-hoistable due to potential parent
    // fallthrough attributes.
    !!getSingleElementRoot(root)
  );
}
function getSingleElementRoot(root) {
  const children = root.children.filter((x5) => x5.type !== 3);
  return children.length === 1 && children[0].type === 1 && !isSlotOutlet(children[0]) ? children[0] : null;
}
function walk(node, parent, context, doNotHoistNode = false, inFor = false) {
  const { children } = node;
  const toCache = [];
  for (let i = 0; i < children.length; i++) {
    const child = children[i];
    if (child.type === 1 && child.tagType === 0) {
      const constantType = doNotHoistNode ? 0 : getConstantType(child, context);
      if (constantType > 0) {
        if (constantType >= 2) {
          child.codegenNode.patchFlag = -1;
          toCache.push(child);
          continue;
        }
      } else {
        const codegenNode = child.codegenNode;
        if (codegenNode.type === 13) {
          const flag = codegenNode.patchFlag;
          if ((flag === void 0 || flag === 512 || flag === 1) && getGeneratedPropsConstantType(child, context) >= 2) {
            const props = getNodeProps(child);
            if (props) {
              codegenNode.props = context.hoist(props);
            }
          }
          if (codegenNode.dynamicProps) {
            codegenNode.dynamicProps = context.hoist(codegenNode.dynamicProps);
          }
        }
      }
    } else if (child.type === 12) {
      const constantType = doNotHoistNode ? 0 : getConstantType(child, context);
      if (constantType >= 2) {
        if (child.codegenNode.type === 14 && child.codegenNode.arguments.length > 0) {
          child.codegenNode.arguments.push(
            `-1`
          );
        }
        toCache.push(child);
        continue;
      }
    }
    if (child.type === 1) {
      const isComponent2 = child.tagType === 1;
      if (isComponent2) {
        context.scopes.vSlot++;
      }
      walk(child, node, context, false, inFor);
      if (isComponent2) {
        context.scopes.vSlot--;
      }
    } else if (child.type === 11) {
      walk(child, node, context, child.children.length === 1, true);
    } else if (child.type === 9) {
      for (let i22 = 0; i22 < child.branches.length; i22++) {
        walk(
          child.branches[i22],
          node,
          context,
          child.branches[i22].children.length === 1,
          inFor
        );
      }
    }
  }
  let cachedAsArray = false;
  if (toCache.length === children.length && node.type === 1) {
    if (node.tagType === 0 && node.codegenNode && node.codegenNode.type === 13 && isArray(node.codegenNode.children)) {
      node.codegenNode.children = getCacheExpression(
        createArrayExpression(node.codegenNode.children)
      );
      cachedAsArray = true;
    } else if (node.tagType === 1 && node.codegenNode && node.codegenNode.type === 13 && node.codegenNode.children && !isArray(node.codegenNode.children) && node.codegenNode.children.type === 15) {
      const slot = getSlotNode(node.codegenNode, "default");
      if (slot) {
        slot.returns = getCacheExpression(
          createArrayExpression(slot.returns)
        );
        cachedAsArray = true;
      }
    } else if (node.tagType === 3 && parent && parent.type === 1 && parent.tagType === 1 && parent.codegenNode && parent.codegenNode.type === 13 && parent.codegenNode.children && !isArray(parent.codegenNode.children) && parent.codegenNode.children.type === 15) {
      const slotName = findDir(node, "slot", true);
      const slot = slotName && slotName.arg && getSlotNode(parent.codegenNode, slotName.arg);
      if (slot) {
        slot.returns = getCacheExpression(
          createArrayExpression(slot.returns)
        );
        cachedAsArray = true;
      }
    }
  }
  if (!cachedAsArray) {
    for (const child of toCache) {
      child.codegenNode = context.cache(child.codegenNode);
    }
  }
  function getCacheExpression(value) {
    const exp = context.cache(value);
    exp.needArraySpread = true;
    return exp;
  }
  function getSlotNode(node2, name) {
    if (node2.children && !isArray(node2.children) && node2.children.type === 15) {
      const slot = node2.children.properties.find(
        (p5) => p5.key === name || p5.key.content === name
      );
      return slot && slot.value;
    }
  }
  if (toCache.length && context.transformHoist) {
    context.transformHoist(children, context, node);
  }
}
function getConstantType(node, context) {
  const { constantCache } = context;
  switch (node.type) {
    case 1:
      if (node.tagType !== 0) {
        return 0;
      }
      const cached = constantCache.get(node);
      if (cached !== void 0) {
        return cached;
      }
      const codegenNode = node.codegenNode;
      if (codegenNode.type !== 13) {
        return 0;
      }
      if (codegenNode.isBlock && node.tag !== "svg" && node.tag !== "foreignObject" && node.tag !== "math") {
        return 0;
      }
      if (codegenNode.patchFlag === void 0) {
        let returnType2 = 3;
        const generatedPropsType = getGeneratedPropsConstantType(node, context);
        if (generatedPropsType === 0) {
          constantCache.set(node, 0);
          return 0;
        }
        if (generatedPropsType < returnType2) {
          returnType2 = generatedPropsType;
        }
        for (let i = 0; i < node.children.length; i++) {
          const childType = getConstantType(node.children[i], context);
          if (childType === 0) {
            constantCache.set(node, 0);
            return 0;
          }
          if (childType < returnType2) {
            returnType2 = childType;
          }
        }
        if (returnType2 > 1) {
          for (let i = 0; i < node.props.length; i++) {
            const p5 = node.props[i];
            if (p5.type === 7 && p5.name === "bind" && p5.exp) {
              const expType = getConstantType(p5.exp, context);
              if (expType === 0) {
                constantCache.set(node, 0);
                return 0;
              }
              if (expType < returnType2) {
                returnType2 = expType;
              }
            }
          }
        }
        if (codegenNode.isBlock) {
          for (let i = 0; i < node.props.length; i++) {
            const p5 = node.props[i];
            if (p5.type === 7) {
              constantCache.set(node, 0);
              return 0;
            }
          }
          context.removeHelper(OPEN_BLOCK);
          context.removeHelper(
            getVNodeBlockHelper(context.inSSR, codegenNode.isComponent)
          );
          codegenNode.isBlock = false;
          context.helper(getVNodeHelper(context.inSSR, codegenNode.isComponent));
        }
        constantCache.set(node, returnType2);
        return returnType2;
      } else {
        constantCache.set(node, 0);
        return 0;
      }
    case 2:
    case 3:
      return 3;
    case 9:
    case 11:
    case 10:
      return 0;
    case 5:
    case 12:
      return getConstantType(node.content, context);
    case 4:
      return node.constType;
    case 8:
      let returnType = 3;
      for (let i = 0; i < node.children.length; i++) {
        const child = node.children[i];
        if (isString(child) || isSymbol(child)) {
          continue;
        }
        const childType = getConstantType(child, context);
        if (childType === 0) {
          return 0;
        } else if (childType < returnType) {
          returnType = childType;
        }
      }
      return returnType;
    case 20:
      return 2;
    default:
      return 0;
  }
}
const allowHoistedHelperSet = /* @__PURE__ */ new Set([
  NORMALIZE_CLASS,
  NORMALIZE_STYLE,
  NORMALIZE_PROPS,
  GUARD_REACTIVE_PROPS
]);
function getConstantTypeOfHelperCall(value, context) {
  if (value.type === 14 && !isString(value.callee) && allowHoistedHelperSet.has(value.callee)) {
    const arg = value.arguments[0];
    if (arg.type === 4) {
      return getConstantType(arg, context);
    } else if (arg.type === 14) {
      return getConstantTypeOfHelperCall(arg, context);
    }
  }
  return 0;
}
function getGeneratedPropsConstantType(node, context) {
  let returnType = 3;
  const props = getNodeProps(node);
  if (props && props.type === 15) {
    const { properties } = props;
    for (let i = 0; i < properties.length; i++) {
      const { key, value } = properties[i];
      const keyType = getConstantType(key, context);
      if (keyType === 0) {
        return keyType;
      }
      if (keyType < returnType) {
        returnType = keyType;
      }
      let valueType;
      if (value.type === 4) {
        valueType = getConstantType(value, context);
      } else if (value.type === 14) {
        valueType = getConstantTypeOfHelperCall(value, context);
      } else {
        valueType = 0;
      }
      if (valueType === 0) {
        return valueType;
      }
      if (valueType < returnType) {
        returnType = valueType;
      }
    }
  }
  return returnType;
}
function getNodeProps(node) {
  const codegenNode = node.codegenNode;
  if (codegenNode.type === 13) {
    return codegenNode.props;
  }
}
function createTransformContext(root, {
  filename = "",
  prefixIdentifiers = false,
  hoistStatic = false,
  hmr = false,
  cacheHandlers = false,
  nodeTransforms = [],
  directiveTransforms = {},
  transformHoist = null,
  isBuiltInComponent = NOOP,
  isCustomElement = NOOP,
  expressionPlugins = [],
  scopeId = null,
  slotted = true,
  ssr = false,
  inSSR = false,
  ssrCssVars = ``,
  bindingMetadata = EMPTY_OBJ,
  inline = false,
  isTS = false,
  onError = defaultOnError,
  onWarn = defaultOnWarn,
  compatConfig
}) {
  const nameMatch = filename.replace(/\?.*$/, "").match(/([^/\\]+)\.\w+$/);
  const context = {
    // options
    filename,
    selfName: nameMatch && capitalize(camelize(nameMatch[1])),
    prefixIdentifiers,
    hoistStatic,
    hmr,
    cacheHandlers,
    nodeTransforms,
    directiveTransforms,
    transformHoist,
    isBuiltInComponent,
    isCustomElement,
    expressionPlugins,
    scopeId,
    slotted,
    ssr,
    inSSR,
    ssrCssVars,
    bindingMetadata,
    inline,
    isTS,
    onError,
    onWarn,
    compatConfig,
    // state
    root,
    helpers: /* @__PURE__ */ new Map(),
    components: /* @__PURE__ */ new Set(),
    directives: /* @__PURE__ */ new Set(),
    hoists: [],
    imports: [],
    cached: [],
    constantCache: /* @__PURE__ */ new WeakMap(),
    temps: 0,
    identifiers: /* @__PURE__ */ Object.create(null),
    scopes: {
      vFor: 0,
      vSlot: 0,
      vPre: 0,
      vOnce: 0
    },
    parent: null,
    grandParent: null,
    currentNode: root,
    childIndex: 0,
    inVOnce: false,
    // methods
    helper(name) {
      const count = context.helpers.get(name) || 0;
      context.helpers.set(name, count + 1);
      return name;
    },
    removeHelper(name) {
      const count = context.helpers.get(name);
      if (count) {
        const currentCount = count - 1;
        if (!currentCount) {
          context.helpers.delete(name);
        } else {
          context.helpers.set(name, currentCount);
        }
      }
    },
    helperString(name) {
      return `_${helperNameMap[context.helper(name)]}`;
    },
    replaceNode(node) {
      context.parent.children[context.childIndex] = context.currentNode = node;
    },
    removeNode(node) {
      const list = context.parent.children;
      const removalIndex = node ? list.indexOf(node) : context.currentNode ? context.childIndex : -1;
      if (!node || node === context.currentNode) {
        context.currentNode = null;
        context.onNodeRemoved();
      } else {
        if (context.childIndex > removalIndex) {
          context.childIndex--;
          context.onNodeRemoved();
        }
      }
      context.parent.children.splice(removalIndex, 1);
    },
    onNodeRemoved: NOOP,
    addIdentifiers(exp) {
    },
    removeIdentifiers(exp) {
    },
    hoist(exp) {
      if (isString(exp)) exp = createSimpleExpression(exp);
      context.hoists.push(exp);
      const identifier = createSimpleExpression(
        `_hoisted_${context.hoists.length}`,
        false,
        exp.loc,
        2
      );
      identifier.hoisted = exp;
      return identifier;
    },
    cache(exp, isVNode2 = false, inVOnce = false) {
      const cacheExp = createCacheExpression(
        context.cached.length,
        exp,
        isVNode2,
        inVOnce
      );
      context.cached.push(cacheExp);
      return cacheExp;
    }
  };
  {
    context.filters = /* @__PURE__ */ new Set();
  }
  return context;
}
function transform(root, options) {
  const context = createTransformContext(root, options);
  traverseNode(root, context);
  if (options.hoistStatic) {
    cacheStatic(root, context);
  }
  if (!options.ssr) {
    createRootCodegen(root, context);
  }
  root.helpers = /* @__PURE__ */ new Set([...context.helpers.keys()]);
  root.components = [...context.components];
  root.directives = [...context.directives];
  root.imports = context.imports;
  root.hoists = context.hoists;
  root.temps = context.temps;
  root.cached = context.cached;
  root.transformed = true;
  {
    root.filters = [...context.filters];
  }
}
function createRootCodegen(root, context) {
  const { helper } = context;
  const { children } = root;
  if (children.length === 1) {
    const singleElementRootChild = getSingleElementRoot(root);
    if (singleElementRootChild && singleElementRootChild.codegenNode) {
      const codegenNode = singleElementRootChild.codegenNode;
      if (codegenNode.type === 13) {
        convertToBlock(codegenNode, context);
      }
      root.codegenNode = codegenNode;
    } else {
      root.codegenNode = children[0];
    }
  } else if (children.length > 1) {
    let patchFlag = 64;
    root.codegenNode = createVNodeCall(
      context,
      helper(FRAGMENT),
      void 0,
      root.children,
      patchFlag,
      void 0,
      void 0,
      true,
      void 0,
      false
    );
  } else ;
}
function traverseChildren(parent, context) {
  let i = 0;
  const nodeRemoved = () => {
    i--;
  };
  for (; i < parent.children.length; i++) {
    const child = parent.children[i];
    if (isString(child)) continue;
    context.grandParent = context.parent;
    context.parent = parent;
    context.childIndex = i;
    context.onNodeRemoved = nodeRemoved;
    traverseNode(child, context);
  }
}
function traverseNode(node, context) {
  context.currentNode = node;
  const { nodeTransforms } = context;
  const exitFns = [];
  for (let i22 = 0; i22 < nodeTransforms.length; i22++) {
    const onExit = nodeTransforms[i22](node, context);
    if (onExit) {
      if (isArray(onExit)) {
        exitFns.push(...onExit);
      } else {
        exitFns.push(onExit);
      }
    }
    if (!context.currentNode) {
      return;
    } else {
      node = context.currentNode;
    }
  }
  switch (node.type) {
    case 3:
      if (!context.ssr) {
        context.helper(CREATE_COMMENT);
      }
      break;
    case 5:
      if (!context.ssr) {
        context.helper(TO_DISPLAY_STRING);
      }
      break;
    // for container types, further traverse downwards
    case 9:
      for (let i22 = 0; i22 < node.branches.length; i22++) {
        traverseNode(node.branches[i22], context);
      }
      break;
    case 10:
    case 11:
    case 1:
    case 0:
      traverseChildren(node, context);
      break;
  }
  context.currentNode = node;
  let i = exitFns.length;
  while (i--) {
    exitFns[i]();
  }
}
function createStructuralDirectiveTransform(name, fn2) {
  const matches2 = isString(name) ? (n) => n === name : (n) => name.test(n);
  return (node, context) => {
    if (node.type === 1) {
      const { props } = node;
      if (node.tagType === 3 && props.some(isVSlot)) {
        return;
      }
      const exitFns = [];
      for (let i = 0; i < props.length; i++) {
        const prop = props[i];
        if (prop.type === 7 && matches2(prop.name)) {
          props.splice(i, 1);
          i--;
          const onExit = fn2(node, prop, context);
          if (onExit) exitFns.push(onExit);
        }
      }
      return exitFns;
    }
  };
}
const PURE_ANNOTATION = `/*@__PURE__*/`;
const aliasHelper = (s) => `${helperNameMap[s]}: _${helperNameMap[s]}`;
function createCodegenContext(ast, {
  mode = "function",
  prefixIdentifiers = mode === "module",
  sourceMap = false,
  filename = `template.vue.html`,
  scopeId = null,
  optimizeImports = false,
  runtimeGlobalName = `Vue`,
  runtimeModuleName = `vue`,
  ssrRuntimeModuleName = "vue/server-renderer",
  ssr = false,
  isTS = false,
  inSSR = false
}) {
  const context = {
    mode,
    prefixIdentifiers,
    sourceMap,
    filename,
    scopeId,
    optimizeImports,
    runtimeGlobalName,
    runtimeModuleName,
    ssrRuntimeModuleName,
    ssr,
    isTS,
    inSSR,
    source: ast.source,
    code: ``,
    column: 1,
    line: 1,
    offset: 0,
    indentLevel: 0,
    pure: false,
    map: void 0,
    helper(key) {
      return `_${helperNameMap[key]}`;
    },
    push(code, newlineIndex = -2, node) {
      context.code += code;
    },
    indent() {
      newline(++context.indentLevel);
    },
    deindent(withoutNewLine = false) {
      if (withoutNewLine) {
        --context.indentLevel;
      } else {
        newline(--context.indentLevel);
      }
    },
    newline() {
      newline(context.indentLevel);
    }
  };
  function newline(n) {
    context.push(
      "\n" + `  `.repeat(n),
      0
      /* Start */
    );
  }
  return context;
}
function generate(ast, options = {}) {
  const context = createCodegenContext(ast, options);
  if (options.onContextCreated) options.onContextCreated(context);
  const {
    mode,
    push,
    prefixIdentifiers,
    indent,
    deindent,
    newline,
    scopeId,
    ssr
  } = context;
  const helpers = Array.from(ast.helpers);
  const hasHelpers = helpers.length > 0;
  const useWithBlock = !prefixIdentifiers && mode !== "module";
  const preambleContext = context;
  {
    genFunctionPreamble(ast, preambleContext);
  }
  const functionName = ssr ? `ssrRender` : `render`;
  const args = ssr ? ["_ctx", "_push", "_parent", "_attrs"] : ["_ctx", "_cache"];
  const signature = args.join(", ");
  {
    push(`function ${functionName}(${signature}) {`);
  }
  indent();
  if (useWithBlock) {
    push(`with (_ctx) {`);
    indent();
    if (hasHelpers) {
      push(
        `const { ${helpers.map(aliasHelper).join(", ")} } = _Vue
`,
        -1
        /* End */
      );
      newline();
    }
  }
  if (ast.components.length) {
    genAssets(ast.components, "component", context);
    if (ast.directives.length || ast.temps > 0) {
      newline();
    }
  }
  if (ast.directives.length) {
    genAssets(ast.directives, "directive", context);
    if (ast.temps > 0) {
      newline();
    }
  }
  if (ast.filters && ast.filters.length) {
    newline();
    genAssets(ast.filters, "filter", context);
    newline();
  }
  if (ast.temps > 0) {
    push(`let `);
    for (let i = 0; i < ast.temps; i++) {
      push(`${i > 0 ? `, ` : ``}_temp${i}`);
    }
  }
  if (ast.components.length || ast.directives.length || ast.temps) {
    push(
      `
`,
      0
      /* Start */
    );
    newline();
  }
  if (!ssr) {
    push(`return `);
  }
  if (ast.codegenNode) {
    genNode(ast.codegenNode, context);
  } else {
    push(`null`);
  }
  if (useWithBlock) {
    deindent();
    push(`}`);
  }
  deindent();
  push(`}`);
  return {
    ast,
    code: context.code,
    preamble: ``,
    map: context.map ? context.map.toJSON() : void 0
  };
}
function genFunctionPreamble(ast, context) {
  const {
    ssr,
    prefixIdentifiers,
    push,
    newline,
    runtimeModuleName,
    runtimeGlobalName,
    ssrRuntimeModuleName
  } = context;
  const VueBinding = runtimeGlobalName;
  const helpers = Array.from(ast.helpers);
  if (helpers.length > 0) {
    {
      push(
        `const _Vue = ${VueBinding}
`,
        -1
        /* End */
      );
      if (ast.hoists.length) {
        const staticHelpers = [
          CREATE_VNODE,
          CREATE_ELEMENT_VNODE,
          CREATE_COMMENT,
          CREATE_TEXT,
          CREATE_STATIC
        ].filter((helper) => helpers.includes(helper)).map(aliasHelper).join(", ");
        push(
          `const { ${staticHelpers} } = _Vue
`,
          -1
          /* End */
        );
      }
    }
  }
  genHoists(ast.hoists, context);
  newline();
  push(`return `);
}
function genAssets(assets, type, { helper, push, newline, isTS }) {
  const resolver = helper(
    type === "filter" ? RESOLVE_FILTER : type === "component" ? RESOLVE_COMPONENT : RESOLVE_DIRECTIVE
  );
  for (let i = 0; i < assets.length; i++) {
    let id = assets[i];
    const maybeSelfReference = id.endsWith("__self");
    if (maybeSelfReference) {
      id = id.slice(0, -6);
    }
    push(
      `const ${toValidAssetId(id, type)} = ${resolver}(${JSON.stringify(id)}${maybeSelfReference ? `, true` : ``})${isTS ? `!` : ``}`
    );
    if (i < assets.length - 1) {
      newline();
    }
  }
}
function genHoists(hoists, context) {
  if (!hoists.length) {
    return;
  }
  context.pure = true;
  const { push, newline } = context;
  newline();
  for (let i = 0; i < hoists.length; i++) {
    const exp = hoists[i];
    if (exp) {
      push(`const _hoisted_${i + 1} = `);
      genNode(exp, context);
      newline();
    }
  }
  context.pure = false;
}
function genNodeListAsArray(nodes, context) {
  const multilines = nodes.length > 3 || false;
  context.push(`[`);
  multilines && context.indent();
  genNodeList(nodes, context, multilines);
  multilines && context.deindent();
  context.push(`]`);
}
function genNodeList(nodes, context, multilines = false, comma = true) {
  const { push, newline } = context;
  for (let i = 0; i < nodes.length; i++) {
    const node = nodes[i];
    if (isString(node)) {
      push(
        node,
        -3
        /* Unknown */
      );
    } else if (isArray(node)) {
      genNodeListAsArray(node, context);
    } else {
      genNode(node, context);
    }
    if (i < nodes.length - 1) {
      if (multilines) {
        comma && push(",");
        newline();
      } else {
        comma && push(", ");
      }
    }
  }
}
function genNode(node, context) {
  if (isString(node)) {
    context.push(
      node,
      -3
      /* Unknown */
    );
    return;
  }
  if (isSymbol(node)) {
    context.push(context.helper(node));
    return;
  }
  switch (node.type) {
    case 1:
    case 9:
    case 11:
      genNode(node.codegenNode, context);
      break;
    case 2:
      genText(node, context);
      break;
    case 4:
      genExpression(node, context);
      break;
    case 5:
      genInterpolation(node, context);
      break;
    case 12:
      genNode(node.codegenNode, context);
      break;
    case 8:
      genCompoundExpression(node, context);
      break;
    case 3:
      genComment(node, context);
      break;
    case 13:
      genVNodeCall(node, context);
      break;
    case 14:
      genCallExpression(node, context);
      break;
    case 15:
      genObjectExpression(node, context);
      break;
    case 17:
      genArrayExpression(node, context);
      break;
    case 18:
      genFunctionExpression(node, context);
      break;
    case 19:
      genConditionalExpression(node, context);
      break;
    case 20:
      genCacheExpression(node, context);
      break;
    case 21:
      genNodeList(node.body, context, true, false);
      break;
  }
}
function genText(node, context) {
  context.push(JSON.stringify(node.content), -3, node);
}
function genExpression(node, context) {
  const { content, isStatic } = node;
  context.push(
    isStatic ? JSON.stringify(content) : content,
    -3,
    node
  );
}
function genInterpolation(node, context) {
  const { push, helper, pure } = context;
  if (pure) push(PURE_ANNOTATION);
  push(`${helper(TO_DISPLAY_STRING)}(`);
  genNode(node.content, context);
  push(`)`);
}
function genCompoundExpression(node, context) {
  for (let i = 0; i < node.children.length; i++) {
    const child = node.children[i];
    if (isString(child)) {
      context.push(
        child,
        -3
        /* Unknown */
      );
    } else {
      genNode(child, context);
    }
  }
}
function genExpressionAsPropertyKey(node, context) {
  const { push } = context;
  if (node.type === 8) {
    push(`[`);
    genCompoundExpression(node, context);
    push(`]`);
  } else if (node.isStatic) {
    const text = isSimpleIdentifier(node.content) ? node.content : JSON.stringify(node.content);
    push(text, -2, node);
  } else {
    push(`[${node.content}]`, -3, node);
  }
}
function genComment(node, context) {
  const { push, helper, pure } = context;
  if (pure) {
    push(PURE_ANNOTATION);
  }
  push(
    `${helper(CREATE_COMMENT)}(${JSON.stringify(node.content)})`,
    -3,
    node
  );
}
function genVNodeCall(node, context) {
  const { push, helper, pure } = context;
  const {
    tag,
    props,
    children,
    patchFlag,
    dynamicProps,
    directives,
    isBlock,
    disableTracking,
    isComponent: isComponent2
  } = node;
  let patchFlagString;
  if (patchFlag) {
    {
      patchFlagString = String(patchFlag);
    }
  }
  if (directives) {
    push(helper(WITH_DIRECTIVES) + `(`);
  }
  if (isBlock) {
    push(`(${helper(OPEN_BLOCK)}(${disableTracking ? `true` : ``}), `);
  }
  if (pure) {
    push(PURE_ANNOTATION);
  }
  const callHelper = isBlock ? getVNodeBlockHelper(context.inSSR, isComponent2) : getVNodeHelper(context.inSSR, isComponent2);
  push(helper(callHelper) + `(`, -2, node);
  genNodeList(
    genNullableArgs([tag, props, children, patchFlagString, dynamicProps]),
    context
  );
  push(`)`);
  if (isBlock) {
    push(`)`);
  }
  if (directives) {
    push(`, `);
    genNode(directives, context);
    push(`)`);
  }
}
function genNullableArgs(args) {
  let i = args.length;
  while (i--) {
    if (args[i] != null) break;
  }
  return args.slice(0, i + 1).map((arg) => arg || `null`);
}
function genCallExpression(node, context) {
  const { push, helper, pure } = context;
  const callee = isString(node.callee) ? node.callee : helper(node.callee);
  if (pure) {
    push(PURE_ANNOTATION);
  }
  push(callee + `(`, -2, node);
  genNodeList(node.arguments, context);
  push(`)`);
}
function genObjectExpression(node, context) {
  const { push, indent, deindent, newline } = context;
  const { properties } = node;
  if (!properties.length) {
    push(`{}`, -2, node);
    return;
  }
  const multilines = properties.length > 1 || false;
  push(multilines ? `{` : `{ `);
  multilines && indent();
  for (let i = 0; i < properties.length; i++) {
    const { key, value } = properties[i];
    genExpressionAsPropertyKey(key, context);
    push(`: `);
    genNode(value, context);
    if (i < properties.length - 1) {
      push(`,`);
      newline();
    }
  }
  multilines && deindent();
  push(multilines ? `}` : ` }`);
}
function genArrayExpression(node, context) {
  genNodeListAsArray(node.elements, context);
}
function genFunctionExpression(node, context) {
  const { push, indent, deindent } = context;
  const { params, returns, body, newline, isSlot } = node;
  if (isSlot) {
    push(`_${helperNameMap[WITH_CTX]}(`);
  }
  push(`(`, -2, node);
  if (isArray(params)) {
    genNodeList(params, context);
  } else if (params) {
    genNode(params, context);
  }
  push(`) => `);
  if (newline || body) {
    push(`{`);
    indent();
  }
  if (returns) {
    if (newline) {
      push(`return `);
    }
    if (isArray(returns)) {
      genNodeListAsArray(returns, context);
    } else {
      genNode(returns, context);
    }
  } else if (body) {
    genNode(body, context);
  }
  if (newline || body) {
    deindent();
    push(`}`);
  }
  if (isSlot) {
    if (node.isNonScopedSlot) {
      push(`, undefined, true`);
    }
    push(`)`);
  }
}
function genConditionalExpression(node, context) {
  const { test, consequent, alternate, newline: needNewline } = node;
  const { push, indent, deindent, newline } = context;
  if (test.type === 4) {
    const needsParens = !isSimpleIdentifier(test.content);
    needsParens && push(`(`);
    genExpression(test, context);
    needsParens && push(`)`);
  } else {
    push(`(`);
    genNode(test, context);
    push(`)`);
  }
  needNewline && indent();
  context.indentLevel++;
  needNewline || push(` `);
  push(`? `);
  genNode(consequent, context);
  context.indentLevel--;
  needNewline && newline();
  needNewline || push(` `);
  push(`: `);
  const isNested = alternate.type === 19;
  if (!isNested) {
    context.indentLevel++;
  }
  genNode(alternate, context);
  if (!isNested) {
    context.indentLevel--;
  }
  needNewline && deindent(
    true
    /* without newline */
  );
}
function genCacheExpression(node, context) {
  const { push, helper, indent, deindent, newline } = context;
  const { needPauseTracking, needArraySpread } = node;
  if (needArraySpread) {
    push(`[...(`);
  }
  push(`_cache[${node.index}] || (`);
  if (needPauseTracking) {
    indent();
    push(`${helper(SET_BLOCK_TRACKING)}(-1`);
    if (node.inVOnce) push(`, true`);
    push(`),`);
    newline();
    push(`(`);
  }
  push(`_cache[${node.index}] = `);
  genNode(node.value, context);
  if (needPauseTracking) {
    push(`).cacheIndex = ${node.index},`);
    newline();
    push(`${helper(SET_BLOCK_TRACKING)}(1),`);
    newline();
    push(`_cache[${node.index}]`);
    deindent();
  }
  push(`)`);
  if (needArraySpread) {
    push(`)]`);
  }
}
new RegExp(
  "\\b" + "arguments,await,break,case,catch,class,const,continue,debugger,default,delete,do,else,export,extends,finally,for,function,if,import,let,new,return,super,switch,throw,try,var,void,while,with,yield".split(",").join("\\b|\\b") + "\\b"
);
const transformIf = createStructuralDirectiveTransform(
  /^(?:if|else|else-if)$/,
  (node, dir, context) => {
    return processIf(node, dir, context, (ifNode, branch, isRoot) => {
      const siblings = context.parent.children;
      let i = siblings.indexOf(ifNode);
      let key = 0;
      while (i-- >= 0) {
        const sibling = siblings[i];
        if (sibling && sibling.type === 9) {
          key += sibling.branches.length;
        }
      }
      return () => {
        if (isRoot) {
          ifNode.codegenNode = createCodegenNodeForBranch(
            branch,
            key,
            context
          );
        } else {
          const parentCondition = getParentCondition(ifNode.codegenNode);
          parentCondition.alternate = createCodegenNodeForBranch(
            branch,
            key + ifNode.branches.length - 1,
            context
          );
        }
      };
    });
  }
);
function processIf(node, dir, context, processCodegen) {
  if (dir.name !== "else" && (!dir.exp || !dir.exp.content.trim())) {
    const loc = dir.exp ? dir.exp.loc : node.loc;
    context.onError(
      createCompilerError(28, dir.loc)
    );
    dir.exp = createSimpleExpression(`true`, false, loc);
  }
  if (dir.name === "if") {
    const branch = createIfBranch(node, dir);
    const ifNode = {
      type: 9,
      loc: cloneLoc(node.loc),
      branches: [branch]
    };
    context.replaceNode(ifNode);
    if (processCodegen) {
      return processCodegen(ifNode, branch, true);
    }
  } else {
    const siblings = context.parent.children;
    let i = siblings.indexOf(node);
    while (i-- >= -1) {
      const sibling = siblings[i];
      if (sibling && sibling.type === 3) {
        context.removeNode(sibling);
        continue;
      }
      if (sibling && sibling.type === 2 && !sibling.content.trim().length) {
        context.removeNode(sibling);
        continue;
      }
      if (sibling && sibling.type === 9) {
        if ((dir.name === "else-if" || dir.name === "else") && sibling.branches[sibling.branches.length - 1].condition === void 0) {
          context.onError(
            createCompilerError(30, node.loc)
          );
        }
        context.removeNode();
        const branch = createIfBranch(node, dir);
        sibling.branches.push(branch);
        const onExit = processCodegen && processCodegen(sibling, branch, false);
        traverseNode(branch, context);
        if (onExit) onExit();
        context.currentNode = null;
      } else {
        context.onError(
          createCompilerError(30, node.loc)
        );
      }
      break;
    }
  }
}
function createIfBranch(node, dir) {
  const isTemplateIf = node.tagType === 3;
  return {
    type: 10,
    loc: node.loc,
    condition: dir.name === "else" ? void 0 : dir.exp,
    children: isTemplateIf && !findDir(node, "for") ? node.children : [node],
    userKey: findProp(node, `key`),
    isTemplateIf
  };
}
function createCodegenNodeForBranch(branch, keyIndex, context) {
  if (branch.condition) {
    return createConditionalExpression(
      branch.condition,
      createChildrenCodegenNode(branch, keyIndex, context),
      // make sure to pass in asBlock: true so that the comment node call
      // closes the current block.
      createCallExpression(context.helper(CREATE_COMMENT), [
        '""',
        "true"
      ])
    );
  } else {
    return createChildrenCodegenNode(branch, keyIndex, context);
  }
}
function createChildrenCodegenNode(branch, keyIndex, context) {
  const { helper } = context;
  const keyProperty = createObjectProperty(
    `key`,
    createSimpleExpression(
      `${keyIndex}`,
      false,
      locStub,
      2
    )
  );
  const { children } = branch;
  const firstChild = children[0];
  const needFragmentWrapper = children.length !== 1 || firstChild.type !== 1;
  if (needFragmentWrapper) {
    if (children.length === 1 && firstChild.type === 11) {
      const vnodeCall = firstChild.codegenNode;
      injectProp(vnodeCall, keyProperty, context);
      return vnodeCall;
    } else {
      let patchFlag = 64;
      return createVNodeCall(
        context,
        helper(FRAGMENT),
        createObjectExpression([keyProperty]),
        children,
        patchFlag,
        void 0,
        void 0,
        true,
        false,
        false,
        branch.loc
      );
    }
  } else {
    const ret = firstChild.codegenNode;
    const vnodeCall = getMemoedVNodeCall(ret);
    if (vnodeCall.type === 13) {
      convertToBlock(vnodeCall, context);
    }
    injectProp(vnodeCall, keyProperty, context);
    return ret;
  }
}
function getParentCondition(node) {
  while (true) {
    if (node.type === 19) {
      if (node.alternate.type === 19) {
        node = node.alternate;
      } else {
        return node;
      }
    } else if (node.type === 20) {
      node = node.value;
    }
  }
}
const transformBind = (dir, _node, context) => {
  const { modifiers, loc } = dir;
  const arg = dir.arg;
  let { exp } = dir;
  if (exp && exp.type === 4 && !exp.content.trim()) {
    {
      exp = void 0;
    }
  }
  if (!exp) {
    if (arg.type !== 4 || !arg.isStatic) {
      context.onError(
        createCompilerError(
          52,
          arg.loc
        )
      );
      return {
        props: [
          createObjectProperty(arg, createSimpleExpression("", true, loc))
        ]
      };
    }
    transformBindShorthand(dir);
    exp = dir.exp;
  }
  if (arg.type !== 4) {
    arg.children.unshift(`(`);
    arg.children.push(`) || ""`);
  } else if (!arg.isStatic) {
    arg.content = arg.content ? `${arg.content} || ""` : `""`;
  }
  if (modifiers.some((mod) => mod.content === "camel")) {
    if (arg.type === 4) {
      if (arg.isStatic) {
        arg.content = camelize(arg.content);
      } else {
        arg.content = `${context.helperString(CAMELIZE)}(${arg.content})`;
      }
    } else {
      arg.children.unshift(`${context.helperString(CAMELIZE)}(`);
      arg.children.push(`)`);
    }
  }
  if (!context.inSSR) {
    if (modifiers.some((mod) => mod.content === "prop")) {
      injectPrefix(arg, ".");
    }
    if (modifiers.some((mod) => mod.content === "attr")) {
      injectPrefix(arg, "^");
    }
  }
  return {
    props: [createObjectProperty(arg, exp)]
  };
};
const transformBindShorthand = (dir, context) => {
  const arg = dir.arg;
  const propName = camelize(arg.content);
  dir.exp = createSimpleExpression(propName, false, arg.loc);
};
const injectPrefix = (arg, prefix) => {
  if (arg.type === 4) {
    if (arg.isStatic) {
      arg.content = prefix + arg.content;
    } else {
      arg.content = `\`${prefix}\${${arg.content}}\``;
    }
  } else {
    arg.children.unshift(`'${prefix}' + (`);
    arg.children.push(`)`);
  }
};
const transformFor = createStructuralDirectiveTransform(
  "for",
  (node, dir, context) => {
    const { helper, removeHelper } = context;
    return processFor(node, dir, context, (forNode) => {
      const renderExp = createCallExpression(helper(RENDER_LIST), [
        forNode.source
      ]);
      const isTemplate = isTemplateNode(node);
      const memo = findDir(node, "memo");
      const keyProp = findProp(node, `key`, false, true);
      const isDirKey = keyProp && keyProp.type === 7;
      if (isDirKey && !keyProp.exp) {
        transformBindShorthand(keyProp);
      }
      let keyExp = keyProp && (keyProp.type === 6 ? keyProp.value ? createSimpleExpression(keyProp.value.content, true) : void 0 : keyProp.exp);
      const keyProperty = keyProp && keyExp ? createObjectProperty(`key`, keyExp) : null;
      const isStableFragment = forNode.source.type === 4 && forNode.source.constType > 0;
      const fragmentFlag = isStableFragment ? 64 : keyProp ? 128 : 256;
      forNode.codegenNode = createVNodeCall(
        context,
        helper(FRAGMENT),
        void 0,
        renderExp,
        fragmentFlag,
        void 0,
        void 0,
        true,
        !isStableFragment,
        false,
        node.loc
      );
      return () => {
        let childBlock;
        const { children } = forNode;
        const needFragmentWrapper = children.length !== 1 || children[0].type !== 1;
        const slotOutlet = isSlotOutlet(node) ? node : isTemplate && node.children.length === 1 && isSlotOutlet(node.children[0]) ? node.children[0] : null;
        if (slotOutlet) {
          childBlock = slotOutlet.codegenNode;
          if (isTemplate && keyProperty) {
            injectProp(childBlock, keyProperty, context);
          }
        } else if (needFragmentWrapper) {
          childBlock = createVNodeCall(
            context,
            helper(FRAGMENT),
            keyProperty ? createObjectExpression([keyProperty]) : void 0,
            node.children,
            64,
            void 0,
            void 0,
            true,
            void 0,
            false
          );
        } else {
          childBlock = children[0].codegenNode;
          if (isTemplate && keyProperty) {
            injectProp(childBlock, keyProperty, context);
          }
          if (childBlock.isBlock !== !isStableFragment) {
            if (childBlock.isBlock) {
              removeHelper(OPEN_BLOCK);
              removeHelper(
                getVNodeBlockHelper(context.inSSR, childBlock.isComponent)
              );
            } else {
              removeHelper(
                getVNodeHelper(context.inSSR, childBlock.isComponent)
              );
            }
          }
          childBlock.isBlock = !isStableFragment;
          if (childBlock.isBlock) {
            helper(OPEN_BLOCK);
            helper(getVNodeBlockHelper(context.inSSR, childBlock.isComponent));
          } else {
            helper(getVNodeHelper(context.inSSR, childBlock.isComponent));
          }
        }
        if (memo) {
          const loop = createFunctionExpression(
            createForLoopParams(forNode.parseResult, [
              createSimpleExpression(`_cached`)
            ])
          );
          loop.body = createBlockStatement([
            createCompoundExpression([`const _memo = (`, memo.exp, `)`]),
            createCompoundExpression([
              `if (_cached`,
              ...keyExp ? [` && _cached.key === `, keyExp] : [],
              ` && ${context.helperString(
                IS_MEMO_SAME
              )}(_cached, _memo)) return _cached`
            ]),
            createCompoundExpression([`const _item = `, childBlock]),
            createSimpleExpression(`_item.memo = _memo`),
            createSimpleExpression(`return _item`)
          ]);
          renderExp.arguments.push(
            loop,
            createSimpleExpression(`_cache`),
            createSimpleExpression(String(context.cached.length))
          );
          context.cached.push(null);
        } else {
          renderExp.arguments.push(
            createFunctionExpression(
              createForLoopParams(forNode.parseResult),
              childBlock,
              true
            )
          );
        }
      };
    });
  }
);
function processFor(node, dir, context, processCodegen) {
  if (!dir.exp) {
    context.onError(
      createCompilerError(31, dir.loc)
    );
    return;
  }
  const parseResult = dir.forParseResult;
  if (!parseResult) {
    context.onError(
      createCompilerError(32, dir.loc)
    );
    return;
  }
  finalizeForParseResult(parseResult);
  const { addIdentifiers, removeIdentifiers, scopes } = context;
  const { source, value, key, index } = parseResult;
  const forNode = {
    type: 11,
    loc: dir.loc,
    source,
    valueAlias: value,
    keyAlias: key,
    objectIndexAlias: index,
    parseResult,
    children: isTemplateNode(node) ? node.children : [node]
  };
  context.replaceNode(forNode);
  scopes.vFor++;
  const onExit = processCodegen && processCodegen(forNode);
  return () => {
    scopes.vFor--;
    if (onExit) onExit();
  };
}
function finalizeForParseResult(result, context) {
  if (result.finalized) return;
  result.finalized = true;
}
function createForLoopParams({ value, key, index }, memoArgs = []) {
  return createParamsList([value, key, index, ...memoArgs]);
}
function createParamsList(args) {
  let i = args.length;
  while (i--) {
    if (args[i]) break;
  }
  return args.slice(0, i + 1).map((arg, i22) => arg || createSimpleExpression(`_`.repeat(i22 + 1), false));
}
const defaultFallback = createSimpleExpression(`undefined`, false);
const trackSlotScopes = (node, context) => {
  if (node.type === 1 && (node.tagType === 1 || node.tagType === 3)) {
    const vSlot = findDir(node, "slot");
    if (vSlot) {
      vSlot.exp;
      context.scopes.vSlot++;
      return () => {
        context.scopes.vSlot--;
      };
    }
  }
};
const buildClientSlotFn = (props, _vForExp, children, loc) => createFunctionExpression(
  props,
  children,
  false,
  true,
  children.length ? children[0].loc : loc
);
function buildSlots(node, context, buildSlotFn = buildClientSlotFn) {
  context.helper(WITH_CTX);
  const { children, loc } = node;
  const slotsProperties = [];
  const dynamicSlots = [];
  let hasDynamicSlots = context.scopes.vSlot > 0 || context.scopes.vFor > 0;
  const onComponentSlot = findDir(node, "slot", true);
  if (onComponentSlot) {
    const { arg, exp } = onComponentSlot;
    if (arg && !isStaticExp(arg)) {
      hasDynamicSlots = true;
    }
    slotsProperties.push(
      createObjectProperty(
        arg || createSimpleExpression("default", true),
        buildSlotFn(exp, void 0, children, loc)
      )
    );
  }
  let hasTemplateSlots = false;
  let hasNamedDefaultSlot = false;
  const implicitDefaultChildren = [];
  const seenSlotNames = /* @__PURE__ */ new Set();
  let conditionalBranchIndex = 0;
  for (let i = 0; i < children.length; i++) {
    const slotElement = children[i];
    let slotDir;
    if (!isTemplateNode(slotElement) || !(slotDir = findDir(slotElement, "slot", true))) {
      if (slotElement.type !== 3) {
        implicitDefaultChildren.push(slotElement);
      }
      continue;
    }
    if (onComponentSlot) {
      context.onError(
        createCompilerError(37, slotDir.loc)
      );
      break;
    }
    hasTemplateSlots = true;
    const { children: slotChildren, loc: slotLoc } = slotElement;
    const {
      arg: slotName = createSimpleExpression(`default`, true),
      exp: slotProps,
      loc: dirLoc
    } = slotDir;
    let staticSlotName;
    if (isStaticExp(slotName)) {
      staticSlotName = slotName ? slotName.content : `default`;
    } else {
      hasDynamicSlots = true;
    }
    const vFor = findDir(slotElement, "for");
    const slotFunction = buildSlotFn(slotProps, vFor, slotChildren, slotLoc);
    let vIf;
    let vElse;
    if (vIf = findDir(slotElement, "if")) {
      hasDynamicSlots = true;
      dynamicSlots.push(
        createConditionalExpression(
          vIf.exp,
          buildDynamicSlot(slotName, slotFunction, conditionalBranchIndex++),
          defaultFallback
        )
      );
    } else if (vElse = findDir(
      slotElement,
      /^else(?:-if)?$/,
      true
      /* allowEmpty */
    )) {
      let j = i;
      let prev;
      while (j--) {
        prev = children[j];
        if (prev.type !== 3 && isNonWhitespaceContent(prev)) {
          break;
        }
      }
      if (prev && isTemplateNode(prev) && findDir(prev, /^(?:else-)?if$/)) {
        let conditional = dynamicSlots[dynamicSlots.length - 1];
        while (conditional.alternate.type === 19) {
          conditional = conditional.alternate;
        }
        conditional.alternate = vElse.exp ? createConditionalExpression(
          vElse.exp,
          buildDynamicSlot(
            slotName,
            slotFunction,
            conditionalBranchIndex++
          ),
          defaultFallback
        ) : buildDynamicSlot(slotName, slotFunction, conditionalBranchIndex++);
      } else {
        context.onError(
          createCompilerError(30, vElse.loc)
        );
      }
    } else if (vFor) {
      hasDynamicSlots = true;
      const parseResult = vFor.forParseResult;
      if (parseResult) {
        finalizeForParseResult(parseResult);
        dynamicSlots.push(
          createCallExpression(context.helper(RENDER_LIST), [
            parseResult.source,
            createFunctionExpression(
              createForLoopParams(parseResult),
              buildDynamicSlot(slotName, slotFunction),
              true
            )
          ])
        );
      } else {
        context.onError(
          createCompilerError(
            32,
            vFor.loc
          )
        );
      }
    } else {
      if (staticSlotName) {
        if (seenSlotNames.has(staticSlotName)) {
          context.onError(
            createCompilerError(
              38,
              dirLoc
            )
          );
          continue;
        }
        seenSlotNames.add(staticSlotName);
        if (staticSlotName === "default") {
          hasNamedDefaultSlot = true;
        }
      }
      slotsProperties.push(createObjectProperty(slotName, slotFunction));
    }
  }
  if (!onComponentSlot) {
    const buildDefaultSlotProperty = (props, children2) => {
      const fn2 = buildSlotFn(props, void 0, children2, loc);
      if (context.compatConfig) {
        fn2.isNonScopedSlot = true;
      }
      return createObjectProperty(`default`, fn2);
    };
    if (!hasTemplateSlots) {
      slotsProperties.push(buildDefaultSlotProperty(void 0, children));
    } else if (implicitDefaultChildren.length && // #3766
    // with whitespace: 'preserve', whitespaces between slots will end up in
    // implicitDefaultChildren. Ignore if all implicit children are whitespaces.
    implicitDefaultChildren.some((node2) => isNonWhitespaceContent(node2))) {
      if (hasNamedDefaultSlot) {
        context.onError(
          createCompilerError(
            39,
            implicitDefaultChildren[0].loc
          )
        );
      } else {
        slotsProperties.push(
          buildDefaultSlotProperty(void 0, implicitDefaultChildren)
        );
      }
    }
  }
  const slotFlag = hasDynamicSlots ? 2 : hasForwardedSlots(node.children) ? 3 : 1;
  let slots = createObjectExpression(
    slotsProperties.concat(
      createObjectProperty(
        `_`,
        // 2 = compiled but dynamic = can skip normalization, but must run diff
        // 1 = compiled and static = can skip normalization AND diff as optimized
        createSimpleExpression(
          slotFlag + ``,
          false
        )
      )
    ),
    loc
  );
  if (dynamicSlots.length) {
    slots = createCallExpression(context.helper(CREATE_SLOTS), [
      slots,
      createArrayExpression(dynamicSlots)
    ]);
  }
  return {
    slots,
    hasDynamicSlots
  };
}
function buildDynamicSlot(name, fn2, index) {
  const props = [
    createObjectProperty(`name`, name),
    createObjectProperty(`fn`, fn2)
  ];
  if (index != null) {
    props.push(
      createObjectProperty(`key`, createSimpleExpression(String(index), true))
    );
  }
  return createObjectExpression(props);
}
function hasForwardedSlots(children) {
  for (let i = 0; i < children.length; i++) {
    const child = children[i];
    switch (child.type) {
      case 1:
        if (child.tagType === 2 || hasForwardedSlots(child.children)) {
          return true;
        }
        break;
      case 9:
        if (hasForwardedSlots(child.branches)) return true;
        break;
      case 10:
      case 11:
        if (hasForwardedSlots(child.children)) return true;
        break;
    }
  }
  return false;
}
function isNonWhitespaceContent(node) {
  if (node.type !== 2 && node.type !== 12)
    return true;
  return node.type === 2 ? !!node.content.trim() : isNonWhitespaceContent(node.content);
}
const directiveImportMap = /* @__PURE__ */ new WeakMap();
const transformElement = (node, context) => {
  return function postTransformElement() {
    node = context.currentNode;
    if (!(node.type === 1 && (node.tagType === 0 || node.tagType === 1))) {
      return;
    }
    const { tag, props } = node;
    const isComponent2 = node.tagType === 1;
    let vnodeTag = isComponent2 ? resolveComponentType(node, context) : `"${tag}"`;
    const isDynamicComponent = isObject(vnodeTag) && vnodeTag.callee === RESOLVE_DYNAMIC_COMPONENT;
    let vnodeProps;
    let vnodeChildren;
    let patchFlag = 0;
    let vnodeDynamicProps;
    let dynamicPropNames;
    let vnodeDirectives;
    let shouldUseBlock = (
      // dynamic component may resolve to plain elements
      isDynamicComponent || vnodeTag === TELEPORT || vnodeTag === SUSPENSE || !isComponent2 && // <svg> and <foreignObject> must be forced into blocks so that block
      // updates inside get proper isSVG flag at runtime. (#639, #643)
      // This is technically web-specific, but splitting the logic out of core
      // leads to too much unnecessary complexity.
      (tag === "svg" || tag === "foreignObject" || tag === "math")
    );
    if (props.length > 0) {
      const propsBuildResult = buildProps(
        node,
        context,
        void 0,
        isComponent2,
        isDynamicComponent
      );
      vnodeProps = propsBuildResult.props;
      patchFlag = propsBuildResult.patchFlag;
      dynamicPropNames = propsBuildResult.dynamicPropNames;
      const directives = propsBuildResult.directives;
      vnodeDirectives = directives && directives.length ? createArrayExpression(
        directives.map((dir) => buildDirectiveArgs(dir, context))
      ) : void 0;
      if (propsBuildResult.shouldUseBlock) {
        shouldUseBlock = true;
      }
    }
    if (node.children.length > 0) {
      if (vnodeTag === KEEP_ALIVE) {
        shouldUseBlock = true;
        patchFlag |= 1024;
      }
      const shouldBuildAsSlots = isComponent2 && // Teleport is not a real component and has dedicated runtime handling
      vnodeTag !== TELEPORT && // explained above.
      vnodeTag !== KEEP_ALIVE;
      if (shouldBuildAsSlots) {
        const { slots, hasDynamicSlots } = buildSlots(node, context);
        vnodeChildren = slots;
        if (hasDynamicSlots) {
          patchFlag |= 1024;
        }
      } else if (node.children.length === 1 && vnodeTag !== TELEPORT) {
        const child = node.children[0];
        const type = child.type;
        const hasDynamicTextChild = type === 5 || type === 8;
        if (hasDynamicTextChild && getConstantType(child, context) === 0) {
          patchFlag |= 1;
        }
        if (hasDynamicTextChild || type === 2) {
          vnodeChildren = child;
        } else {
          vnodeChildren = node.children;
        }
      } else {
        vnodeChildren = node.children;
      }
    }
    if (dynamicPropNames && dynamicPropNames.length) {
      vnodeDynamicProps = stringifyDynamicPropNames(dynamicPropNames);
    }
    node.codegenNode = createVNodeCall(
      context,
      vnodeTag,
      vnodeProps,
      vnodeChildren,
      patchFlag === 0 ? void 0 : patchFlag,
      vnodeDynamicProps,
      vnodeDirectives,
      !!shouldUseBlock,
      false,
      isComponent2,
      node.loc
    );
  };
};
function resolveComponentType(node, context, ssr = false) {
  let { tag } = node;
  const isExplicitDynamic = isComponentTag(tag);
  const isProp = findProp(
    node,
    "is",
    false,
    true
    /* allow empty */
  );
  if (isProp) {
    if (isExplicitDynamic || isCompatEnabled(
      "COMPILER_IS_ON_ELEMENT",
      context
    )) {
      let exp;
      if (isProp.type === 6) {
        exp = isProp.value && createSimpleExpression(isProp.value.content, true);
      } else {
        exp = isProp.exp;
        if (!exp) {
          exp = createSimpleExpression(`is`, false, isProp.arg.loc);
        }
      }
      if (exp) {
        return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [
          exp
        ]);
      }
    } else if (isProp.type === 6 && isProp.value.content.startsWith("vue:")) {
      tag = isProp.value.content.slice(4);
    }
  }
  const builtIn = isCoreComponent(tag) || context.isBuiltInComponent(tag);
  if (builtIn) {
    if (!ssr) context.helper(builtIn);
    return builtIn;
  }
  context.helper(RESOLVE_COMPONENT);
  context.components.add(tag);
  return toValidAssetId(tag, `component`);
}
function buildProps(node, context, props = node.props, isComponent2, isDynamicComponent, ssr = false) {
  const { tag, loc: elementLoc, children } = node;
  let properties = [];
  const mergeArgs = [];
  const runtimeDirectives = [];
  const hasChildren = children.length > 0;
  let shouldUseBlock = false;
  let patchFlag = 0;
  let hasRef = false;
  let hasClassBinding = false;
  let hasStyleBinding = false;
  let hasHydrationEventBinding = false;
  let hasDynamicKeys = false;
  let hasVnodeHook = false;
  const dynamicPropNames = [];
  const pushMergeArg = (arg) => {
    if (properties.length) {
      mergeArgs.push(
        createObjectExpression(dedupeProperties(properties), elementLoc)
      );
      properties = [];
    }
    if (arg) mergeArgs.push(arg);
  };
  const pushRefVForMarker = () => {
    if (context.scopes.vFor > 0) {
      properties.push(
        createObjectProperty(
          createSimpleExpression("ref_for", true),
          createSimpleExpression("true")
        )
      );
    }
  };
  const analyzePatchFlag = ({ key, value }) => {
    if (isStaticExp(key)) {
      const name = key.content;
      const isEventHandler = isOn(name);
      if (isEventHandler && (!isComponent2 || isDynamicComponent) && // omit the flag for click handlers because hydration gives click
      // dedicated fast path.
      name.toLowerCase() !== "onclick" && // omit v-model handlers
      name !== "onUpdate:modelValue" && // omit onVnodeXXX hooks
      !isReservedProp(name)) {
        hasHydrationEventBinding = true;
      }
      if (isEventHandler && isReservedProp(name)) {
        hasVnodeHook = true;
      }
      if (isEventHandler && value.type === 14) {
        value = value.arguments[0];
      }
      if (value.type === 20 || (value.type === 4 || value.type === 8) && getConstantType(value, context) > 0) {
        return;
      }
      if (name === "ref") {
        hasRef = true;
      } else if (name === "class") {
        hasClassBinding = true;
      } else if (name === "style") {
        hasStyleBinding = true;
      } else if (name !== "key" && !dynamicPropNames.includes(name)) {
        dynamicPropNames.push(name);
      }
      if (isComponent2 && (name === "class" || name === "style") && !dynamicPropNames.includes(name)) {
        dynamicPropNames.push(name);
      }
    } else {
      hasDynamicKeys = true;
    }
  };
  for (let i = 0; i < props.length; i++) {
    const prop = props[i];
    if (prop.type === 6) {
      const { loc, name, nameLoc, value } = prop;
      let isStatic = true;
      if (name === "ref") {
        hasRef = true;
        pushRefVForMarker();
      }
      if (name === "is" && (isComponentTag(tag) || value && value.content.startsWith("vue:") || isCompatEnabled(
        "COMPILER_IS_ON_ELEMENT",
        context
      ))) {
        continue;
      }
      properties.push(
        createObjectProperty(
          createSimpleExpression(name, true, nameLoc),
          createSimpleExpression(
            value ? value.content : "",
            isStatic,
            value ? value.loc : loc
          )
        )
      );
    } else {
      const { name, arg, exp, loc, modifiers } = prop;
      const isVBind = name === "bind";
      const isVOn = name === "on";
      if (name === "slot") {
        if (!isComponent2) {
          context.onError(
            createCompilerError(40, loc)
          );
        }
        continue;
      }
      if (name === "once" || name === "memo") {
        continue;
      }
      if (name === "is" || isVBind && isStaticArgOf(arg, "is") && (isComponentTag(tag) || isCompatEnabled(
        "COMPILER_IS_ON_ELEMENT",
        context
      ))) {
        continue;
      }
      if (isVOn && ssr) {
        continue;
      }
      if (
        // #938: elements with dynamic keys should be forced into blocks
        isVBind && isStaticArgOf(arg, "key") || // inline before-update hooks need to force block so that it is invoked
        // before children
        isVOn && hasChildren && isStaticArgOf(arg, "vue:before-update")
      ) {
        shouldUseBlock = true;
      }
      if (isVBind && isStaticArgOf(arg, "ref")) {
        pushRefVForMarker();
      }
      if (!arg && (isVBind || isVOn)) {
        hasDynamicKeys = true;
        if (exp) {
          if (isVBind) {
            {
              pushMergeArg();
              if (isCompatEnabled(
                "COMPILER_V_BIND_OBJECT_ORDER",
                context
              )) {
                mergeArgs.unshift(exp);
                continue;
              }
            }
            pushRefVForMarker();
            pushMergeArg();
            mergeArgs.push(exp);
          } else {
            pushMergeArg({
              type: 14,
              loc,
              callee: context.helper(TO_HANDLERS),
              arguments: isComponent2 ? [exp] : [exp, `true`]
            });
          }
        } else {
          context.onError(
            createCompilerError(
              isVBind ? 34 : 35,
              loc
            )
          );
        }
        continue;
      }
      if (isVBind && modifiers.some((mod) => mod.content === "prop")) {
        patchFlag |= 32;
      }
      const directiveTransform = context.directiveTransforms[name];
      if (directiveTransform) {
        const { props: props2, needRuntime } = directiveTransform(prop, node, context);
        !ssr && props2.forEach(analyzePatchFlag);
        if (isVOn && arg && !isStaticExp(arg)) {
          pushMergeArg(createObjectExpression(props2, elementLoc));
        } else {
          properties.push(...props2);
        }
        if (needRuntime) {
          runtimeDirectives.push(prop);
          if (isSymbol(needRuntime)) {
            directiveImportMap.set(prop, needRuntime);
          }
        }
      } else if (!isBuiltInDirective(name)) {
        runtimeDirectives.push(prop);
        if (hasChildren) {
          shouldUseBlock = true;
        }
      }
    }
  }
  let propsExpression = void 0;
  if (mergeArgs.length) {
    pushMergeArg();
    if (mergeArgs.length > 1) {
      propsExpression = createCallExpression(
        context.helper(MERGE_PROPS),
        mergeArgs,
        elementLoc
      );
    } else {
      propsExpression = mergeArgs[0];
    }
  } else if (properties.length) {
    propsExpression = createObjectExpression(
      dedupeProperties(properties),
      elementLoc
    );
  }
  if (hasDynamicKeys) {
    patchFlag |= 16;
  } else {
    if (hasClassBinding && !isComponent2) {
      patchFlag |= 2;
    }
    if (hasStyleBinding && !isComponent2) {
      patchFlag |= 4;
    }
    if (dynamicPropNames.length) {
      patchFlag |= 8;
    }
    if (hasHydrationEventBinding) {
      patchFlag |= 32;
    }
  }
  if (!shouldUseBlock && (patchFlag === 0 || patchFlag === 32) && (hasRef || hasVnodeHook || runtimeDirectives.length > 0)) {
    patchFlag |= 512;
  }
  if (!context.inSSR && propsExpression) {
    switch (propsExpression.type) {
      case 15:
        let classKeyIndex = -1;
        let styleKeyIndex = -1;
        let hasDynamicKey = false;
        for (let i = 0; i < propsExpression.properties.length; i++) {
          const key = propsExpression.properties[i].key;
          if (isStaticExp(key)) {
            if (key.content === "class") {
              classKeyIndex = i;
            } else if (key.content === "style") {
              styleKeyIndex = i;
            }
          } else if (!key.isHandlerKey) {
            hasDynamicKey = true;
          }
        }
        const classProp = propsExpression.properties[classKeyIndex];
        const styleProp = propsExpression.properties[styleKeyIndex];
        if (!hasDynamicKey) {
          if (classProp && !isStaticExp(classProp.value)) {
            classProp.value = createCallExpression(
              context.helper(NORMALIZE_CLASS),
              [classProp.value]
            );
          }
          if (styleProp && // the static style is compiled into an object,
          // so use `hasStyleBinding` to ensure that it is a dynamic style binding
          (hasStyleBinding || styleProp.value.type === 4 && styleProp.value.content.trim()[0] === `[` || // v-bind:style and style both exist,
          // v-bind:style with static literal object
          styleProp.value.type === 17)) {
            styleProp.value = createCallExpression(
              context.helper(NORMALIZE_STYLE),
              [styleProp.value]
            );
          }
        } else {
          propsExpression = createCallExpression(
            context.helper(NORMALIZE_PROPS),
            [propsExpression]
          );
        }
        break;
      case 14:
        break;
      default:
        propsExpression = createCallExpression(
          context.helper(NORMALIZE_PROPS),
          [
            createCallExpression(context.helper(GUARD_REACTIVE_PROPS), [
              propsExpression
            ])
          ]
        );
        break;
    }
  }
  return {
    props: propsExpression,
    directives: runtimeDirectives,
    patchFlag,
    dynamicPropNames,
    shouldUseBlock
  };
}
function dedupeProperties(properties) {
  const knownProps = /* @__PURE__ */ new Map();
  const deduped = [];
  for (let i = 0; i < properties.length; i++) {
    const prop = properties[i];
    if (prop.key.type === 8 || !prop.key.isStatic) {
      deduped.push(prop);
      continue;
    }
    const name = prop.key.content;
    const existing = knownProps.get(name);
    if (existing) {
      if (name === "style" || name === "class" || isOn(name)) {
        mergeAsArray(existing, prop);
      }
    } else {
      knownProps.set(name, prop);
      deduped.push(prop);
    }
  }
  return deduped;
}
function mergeAsArray(existing, incoming) {
  if (existing.value.type === 17) {
    existing.value.elements.push(incoming.value);
  } else {
    existing.value = createArrayExpression(
      [existing.value, incoming.value],
      existing.loc
    );
  }
}
function buildDirectiveArgs(dir, context) {
  const dirArgs = [];
  const runtime = directiveImportMap.get(dir);
  if (runtime) {
    dirArgs.push(context.helperString(runtime));
  } else {
    {
      context.helper(RESOLVE_DIRECTIVE);
      context.directives.add(dir.name);
      dirArgs.push(toValidAssetId(dir.name, `directive`));
    }
  }
  const { loc } = dir;
  if (dir.exp) dirArgs.push(dir.exp);
  if (dir.arg) {
    if (!dir.exp) {
      dirArgs.push(`void 0`);
    }
    dirArgs.push(dir.arg);
  }
  if (Object.keys(dir.modifiers).length) {
    if (!dir.arg) {
      if (!dir.exp) {
        dirArgs.push(`void 0`);
      }
      dirArgs.push(`void 0`);
    }
    const trueExpression = createSimpleExpression(`true`, false, loc);
    dirArgs.push(
      createObjectExpression(
        dir.modifiers.map(
          (modifier) => createObjectProperty(modifier, trueExpression)
        ),
        loc
      )
    );
  }
  return createArrayExpression(dirArgs, dir.loc);
}
function stringifyDynamicPropNames(props) {
  let propsNamesString = `[`;
  for (let i = 0, l = props.length; i < l; i++) {
    propsNamesString += JSON.stringify(props[i]);
    if (i < l - 1) propsNamesString += ", ";
  }
  return propsNamesString + `]`;
}
function isComponentTag(tag) {
  return tag === "component" || tag === "Component";
}
const transformSlotOutlet = (node, context) => {
  if (isSlotOutlet(node)) {
    const { children, loc } = node;
    const { slotName, slotProps } = processSlotOutlet(node, context);
    const slotArgs = [
      context.prefixIdentifiers ? `_ctx.$slots` : `$slots`,
      slotName,
      "{}",
      "undefined",
      "true"
    ];
    let expectedLen = 2;
    if (slotProps) {
      slotArgs[2] = slotProps;
      expectedLen = 3;
    }
    if (children.length) {
      slotArgs[3] = createFunctionExpression([], children, false, false, loc);
      expectedLen = 4;
    }
    if (context.scopeId && !context.slotted) {
      expectedLen = 5;
    }
    slotArgs.splice(expectedLen);
    node.codegenNode = createCallExpression(
      context.helper(RENDER_SLOT),
      slotArgs,
      loc
    );
  }
};
function processSlotOutlet(node, context) {
  let slotName = `"default"`;
  let slotProps = void 0;
  const nonNameProps = [];
  for (let i = 0; i < node.props.length; i++) {
    const p5 = node.props[i];
    if (p5.type === 6) {
      if (p5.value) {
        if (p5.name === "name") {
          slotName = JSON.stringify(p5.value.content);
        } else {
          p5.name = camelize(p5.name);
          nonNameProps.push(p5);
        }
      }
    } else {
      if (p5.name === "bind" && isStaticArgOf(p5.arg, "name")) {
        if (p5.exp) {
          slotName = p5.exp;
        } else if (p5.arg && p5.arg.type === 4) {
          const name = camelize(p5.arg.content);
          slotName = p5.exp = createSimpleExpression(name, false, p5.arg.loc);
        }
      } else {
        if (p5.name === "bind" && p5.arg && isStaticExp(p5.arg)) {
          p5.arg.content = camelize(p5.arg.content);
        }
        nonNameProps.push(p5);
      }
    }
  }
  if (nonNameProps.length > 0) {
    const { props, directives } = buildProps(
      node,
      context,
      nonNameProps,
      false,
      false
    );
    slotProps = props;
    if (directives.length) {
      context.onError(
        createCompilerError(
          36,
          directives[0].loc
        )
      );
    }
  }
  return {
    slotName,
    slotProps
  };
}
const transformOn$1 = (dir, node, context, augmentor) => {
  const { loc, modifiers, arg } = dir;
  if (!dir.exp && !modifiers.length) {
    context.onError(createCompilerError(35, loc));
  }
  let eventName;
  if (arg.type === 4) {
    if (arg.isStatic) {
      let rawName = arg.content;
      if (rawName.startsWith("vue:")) {
        rawName = `vnode-${rawName.slice(4)}`;
      }
      const eventString = node.tagType !== 0 || rawName.startsWith("vnode") || !/[A-Z]/.test(rawName) ? (
        // for non-element and vnode lifecycle event listeners, auto convert
        // it to camelCase. See issue #2249
        toHandlerKey(camelize(rawName))
      ) : (
        // preserve case for plain element listeners that have uppercase
        // letters, as these may be custom elements' custom events
        `on:${rawName}`
      );
      eventName = createSimpleExpression(eventString, true, arg.loc);
    } else {
      eventName = createCompoundExpression([
        `${context.helperString(TO_HANDLER_KEY)}(`,
        arg,
        `)`
      ]);
    }
  } else {
    eventName = arg;
    eventName.children.unshift(`${context.helperString(TO_HANDLER_KEY)}(`);
    eventName.children.push(`)`);
  }
  let exp = dir.exp;
  if (exp && !exp.content.trim()) {
    exp = void 0;
  }
  let shouldCache = context.cacheHandlers && !exp && !context.inVOnce;
  if (exp) {
    const isMemberExp = isMemberExpression(exp);
    const isInlineStatement = !(isMemberExp || isFnExpression(exp));
    const hasMultipleStatements = exp.content.includes(`;`);
    if (isInlineStatement || shouldCache && isMemberExp) {
      exp = createCompoundExpression([
        `${isInlineStatement ? `$event` : `${``}(...args)`} => ${hasMultipleStatements ? `{` : `(`}`,
        exp,
        hasMultipleStatements ? `}` : `)`
      ]);
    }
  }
  let ret = {
    props: [
      createObjectProperty(
        eventName,
        exp || createSimpleExpression(`() => {}`, false, loc)
      )
    ]
  };
  if (augmentor) {
    ret = augmentor(ret);
  }
  if (shouldCache) {
    ret.props[0].value = context.cache(ret.props[0].value);
  }
  ret.props.forEach((p5) => p5.key.isHandlerKey = true);
  return ret;
};
const transformText = (node, context) => {
  if (node.type === 0 || node.type === 1 || node.type === 11 || node.type === 10) {
    return () => {
      const children = node.children;
      let currentContainer = void 0;
      let hasText = false;
      for (let i = 0; i < children.length; i++) {
        const child = children[i];
        if (isText$1(child)) {
          hasText = true;
          for (let j = i + 1; j < children.length; j++) {
            const next = children[j];
            if (isText$1(next)) {
              if (!currentContainer) {
                currentContainer = children[i] = createCompoundExpression(
                  [child],
                  child.loc
                );
              }
              currentContainer.children.push(` + `, next);
              children.splice(j, 1);
              j--;
            } else {
              currentContainer = void 0;
              break;
            }
          }
        }
      }
      if (!hasText || // if this is a plain element with a single text child, leave it
      // as-is since the runtime has dedicated fast path for this by directly
      // setting textContent of the element.
      // for component root it's always normalized anyway.
      children.length === 1 && (node.type === 0 || node.type === 1 && node.tagType === 0 && // #3756
      // custom directives can potentially add DOM elements arbitrarily,
      // we need to avoid setting textContent of the element at runtime
      // to avoid accidentally overwriting the DOM elements added
      // by the user through custom directives.
      !node.props.find(
        (p5) => p5.type === 7 && !context.directiveTransforms[p5.name]
      ) && // in compat mode, <template> tags with no special directives
      // will be rendered as a fragment so its children must be
      // converted into vnodes.
      !(node.tag === "template"))) {
        return;
      }
      for (let i = 0; i < children.length; i++) {
        const child = children[i];
        if (isText$1(child) || child.type === 8) {
          const callArgs = [];
          if (child.type !== 2 || child.content !== " ") {
            callArgs.push(child);
          }
          if (!context.ssr && getConstantType(child, context) === 0) {
            callArgs.push(
              `1`
            );
          }
          children[i] = {
            type: 12,
            content: child,
            loc: child.loc,
            codegenNode: createCallExpression(
              context.helper(CREATE_TEXT),
              callArgs
            )
          };
        }
      }
    };
  }
};
const seen$1 = /* @__PURE__ */ new WeakSet();
const transformOnce = (node, context) => {
  if (node.type === 1 && findDir(node, "once", true)) {
    if (seen$1.has(node) || context.inVOnce || context.inSSR) {
      return;
    }
    seen$1.add(node);
    context.inVOnce = true;
    context.helper(SET_BLOCK_TRACKING);
    return () => {
      context.inVOnce = false;
      const cur = context.currentNode;
      if (cur.codegenNode) {
        cur.codegenNode = context.cache(
          cur.codegenNode,
          true,
          true
        );
      }
    };
  }
};
const transformModel$1 = (dir, node, context) => {
  const { exp, arg } = dir;
  if (!exp) {
    context.onError(
      createCompilerError(41, dir.loc)
    );
    return createTransformProps();
  }
  const rawExp = exp.loc.source.trim();
  const expString = exp.type === 4 ? exp.content : rawExp;
  const bindingType = context.bindingMetadata[rawExp];
  if (bindingType === "props" || bindingType === "props-aliased") {
    context.onError(createCompilerError(44, exp.loc));
    return createTransformProps();
  }
  if (!expString.trim() || !isMemberExpression(exp) && true) {
    context.onError(
      createCompilerError(42, exp.loc)
    );
    return createTransformProps();
  }
  const propName = arg ? arg : createSimpleExpression("modelValue", true);
  const eventName = arg ? isStaticExp(arg) ? `onUpdate:${camelize(arg.content)}` : createCompoundExpression(['"onUpdate:" + ', arg]) : `onUpdate:modelValue`;
  let assignmentExp;
  const eventArg = context.isTS ? `($event: any)` : `$event`;
  {
    assignmentExp = createCompoundExpression([
      `${eventArg} => ((`,
      exp,
      `) = $event)`
    ]);
  }
  const props = [
    // modelValue: foo
    createObjectProperty(propName, dir.exp),
    // "onUpdate:modelValue": $event => (foo = $event)
    createObjectProperty(eventName, assignmentExp)
  ];
  if (dir.modifiers.length && node.tagType === 1) {
    const modifiers = dir.modifiers.map((m) => m.content).map((m) => (isSimpleIdentifier(m) ? m : JSON.stringify(m)) + `: true`).join(`, `);
    const modifiersKey = arg ? isStaticExp(arg) ? `${arg.content}Modifiers` : createCompoundExpression([arg, ' + "Modifiers"']) : `modelModifiers`;
    props.push(
      createObjectProperty(
        modifiersKey,
        createSimpleExpression(
          `{ ${modifiers} }`,
          false,
          dir.loc,
          2
        )
      )
    );
  }
  return createTransformProps(props);
};
function createTransformProps(props = []) {
  return { props };
}
const validDivisionCharRE = /[\w).+\-_$\]]/;
const transformFilter = (node, context) => {
  if (!isCompatEnabled("COMPILER_FILTERS", context)) {
    return;
  }
  if (node.type === 5) {
    rewriteFilter(node.content, context);
  } else if (node.type === 1) {
    node.props.forEach((prop) => {
      if (prop.type === 7 && prop.name !== "for" && prop.exp) {
        rewriteFilter(prop.exp, context);
      }
    });
  }
};
function rewriteFilter(node, context) {
  if (node.type === 4) {
    parseFilter(node, context);
  } else {
    for (let i = 0; i < node.children.length; i++) {
      const child = node.children[i];
      if (typeof child !== "object") continue;
      if (child.type === 4) {
        parseFilter(child, context);
      } else if (child.type === 8) {
        rewriteFilter(node, context);
      } else if (child.type === 5) {
        rewriteFilter(child.content, context);
      }
    }
  }
}
function parseFilter(node, context) {
  const exp = node.content;
  let inSingle = false;
  let inDouble = false;
  let inTemplateString = false;
  let inRegex = false;
  let curly = 0;
  let square = 0;
  let paren = 0;
  let lastFilterIndex = 0;
  let c, prev, i, expression, filters = [];
  for (i = 0; i < exp.length; i++) {
    prev = c;
    c = exp.charCodeAt(i);
    if (inSingle) {
      if (c === 39 && prev !== 92) inSingle = false;
    } else if (inDouble) {
      if (c === 34 && prev !== 92) inDouble = false;
    } else if (inTemplateString) {
      if (c === 96 && prev !== 92) inTemplateString = false;
    } else if (inRegex) {
      if (c === 47 && prev !== 92) inRegex = false;
    } else if (c === 124 && // pipe
    exp.charCodeAt(i + 1) !== 124 && exp.charCodeAt(i - 1) !== 124 && !curly && !square && !paren) {
      if (expression === void 0) {
        lastFilterIndex = i + 1;
        expression = exp.slice(0, i).trim();
      } else {
        pushFilter();
      }
    } else {
      switch (c) {
        case 34:
          inDouble = true;
          break;
        // "
        case 39:
          inSingle = true;
          break;
        // '
        case 96:
          inTemplateString = true;
          break;
        // `
        case 40:
          paren++;
          break;
        // (
        case 41:
          paren--;
          break;
        // )
        case 91:
          square++;
          break;
        // [
        case 93:
          square--;
          break;
        // ]
        case 123:
          curly++;
          break;
        // {
        case 125:
          curly--;
          break;
      }
      if (c === 47) {
        let j = i - 1;
        let p5;
        for (; j >= 0; j--) {
          p5 = exp.charAt(j);
          if (p5 !== " ") break;
        }
        if (!p5 || !validDivisionCharRE.test(p5)) {
          inRegex = true;
        }
      }
    }
  }
  if (expression === void 0) {
    expression = exp.slice(0, i).trim();
  } else if (lastFilterIndex !== 0) {
    pushFilter();
  }
  function pushFilter() {
    filters.push(exp.slice(lastFilterIndex, i).trim());
    lastFilterIndex = i + 1;
  }
  if (filters.length) {
    for (i = 0; i < filters.length; i++) {
      expression = wrapFilter(expression, filters[i], context);
    }
    node.content = expression;
    node.ast = void 0;
  }
}
function wrapFilter(exp, filter, context) {
  context.helper(RESOLVE_FILTER);
  const i = filter.indexOf("(");
  if (i < 0) {
    context.filters.add(filter);
    return `${toValidAssetId(filter, "filter")}(${exp})`;
  } else {
    const name = filter.slice(0, i);
    const args = filter.slice(i + 1);
    context.filters.add(name);
    return `${toValidAssetId(name, "filter")}(${exp}${args !== ")" ? "," + args : args}`;
  }
}
const seen = /* @__PURE__ */ new WeakSet();
const transformMemo = (node, context) => {
  if (node.type === 1) {
    const dir = findDir(node, "memo");
    if (!dir || seen.has(node) || context.inSSR) {
      return;
    }
    seen.add(node);
    return () => {
      const codegenNode = node.codegenNode || context.currentNode.codegenNode;
      if (codegenNode && codegenNode.type === 13) {
        if (node.tagType !== 1) {
          convertToBlock(codegenNode, context);
        }
        node.codegenNode = createCallExpression(context.helper(WITH_MEMO), [
          dir.exp,
          createFunctionExpression(void 0, codegenNode),
          `_cache`,
          String(context.cached.length)
        ]);
        context.cached.push(null);
      }
    };
  }
};
function getBaseTransformPreset(prefixIdentifiers) {
  return [
    [
      transformOnce,
      transformIf,
      transformMemo,
      transformFor,
      ...[transformFilter],
      ...[],
      transformSlotOutlet,
      transformElement,
      trackSlotScopes,
      transformText
    ],
    {
      on: transformOn$1,
      bind: transformBind,
      model: transformModel$1
    }
  ];
}
function baseCompile(source, options = {}) {
  const onError = options.onError || defaultOnError;
  const isModuleMode = options.mode === "module";
  {
    if (options.prefixIdentifiers === true) {
      onError(createCompilerError(47));
    } else if (isModuleMode) {
      onError(createCompilerError(48));
    }
  }
  const prefixIdentifiers = false;
  if (options.cacheHandlers) {
    onError(createCompilerError(49));
  }
  if (options.scopeId && !isModuleMode) {
    onError(createCompilerError(50));
  }
  const resolvedOptions = extend({}, options, {
    prefixIdentifiers
  });
  const ast = isString(source) ? baseParse(source, resolvedOptions) : source;
  const [nodeTransforms, directiveTransforms] = getBaseTransformPreset();
  transform(
    ast,
    extend({}, resolvedOptions, {
      nodeTransforms: [
        ...nodeTransforms,
        ...options.nodeTransforms || []
        // user transforms
      ],
      directiveTransforms: extend(
        {},
        directiveTransforms,
        options.directiveTransforms || {}
        // user transforms
      )
    })
  );
  return generate(ast, resolvedOptions);
}
const noopDirectiveTransform = () => ({ props: [] });
/**
* @vue/compiler-dom v3.5.21
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/
const V_MODEL_RADIO = Symbol(``);
const V_MODEL_CHECKBOX = Symbol(
  ``
);
const V_MODEL_TEXT = Symbol(``);
const V_MODEL_SELECT = Symbol(
  ``
);
const V_MODEL_DYNAMIC = Symbol(
  ``
);
const V_ON_WITH_MODIFIERS = Symbol(
  ``
);
const V_ON_WITH_KEYS = Symbol(
  ``
);
const V_SHOW = Symbol(``);
const TRANSITION = Symbol(``);
const TRANSITION_GROUP = Symbol(
  ``
);
registerRuntimeHelpers({
  [V_MODEL_RADIO]: `vModelRadio`,
  [V_MODEL_CHECKBOX]: `vModelCheckbox`,
  [V_MODEL_TEXT]: `vModelText`,
  [V_MODEL_SELECT]: `vModelSelect`,
  [V_MODEL_DYNAMIC]: `vModelDynamic`,
  [V_ON_WITH_MODIFIERS]: `withModifiers`,
  [V_ON_WITH_KEYS]: `withKeys`,
  [V_SHOW]: `vShow`,
  [TRANSITION]: `Transition`,
  [TRANSITION_GROUP]: `TransitionGroup`
});
let decoder;
function decodeHtmlBrowser(raw, asAttr = false) {
  if (!decoder) {
    decoder = document.createElement("div");
  }
  if (asAttr) {
    decoder.innerHTML = `<div foo="${raw.replace(/"/g, "&quot;")}">`;
    return decoder.children[0].getAttribute("foo");
  } else {
    decoder.innerHTML = raw;
    return decoder.textContent;
  }
}
const parserOptions = {
  parseMode: "html",
  isVoidTag,
  isNativeTag: (tag) => isHTMLTag(tag) || isSVGTag(tag) || isMathMLTag(tag),
  isPreTag: (tag) => tag === "pre",
  isIgnoreNewlineTag: (tag) => tag === "pre" || tag === "textarea",
  decodeEntities: decodeHtmlBrowser,
  isBuiltInComponent: (tag) => {
    if (tag === "Transition" || tag === "transition") {
      return TRANSITION;
    } else if (tag === "TransitionGroup" || tag === "transition-group") {
      return TRANSITION_GROUP;
    }
  },
  // https://html.spec.whatwg.org/multipage/parsing.html#tree-construction-dispatcher
  getNamespace(tag, parent, rootNamespace) {
    let ns2 = parent ? parent.ns : rootNamespace;
    if (parent && ns2 === 2) {
      if (parent.tag === "annotation-xml") {
        if (tag === "svg") {
          return 1;
        }
        if (parent.props.some(
          (a) => a.type === 6 && a.name === "encoding" && a.value != null && (a.value.content === "text/html" || a.value.content === "application/xhtml+xml")
        )) {
          ns2 = 0;
        }
      } else if (/^m(?:[ions]|text)$/.test(parent.tag) && tag !== "mglyph" && tag !== "malignmark") {
        ns2 = 0;
      }
    } else if (parent && ns2 === 1) {
      if (parent.tag === "foreignObject" || parent.tag === "desc" || parent.tag === "title") {
        ns2 = 0;
      }
    }
    if (ns2 === 0) {
      if (tag === "svg") {
        return 1;
      }
      if (tag === "math") {
        return 2;
      }
    }
    return ns2;
  }
};
const transformStyle = (node) => {
  if (node.type === 1) {
    node.props.forEach((p5, i) => {
      if (p5.type === 6 && p5.name === "style" && p5.value) {
        node.props[i] = {
          type: 7,
          name: `bind`,
          arg: createSimpleExpression(`style`, true, p5.loc),
          exp: parseInlineCSS(p5.value.content, p5.loc),
          modifiers: [],
          loc: p5.loc
        };
      }
    });
  }
};
const parseInlineCSS = (cssText, loc) => {
  const normalized = parseStringStyle(cssText);
  return createSimpleExpression(
    JSON.stringify(normalized),
    false,
    loc,
    3
  );
};
function createDOMCompilerError(code, loc) {
  return createCompilerError(
    code,
    loc
  );
}
const transformVHtml = (dir, node, context) => {
  const { exp, loc } = dir;
  if (!exp) {
    context.onError(
      createDOMCompilerError(53, loc)
    );
  }
  if (node.children.length) {
    context.onError(
      createDOMCompilerError(54, loc)
    );
    node.children.length = 0;
  }
  return {
    props: [
      createObjectProperty(
        createSimpleExpression(`innerHTML`, true, loc),
        exp || createSimpleExpression("", true)
      )
    ]
  };
};
const transformVText = (dir, node, context) => {
  const { exp, loc } = dir;
  if (!exp) {
    context.onError(
      createDOMCompilerError(55, loc)
    );
  }
  if (node.children.length) {
    context.onError(
      createDOMCompilerError(56, loc)
    );
    node.children.length = 0;
  }
  return {
    props: [
      createObjectProperty(
        createSimpleExpression(`textContent`, true),
        exp ? getConstantType(exp, context) > 0 ? exp : createCallExpression(
          context.helperString(TO_DISPLAY_STRING),
          [exp],
          loc
        ) : createSimpleExpression("", true)
      )
    ]
  };
};
const transformModel = (dir, node, context) => {
  const baseResult = transformModel$1(dir, node, context);
  if (!baseResult.props.length || node.tagType === 1) {
    return baseResult;
  }
  if (dir.arg) {
    context.onError(
      createDOMCompilerError(
        58,
        dir.arg.loc
      )
    );
  }
  const { tag } = node;
  const isCustomElement = context.isCustomElement(tag);
  if (tag === "input" || tag === "textarea" || tag === "select" || isCustomElement) {
    let directiveToUse = V_MODEL_TEXT;
    let isInvalidType = false;
    if (tag === "input" || isCustomElement) {
      const type = findProp(node, `type`);
      if (type) {
        if (type.type === 7) {
          directiveToUse = V_MODEL_DYNAMIC;
        } else if (type.value) {
          switch (type.value.content) {
            case "radio":
              directiveToUse = V_MODEL_RADIO;
              break;
            case "checkbox":
              directiveToUse = V_MODEL_CHECKBOX;
              break;
            case "file":
              isInvalidType = true;
              context.onError(
                createDOMCompilerError(
                  59,
                  dir.loc
                )
              );
              break;
          }
        }
      } else if (hasDynamicKeyVBind(node)) {
        directiveToUse = V_MODEL_DYNAMIC;
      } else ;
    } else if (tag === "select") {
      directiveToUse = V_MODEL_SELECT;
    } else ;
    if (!isInvalidType) {
      baseResult.needRuntime = context.helper(directiveToUse);
    }
  } else {
    context.onError(
      createDOMCompilerError(
        57,
        dir.loc
      )
    );
  }
  baseResult.props = baseResult.props.filter(
    (p5) => !(p5.key.type === 4 && p5.key.content === "modelValue")
  );
  return baseResult;
};
const isEventOptionModifier = /* @__PURE__ */ makeMap(`passive,once,capture`);
const isNonKeyModifier = /* @__PURE__ */ makeMap(
  // event propagation management
  `stop,prevent,self,ctrl,shift,alt,meta,exact,middle`
);
const maybeKeyModifier = /* @__PURE__ */ makeMap("left,right");
const isKeyboardEvent = /* @__PURE__ */ makeMap(`onkeyup,onkeydown,onkeypress`);
const resolveModifiers = (key, modifiers, context, loc) => {
  const keyModifiers = [];
  const nonKeyModifiers = [];
  const eventOptionModifiers = [];
  for (let i = 0; i < modifiers.length; i++) {
    const modifier = modifiers[i].content;
    if (modifier === "native" && checkCompatEnabled(
      "COMPILER_V_ON_NATIVE",
      context
    )) {
      eventOptionModifiers.push(modifier);
    } else if (isEventOptionModifier(modifier)) {
      eventOptionModifiers.push(modifier);
    } else {
      if (maybeKeyModifier(modifier)) {
        if (isStaticExp(key)) {
          if (isKeyboardEvent(key.content.toLowerCase())) {
            keyModifiers.push(modifier);
          } else {
            nonKeyModifiers.push(modifier);
          }
        } else {
          keyModifiers.push(modifier);
          nonKeyModifiers.push(modifier);
        }
      } else {
        if (isNonKeyModifier(modifier)) {
          nonKeyModifiers.push(modifier);
        } else {
          keyModifiers.push(modifier);
        }
      }
    }
  }
  return {
    keyModifiers,
    nonKeyModifiers,
    eventOptionModifiers
  };
};
const transformClick = (key, event) => {
  const isStaticClick = isStaticExp(key) && key.content.toLowerCase() === "onclick";
  return isStaticClick ? createSimpleExpression(event, true) : key.type !== 4 ? createCompoundExpression([
    `(`,
    key,
    `) === "onClick" ? "${event}" : (`,
    key,
    `)`
  ]) : key;
};
const transformOn = (dir, node, context) => {
  return transformOn$1(dir, node, context, (baseResult) => {
    const { modifiers } = dir;
    if (!modifiers.length) return baseResult;
    let { key, value: handlerExp } = baseResult.props[0];
    const { keyModifiers, nonKeyModifiers, eventOptionModifiers } = resolveModifiers(key, modifiers, context, dir.loc);
    if (nonKeyModifiers.includes("right")) {
      key = transformClick(key, `onContextmenu`);
    }
    if (nonKeyModifiers.includes("middle")) {
      key = transformClick(key, `onMouseup`);
    }
    if (nonKeyModifiers.length) {
      handlerExp = createCallExpression(context.helper(V_ON_WITH_MODIFIERS), [
        handlerExp,
        JSON.stringify(nonKeyModifiers)
      ]);
    }
    if (keyModifiers.length && // if event name is dynamic, always wrap with keys guard
    (!isStaticExp(key) || isKeyboardEvent(key.content.toLowerCase()))) {
      handlerExp = createCallExpression(context.helper(V_ON_WITH_KEYS), [
        handlerExp,
        JSON.stringify(keyModifiers)
      ]);
    }
    if (eventOptionModifiers.length) {
      const modifierPostfix = eventOptionModifiers.map(capitalize).join("");
      key = isStaticExp(key) ? createSimpleExpression(`${key.content}${modifierPostfix}`, true) : createCompoundExpression([`(`, key, `) + "${modifierPostfix}"`]);
    }
    return {
      props: [createObjectProperty(key, handlerExp)]
    };
  });
};
const transformShow = (dir, node, context) => {
  const { exp, loc } = dir;
  if (!exp) {
    context.onError(
      createDOMCompilerError(61, loc)
    );
  }
  return {
    props: [],
    needRuntime: context.helper(V_SHOW)
  };
};
const ignoreSideEffectTags = (node, context) => {
  if (node.type === 1 && node.tagType === 0 && (node.tag === "script" || node.tag === "style")) {
    context.removeNode();
  }
};
const DOMNodeTransforms = [
  transformStyle,
  ...[]
];
const DOMDirectiveTransforms = {
  cloak: noopDirectiveTransform,
  html: transformVHtml,
  text: transformVText,
  model: transformModel,
  // override compiler-core
  on: transformOn,
  // override compiler-core
  show: transformShow
};
function compile(src, options = {}) {
  return baseCompile(
    src,
    extend({}, parserOptions, options, {
      nodeTransforms: [
        // ignore <script> and <tag>
        // this is not put inside DOMNodeTransforms because that list is used
        // by compiler-ssr to generate vnode fallback branches
        ignoreSideEffectTags,
        ...DOMNodeTransforms,
        ...options.nodeTransforms || []
      ],
      directiveTransforms: extend(
        {},
        DOMDirectiveTransforms,
        options.directiveTransforms || {}
      ),
      transformHoist: null
    })
  );
}
/**
* vue v3.5.21
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/
const compileCache = /* @__PURE__ */ Object.create(null);
function compileToFunction(template, options) {
  if (!isString(template)) {
    if (template.nodeType) {
      template = template.innerHTML;
    } else {
      return NOOP;
    }
  }
  const key = genCacheKey(template, options);
  const cached = compileCache[key];
  if (cached) {
    return cached;
  }
  if (template[0] === "#") {
    const el2 = document.querySelector(template);
    template = el2 ? el2.innerHTML : ``;
  }
  const opts = extend(
    {
      hoistStatic: true,
      onError: void 0,
      onWarn: NOOP
    },
    options
  );
  if (!opts.isCustomElement && typeof customElements !== "undefined") {
    opts.isCustomElement = (tag) => !!customElements.get(tag);
  }
  const { code } = compile(template, opts);
  const render2 = new Function("Vue", code)(runtimeDom);
  render2._rc = true;
  return compileCache[key] = render2;
}
registerRuntimeCompiler(compileToFunction);
const { sanitizeStoryContextUpdate } = __STORYBOOK_MODULE_PREVIEW_API__;
var entry_preview_exports = {};
__export(entry_preview_exports, { applyDecorators: () => decorateStory, argTypesEnhancers: () => argTypesEnhancers, mount: () => mount, parameters: () => parameters$2, render: () => render, renderToCanvas: () => renderToCanvas });
var ARG_TYPE_SECTIONS = ["props", "events", "slots", "exposed", "expose"], extractArgTypes = (component) => {
  if (!at(component)) return null;
  let usedDocgenPlugin = "exposed" in component.__docgenInfo ? "vue-component-meta" : "vue-docgen-api", argTypes = {};
  return ARG_TYPE_SECTIONS.forEach((section) => {
    aa(component, section).forEach((extractedProp) => {
      let argType;
      if (usedDocgenPlugin === "vue-docgen-api") {
        let docgenInfo = extractedProp.docgenInfo;
        argType = extractFromVueDocgenApi(docgenInfo, section, extractedProp);
      } else {
        let docgenInfo = extractedProp.docgenInfo;
        argType = extractFromVueComponentMeta(docgenInfo, section);
      }
      if (!argType || argTypes[argType.name]) return;
      ["events", "expose", "exposed"].includes(section) && (argType.control = { disable: true }), argTypes[argType.name] = argType;
    });
  }), argTypes;
}, extractFromVueDocgenApi = (docgenInfo, section, extractedProp) => {
  let type, sbType;
  if (section === "events" && (type = docgenInfo.type?.names.join(), sbType = { name: "other", value: type ?? "", required: false }), section === "slots") {
    let slotBindings = docgenInfo.bindings?.filter((binding) => !!binding.name).map((binding) => `${binding.name}: ${binding.type?.name ?? "unknown"}`).join("; ");
    type = slotBindings ? `{ ${slotBindings} }` : void 0, sbType = { name: "other", value: type ?? "", required: false };
  }
  if (section === "props") {
    let propInfo = docgenInfo;
    if (type = propInfo.type?.name, sbType = extractedProp ? pe(extractedProp.docgenInfo) : { name: "other", value: type }, propInfo.type && "elements" in propInfo.type && Array.isArray(propInfo.type.elements) && propInfo.type.elements.length > 0) {
      let elements = propInfo.type.elements.map((i) => i.name);
      type === "Array" && (type = `${elements.length === 1 ? elements[0] : `(${elements.join(" | ")})`}[]`), type === "union" ? type = elements.join(" | ") : type === "intersection" && (type = elements.join(" & "));
    }
  }
  let required = "required" in docgenInfo ? docgenInfo.required ?? false : false;
  return { name: docgenInfo.name, description: docgenInfo.description, type: sbType ? { ...sbType, required } : { name: "other", value: type ?? "" }, table: { type: type ? { summary: type } : void 0, defaultValue: extractedProp?.propDef.defaultValue ?? void 0, jsDocTags: extractedProp?.propDef.jsDocTags, category: section } };
}, extractFromVueComponentMeta = (docgenInfo, section) => {
  if ("global" in docgenInfo && docgenInfo.global) return;
  let tableType = { summary: docgenInfo.type.replace(" | undefined", "") };
  if (section === "props") {
    let propInfo = docgenInfo, defaultValue = propInfo.default ? { summary: propInfo.default } : void 0;
    return { name: propInfo.name, description: formatDescriptionWithTags(propInfo.description, propInfo.tags), defaultValue, type: convertVueComponentMetaProp(propInfo), table: { type: tableType, defaultValue, category: section } };
  } else return { name: docgenInfo.name, description: "description" in docgenInfo ? docgenInfo.description : "", type: { name: "other", value: docgenInfo.type }, table: { type: tableType, category: section } };
}, convertVueComponentMetaProp = (propInfo) => {
  let schema = propInfo.schema, required = propInfo.required, fallbackSbType = { name: "other", value: propInfo.type, required }, KNOWN_SCHEMAS = ["string", "number", "function", "boolean", "symbol"];
  if (typeof schema == "string") return KNOWN_SCHEMAS.includes(schema) ? { name: schema, required } : fallbackSbType;
  switch (schema.kind) {
    case "enum": {
      let definedSchemas = schema.schema?.filter((item) => item !== "undefined") ?? [];
      return isBooleanSchema(definedSchemas) ? { name: "boolean", required } : isLiteralUnionSchema(definedSchemas) || isEnumSchema(definedSchemas) ? { name: "enum", value: definedSchemas.map((literal) => literal.replace(/"/g, "")), required } : definedSchemas.length === 1 ? convertVueComponentMetaProp({ schema: definedSchemas[0], type: propInfo.type, required }) : (definedSchemas.length > 2 && definedSchemas.includes("true") && definedSchemas.includes("false") && (definedSchemas = definedSchemas.filter((i) => i !== "true" && i !== "false"), definedSchemas.push("boolean")), { name: "union", value: definedSchemas.map((i) => convertVueComponentMetaProp(typeof i == "object" ? { schema: i, type: i.type, required: false } : { schema: i, type: i, required: false })), required });
    }
    case "array": {
      let definedSchemas = schema.schema?.filter((item) => item !== "undefined") ?? [];
      return definedSchemas.length === 0 ? fallbackSbType : definedSchemas.length === 1 ? { name: "array", value: convertVueComponentMetaProp({ schema: definedSchemas[0], type: propInfo.type, required: false }), required } : { name: "union", value: definedSchemas.map((i) => convertVueComponentMetaProp(typeof i == "object" ? { schema: i, type: i.type, required: false } : { schema: i, type: i, required: false })), required };
    }
    case "object":
      return { name: "object", value: {}, required };
    default:
      return fallbackSbType;
  }
}, formatDescriptionWithTags = (description, tags) => !tags?.length || !description ? description ?? "" : `${tags.map((tag) => `@${tag.name}: ${tag.text}`).join("<br>")}<br><br>${description}`, isLiteralUnionSchema = (schemas) => schemas.every((schema) => typeof schema == "string" && schema.startsWith('"') && schema.endsWith('"')), isEnumSchema = (schemas) => schemas.every((schema) => typeof schema == "string" && schema.includes(".")), isBooleanSchema = (schemas) => schemas.length === 2 && schemas.includes("true") && schemas.includes("false");
var render = (props, context) => {
  let { id, component: Component } = context;
  if (!Component) throw new Error(`Unable to render story ${id} as the component annotation is missing from the default export`);
  return () => h(Component, props, getSlots(props, context));
}, runSetupFunctions = async (app, storyContext) => {
  globalThis && globalThis.PLUGINS_SETUP_FUNCTIONS && await Promise.all([...globalThis.PLUGINS_SETUP_FUNCTIONS].map((fn2) => fn2(app, storyContext)));
}, map = /* @__PURE__ */ new Map();
async function renderToCanvas({ storyFn, forceRemount, showMain, showException, storyContext, id }, canvasElement) {
  let existingApp = map.get(canvasElement);
  if (existingApp && !forceRemount) {
    let element = storyFn(), args = getArgs(element, storyContext);
    return updateArgs(existingApp.reactiveArgs, args), () => {
      teardown(existingApp.vueApp, canvasElement);
    };
  }
  existingApp && forceRemount && teardown(existingApp.vueApp, canvasElement);
  let vueApp = createApp({ setup() {
    storyContext.args = reactive(storyContext.args);
    let rootElement = storyFn(), args = getArgs(rootElement, storyContext), appState = { vueApp, reactiveArgs: reactive(args) };
    return map.set(canvasElement, appState), () => h(rootElement);
  } });
  return vueApp.config.errorHandler = (e, instance, info) => {
    window.__STORYBOOK_PREVIEW__?.storyRenders.some((renderer2) => renderer2.id === id && renderer2.phase === "playing") ? setTimeout(() => {
      throw e;
    }, 0) : showException(e);
  }, await runSetupFunctions(vueApp, storyContext), vueApp.mount(canvasElement), showMain(), () => {
    teardown(vueApp, canvasElement);
  };
}
function getSlots(props, context) {
  let { argTypes } = context, slots = Object.entries(props).filter(([key]) => argTypes[key]?.table?.category === "slots").map(([key, value]) => [key, typeof value == "function" ? value : () => value]);
  return Object.fromEntries(slots);
}
function getArgs(element, storyContext) {
  return element.props && isVNode(element) ? element.props : storyContext.args;
}
function updateArgs(reactiveArgs, nextArgs) {
  if (Object.keys(nextArgs).length === 0) return;
  let currentArgs = isReactive(reactiveArgs) ? reactiveArgs : reactive(reactiveArgs);
  Object.keys(currentArgs).forEach((key) => {
    key in nextArgs || delete currentArgs[key];
  }), Object.assign(currentArgs, nextArgs);
}
function teardown(storybookApp, canvasElement) {
  storybookApp?.unmount(), map.has(canvasElement) && map.delete(canvasElement);
}
function normalizeFunctionalComponent(options) {
  return typeof options == "function" ? { render: options, name: options.name } : options;
}
function prepare(rawStory, innerStory) {
  let story = rawStory;
  return story === null ? null : typeof story == "function" ? story : innerStory ? { ...normalizeFunctionalComponent(story), components: { ...story.components || {}, story: innerStory } } : { render() {
    return h(story);
  } };
}
function decorateStory(storyFn, decorators2) {
  return decorators2.reduce((decorated, decorator) => (context) => {
    let story, decoratedStory = decorator((update) => {
      let sanitizedUpdate = sanitizeStoryContextUpdate(update);
      return update && (sanitizedUpdate.args = Object.assign(context.args, sanitizedUpdate.args)), story = decorated({ ...context, ...sanitizedUpdate }), story;
    }, context);
    return story || (story = decorated(context)), decoratedStory === story ? story : prepare(decoratedStory, () => h(story));
  }, (context) => prepare(storyFn(context)));
}
var mount = (context) => async (Component, options) => (Component && (context.originalStoryFn = () => () => h(Component, options?.props, options?.slots)), await context.renderToCanvas(), context.canvas);
var parameters$2 = { renderer: "vue3", docs: { story: { inline: true }, extractArgTypes, extractComponentDescription: ia } }, argTypesEnhancers = [ya];
const entry_preview_10550 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  applyDecorators: decorateStory,
  argTypesEnhancers,
  mount,
  parameters: parameters$2,
  render,
  renderToCanvas
}, Symbol.toStringTag, { value: "Module" }));
const { useEffect, emitTransformCode } = __STORYBOOK_MODULE_PREVIEW_API__;
var TRACKING_SYMBOL = Symbol("DEEP_ACCESS_SYMBOL"), isProxy = (obj) => !!(obj && typeof obj == "object" && TRACKING_SYMBOL in obj), sourceDecorator = (storyFn, ctx) => {
  let story = storyFn();
  return useEffect(() => {
    let sourceCode = generateSourceCode(ctx);
    shouldSkipSourceCodeGeneration(ctx) || emitTransformCode(sourceCode, ctx);
  }), story;
}, generateSourceCode = (ctx) => {
  let sourceCodeContext = { imports: {}, scriptVariables: {} }, { displayName, slotNames, eventNames } = parseDocgenInfo(ctx.component), props = generatePropsSourceCode(ctx.args, slotNames, eventNames, sourceCodeContext), slotSourceCode = generateSlotSourceCode(ctx.args, slotNames, sourceCodeContext), componentName = displayName || ctx.title.split("/").at(-1), templateCode = slotSourceCode ? `<${componentName} ${props}> ${slotSourceCode} </${componentName}>` : `<${componentName} ${props} />`, variablesCode = Object.entries(sourceCodeContext.scriptVariables).map(([name, value]) => `const ${name} = ${value};`).join(`

`), importsCode = Object.entries(sourceCodeContext.imports).map(([packageName, imports]) => `import { ${Array.from(imports.values()).sort().join(", ")} } from "${packageName}";`).join(`
`), template = `<template>
  ${templateCode}
</template>`;
  return !importsCode && !variablesCode ? template : `<script lang="ts" setup>
${importsCode ? `${importsCode}

${variablesCode}` : variablesCode}
<\/script>

${template}`;
}, shouldSkipSourceCodeGeneration = (context) => {
  let sourceParams = context?.parameters.docs?.source;
  return sourceParams?.type === Tn.DYNAMIC ? false : !context?.parameters.__isArgsStory || sourceParams?.code || sourceParams?.type === Tn.CODE;
}, parseDocgenInfo = (component) => {
  if (!component || !("__docgenInfo" in component) || !component.__docgenInfo || typeof component.__docgenInfo != "object") return { displayName: component?.__name, eventNames: [], slotNames: [] };
  let docgenInfo = component.__docgenInfo, displayName = "displayName" in docgenInfo && typeof docgenInfo.displayName == "string" ? docgenInfo.displayName : void 0, parseNames = (key) => !(key in docgenInfo) || !Array.isArray(docgenInfo[key]) ? [] : docgenInfo[key].map((i) => i && typeof i == "object" && "name" in i ? i.name : void 0).filter((i) => typeof i == "string");
  return { displayName: displayName || component.__name, slotNames: parseNames("slots").sort((a, b) => a === "default" ? -1 : b === "default" ? 1 : a.localeCompare(b)), eventNames: parseNames("events") };
}, generatePropsSourceCode = (args, slotNames, eventNames, ctx) => {
  let properties = [];
  Object.entries(args).forEach(([propName, value]) => {
    if (!slotNames.includes(propName) && value != null) switch (isProxy(value) && (value = value.toString()), typeof value) {
      case "string":
        if (value === "") return;
        properties.push({ name: propName, value: value.includes('"') ? `'${value}'` : `"${value}"`, templateFn: (name, propValue) => `${name}=${propValue}` });
        break;
      case "number":
        properties.push({ name: propName, value: value.toString(), templateFn: (name, propValue) => `:${name}="${propValue}"` });
        break;
      case "bigint":
        properties.push({ name: propName, value: `BigInt(${value.toString()})`, templateFn: (name, propValue) => `:${name}="${propValue}"` });
        break;
      case "boolean":
        properties.push({ name: propName, value: value ? "true" : "false", templateFn: (name, propValue) => propValue === "true" ? name : `:${name}="false"` });
        break;
      case "symbol":
        properties.push({ name: propName, value: `Symbol(${value.description ? `'${value.description}'` : ""})`, templateFn: (name, propValue) => `:${name}="${propValue}"` });
        break;
      case "object": {
        properties.push({ name: propName, value: formatObject(value ?? {}), templateFn: void 0 });
        break;
      }
    }
  }), properties.sort((a, b) => a.name.localeCompare(b.name));
  let props = [];
  return properties.forEach((prop) => {
    let isVModel = eventNames.includes(`update:${prop.name}`);
    if (!isVModel && prop.templateFn) {
      props.push(prop.templateFn(prop.name, prop.value));
      return;
    }
    let variableName = prop.name;
    if (variableName in ctx.scriptVariables) {
      let index = 1;
      do
        variableName = `${prop.name}${index}`, index++;
      while (variableName in ctx.scriptVariables);
    }
    if (!isVModel) {
      ctx.scriptVariables[variableName] = prop.value, props.push(`:${prop.name}="${variableName}"`);
      return;
    }
    ctx.scriptVariables[variableName] = `ref(${prop.value})`, ctx.imports.vue || (ctx.imports.vue = /* @__PURE__ */ new Set()), ctx.imports.vue.add("ref"), prop.name === "modelValue" ? props.push(`v-model="${variableName}"`) : props.push(`v-model:${prop.name}="${variableName}"`);
  }), props.join(" ");
}, generateSlotSourceCode = (args, slotNames, ctx) => {
  let slotSourceCodes = [];
  return slotNames.forEach((slotName) => {
    let arg = args[slotName];
    if (!arg) return;
    let slotContent = generateSlotChildrenSourceCode([arg], ctx);
    if (!slotContent) return;
    let slotBindings = typeof arg == "function" ? getFunctionParamNames(arg) : [];
    slotName === "default" && !slotBindings.length ? slotSourceCodes.push(slotContent) : slotSourceCodes.push(`<template ${slotBindingsToString(slotName, slotBindings)}>${slotContent}</template>`);
  }), slotSourceCodes.join(`

`);
}, generateSlotChildrenSourceCode = (children, ctx) => {
  let slotChildrenSourceCodes = [], generateSingleChildSourceCode = (child) => {
    if (isVNode(child)) return generateVNodeSourceCode(child, ctx);
    switch (typeof child) {
      case "string":
      case "number":
      case "boolean":
        return child.toString();
      case "object":
        return child === null ? "" : Array.isArray(child) ? child.map(generateSingleChildSourceCode).filter((code) => code !== "").join(`
`) : JSON.stringify(child);
      case "function": {
        let paramNames = getFunctionParamNames(child).filter((param) => !["{", "}"].includes(param)), proxied = {};
        paramNames.forEach((param) => {
          proxied[param] = new Proxy({ [TRACKING_SYMBOL]: true }, { get: (t, key) => key === TRACKING_SYMBOL ? t[TRACKING_SYMBOL] : [Symbol.toPrimitive, Symbol.toStringTag, "toString"].includes(key) ? () => `{{ ${param} }}` : key === "v-bind" ? `${param}` : `{{ ${param}.${key.toString()} }}`, ownKeys: () => ["v-bind"], getOwnPropertyDescriptor: () => ({ configurable: true, enumerable: true, value: param, writable: true }) });
        });
        let returnValue = child(proxied);
        return generateSlotChildrenSourceCode([returnValue], ctx).replaceAll(/ (\S+)="{{ (\S+) }}"/g, ' :$1="$2"');
      }
      case "bigint":
        return `{{ BigInt(${child.toString()}) }}`;
      default:
        return "";
    }
  };
  return children.forEach((child) => {
    let sourceCode = generateSingleChildSourceCode(child);
    sourceCode !== "" && slotChildrenSourceCodes.push(sourceCode);
  }), slotChildrenSourceCodes.join(`
`);
}, generateVNodeSourceCode = (vnode, ctx) => {
  let componentName = getVNodeName(vnode), childrenCode = "";
  typeof vnode.children == "string" ? childrenCode = vnode.children : Array.isArray(vnode.children) ? childrenCode = generateSlotChildrenSourceCode(vnode.children, ctx) : vnode.children && (childrenCode = generateSlotSourceCode(vnode.children, Object.keys(vnode.children).filter((i) => i !== "$stable"), ctx));
  let props = vnode.props ? generatePropsSourceCode(vnode.props, [], [], ctx) : "";
  return childrenCode ? `<${componentName}${props ? ` ${props}` : ""}>${childrenCode}</${componentName}>` : `<${componentName}${props ? ` ${props}` : ""} />`;
}, getVNodeName = (vnode) => {
  if (typeof vnode.type == "string") return vnode.type;
  if (typeof vnode.type == "object") {
    if ("name" in vnode.type && vnode.type.name) return vnode.type.name;
    if ("__name" in vnode.type && vnode.type.__name) return vnode.type.__name;
  }
  return "component";
}, getFunctionParamNames = (func) => {
  let STRIP_COMMENTS = /((\/\/.*$)|(\/\*[\s\S]*?\*\/))/gm, ARGUMENT_NAMES = /([^\s,]+)/g, fnStr = func.toString().replace(STRIP_COMMENTS, ""), result = fnStr.slice(fnStr.indexOf("(") + 1, fnStr.indexOf(")")).match(ARGUMENT_NAMES);
  return result ? result.flatMap((param) => {
    if (["{", "}"].includes(param)) return param;
    let nonMinifiedName = param.split(":")[0].trim();
    return nonMinifiedName.startsWith("{") ? ["{", nonMinifiedName.substring(1)] : param.endsWith("}") && !nonMinifiedName.endsWith("}") ? [nonMinifiedName, "}"] : nonMinifiedName;
  }) : [];
}, slotBindingsToString = (slotName, params) => params.length ? params.length === 1 ? `#${slotName}="${params[0]}"` : `#${slotName}="{ ${params.filter((i) => !["{", "}"].includes(i)).join(", ")} }"` : `#${slotName}`, formatObject = (obj) => Object.values(obj).every((value) => value == null || typeof value != "object") ? JSON.stringify(obj) : JSON.stringify(obj, null, 2);
var decorators = [sourceDecorator];
const entry_preview_docs_11020 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  decorators
}, Symbol.toStringTag, { value: "Module" }));
const { expect } = __STORYBOOK_MODULE_TEST__;
const { ElementA11yParameterError } = __STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS__;
const { global: global$1 } = __STORYBOOK_MODULE_GLOBAL__;
const { addons, waitForAnimations } = __STORYBOOK_MODULE_PREVIEW_API__;
var ADDON_ID = "storybook/a11y", PANEL_ID = `${ADDON_ID}/panel`;
var RESULT = `${ADDON_ID}/result`, REQUEST = `${ADDON_ID}/request`, RUNNING = `${ADDON_ID}/running`, ERROR = `${ADDON_ID}/error`, MANUAL = `${ADDON_ID}/manual`, SELECT = `${ADDON_ID}/select`;
var EVENTS = { RESULT, REQUEST, RUNNING, ERROR, MANUAL, SELECT };
var { document: document$1 } = global$1, withLinkPaths = (results, storyId) => {
  let pathname = document$1.location.pathname.replace(/iframe\.html$/, ""), enhancedResults = { ...results };
  return ["incomplete", "passes", "violations"].forEach((key) => {
    Array.isArray(results[key]) && (enhancedResults[key] = results[key].map((result) => ({ ...result, nodes: result.nodes.map((node, index) => {
      let id = `${key}.${result.id}.${index + 1}`, linkPath = `${pathname}?path=/story/${storyId}&addonPanel=${PANEL_ID}&a11ySelection=${id}`;
      return { id, ...node, linkPath };
    }) })));
  }), enhancedResults;
};
var { document: document2 } = global$1, channel = addons.getChannel(), DEFAULT_PARAMETERS = { config: {}, options: {} }, DISABLED_RULES = ["region"], queue = [], isRunning = false, runNext = async () => {
  if (queue.length === 0) {
    isRunning = false;
    return;
  }
  isRunning = true;
  let next = queue.shift();
  next && await next(), runNext();
}, run = async (input = DEFAULT_PARAMETERS, storyId) => {
  let axe = (await __vitePreload(async () => {
    const { default: __vite_default__ } = await import("./axe-bkyre2PD.js").then((n) => n.a);
    return { default: __vite_default__ };
  }, true ? __vite__mapDeps([17,2]) : void 0, import.meta.url))?.default || globalThis.axe, { config = {}, options = {} } = input;
  if (input.element) throw new ElementA11yParameterError();
  let context = { include: document2?.body, exclude: [".sb-wrapper", "#storybook-docs", "#storybook-highlights-root"] };
  if (input.context) {
    let hasInclude = typeof input.context == "object" && "include" in input.context && input.context.include !== void 0, hasExclude = typeof input.context == "object" && "exclude" in input.context && input.context.exclude !== void 0;
    hasInclude ? context.include = input.context.include : !hasInclude && !hasExclude && (context.include = input.context), hasExclude && (context.exclude = context.exclude.concat(input.context.exclude));
  }
  axe.reset();
  let configWithDefault = { ...config, rules: [...DISABLED_RULES.map((id) => ({ id, enabled: false })), ...config?.rules ?? []] };
  return axe.configure(configWithDefault), new Promise((resolve2, reject) => {
    let highlightsRoot = document2?.getElementById("storybook-highlights-root");
    highlightsRoot && (highlightsRoot.style.display = "none");
    let task = async () => {
      try {
        let result = await axe.run(context, options), resultWithLinks = withLinkPaths(result, storyId);
        resolve2(resultWithLinks);
      } catch (error) {
        reject(error);
      }
    };
    queue.push(task), isRunning || runNext(), highlightsRoot && (highlightsRoot.style.display = "");
  });
};
channel.on(EVENTS.MANUAL, async (storyId, input = DEFAULT_PARAMETERS) => {
  try {
    await waitForAnimations();
    let result = await run(input, storyId), resultJson = JSON.parse(JSON.stringify(result));
    channel.emit(EVENTS.RESULT, resultJson, storyId);
  } catch (error) {
    channel.emit(EVENTS.ERROR, error);
  }
});
function getIsVitestStandaloneRun() {
  try {
    return false;
  } catch {
    return false;
  }
}
var vitestMatchersExtended = false, afterEach = async ({ id: storyId, reporting, parameters: parameters2, globals, viewMode }) => {
  let a11yParameter = parameters2.a11y, a11yGlobals = globals.a11y, shouldRunEnvironmentIndependent = a11yParameter?.disable !== true && a11yParameter?.test !== "off" && a11yGlobals?.manual !== true, getMode = () => {
    switch (a11yParameter?.test) {
      case "todo":
        return "warning";
      case "error":
      default:
        return "failed";
    }
  };
  if (shouldRunEnvironmentIndependent && viewMode === "story") try {
    let result = await run(a11yParameter, storyId);
    if (result) {
      let hasViolations = (result?.violations.length ?? 0) > 0;
      if (reporting.addReport({ type: "a11y", version: 1, result, status: hasViolations ? getMode() : "passed" }), getIsVitestStandaloneRun() && hasViolations && getMode() === "failed") {
        if (!vitestMatchersExtended) {
          let { toHaveNoViolations } = await __vitePreload(async () => {
            const { toHaveNoViolations: toHaveNoViolations2 } = await import("./matchers-7Z3WT2CE-H-u2N6oT.js");
            return { toHaveNoViolations: toHaveNoViolations2 };
          }, true ? [] : void 0, import.meta.url);
          expect.extend({ toHaveNoViolations }), vitestMatchersExtended = true;
        }
        expect(result).toHaveNoViolations();
      }
    }
  } catch (e) {
    if (reporting.addReport({ type: "a11y", version: 1, result: { error: e }, status: "failed" }), getIsVitestStandaloneRun()) throw e;
  }
}, initialGlobals = { a11y: { manual: false } }, parameters$1 = { a11y: { test: "todo" } };
const preview_10435 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  afterEach,
  initialGlobals,
  parameters: parameters$1
}, Symbol.toStringTag, { value: "Module" }));
var excludeTags = Object.entries(globalThis.TAGS_OPTIONS ?? {}).reduce((acc, entry) => {
  let [tag, option] = entry;
  return option.excludeFromDocsStories && (acc[tag] = true), acc;
}, {}), parameters = { docs: { renderer: async () => {
  let { DocsRenderer } = await __vitePreload(() => import("./DocsRenderer-PQXLIZUC-D11oMOud.js"), true ? __vite__mapDeps([18,4,10,2,3]) : void 0, import.meta.url);
  return new DocsRenderer();
}, stories: { filter: (story) => (story.tags || []).filter((tag) => excludeTags[tag]).length === 0 && !story.parameters.docs?.disable } } };
const preview_10544 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  parameters
}, Symbol.toStringTag, { value: "Module" }));
const preview = {
  parameters: {
    controls: {
      matchers: {
        color: /(background|color)$/i,
        date: /Date$/i
      }
    }
  }
};
const preview_7584 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: preview
}, Symbol.toStringTag, { value: "Module" }));
Pwe();
const { composeConfigs, PreviewWeb } = __STORYBOOK_MODULE_PREVIEW_API__;
const getProjectAnnotations = (hmrPreviewAnnotationModules = []) => {
  const configs = [
    hmrPreviewAnnotationModules[0] ?? entry_preview_10550,
    hmrPreviewAnnotationModules[1] ?? entry_preview_docs_11020,
    hmrPreviewAnnotationModules[2] ?? preview_10435,
    hmrPreviewAnnotationModules[3] ?? preview_10544,
    hmrPreviewAnnotationModules[4] ?? preview_7584
  ];
  return composeConfigs(configs);
};
window.__STORYBOOK_PREVIEW__ = window.__STORYBOOK_PREVIEW__ || new PreviewWeb(importFn, getProjectAnnotations);
window.__STORYBOOK_STORY_STORE__ = window.__STORYBOOK_STORY_STORE__ || window.__STORYBOOK_PREVIEW__.storyStore;
export {
  Tn as T,
  createBaseVNode as a,
  createStaticVNode as b,
  createElementBlock as c,
  defineComponent as d,
  createCommentVNode as e,
  createBlock as f,
  createTextVNode as g,
  computed as h,
  normalizeStyle as i,
  createVNode as j,
  ha as k,
  normalizeClass as n,
  openBlock as o,
  ref as r,
  toDisplayString as t,
  unref as u,
  vShow as v,
  withDirectives as w
};
